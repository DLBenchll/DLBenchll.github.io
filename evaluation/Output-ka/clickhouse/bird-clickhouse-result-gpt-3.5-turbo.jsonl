{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN substring('Last Updated', -4) > '2018' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(App) AS PER\nFROM playstore\nWHERE _Type = 'Free' AND Rating >= 4.5", "sql_id": 216}
{"model": "gpt-3.5-turbo", "message": "SELECT FullName FROM Conference ORDER BY length(FullName) DESC LIMIT 1", "sql_id": 249}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) \nFROM customers AS T1 \nINNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.First = 'Frank-Paul' \nAND T1.Last = 'Santangelo' \nAND formatDateTime(T2.TransactionDate, '%Y-%m') = '2014-07'", "sql_id": 357}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) \nFROM customers AS T1 \nINNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.Gender = 'M' AND formatDateTime(T2.TransactionDate, '%Y-%m') = '2014-07'", "sql_id": 358}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) \nFROM customers AS T1 \nINNER JOIN transaction AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.SubscribedToEmailList = 'TRUE' \nAND T2.CreditCardType = 'Visa' \nAND formatDateTime(T2.TransactionDate, '%Y-%m') = '2014-07'", "sql_id": 359}
{"model": "gpt-3.5-turbo", "message": "SELECT max(T2.max_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = substring(toString(T1.start_date), 1, position(' ', toString(T1.start_date)) - 1) WHERE T1.id = 4080", "sql_id": 624}
{"model": "gpt-3.5-turbo", "message": "SELECT substring(date, -4) FROM weather GROUP BY substring(date, -4) ORDER BY sum(CASE WHEN events LIKE '%Rain%' OR events LIKE '%rain%' THEN 1 ELSE 0 END) DESC LIMIT 1", "sql_id": 628}
{"model": "gpt-3.5-turbo", "message": "SELECT name, installation_date, city \nFROM station \nWHERE \n((substring(installation_date, 1, position('/', installation_date) - 1) = '5' \nAND toInt32(substring(installation_date, position('/', installation_date) + 1)) >= 8 \nAND substring(installation_date, -4) = '2013') \nOR \n(substring(installation_date, 1, position('/', installation_date) - 1) IN ('6', '7', '8', '9', '10', '11', '12') \nAND substring(installation_date, -4) = '2013'))", "sql_id": 629}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(CASE WHEN city = 'San Francisco' AND substring(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station", "sql_id": 634}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(start_station_id = end_station_id, 1, 0)) FROM trip", "sql_id": 636}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(installation_date) FROM station WHERE city = 'San Jose' AND (substring(installation_date, 1, position('/' in installation_date) - 1) IN ('8', '9', '10', '11', '12') AND substring(installation_date, -4) = '2013') OR substring(installation_date, -4) > '2013'", "sql_id": 639}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(zip_code = '94107' AND date = '8/29/2013', mean_temperature_f, 0)) FROM weather", "sql_id": 640}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(zip_code = '94107' AND date = '8/29/2013', max_temperature_f - min_temperature_f, 0)) FROM weather", "sql_id": 641}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(zip_code = '94041' AND events = 'Rain', 1, 0)) FROM weather", "sql_id": 643}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(city = 'Redwood City' AND substring(installation_date, -4) < '2014', dock_count, 0)) as NUM FROM station", "sql_id": 644}
{"model": "gpt-3.5-turbo", "message": "SELECT (max_temperature_f - 32) / 1.8000 , (mean_temperature_f - 32) / 1.8000 , (min_temperature_f - 32) / 1.8000 FROM weather WHERE substring(cast(date, 'String'), 1, position('/', date) - 1) = '8' AND substring(cast(date, 'String'), -4) = '2013' AND zip_code = '94107'", "sql_id": 645}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(subscription_type = 'Subscriber', 1, 0)) AS Float64) / SUM(if(subscription_type = 'Customer', 1, 0))) FROM trip WHERE start_station_name = '2nd at South Park' AND end_station_name = '2nd at South Park'", "sql_id": 646}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(CASE WHEN city = 'San Jose' AND substring(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station UNION ALL SELECT name FROM station WHERE city = 'San Jose' AND substring(installation_date, -4) = '2014'", "sql_id": 627}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM book WHERE formatDateTime(publication_date, '%Y') = '1900' ORDER BY publication_date LIMIT 1", "sql_id": 394}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM country AS T1\nINNER JOIN address AS T2 ON T1.country_id = T2.country_id\nINNER JOIN cust_order AS T3 ON T3.dest_address_id = T2.address_id\nWHERE T1.country_name = 'Iran' AND formatDateTime(T3.order_date, '%Y') = '2022'", "sql_id": 395}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM order_status AS T1\nINNER JOIN order_history AS T2 ON T1.status_id = T2.status_id\nWHERE T1.status_value = 'Delivered' AND formatDateTime(T2.status_date, '%Y') = '2021'", "sql_id": 396}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(T3.cost) \nFROM customer AS T1 \nINNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id \nINNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id \nWHERE T1.first_name = 'Page' AND T1.last_name = 'Holsey' \nAND toYear(T2.order_date) = 2022", "sql_id": 397}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN formatDateTime(T1.publication_date, '%Y') = '1992' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(*)\nFROM book AS T1\nINNER JOIN book_author AS T2 ON T1.book_id = T2.book_id\nINNER JOIN author AS T3 ON T3.author_id = T2.author_id\nWHERE T3.author_name = 'Abraham Lincoln'", "sql_id": 398}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title, T2.publisher_name \nFROM book AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id \nWHERE formatDateTime(T1.publication_date, '%Y') = '2004' \nAND T1.num_pages * 100 > (SELECT avg(num_pages) FROM book) * 70", "sql_id": 399}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM book AS T1 \nINNER JOIN book_author AS T2 ON T1.book_id = T2.book_id \nINNER JOIN author AS T3 ON T3.author_id = T2.author_id \nWHERE T3.author_name = 'Orson Scott Card' \nAND formatDateTime(T1.publication_date, '%Y') = '2001'", "sql_id": 400}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM cust_order AS T1\nINNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id\nWHERE T2.first_name = 'Daisey' AND T2.last_name = 'Lamball' AND formatDateTime(T1.order_date, '%Y') = '2021'", "sql_id": 401}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM order_status AS T1\nINNER JOIN order_history AS T2 ON T1.status_id = T2.status_id\nWHERE T1.status_value = 'Delivered' AND formatDateTime(T2.status_date, '%Y') = '2019'", "sql_id": 402}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN T2.method_name = 'International' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(*)\nFROM cust_order AS T1\nINNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id\nWHERE formatDateTime(T1.order_date, '%Y') = '2020'", "sql_id": 403}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(order_date, '%Y') AS year\nFROM cust_order\nGROUP BY year\nORDER BY count(year) DESC\nLIMIT 1", "sql_id": 404}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM book WHERE formatDateTime(publication_date, '%Y') = '1995'", "sql_id": 405}
{"model": "gpt-3.5-turbo", "message": "SELECT substring(email, position('@', email) + 1, length(email) - position('@', email)) AS ym \nFROM customer \nGROUP BY substring(email, position('@', email) + 1, length(email) - position('@', email)) \nORDER BY count() DESC \nLIMIT 1", "sql_id": 406}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM order_status AS T1\nINNER JOIN order_history AS T2 ON T1.status_id = T2.status_id\nWHERE T1.status_value = 'Returned' AND formatDateTime(T2.status_date, '%Y') = '2020'", "sql_id": 407}
{"model": "gpt-3.5-turbo", "message": "SELECT toUInt32(toDateTime(T2.status_date)) - toUInt32(toDateTime(T1.order_date)) \nFROM cust_order AS T1 \nINNER JOIN order_history AS T2 ON T1.order_id = T2.order_id \nWHERE T1.order_id = 2398", "sql_id": 408}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM customer AS T1\nINNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id\nINNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id\nWHERE T1.first_name = 'Marcelia'\nAND T1.last_name = 'Goering'\nAND formatDateTime(T2.order_date, '%Y') = '2021'\nAND T3.method_name = 'Priority'", "sql_id": 409}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM order_status AS T1\nINNER JOIN order_history AS T2 ON T1.status_id = T2.status_id\nWHERE T1.status_value = 'Cancelled' AND formatDateTime(T2.status_date, '%Y') = '2022'", "sql_id": 410}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book WHERE formatDateTime(publication_date, '%Y') = '2017'", "sql_id": 411}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM book AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id \nWHERE T2.publisher_name = 'Free Press' \nAND formatDateTime(T1.publication_date, '%Y') BETWEEN '1990' AND '2000' \nORDER BY T1.num_pages DESC \nLIMIT 1", "sql_id": 413}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.price \nFROM book AS T1 \nINNER JOIN order_line AS T2 ON T1.book_id = T2.book_id \nWHERE T1.title = 'The Servant Leader' \nAND formatDateTime(T1.publication_date, '%Y') = '2003'", "sql_id": 414}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM order_status AS T1\nINNER JOIN order_history AS T2 ON T1.status_id = T2.status_id\nWHERE T1.status_value = 'Returned' AND formatDateTime(T2.status_date, '%Y') = '2022'", "sql_id": 415}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM book AS T1\nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id\nWHERE T2.publisher_name = 'Birlinn'\nAND formatDateTime(T1.publication_date, '%Y') = '2008'\nAND T1.num_pages BETWEEN 600 AND 700", "sql_id": 416}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM book AS T1\nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id\nWHERE T2.publisher_name = 'Brava' AND formatDateTime(T1.publication_date, '%Y') = '2006'", "sql_id": 417}
{"model": "gpt-3.5-turbo", "message": "SELECT fname, lname FROM employee WHERE toYear(hire_date) < 1990", "sql_id": 11}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(hire_date, '%Y') AS year\nFROM employee\nGROUP BY year\nORDER BY COUNT(emp_id) DESC\nLIMIT 1", "sql_id": 12}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.notes \nFROM titles AS T1 \nINNER JOIN sales AS T2 ON T1.title_id = T2.title_id \nWHERE formatDateTime(T2.ord_date, '%Y-%m-%d') = '1994-09-14'", "sql_id": 14}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1._type \nFROM titles AS T1 \nINNER JOIN sales AS T2 ON T1.title_id = T2.title_id \nWHERE formatDateTime(T2.ord_date, '%Y-%m-%d') = '1993-05-29'", "sql_id": 15}
{"model": "gpt-3.5-turbo", "message": "SELECT (sumIf(city = 'Fremont', qty) - sumIf(city = 'Portland', qty)) * 100 / sumIf(city = 'Fremont', qty)\nFROM sales AS T1\nINNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id\nWHERE toYear(T1.ord_date) = 1993", "sql_id": 16}
{"model": "gpt-3.5-turbo", "message": "SELECT fname, minit, lname \nFROM employee \nWHERE toYear(hire_date) BETWEEN 1990 AND 1995 \nORDER BY job_lvl DESC", "sql_id": 17}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title \nFROM sales AS T1 \nINNER JOIN titles AS T2 ON T1.title_id = T2.title_id \nWHERE formatDateTime(T1.ord_date, '%Y') = '1992' \nORDER BY T1.qty DESC \nLIMIT 1", "sql_id": 9}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title, T1.notes, T2.pub_name \nFROM titles AS T1 \nINNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id \nWHERE formatDateTime(T1.pubdate, '%Y') = '1991'", "sql_id": 10}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.pub_name \nFROM titles AS T1 \nINNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id \nWHERE formatDateTime(pubdate, '%Y') = '1991' \nGROUP BY T1.pub_id, T2.pub_name \nORDER BY countState(T1.title_id) DESC \nLIMIT 1", "sql_id": 13}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.priceEach * T3.quantityOrdered \nFROM customers AS T1 \nINNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber \nINNER JOIN orderdetails AS T3 ON T2.orderNumber = T3.orderNumber \nWHERE T1.customerName = 'Rovelli Gifts' \nAND T2.status = 'Shipped' \nAND formatDateTime(T2.shippedDate, '%Y') = '2003'", "sql_id": 140}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.checkNumber) \nFROM payments AS T1 \nINNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber \nWHERE customerName = 'Euro+ Shopping Channel' \nAND formatDateTime(T1.paymentDate, '%Y') = '2004'", "sql_id": 141}
{"model": "gpt-3.5-turbo", "message": "SELECT\n    (\n        SELECT COUNT(customerNumber)\n        FROM customers\n        WHERE creditLimit <= 100000\n        AND customerNumber IN (\n            SELECT customerNumber\n            FROM payments\n            WHERE formatDateTime(paymentDate, '%Y') = '2004'\n        )\n    ) AS subquery_result,\n    T1.customerName\nFROM customers AS T1\nINNER JOIN payments AS T2 ON T1.customerNumber = T2.customerNumber\nWHERE T1.creditLimit <= 100000\nAND formatDateTime(T2.paymentDate, '%Y') = '2004'\nGROUP BY T1.customerNumber, T1.customerName\nORDER BY sum(T2.amount) DESC\nLIMIT 1", "sql_id": 142}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.orderNumber) \nFROM orderdetails AS T1 \nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber \nWHERE T1.quantityOrdered < 30 AND formatDateTime(T2.orderDate, '%Y') = '2003'", "sql_id": 143}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(T2.quantityOrdered * T2.priceEach) / count(T3.orderNumber)\nFROM products AS T1\nINNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode\nINNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber\nWHERE T1.productVendor = 'Exoto Designs' AND formatDateTime(T3.orderDate, '%Y') = '2005'", "sql_id": 144}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(amount) FROM payments WHERE formatDateTime(paymentDate, '%Y') = '2003' AND customerNumber IN ( SELECT customerNumber FROM customers WHERE creditLimit = 0 )", "sql_id": 145}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(customerNumber) FROM ( SELECT customerNumber FROM payments WHERE toYear(paymentDate) >= 2003 AND toYear(paymentDate) <= 2004 GROUP BY customerNumber HAVING COUNT(customerNumber) > 3 ) T", "sql_id": 146}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.addressLine1, T3.addressLine2, T3.phone \nFROM orderdetails AS T1 \nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber \nINNER JOIN customers AS T3 ON T2.customerNumber = T3.customerNumber \nINNER JOIN employees AS T4 ON T3.salesRepEmployeeNumber = T4.employeeNumber \nINNER JOIN offices AS T5 ON T4.officeCode = T5.officeCode \nWHERE formatDateTime(T2.orderDate, '%Y') = '2005' \nAND T4.jobTitle = 'Sales Rep' \nORDER BY T1.quantityOrdered DESC \nLIMIT 1", "sql_id": 147}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.orderDate\nFROM orderdetails AS T1\nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber\nWHERE formatDateTime(T2.orderDate, '%Y-%m-%d') = '2005-04-08' OR formatDateTime(T2.orderDate, '%Y-%m-%d') = '2005-04-10'\nORDER BY T1.quantityOrdered * T1.priceEach DESC\nLIMIT 1", "sql_id": 148}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(CASE WHEN (toUInt32(toDateTime(t1.shippeddate)) / 86400 + 2440587.5) - (toUInt32(toDateTime(t1.requireddate)) / 86400 + 2440587.5) > 3 THEN t1.customerNumber ELSE NULL END) \nFROM orders AS t1 \nINNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber \nWHERE t1.status = 'Shipped'", "sql_id": 149}
{"model": "gpt-3.5-turbo", "message": "SELECT t2.customerName \nFROM payments AS t1 \nINNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber \nWHERE formatDateTime(t1.paymentDate, '%Y') = '2005' \nGROUP BY t2.customerNumber, t2.customerName \nORDER BY sum(t1.amount) DESC \nLIMIT 1", "sql_id": 150}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    sumIf(\n        t2.amount, \n        t1.customerName = 'Atelier graphique'\n    ) * 100 / sum(t2.amount)\nFROM \n    customers AS t1 \nINNER JOIN \n    payments AS t2 ON t1.customerNumber = t2.customerNumber \nWHERE \n    formatDateTime(t2.paymentDate, '%Y') = '2004'", "sql_id": 151}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(t2.quantityOrdered) \nFROM orders AS t1 \nINNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber \nINNER JOIN products AS t3 ON t2.productCode = t3.productCode \nWHERE t3.productLine = 'motorcycles' \nAND formatDateTime(t1.orderDate, '%Y') = '2004'", "sql_id": 152}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(paymentDate, '%Y'), COUNT(customerNumber)\nFROM payments\nWHERE amount < 10000\nGROUP BY formatDateTime(paymentDate, '%Y')", "sql_id": 153}
{"model": "gpt-3.5-turbo", "message": "SELECT t3.productName, SUM(t2.quantityOrdered)\nFROM orders AS t1\nINNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber\nINNER JOIN products AS t3 ON t2.productCode = t3.productCode\nWHERE formatDateTime(t1.orderDate, '%Y') = '2003'\nGROUP BY t3.productName\nORDER BY SUM(t2.quantityOrdered) DESC\nLIMIT 3", "sql_id": 154}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.fbi_code_no) / 4.0\nFROM FBI_Code AS T1\nINNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no\nWHERE substring(T2.date, 1, 1) = '1' AND substring(T2.date, 5) = '2018'", "sql_id": 588}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(CASE WHEN substring(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) \nFROM FBI_Code AS T1 \nINNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no \nWHERE T1.crime_against = 'Property' AND substring(T2.date, 1, 1) = '1'", "sql_id": 591}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(CASE WHEN substring(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) \nFROM District AS T1 \nINNER JOIN Crime AS T2 ON T1.district_no = T2.district_no \nWHERE T1.commander = 'Robert A. Rubio' AND substring(T2.date, 1, 1) = '1'", "sql_id": 592}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.commander \nFROM District AS T1 \nINNER JOIN Crime AS T2 ON T1.district_no = T2.district_no \nWHERE T1.commander IN ('Robert A. Rubio', 'Glenn White') \nAND substring(T2.date, 1, 1) = '1' \nAND substring(T2.date, 5) = '2018' \nGROUP BY T1.commander", "sql_id": 593}
{"model": "gpt-3.5-turbo", "message": "SELECT substring(substring(Name, position('.' in Name) + 1), 1, position('.' in substring(Name, position('.' in Name) + 1)) - 1) AS task FROM Method WHERE NameTokenized = 'html parser feed'", "sql_id": 49}
{"model": "gpt-3.5-turbo", "message": "SELECT substring(substring(Name, position('.', Name) + 1), 1, position('.', substring(Name, position('.', Name) + 1)) - 1) AS task FROM Method WHERE Id = 2", "sql_id": 50}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT substring(Name, position('.' in Name) + 1, position('.' in substring(Name, position('.' in Name) + 1)) - 1) AS task FROM Method WHERE NameTokenized = 'string extensions to pascal case'", "sql_id": 52}
{"model": "gpt-3.5-turbo", "message": "SELECT substring(substring(Name, position('.' in Name) + 1), 1, position('.' in substring(Name, position('.' in Name) + 1)) - 1) AS task FROM Method WHERE NameTokenized = 'online median filter test median window filling'", "sql_id": 48}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.time_high, T2.time_low, T2.date \nFROM coins AS T1 \nINNER JOIN historical AS T2 ON T1.id = T2.coin_id \nWHERE T1.name = 'WARP' AND formatDateTime(T2.date, '%Y-%m') = '2016-08'", "sql_id": 443}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(T2.circulating_supply) AS Float64) / 12 FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Frozen' AND formatDateTime(T2.date, '%Y') = '2014'", "sql_id": 444}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' AND formatDateTime(T2.date, '%Y') = '2016'", "sql_id": 445}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE formatDateTime(T2.date, '%Y') = '2013' AND T1.name = 'Bitcoin'", "sql_id": 446}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM coins WHERE length(tag_names) - length(replaceAll(tag_names, ',', '')) = 2", "sql_id": 448}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name \nFROM coins AS T1 \nINNER JOIN historical AS T2 ON T1.id = T2.coin_id \nWHERE formatDateTime(T2.date, '%Y-%m') = '2013-05' AND T2.open IS NULL", "sql_id": 449}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.coin_id) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bytecoin' AND formatDateTime(T2.date, '%Y-%m') = '2013-06'", "sql_id": 450}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.style = 'American Adjunct Lager', 1, 0)) AS Float64) * 100) / COUNT(T1.brewery_id)\nFROM beers AS T1\nINNER JOIN breweries AS T2 ON T1.brewery_id = T2.id\nWHERE T2.name = 'Stevens Point Brewery'", "sql_id": 609}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.state = 'WI', 1, 0)) AS Float64) * 100) / COUNT(T1.id)\nFROM beers AS T1\nINNER JOIN breweries AS T2 ON T1.brewery_id = T2.id\nWHERE T1.style = 'American Blonde Ale'", "sql_id": 610}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE substring(release_date, position('-', release_date) + 1, 3) = 'Dec' AND T2.director = 'Wolfgang Reitherman'", "sql_id": 309}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nWHERE CAST(substring(T1.release_date, position(',' in T1.release_date) + 2) AS UInt32) BETWEEN 1970 AND 1979 \nORDER BY CAST(replace(substring(T1.total_gross, 2), ',', '') AS Float32) DESC \nLIMIT 1", "sql_id": 311}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 \nON T1.movie_title = T2.movie_title \nWHERE T2.hero = 'Donald Duck' \nORDER BY toFloat(replaceAll(substring(total_gross, 2), ',', '')) DESC \nLIMIT 1", "sql_id": 313}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM movies_total_gross WHERE MPAA_rating = 'R' AND genre = 'Horror' AND CAST(substring(release_date, position(',', release_date) + 2, length(release_date)) AS UInt32) BETWEEN 1990 AND 2015", "sql_id": 314}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T2.name = T1.movie_title \nWHERE T2.director = 'Ron Clements' \nORDER BY toInt(replace(substring(total_gross, 2), ',', '')) DESC \nLIMIT 1", "sql_id": 315}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 \nON T1.movie_title = T2.name \nAND toInt32(substring(release_date, position(', ', release_date) + 2)) BETWEEN 1990 AND 2000 \nGROUP BY T2.director", "sql_id": 316}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T2.movie_title = T1.movie_title \nWHERE T2.song IS NULL \nORDER BY CAST(REPLACE(TRIM(BOTH '$' FROM total_gross), ',', '') AS Float32) DESC \nLIMIT 1", "sql_id": 317}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title, genre FROM movies_total_gross WHERE substring(release_date, length(release_date) - 3) = '2016'", "sql_id": 321}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title, CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(total_gross, ',', '')), ',', '') / CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(inflation_adjusted_gross, ',', '')), ',', '') AS Float32) \nFROM movies_total_gross \nORDER BY CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(total_gross, ',', '')), ',', '') DESC \nLIMIT 1", "sql_id": 322}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title, T2.hero, T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nINNER JOIN director AS T3 ON T1.movie_title = T3.name \nWHERE T3.director = 'Wolfgang Reitherman' \nAND substring(T1.release_date, length(T1.release_date) - 3) = '1977'", "sql_id": 323}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title, T1.total_gross \nFROM movies_total_gross AS T1 \nINNER JOIN voice_actors AS T2 \nON T1.movie_title = T2.movie \nWHERE T2.voice_actor = 'Frank Welker' \nAND CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(T1.inflation_adjusted_gross, ',', '')), ',', '') AS Float64) * 1.0 / CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(T1.total_gross, ',', '')), ',', '') AS Float64) * 1.0 < 2", "sql_id": 324}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nORDER BY CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(T1.total_gross, ',', '')) AS Float32) DESC \nLIMIT 1", "sql_id": 325}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director, T1.MPAA_rating \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nWHERE T1.genre = 'Musical' \nAND substring(T1.release_date, length(T1.release_date) - 3) = '1993'", "sql_id": 326}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM characters WHERE toInt(substring(release_date, length(release_date) - 1)) BETWEEN 37 AND 50", "sql_id": 329}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM characters AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nWHERE T2.director = 'Jack Kinney' \nAND substring(T1.release_date, length(T1.release_date) - 1) < '47'", "sql_id": 330}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.name AS director \nFROM characters AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nINNER JOIN movies_total_gross AS T3 ON T1.movie_title = T3.movie_title \nWHERE CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(T3.total_gross, ',', '')) AS Float32) > 100000000;", "sql_id": 331}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nORDER BY CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(T1.total_gross, ',', '')), ',', '') AS Float32) DESC \nLIMIT 1", "sql_id": 332}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director \nFROM characters AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nINNER JOIN movies_total_gross AS T3 ON T3.movie_title = T1.movie_title \nWHERE substring(T3.release_date, length(T3.release_date) - 3) BETWEEN '1937' AND '1990' \nORDER BY CAST(replace(trim(BOTH '$' FROM T3.total_gross), ',', '') AS Float64) DESC \nLIMIT 1", "sql_id": 333}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title FROM characters ORDER BY substring(release_date, length(release_date) - 1) ASC LIMIT 1", "sql_id": 335}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM characters WHERE substring(release_date, length(release_date) - 1) BETWEEN '10' AND '16'", "sql_id": 336}
{"model": "gpt-3.5-turbo", "message": "SELECT villian FROM characters ORDER BY substring(release_date, length(release_date) - 1) DESC LIMIT 1", "sql_id": 337}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title \nFROM movies_total_gross \nWHERE genre = 'Action' \nORDER BY CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(total_gross, ',', '')) AS Float32) DESC \nLIMIT 1", "sql_id": 338}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.hero \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nWHERE T1.genre = 'Adventure' \nORDER BY CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(T1.inflation_adjusted_gross, ',', '')), ',', '') AS Float64) DESC \nLIMIT 1", "sql_id": 339}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nORDER BY CAST(REPLACE(TRIM(BOTH '$' FROM REPLACE(T1.total_gross, ',', '')) AS Float32) ASC \nLIMIT 1", "sql_id": 340}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(cast(replace(trim(both '$' from total_gross), ',', '') AS Float64)) / count(movie_title) FROM movies_total_gross WHERE MPAA_rating = 'PG-13'", "sql_id": 341}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    (sum(CASE WHEN CAST(REPLACE(TRIM(BOTH '$' FROM inflation_adjusted_gross), ',', '') AS Float32) > 1236035515 THEN CAST(REPLACE(TRIM(BOTH '$' FROM inflation_adjusted_gross), ',', '') AS Float32) ELSE 0 END) * 100) / sum(CAST(REPLACE(TRIM(BOTH '$' FROM inflation_adjusted_gross), ',', '') AS Float32))\nFROM \n    movies_total_gross", "sql_id": 344}
{"model": "gpt-3.5-turbo", "message": "SELECT teacher_ny_teaching_fellow FROM projects WHERE teacher_acctid = '42d43fa6f37314365d08692e08680973'", "sql_id": 247}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(date) FROM inspections WHERE formatDateTime(date, '%Y') = '2016' AND _type = 'Routine - Unscheduled'", "sql_id": 594}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.business_id) \nFROM inspections AS T1 \nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \nWHERE formatDateTime(T1.date, '%Y') = '2016' \nAND T2.city IN ('San Francisco', 'SAN FRANCISCO', 'SF', 'S.F.')", "sql_id": 595}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.name \nFROM violations AS T1 \nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \nWHERE formatDateTime(T1.`date`, '%Y') = '2014' AND T1.risk_category = 'Low Risk'", "sql_id": 596}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(business_id) FROM businesses WHERE toYear(application_date) = 2012", "sql_id": 597}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(business_id) FROM inspections WHERE formatDateTime(date, '%Y') = '2014' AND _type = 'Foodborne Illness Investigation'", "sql_id": 598}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.name \nFROM inspections AS T1 \nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \nWHERE formatDateTime(T1.`date`, '%Y') = '2013' AND T1.score = 100", "sql_id": 599}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.city \nFROM violations AS T1 \nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \nWHERE formatDateTime(T1.`date`, '%Y') = '2016' \nAND T1.risk_category = 'High Risk' \nGROUP BY T2.city \nORDER BY count(T2.city) DESC \nLIMIT 1", "sql_id": 600}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name \nFROM violations AS T1 \nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \nWHERE formatDateTime(T1.date, '%Y') = '2013' \nAND T1.description = 'Contaminated or adulterated food'", "sql_id": 601}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.business_id) \nFROM violations AS T1 \nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \nINNER JOIN inspections AS T3 ON T2.business_id = T3.business_id \nWHERE formatDateTime(T1.date, '%Y') = '2015' \nAND T2.postal_code = '94102' \nAND T3.score > 90", "sql_id": 602}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T4.name\nFROM \n(\n    SELECT T3.name, T3.years, rowNumberInAllBlocks() OVER (PARTITION BY T3.name ORDER BY T3.years) AS rowNumber\n    FROM \n    (\n        SELECT DISTINCT name, formatDateTime(`date`, '%Y') AS years\n        FROM inspections AS T1 \n        INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \n        WHERE T1.score = 100\n    ) AS T3\n) AS T4\nGROUP BY T4.name, toDate(formatDateTime(T4.years || '-01-01', '-' || (T4.rowNumber - 1) || ' years'))\nHAVING COUNT(T4.years) = 4", "sql_id": 603}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T1.score) \nFROM inspections AS T1 \nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \nWHERE formatDateTime(T1.date, '%Y') BETWEEN '2014' AND '2016' \nAND T2.owner_name = 'Yiu Tim Chan' \nAND T2.address = '808 Pacific Ave' \nAND T2.city = 'San Francisco'", "sql_id": 604}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT business_id) FROM inspections WHERE formatDateTime(date, '%Y') = '2013' AND score = (SELECT MAX(score) FROM inspections WHERE formatDateTime(date, '%Y') = '2013')", "sql_id": 606}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(risk_category) FROM violations WHERE formatDateTime(date, '%Y') = '2014' AND risk_category = 'Low Risk'", "sql_id": 607}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.business_id) \nFROM violations AS T1 \nINNER JOIN inspections AS T2 ON T1.business_id = T2.business_id \nWHERE formatDateTime(T1.date, '%Y') = '2016' \nAND T2._type = 'Routine - Unscheduled'", "sql_id": 608}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first_name, T1.last_name \nFROM employee AS T1 \nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id \nWHERE formatDateTime(T2.inspection_date, '%Y-%m') = '2010-05' \nAND T1.title = 'Sanitarian'", "sql_id": 418}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T2.inspection_id) \nFROM employee AS T1 \nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id \nWHERE toYear(T2.inspection_date) = 2010 \nAND T1.first_name = 'Joshua' \nAND T1.last_name = 'Rosa'", "sql_id": 419}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.license_no) \nFROM inspection AS T1 \nINNER JOIN establishment AS T2 ON T1.license_no = T2.license_no \nWHERE toYear(T1.inspection_date) = 2010 \nAND T2.facility_type = 'Restaurant'", "sql_id": 420}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.license_no) \nFROM inspection AS T1 \nINNER JOIN establishment AS T2 ON T1.license_no = T2.license_no \nWHERE toYear(T1.inspection_date) = 2010 AND T2.ward = 42", "sql_id": 421}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.dba_name \nFROM inspection AS T1 \nINNER JOIN establishment AS T2 ON T1.license_no = T2.license_no \nWHERE T1.results = 'Fail' AND toYear(T1.inspection_date) = 2010", "sql_id": 422}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T2.license_no) \nFROM inspection AS T1 \nINNER JOIN establishment AS T2 \nON T1.license_no = T2.license_no \nWHERE toYear(T1.inspection_date) = 2010 \nAND T2.risk_level = 3", "sql_id": 423}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T1.inspection_id) \nFROM inspection AS T1 \nINNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id \nWHERE T2.address = '5000 N Wolcott Ave' \nAND T2.title = 'Sanitarian' \nAND formatDateTime(toDate(T1.inspection_date), '%Y-%m') = '2011-05'", "sql_id": 424}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.first_name, T3.last_name \nFROM (\n    SELECT T1.employee_id, COUNT(T1.inspection_id) \n    FROM inspection AS T1 \n    WHERE toYYYYMM(T1.inspection_date) = '2016-03' \n    GROUP BY T1.employee_id \n    ORDER BY COUNT(T1.inspection_id) DESC \n    LIMIT 1\n) AS T2 \nINNER JOIN employee AS T3 \nON T2.employee_id = T3.employee_id", "sql_id": 425}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.dba_name \nFROM inspection AS T1 \nINNER JOIN establishment AS T2 ON T1.license_no = T2.license_no \nWHERE toYYYYMM(T1.inspection_date) = '2012-05' \nAND T1.results = 'Pass w/ Conditions'", "sql_id": 426}
{"model": "gpt-3.5-turbo", "message": "SELECT T.dba_name\nFROM (\n    SELECT T1.dba_name, sum(T3.fine)\n    FROM establishment AS T1\n    INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no\n    INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id\n    WHERE toYear(T2.inspection_date) = 2014\n    GROUP BY T1.dba_name\n    ORDER BY sum(T3.fine) DESC\n    LIMIT 1\n) AS T", "sql_id": 427}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(T3.fine) \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \nINNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id \nWHERE toYYYYMM(T2.inspection_date) = '2014-02' \nAND T1.dba_name = 'RON OF JAPAN INC'", "sql_id": 428}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.address \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \nWHERE formatDateTime(T2.inspection_date, '%Y-%m') = '2010-03' \nAND T2.results = 'Pass' \nAND T1.facility_type = 'School'", "sql_id": 429}
{"model": "gpt-3.5-turbo", "message": "SELECT count(inspection_id) FROM inspection WHERE toYYYYMM(inspection_date) = '2011-01'", "sql_id": 430}
{"model": "gpt-3.5-turbo", "message": "SELECT count(inspection_id) FROM inspection WHERE toYear(inspection_date) = 2014 AND results = 'Fail'", "sql_id": 431}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T4.category, T3.fine \nFROM inspection AS T1 \nINNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id \nINNER JOIN violation AS T3 ON T1.inspection_id = T3.inspection_id \nINNER JOIN inspection_point AS T4 ON T3.point_id = T4.point_id \nWHERE T2.first_name = 'Lisa' AND T2.last_name = 'Tillman' \nAND formatDateTime(toDate(T1.inspection_date), '%Y-%m') = '2014-01'", "sql_id": 432}
{"model": "gpt-3.5-turbo", "message": "SELECT countIf((T1.first_name = 'Jessica') AND (T1.last_name = 'Anthony') ? T2.inspection_id : 0) / 8.0\nFROM employee AS T1\nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id\nWHERE toYear(T2.inspection_date) BETWEEN 2010 AND 2017", "sql_id": 433}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T2.inspection_id) \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \nWHERE toYear(T2.inspection_date) = 2010 AND T1.risk_level = 3", "sql_id": 434}
{"model": "gpt-3.5-turbo", "message": "SELECT min(T2.inspection_date) \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \nWHERE T1.dba_name = 'JOHN SCHALLER' AND toYear(T2.inspection_date) = 2010", "sql_id": 435}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.dba_name \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \nWHERE formatDateTime(T2.inspection_date, '%Y') = '2010' \nAND T2.results = 'Pass' \nAND T1.facility_type = 'Liquor'", "sql_id": 436}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.license_no) \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 \nON T1.license_no = T2.license_no \nWHERE toYYYYMM(T2.inspection_date) = '2010-07' \nAND T2.results = 'Fail' \nAND T1.facility_type = 'Restaurant'", "sql_id": 437}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.dba_name, T2.results \nFROM employee AS T1 \nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id \nINNER JOIN establishment AS T3 ON T2.license_no = T3.license_no \nWHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson' \nAND formatDateTime(toDate(T2.inspection_date), '%Y') = '2010'", "sql_id": 438}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.license_no) \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 \nON T1.license_no = T2.license_no \nWHERE toYYYYMM(T2.inspection_date) = '2010-04' \nAND T1.facility_type = 'Restaurant' \nAND T2.results = 'Fail'", "sql_id": 439}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.dba_name \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \nINNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id \nWHERE toYYYYMM(T2.inspection_date) = '2010-01' \nAND T2.results = 'Fail' \nAND T1.facility_type = 'TAVERN'", "sql_id": 440}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.employee_id \nFROM employee AS T1 \nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id \nWHERE T2.results = 'Fail' \nAND formatDateTime(T2.inspection_date, '%Y-%m') = '2010-02' \nAND T1.salary > 0.7 * (SELECT avg(salary) FROM employee)", "sql_id": 441}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.Chromosome > 10 AND T3.Chromosome > 10, 1, 0)) AS Float64) * 100) / COUNT(T1.GeneID)\nFROM Genes AS T1\nINNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1\nINNER JOIN Genes AS T3 ON T3.GeneID = T2.GeneID2\nWHERE T2.Expression_Corr > 0", "sql_id": 212}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.Expression_Corr > 0, 1, 0)) AS Float64) * 100) / COUNT(T2.GeneID1)\nFROM Genes AS T1\nINNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1\nWHERE T1.Phenotype = 'Nucleic acid metabolism defects' AND T1.Motif = 'PS00107'", "sql_id": 213}
{"model": "gpt-3.5-turbo", "message": "SELECT if(T1.note = 'posthumous', 'YES', 'NO') FROM AwardsMisc AS T1 RIGHT JOIN Master AS T2 ON T1.ID = T2.playerID WHERE T2.legendsID = 'P194502'", "sql_id": 556}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.firstName, T2.lastName , if(T1.tmID = 'BOS', 'YES', 'NO') FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.year = 1972 AND T1.tmID = 'BOS' AND T2.coachID IS NOT NULL AND T2.hofID IS NULL", "sql_id": 557}
{"model": "gpt-3.5-turbo", "message": "SELECT ssn FROM employee WHERE gender = 'M' AND CAST(REPLACE(substring(salary, 4), ',', '') AS Float32) > 70000", "sql_id": 611}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(replace(substring(T1.salary, 4), ',', '') AS Float32) - CAST(replace(substring(T2.minsalary, 4), ',', '') AS Float32) AS diff\nFROM employee AS T1\nINNER JOIN position AS T2 ON T1.positionID = T2.positionID\nWHERE T1.lastname = 'Johnson' AND T1.firstname = 'James'", "sql_id": 612}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM employee AS T1\nINNER JOIN position AS T2 ON T1.positionID = T2.positionID\nWHERE CAST(REPLACE(substring(T1.salary, 4), ',', '') AS Float64) > 20000\nAND T2.positiontitle = 'Trainee'", "sql_id": 613}
{"model": "gpt-3.5-turbo", "message": "SELECT avg(cast(replace(substring(T1.salary, 4), ',', '') AS Float32)) AS avg\nFROM employee AS T1\nINNER JOIN position AS T2 ON T1.positionID = T2.positionID\nWHERE T2.positiontitle = 'Trainee'", "sql_id": 614}
{"model": "gpt-3.5-turbo", "message": "SELECT 100 * (CAST(REPLACE(substring(T2.maxsalary, 4), ',', '') AS Float64) - CAST(REPLACE(substring(T1.salary, 4), ',', '') AS Float64)) / CAST(REPLACE(substring(T1.salary, 4), ',', '') AS Float64) AS per FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID WHERE T1.firstname = 'Jose' AND T1.lastname = 'Rodriguez'", "sql_id": 616}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM employee WHERE performance = 'Poor' AND CAST(REPLACE(substring(salary, 4), ',', '') AS Float32) > 50000", "sql_id": 617}
{"model": "gpt-3.5-turbo", "message": "SELECT firstname, lastname \nFROM employee \nWHERE CAST(replace(substring(salary, 4), ',', '') AS Float32) = \n( \n    SELECT max(CAST(replace(substring(salary, 4), ',', '') AS Float32)) \n    FROM employee \n)", "sql_id": 618}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM position WHERE CAST(REPLACE(substring(maxsalary, 4), ',', '') AS Float32) < 100000", "sql_id": 619}
{"model": "gpt-3.5-turbo", "message": "SELECT avg(cast(replace(substring(T1.salary, 4), ',', '') AS Float32)) FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID WHERE T2.educationrequired = '2 year degree'", "sql_id": 620}
{"model": "gpt-3.5-turbo", "message": "SELECT avg(cast(replace(substring(T1.salary, 4), ',', '') AS Float32)) \nFROM employee AS T1 \nINNER JOIN position AS T2 ON T1.positionID = T2.positionID \nWHERE T1.performance = 'Poor' AND T2.positiontitle = 'Manager'", "sql_id": 621}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT countIf(nation = 'Sweden') OVER (PARTITION BY SEASON) * 100 / count(ELITEID) OVER (PARTITION BY SEASON)\nFROM PlayerInfo AS T1\nINNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID\nWHERE T2.SEASON IN ('1997-1998', '1998-1999', '1999-2000')", "sql_id": 507}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    sum(if(T1.IMG_ID = 1, 1, 0)),\n    sum(if((T1.X = 341) AND (T1.Y = 27) AND (T1.W = 42) AND (T1.H = 51), 1, 0))\nFROM IMG_OBJ AS T1 \nINNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID", "sql_id": 553}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T1.episode_id) \nFROM Episode AS T1 \nINNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id \nWHERE formatDateTime(T1.air_date, '%Y') = '1998' \nAND T2.organization = 'International Monitor Awards' \nAND T2.result = 'Winner'", "sql_id": 96}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN T2.party = 'Independent' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(T2.party)\nFROM current AS T1\nINNER JOIN current_terms AS T2 ON T1.bioguide_id = T2.bioguide\nWHERE T1.gender_bio = 'M' AND toYear(T1.birthday_bio) BETWEEN 1955 AND 1965", "sql_id": 349}
{"model": "gpt-3.5-turbo", "message": "SELECT count(*) FROM current WHERE toYear(birthday_bio) > 1960 AND google_entity_id_id IS NULL", "sql_id": 356}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE substring(T1.created_at, 7, 1) = '4'", "sql_id": 372}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name \nFROM Dish AS T1 \nINNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id \nWHERE substring(T2.created_at, 1, 4) = '2011' \nAND substring(T2.created_at, 7, 1) = '4' \nAND T1.highest_price IS NULL", "sql_id": 373}
{"model": "gpt-3.5-turbo", "message": "SELECT count(*) FROM Menu WHERE call_number IS NULL AND toDate(date) < '1950-01-01'", "sql_id": 374}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN Government = 'republic' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(Country) FROM politics WHERE toYear(Independence) > 1970", "sql_id": 575}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Country, COUNT(T1.Country)\nFROM economy AS T1\nINNER JOIN organization AS T2 ON T1.Country = T2.Country\nWHERE T1.GDP < 500000 AND toYear(T2.Established) < 1999\nGROUP BY T1.Country", "sql_id": 576}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Country \nFROM politics AS T1 \nINNER JOIN population AS T2 ON T1.Country = T2.Country \nWHERE formatDateTime(T1.Independence, '%Y') = '1960' \nORDER BY T2.Infant_Mortality DESC \nLIMIT 1", "sql_id": 577}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Population / T1.Area\nFROM country AS T1\nINNER JOIN organization AS T2 ON T1.Code = T2.Country\nWHERE formatDateTime(T2.Established, '%Y') = '1947'", "sql_id": 579}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Name\nFROM country AS T1\nINNER JOIN organization AS T2 ON T1.Code = T2.Country\nINNER JOIN politics AS T3 ON T3.Country = T2.Country\nWHERE formatDateTime(T2.Established, '%Y') > '1907'\n  AND T3.Government = 'constitutional monarchy'\nGROUP BY T1.Name\nORDER BY count(DISTINCT T2.Name) DESC\nLIMIT 1", "sql_id": 582}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(government = 'parliamentary democracy', 1, 0)), \n       sum(if(government = 'parliamentary democracy', 1, 0)) * 100 / count(*)\nFROM politics AS t1 \nWHERE toYear(independence) >= 1993", "sql_id": 583}
{"model": "gpt-3.5-turbo", "message": "SELECT Name FROM organization WHERE toYear(Established) BETWEEN 1970 AND 1980", "sql_id": 584}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(Established, '%Y') \nFROM continent AS T1 \nINNER JOIN encompasses AS T2 ON T1.Name = T2.Continent \nINNER JOIN country AS T3 ON T2.Country = T3.Code \nINNER JOIN organization AS T4 ON T4.Country = T3.Code \nWHERE T1.Name = 'Europe' \nGROUP BY formatDateTime(T4.Established, '%Y') \nORDER BY COUNT(T4.Name) DESC \nLIMIT 1", "sql_id": 585}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM politics WHERE toYear(Independence) BETWEEN 1950 AND 1999 AND Government = 'parliamentary democracy'", "sql_id": 586}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN formatDateTime(Independence, '%Y') = '1960' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(Country) FROM politics", "sql_id": 587}
{"model": "gpt-3.5-turbo", "message": "SELECT ((max(cast(substring(T2.screentime, 3, 2) AS Float64)) - min(cast(substring(T2.screentime, 3, 2) AS Float64))) * 100 / min(cast(substring(T2.screentime, 3, 2) AS Float64))) \nFROM movie AS T1 \nINNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID \nWHERE T1.Title = 'Batman'", "sql_id": 53}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.u_gender = 'F', 1, 0)) AS Float64) * 100) / COUNT(T2.userid)\nFROM u2base AS T1\nINNER JOIN users AS T2 ON T1.userid = T2.userid\nWHERE T1.rating = '2'", "sql_id": 181}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T3.a_quality >= 3, 1, 0)) AS Float64) * 100) / COUNT(T1.movieid)\nFROM movies AS T1\nINNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid\nINNER JOIN actors AS T3 ON T2.actorid = T3.actorid\nWHERE T1.country = 'UK'", "sql_id": 183}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.avg_revenue > T2.d_quality, 1, 0)) AS Float64) * 100) / COUNT(T1.movieid)\nFROM movies2directors AS T1\nINNER JOIN directors AS T2 ON T1.directorid = T2.directorid\nWHERE T1.genre = 'Action'", "sql_id": 184}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.rating = '1', 1, 0)) AS Float64) * 100) / COUNT(T1.movieid)\nFROM u2base AS T1\nINNER JOIN movies AS T2 ON T1.movieid = T2.movieid\nWHERE T2.country = 'USA'", "sql_id": 185}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(if(T3.a_gender = 'M', 1, 0)) AS Float64) / SUM(if(T3.a_gender = 'F', 1, 0)) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK'", "sql_id": 186}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.cast_num = 2 AND T1.a_quality = 2, 1, 0)) AS Float64) * 100) / COUNT(T1.actorid)\nFROM actors AS T1\nINNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid\nWHERE T2.movieid = 1672580 AND T1.a_gender = 'F'", "sql_id": 187}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(if(a_gender = 'M', 1, 0)) AS Float64) / SUM(if(a_gender = 'F', 1, 0)) FROM actors WHERE a_quality = 0", "sql_id": 188}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(T1.a_gender = 'F', 1, 0)), T3.country, T3.runningtime \nFROM actors AS T1 \nINNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid \nINNER JOIN movies AS T3 ON T2.movieid = T3.movieid \nWHERE T2.movieid = 2312852 \nGROUP BY T3.country, T3.runningtime", "sql_id": 189}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T1.revenue) \nFROM movie AS T1 \nINNER JOIN production_country AS T2 ON T1.movie_id = T2.movie_id \nINNER JOIN country AS T3 ON T2.country_id = T3.country_id \nWHERE T3.country_name = 'United States of America' \nAND toInt32(formatDateTime(T1.release_date, '%Y')) = 2006", "sql_id": 41}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM movie WHERE toInt32(formatDateTime(release_date, '%Y')) = 1945", "sql_id": 45}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_id) FROM movie AS T1 \nINNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id \nINNER JOIN person AS T3 ON T2.person_id = T3.person_id \nWHERE T3.person_name = 'Quentin Tarantino' \nAND toInt32(formatDateTime(T1.release_date, '%Y')) = 1995", "sql_id": 40}
{"model": "gpt-3.5-turbo", "message": "SELECT\n    AVG(if(T3.country_name = 'United States of America', T1.revenue, NULL))\n    - AVG(if(T3.country_name = 'India', T1.revenue, NULL)) AS CALCULATE\nFROM\n    movie AS T1\nINNER JOIN\n    production_country AS T2 ON T1.movie_id = T2.movie_id\nINNER JOIN\n    country AS T3 ON T2.country_id = T3.country_id\nWHERE\n    toYear(T1.release_date) = 2016", "sql_id": 42}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.company_id \nFROM movie AS T1 \nINNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id \nWHERE toInt32(formatDateTime(T1.release_date, '%Y')) = 1916", "sql_id": 44}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_id) \nFROM movie AS T1 \nINNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id \nINNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id \nWHERE T3.genre_name = 'Adventure' \nAND toInt32(formatDateTime(T1.release_date, '%Y')) = 2000", "sql_id": 46}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.title \nFROM production_company AS T1 \nINNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id \nINNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id \nWHERE T1.company_name = 'Paramount Pictures' \nAND toInt32(formatDateTime(T3.release_date, '%Y')) = 2000", "sql_id": 47}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.customer_id) \nFROM customer AS T1 \nINNER JOIN rental AS T2 \nON T1.customer_id = T2.customer_id \nWHERE T1.first_name = 'RUTH' \nAND T1.last_name = 'MARTINEZ' \nAND formatDateTime(T2.return_date, '%m') = '08' \nAND formatDateTime(T2.return_date, '%Y') = '2005'", "sql_id": 647}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T3.name = 'Music', 1, 0)) AS Float64) * 100) / COUNT(T1.film_id)\nFROM film AS T1\nINNER JOIN film_category AS T2 ON T1.film_id = T2.film_id\nINNER JOIN category AS T3 ON T2.category_id = T3.category_id\nINNER JOIN inventory AS T4 ON T1.film_id = T4.film_id\nINNER JOIN customer AS T5 ON T4.store_id = T5.store_id\nINNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id\nWHERE T5.first_name = 'RUTH' AND T5.last_name = 'MARTINEZ'", "sql_id": 648}
{"model": "gpt-3.5-turbo", "message": "SELECT (sum(if(T2.store_id = 2, T1.amount, 0)) - sum(if(T2.store_id = 1, T1.amount, 0))) * 100 / sum(if(T2.store_id = 1, T1.amount, 0))\nFROM payment AS T1\nINNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id\nINNER JOIN store AS T3 ON T2.store_id = T3.store_id", "sql_id": 649}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(if(T1.country = 'India', 1, 0)) AS Float64) / SUM(if(T1.country = 'Italy', 1, 0)) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id", "sql_id": 650}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.first_name = 'GINA' AND T2.last_name = 'DEGENERES', 1, 0)) AS Float64) * 100) / SUM(if(T2.first_name = 'PENELOPE' AND T2.last_name = 'GUINESS', 1, 0))\nFROM film_actor AS T1\nINNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id", "sql_id": 651}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(customer_id) FROM payment WHERE substring(payment_date, 1, 7) LIKE '2005-08'", "sql_id": 652}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT rental_id) FROM rental WHERE toDate(rental_date) BETWEEN '2005-05-26' AND '2005-05-30'", "sql_id": 654}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(active = 0, 1, 0)) AS Float64) * 100) / COUNT(customer_id) FROM customer", "sql_id": 655}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(amount) FROM payment WHERE substring(payment_date, 1, 7) = '2005-08'", "sql_id": 656}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM film AS T1 \nINNER JOIN inventory AS T2 ON T1.film_id = T2.film_id \nINNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id \nWHERE substring(T3.rental_date, 1, 10) = '2005-05-24'", "sql_id": 657}
{"model": "gpt-3.5-turbo", "message": "SELECT T4.title \nFROM customer AS T1 \nINNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id \nINNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id \nINNER JOIN film AS T4 ON T3.film_id = T4.film_id \nWHERE T1.first_name = 'BRIAN' \nAND T1.last_name = 'WYMAN' \nAND formatDateTime(T2.rental_date, '%Y') = '2005' \nAND formatDateTime(T2.rental_date, '%m') = '07'", "sql_id": 658}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.title, T2.name \nFROM film_category AS T1 \nINNER JOIN category AS T2 ON T1.category_id = T2.category_id \nINNER JOIN film AS T3 ON T1.film_id = T3.film_id \nINNER JOIN inventory AS T4 ON T3.film_id = T4.film_id \nINNER JOIN customer AS T5 ON T4.store_id = T5.store_id \nINNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id \nWHERE T5.first_name = 'Natalie' \nAND T5.last_name = 'Meyer' \nAND formatDateTime(T3.rental_rate, '%Y') = '2006' \nAND formatDateTime(T3.rental_rate, '%m') = '02'", "sql_id": 659}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.country = 'India', 1, 0)) AS Float64) * 100) / COUNT(T4.customer_id)\nFROM country AS T1\nINNER JOIN city AS T2 ON T1.country_id = T2.country_id\nINNER JOIN address AS T3 ON T2.city_id = T3.city_id\nINNER JOIN customer AS T4 ON T3.address_id = T4.address_id", "sql_id": 660}
{"model": "gpt-3.5-turbo", "message": "SELECT first_name, last_name, email \nFROM customer \nWHERE formatDateTime(create_date, '%Y') = '2006' AND active = 0", "sql_id": 663}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(rating = 'PG-13', 1, 0)) AS Float64) * 100) / COUNT(film_id) FROM film", "sql_id": 664}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.name = 'horror', 1, 0)) AS Float64) * 100) / COUNT(T2.category_id)\nFROM film_category AS T1\nINNER JOIN category AS T2 ON T1.category_id = T2.category_id", "sql_id": 665}
{"model": "gpt-3.5-turbo", "message": "SELECT avg(if(T4.country = 'Australia', 1, 0)) - avg(if(T4.country = 'Canada', 1, 0)) AS diff\nFROM customer AS T1\nINNER JOIN address AS T2 ON T1.address_id = T2.address_id\nINNER JOIN city AS T3 ON T2.city_id = T3.city_id\nINNER JOIN country AS T4 ON T3.country_id = T4.country_id", "sql_id": 666}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T1.rental_id) \nFROM rental AS T1 \nINNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id \nWHERE T2.first_name = 'ELLA' AND T2.last_name = 'ELLA' \nAND toDate(T1.rental_date) BETWEEN '2005-06-01' AND '2005-06-30'", "sql_id": 670}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(T2.amount) \nFROM rental AS T1 \nINNER JOIN payment AS T2 \nON T1.rental_id = T2.rental_id \nWHERE toDate(T1.rental_date) = '2005-07-29'", "sql_id": 671}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first_name \nFROM customer AS T1 \nINNER JOIN address AS T2 ON T1.address_id = T2.address_id \nWHERE substring(T2.postal_code, 1, 2) = '76'", "sql_id": 672}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.length < 100 AND T3.name = 'Drama', 1, 0)) AS Float64) * 100) / COUNT(T1.film_id)\nFROM film_category AS T1\nINNER JOIN film AS T2 ON T1.film_id = T2.film_id\nINNER JOIN category AS T3 ON T1.category_id = T3.category_id", "sql_id": 673}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(T2.name = 'Children', 1, 0)) - sum(if(T2.name = 'Action', 1, 0)) AS diff FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id", "sql_id": 674}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.name = 'Documentary', 1, 0)) AS Float64) * 100) / COUNT(T1.film_id)\nFROM film_category AS T1\nINNER JOIN category AS T2 ON T1.category_id = T2.category_id", "sql_id": 675}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.name = 'Horror', 1, 0)) AS Float64) * 100) / COUNT(T1.film_id)\nFROM film_category AS T1\nINNER JOIN category AS T2 ON T1.category_id = T2.category_id\nINNER JOIN film AS T3 ON T1.film_id = T3.film_id", "sql_id": 676}
{"model": "gpt-3.5-turbo", "message": "SELECT (sum(if(T2.first_name = 'MARGARET' AND T2.last_name = 'MOORE', T1.amount, 0)) * 100) / sum(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id", "sql_id": 677}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T3.name = 'Horror', 1, 0)) AS Float64) * 100) / COUNT(T1.film_id)\nFROM film_category AS T1\nINNER JOIN film AS T2 ON T1.film_id = T2.film_id\nINNER JOIN category AS T3 ON T1.category_id = T3.category_id\nINNER JOIN language AS T4 ON T2.language_id = T4.language_id\nWHERE T4.name = 'English'", "sql_id": 679}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.customer_id) \nFROM payment AS T1 \nINNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id \nWHERE T2.first_name = 'MARY' \nAND T2.last_name = 'SMITH' \nAND formatDateTime(T1.payment_date, '%Y') = '2005' \nAND toYear(T1.payment_date) = 2005", "sql_id": 683}
{"model": "gpt-3.5-turbo", "message": "SELECT if(sum(if(T5.name = 'Family', 1, 0)) - sum(if(T5.name = 'Sci-Fi', 1, 0)) > 0, T1.first_name, 0) \nFROM customer AS T1 \nINNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id \nINNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id \nINNER JOIN film_category AS T4 ON T4.film_id = T3.film_id \nINNER JOIN category AS T5 ON T4.category_id = T5.category_id \nGROUP BY T1.customer_id", "sql_id": 668}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.movie_title \nFROM ratings AS T1 \nINNER JOIN movies AS T2 \nON T1.movie_id = T2.movie_id \nWHERE toInt32(substring(T1.rating_timestamp_utc, 1, 4)) = 2020 \nAND toInt32(substring(T1.rating_timestamp_utc, 6, 2)) > 4", "sql_id": 2}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title \nFROM categories AS T1 \nINNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id \nWHERE T1.category = 'music' \nORDER BY length(T2.title) DESC \nLIMIT 1", "sql_id": 563}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.firstName, T1.middleName, T1.lastName, 2003 - toYear(T1.birthDate) AS age\nFROM awards_players AS T2\nJOIN players AS T1 ON T2.playerID = T1.playerID\nWHERE T2.award = 'Finals MVP' AND T2.year = 2003", "sql_id": 235}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.steals IS NOT NULL AND T1.tmID = 'LAL', 1, 0)) AS Float64) * 100) / COUNT(T1.tmID)\nFROM teams AS T1\nINNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year", "sql_id": 237}
{"model": "gpt-3.5-turbo", "message": "SELECT count(review_stars) / (toUInt32(formatDateTime(now(), '%Y')) - T1.user_yelping_since_year) \nFROM Users AS T1 \nINNER JOIN Reviews AS T2 ON T1.user_id = T2.user_id \nWHERE T1.user_id = 3", "sql_id": 252}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT if(`Customer_Names` LIKE '%Group%', `Customer_Names`, NULL) AS T FROM Customers ) WHERE T IS NOT NULL", "sql_id": 217}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.Customer_Names \nFROM Customers AS T1 \nINNER JOIN Sales_Orders AS T2 ON T2._CustomerID = T1.CustomerID \nINNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID \nWHERE T3.Product_Name = 'Cocktail Glasses' \nAND substring(T2.OrderDate, -2) = '20' \nAND T2.Discount_Applied = ( \n    SELECT T2.Discount_Applied \n    FROM Customers AS T1 \n    INNER JOIN Sales_Orders AS T2 ON T2._CustomerID = T1.CustomerID \n    INNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID \n    WHERE T3.Product_Name = 'Cocktail Glasses' \n    AND T2.OrderDate LIKE '%/%/20' \n    ORDER BY T2.Discount_Applied DESC \n    LIMIT 1 \n)", "sql_id": 218}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(OrderDate = '5/31/18', 1, 0)) FROM Sales_Orders", "sql_id": 219}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT if(DeliveryDate = '6/13/18', OrderNumber, NULL) AS T FROM Sales_Orders ) WHERE T IS NOT NULL", "sql_id": 220}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(`Order_Quantity` > 5, 1, 0)) FROM `Sales_Orders`", "sql_id": 221}
{"model": "gpt-3.5-turbo", "message": "SELECT if(StateCode = 'GA', State, NULL) AS T FROM Regions WHERE T IS NOT NULL", "sql_id": 222}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM (\n    SELECT DISTINCT if(T2.Product_Name = 'Cookware', T1.DeliveryDate, NULL) AS T \n    FROM Sales_Orders T1 \n    INNER JOIN Products T2 ON T2.ProductID = T1._ProductID\n) \nWHERE T IS NOT NULL", "sql_id": 224}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM (\n    SELECT DISTINCT if(T1.`Discount Applied` = 0.1, T2.`Product Name`, NULL) AS T \n    FROM `Sales_Orders` T1 \n    INNER JOIN Products T2 ON T2.ProductID = T1._ProductID\n) \nWHERE T IS NOT NULL", "sql_id": 225}
{"model": "gpt-3.5-turbo", "message": "SELECT substring(T1.OrderDate, -2, 2) FROM Sales_Orders AS T1 INNER JOIN Sales_Team AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.Sales_Team = 'George Lewis' GROUP BY substring(T1.OrderDate, -2, 2) ORDER BY count(T1.OrderNumber) DESC LIMIT 1", "sql_id": 226}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT if(OrderNumber = 'SO - 000103', `Unit Cost`, NULL) AS T FROM `Sales_Orders` ) WHERE T IS NOT NULL", "sql_id": 227}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(CASE WHEN substring(T1.OrderDate, -2) IN ('18', '19', '20') AND T2.Customer_Names = 'Medsep Group' THEN 1 ELSE 0 END) \nFROM Sales_Orders AS T1 \nINNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID", "sql_id": 229}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(WarehouseCode = 'WARE-MKL1006', 1, 0)) - sum(if(WarehouseCode = 'WARE-NBV1002', 1, 0)) AS difference FROM `Sales_Orders`", "sql_id": 230}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT OrderNumber, `Product Name`\nFROM (\n    SELECT if(OrderDate = '6/6/18', OrderNumber, NULL) AS OrderNumber,\n           if(OrderDate = '6/6/18', T1.Product_Name, NULL) AS `Product Name`\n    FROM Products T1\n    INNER JOIN Sales_Orders T2 ON T2._ProductID = T1.ProductID\n)\nWHERE OrderNumber IS NOT NULL AND `Product Name` IS NOT NULL;", "sql_id": 231}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM (SELECT if(_CustomerID = 11, ProcuredDate, NULL) AS T FROM Sales_Orders) WHERE T IS NOT NULL", "sql_id": 232}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(ShipDate LIKE '6/%/18' AND Sales_Channel = 'Online', 1, 0)) FROM Sales_Orders", "sql_id": 233}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.food_type = 'mexican', 1, 0)) AS Float64) * 100) / COUNT(T2.id_restaurant)\nFROM geographic AS T1\nINNER JOIN generalinfo AS T2 ON T1.city = T2.city\nWHERE T1.county = 'monterey county'", "sql_id": 155}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.street_name = '11th st', 1, 0)) AS Float64) * 100) / COUNT(T1.id_restaurant)\nFROM location AS T1\nINNER JOIN geographic AS T2 ON T1.city = T2.city\nWHERE T2.county = 'alameda county'", "sql_id": 156}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(food_type = 'american food', 1, 0)) AS Float64) * 100) / COUNT(id_restaurant) FROM generalinfo WHERE city = 'dublin'", "sql_id": 157}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.review > 4, 1, 0)) AS Float64) * 100) / COUNT(T2.id_restaurant)\nFROM geographic AS T1\nRIGHT JOIN generalinfo AS T2 ON T1.city = T2.city\nWHERE T1.region = 'bay area'", "sql_id": 158}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.region = 'bay area', 1, 0)) AS Float64) * 100) / COUNT(T2.id_restaurant)\nFROM geographic AS T1\nINNER JOIN location AS T2 ON T1.city = T2.city", "sql_id": 159}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(region = 'Napa Valley', 1, 0)) AS Float64) * 100) / COUNT(region) FROM geographic", "sql_id": 160}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.food_type = 'afghani', 1, 0)) AS Float64) * 100) / COUNT(T1.id_restaurant)\nFROM location AS T1\nINNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant\nWHERE (1000 <= T1.street_num) AND (T1.street_num <= 2000)", "sql_id": 161}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.n_name = 'GERMANY', 1, 0)) AS Float64) * 100) / COUNT(T1.c_custkey)\nFROM customer AS T1\nINNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey", "sql_id": 471}
{"model": "gpt-3.5-turbo", "message": "SELECT toUInt32(toDateTime(T2.l_receiptdate)) / 86400 + 2440587.5 - toUInt32(toDateTime(T2.l_commitdate)) / 86400 + 2440587.5 \nFROM orders AS T1 \nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey \nWHERE T1.o_custkey = 129301 AND T1.o_orderdate = '1996-07-27'", "sql_id": 472}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.r_name = 'EUROPE', 1, 0)) AS Float64) * 100) / COUNT(T1.n_name)\nFROM nation AS T1\nINNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey", "sql_id": 473}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.n_name = 'JAPAN', 1, 0)) AS Float64) * 100) / COUNT(T1.s_name)\nFROM supplier AS T1\nINNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey\nWHERE T1.s_acctbal < 0", "sql_id": 474}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE formatDateTime(l_shipdate, '%Y') = '1998'", "sql_id": 475}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_linenumber) FROM lineitem WHERE l_returnflag = 'R' AND l_shipmode = 'AIR' AND formatDateTime(l_shipdate, '%Y') = '1994'", "sql_id": 476}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.o_orderkey) \nFROM lineitem AS T1 \nINNER JOIN orders AS T2 ON T2.o_orderkey = T1.l_orderkey \nWHERE (toUInt32(toDateTime(T1.l_shipdate)) / 86400 + 2440587.5) - (toUInt32(toDateTime(T2.o_orderdate)) / 86400 + 2440587.5) = 1 \nAND T2.o_orderpriority = '1-URGENT'", "sql_id": 477}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(c_acctbal < 0, 1, 0)) AS Float64) * 100) / COUNT(c_custkey) FROM customer", "sql_id": 478}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(p_mfgr = 'Manufacturer#3', 1, 0)) AS Float64) * 100) / COUNT(p_partkey) FROM part", "sql_id": 479}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.n_name = 'GERMANY', 1, 0)) AS Float64) * 100) / COUNT(T1.s_suppkey)\nFROM supplier AS T1\nINNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey\nWHERE T1.s_acctbal < 0", "sql_id": 481}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE formatDateTime(l_shipdate, '%Y') = '1994'", "sql_id": 482}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.n_name = 'United States', 1, 0)) AS Float64) * 100) / COUNT(T1.c_custkey)\nFROM customer AS T1\nINNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey\nWHERE T1.c_acctbal < 4000", "sql_id": 483}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(ps_supplycost > 500, 1, 0)) AS Float64) * 100) / COUNT(ps_suppkey) FROM partsupp", "sql_id": 484}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.c_mktsegment = 'AUTOMOBILE', 1, 0)) AS Float64) * 100) / COUNT(T1.c_name)\nFROM customer AS T1\nINNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey\nWHERE T2.n_name = 'FRANCE'", "sql_id": 485}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.r_name = 'AFRICA', 1, 0)) AS Float64) * 100) / COUNT(T1.n_nationkey)\nFROM nation AS T1\nINNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey\nINNER JOIN customer AS T3 ON T1.n_nationkey = T3.c_nationkey\nWHERE T3.c_mktsegment = 'HOUSEHOLD'", "sql_id": 486}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T3.l_shipmode = 'SHIP', T1.p_retailprice, 0)) AS Float64) / SUM(if(T3.l_shipmode = 'SHIP', 1, 0))) - (CAST(SUM(if(T3.l_shipmode = 'AIR', T1.p_retailprice, 0)) AS Float64) / SUM(if(T3.l_shipmode = 'AIR', 1, 0))) FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN lineitem AS T3 ON T2.ps_suppkey = T3.l_suppkey", "sql_id": 487}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T3.s_acctbal < (SELECT AVG(s_acctbal) FROM supplier), 1, 0)) AS Float64) * 100) / COUNT(T1.n_nationkey)\nFROM nation AS T1\nINNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey\nINNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey\nWHERE T2.r_name = 'EUROPE'", "sql_id": 488}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.n_name = 'IRAN', 1, 0)) AS Float64) * 100) / COUNT(T2.n_name)\nFROM customer AS T1\nINNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey\nWHERE T1.c_mktsegment = 'HOUSEHOLD'", "sql_id": 490}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(o_orderkey) AS countorders FROM orders WHERE formatDateTime(o_orderdate, '%Y') = '1998' AND o_totalprice < 950", "sql_id": 492}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(l_returnflag = 'A', 1, 0)) - sum(if(l_returnflag = 'N', 1, 0)) AS diff FROM lineitem WHERE l_extendedprice < 16947.7", "sql_id": 493}
{"model": "gpt-3.5-turbo", "message": "SELECT (toUInt32(toDateTime(T2.l_receiptdate)) / 86400 + 2440587.5) - (toUInt32(toDateTime(T2.l_commitdate)) / 86400 + 2440587.5) AS days_diff, T1.o_clerk\nFROM orders AS T1\nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey\nWHERE T1.o_orderkey = 6", "sql_id": 494}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.r_name = 'ASIA', 1, 0)) AS Float64) * 100) / COUNT(T1.r_regionkey)\nFROM region AS T1\nINNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey\nINNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey", "sql_id": 495}
{"model": "gpt-3.5-turbo", "message": "SELECT l_linenumber FROM lineitem WHERE toYear(l_shipdate) < 1997 AND l_shipmode = 'truck'", "sql_id": 496}
{"model": "gpt-3.5-turbo", "message": "SELECT l_linenumber FROM lineitem WHERE toYear(l_shipdate) < 1997 AND l_shipmode = 'TRUCK'", "sql_id": 497}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.r_name = 'America', 1, 0)) AS Float64) * 100) / COUNT(T2.n_name)\nFROM region AS T1\nINNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey", "sql_id": 499}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.c_mktsegment = 'HOUSEHOLD', 1, 0)) AS Float64) * 100) / COUNT(T1.c_mktsegment)\nFROM customer AS T1\nINNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey\nWHERE T2.n_name = 'INDONESIA'", "sql_id": 500}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE formatDateTime(l_shipdate, '%Y') = '1997' AND l_shipmode = 'MAIL'", "sql_id": 501}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE formatDateTime(l_shipdate, '%Y') = '1994' AND l_returnflag = 'R' AND l_shipmode = 'TRUCK'", "sql_id": 502}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(o_orderkey) \nFROM orders \nWHERE formatDateTime(o_orderdate, '%Y') = '1997' \nAND o_clerk = 'Clerk#000000001' \nAND o_orderpriority = '1-URGENT'", "sql_id": 503}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T1.sex) \nFROM client AS T1 \nINNER JOIN events AS T2 ON T1.client_id = T2.Client_ID \nWHERE formatDateTime(T2.Date_received, '%Y') = '2016' \nAND T1.sex = 'Male' \nAND T2.Product = 'Credit card'", "sql_id": 19}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(T2.`Complaint ID`) AS Float64) / 3 AS average \nFROM client AS T1 \nINNER JOIN events AS T2 ON T1.client_id = T2.Client_ID \nWHERE toYear(T2.`Date_received`) BETWEEN 2015 AND 2017 \nAND T1.city = 'New York City' \nAND T2.Product = 'Credit card'", "sql_id": 20}
{"model": "gpt-3.5-turbo", "message": "SELECT 100.0 * (SUM(CASE WHEN toYear(T2.`Date_received`) = 2017 THEN 1 ELSE 0 END) - SUM(CASE WHEN toYear(T2.`Date_received`) = 2016 THEN 1 ELSE 0 END)) / SUM(CASE WHEN toYear(T2.`Date_received`) = 2016 THEN 1 ELSE 0 END) \nFROM client AS T1 \nINNER JOIN events AS T2 ON T1.client_id = T2.Client_ID \nWHERE T1.city = 'New York City'", "sql_id": 21}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(`Date received`, '%Y') AS year,\n       CAST(SUM(CASE WHEN `Company response to consumer` = 'Closed with explanation' THEN 1 ELSE 0 END) AS Float64) / COUNT(`Complaint ID`) AS average\nFROM callcenterlogs AS T1\nINNER JOIN client AS T2 ON T1.rand_client = T2.client_id\nINNER JOIN events AS T3 ON T1.Complaint_ID = T3.Complaint_ID\nWHERE T2.city = 'New Bedford'\nGROUP BY formatDateTime(`Date received`, '%Y')", "sql_id": 23}
{"model": "gpt-3.5-turbo", "message": "SELECT `Complaint ID`, call_id, phonefinal FROM callcenterlogs WHERE toYear(`Date_received`) = 2014 AND server = 'AVIDAN'", "sql_id": 29}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(cast(substring(ser_time, 4, 2) AS Float32)) FROM callcenterlogs WHERE Date_received BETWEEN '2017-01-01' AND '2017-04-01'", "sql_id": 30}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN T1.priority = 2 THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(T1.`Complaint_ID`)\nFROM callcenterlogs AS T1\nINNER JOIN events AS T2 ON T1.`Complaint_ID` = T2.`Complaint_ID`\nWHERE toYear(T1.`Date_received`) = 2017", "sql_id": 33}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T1.client_id) \nFROM client AS T1 \nINNER JOIN events AS T2 \nON T1.client_id = T2.Client_ID \nWHERE T1.city = 'Omaha' \nAND toYear(T2.Date_received) = 2012 \nAND T2.Product = 'Credit card'", "sql_id": 34}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.client_id) \nFROM client AS T1 \nINNER JOIN events AS T2 ON T1.client_id = T2.Client_ID \nWHERE toYear(T2.Date_received) BETWEEN 2012 AND 2015 \nAND T2.Submitted_via = 'Email' \nAND T1.sex = 'Male'", "sql_id": 35}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST((sum(CASE WHEN toUInt32(toDateTime(Date_sent_to_company)) - toUInt32(toDateTime(Date_received)) > 5 THEN 1 ELSE 0 END) AS Float32)) * 100) / count(T1.client_id)\nFROM client AS T1\nINNER JOIN events AS T2 ON T1.client_id = T2.Client_ID\nWHERE T1.city = 'Houston' AND toYear(toDateTime(Date_received)) = 2014", "sql_id": 36}
{"model": "gpt-3.5-turbo", "message": "SELECT count(Submitted_via) FROM events WHERE toYear(Date_received) = 2012 AND Submitted_via = 'Email'", "sql_id": 37}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.`Complaint_ID`) \nFROM callcenterlogs AS T1 \nINNER JOIN events AS T2 \nON T1.`Complaint_ID` = T2.`Complaint_ID` \nWHERE formatDateTime(T1.`Date_received`, '%Y') = '2015' \nAND T2.`Timely_response_` = 'Yes' \nAND T2.`Company_response_to_consumer` = 'Closed with explanation'", "sql_id": 38}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T2.`Complaint ID`) \nFROM callcenterlogs AS T1 \nINNER JOIN events AS T2 \nON T1.`Complaint ID` = T2.`Complaint ID` \nWHERE T2.`Submitted via` = 'Phone' \nAND formatDateTime(T1.`Date received`, '%Y') = '2014'", "sql_id": 39}
{"model": "gpt-3.5-turbo", "message": "SELECT Complaint_ID \nFROM events \nWHERE toDayOfMonth(Date_sent_to_company) - toDayOfMonth(Date_received) = \n    (SELECT max(toDayOfMonth(Date_sent_to_company) - toDayOfMonth(Date_received)) \n     FROM events \n     WHERE Date_sent_to_company = '2014-09-25') \nAND Date_sent_to_company = '2014-09-25'", "sql_id": 24}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) \nFROM Customers AS T1 \nINNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE formatDateTime(T2.OrderDate, '%Y') = '1996' \nAND T1.Country = 'UK'", "sql_id": 453}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.CustomerID) \nFROM Customers AS T1 \nINNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE formatDateTime(T2.OrderDate, '%Y') = '1996' \nGROUP BY T1.Country", "sql_id": 455}
{"model": "gpt-3.5-turbo", "message": "SELECT T4.ProductName \nFROM Customers AS T1 \nINNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID \nINNER JOIN OrderDetails AS T3 ON T2.OrderID = T3.OrderID \nINNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID \nWHERE T1.Country = 'Norway' AND formatDateTime(T2.OrderDate, '%Y') = '1996'", "sql_id": 463}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.SalesID \nFROM Sales AS T1 \nINNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID \nWHERE substring(T2.FirstName, 1, 1) = 's'", "sql_id": 363}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    sum(if(T2.FirstName = 'Morningstar', 1, 0)) + sum(if(T2.FirstName = 'Heather', 1, 0)) + sum(if(T2.FirstName = 'Dean', 1, 0)) AS num \nFROM \n    Sales AS T1 \nINNER JOIN \n    Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID", "sql_id": 364}
{"model": "gpt-3.5-turbo", "message": "SELECT if(T1.ProductID = 498, 'YES', 'NO') FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Alex'", "sql_id": 365}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE substring(T1.Name, 1, 1) = 'C'", "sql_id": 366}
{"model": "gpt-3.5-turbo", "message": "SELECT if(sum(if(T1.Name = 'HL Mountain Frame - Silver, 42', T2.SalesID, 0)) - sum(if(T1.Name = 'HL Mountain Frame - Black, 42', T2.SalesID, 0)) > 0, 'Silver', 'Black') FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID", "sql_id": 367}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T3.FirstName = 'Albert' AND T3.MiddleInitial = 'I' AND T3.LastName = 'Ringer', 1, 0)) AS Float64) * 100) / COUNT(T2.CustomerID)\nFROM Products AS T1\nINNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID\nINNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID\nWHERE T1.Name = 'ML Bottom Bracket'", "sql_id": 368}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.Price = 0, T2.Quantity, 0)) AS Float64) * 100) / SUM(T2.Quantity)\nFROM Products AS T1\nINNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID", "sql_id": 369}
{"model": "gpt-3.5-turbo", "message": "SELECT (sum(if(T1.Name = 'Blade', T2.Quantity, 0)) / sum(T2.Quantity)) * 100 AS result\nFROM Products AS T1\nINNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID", "sql_id": 370}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.Price BETWEEN 200 AND 300, 1, 0)) AS Float64) * 100) / COUNT(T2.Price)\nFROM Sales AS T1\nINNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID\nWHERE T1.SalesID BETWEEN 1 AND 200", "sql_id": 371}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT date) AS days FROM weather WHERE toDateTime(concat('1970-01-01 ', sunrise)) < toDateTime('1970-01-01 05:00:00')", "sql_id": 573}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(T2.Act = 1, 1, 0)) - sum(if(T2.Act = 5, 1, 0)) AS more FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Twelfth Night'", "sql_id": 238}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.GenreType = 'Tragedy', 1, 0)) AS Float64) * 100) / COUNT(T1.Scene)\nFROM chapters AS T1\nINNER JOIN works AS T2 ON T1.work_id = T2.id\nWHERE T2.Date = 1594", "sql_id": 239}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(T4.CharName = 'Romeo', 1, 0)), \n       sum(if(T4.CharName = 'Juliet', 1, 0)), \n       cast((sum(if(T4.CharName = 'Romeo', 1, 0)) + sum(if(T4.CharName = 'Juliet', 1, 0))) as Float64) * 100 / count(T1.id)\nFROM works AS T1 \nINNER JOIN chapters AS T2 ON T1.id = T2.work_id \nINNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id \nINNER JOIN characters AS T4 ON T3.character_id = T4.id", "sql_id": 240}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.Title = 'All''s Well That Ends Well', 1, 0)) AS Float64) * 100) / COUNT(T3.id)\nFROM works AS T1\nINNER JOIN chapters AS T2 ON T1.id = T2.work_id\nINNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id", "sql_id": 241}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(GenreType = 'Comedy', 1, 0)) - sum(if(GenreType = 'History', 1, 0)) FROM works WHERE Date > 1593", "sql_id": 242}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.act = 5, 1, 0)) AS Float64) * 100) / COUNT(T2.act)\nFROM works AS T1\nINNER JOIN chapters AS T2 ON T1.id = T2.work_id\nWHERE T1.Title = 'Titus Andronicus'", "sql_id": 243}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.LongTitle FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'Mytilene. A street before the brothel.'", "sql_id": 244}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.Description \nFROM works AS T1 \nRIGHT JOIN chapters AS T2 ON T1.id = T2.work_id \nWHERE T1.Title = 'Venus and Adonis' \nORDER BY T2.Scene DESC \nLIMIT 1", "sql_id": 245}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T4.CharName = 'antonio', 1, 0)) AS Float64) * 100) / COUNT(T1.id)\nFROM works AS T1\nINNER JOIN chapters AS T2 ON T1.id = T2.work_id\nINNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id\nINNER JOIN characters AS T4 ON T3.character_id = T4.id\nWHERE T1.GenreType = 'Comedy'", "sql_id": 246}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(race = 'W', 1, 0)) AS Float64) * 100) / COUNT(case_number) FROM officers WHERE gender = 'M'", "sql_id": 207}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(toYear(date) = 2007, 1, 0)) - sum(if(toYear(date) = 2008, 1, 0)) FROM incidents WHERE subject_weapon = 'Vehicle'", "sql_id": 210}
{"model": "gpt-3.5-turbo", "message": "SELECT case_number FROM incidents WHERE toYear(date) > 2011 AND subject_statuses = 'Deceased'", "sql_id": 211}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(name) FROM Person WHERE birth_region = 'New York' AND substring(birthdate, 1, 4) > '1970';", "sql_id": 255}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.rating \nFROM Award AS T1 \nINNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id \nWHERE T1.award = 'Outstanding Voice-Over Performance' \nAND substring(T1.year, 1, 4) = '2009' \nAND T1.person = 'Dan Castellaneta';", "sql_id": 256}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM Episode AS T1\nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id\nWHERE substring(T1.air_date, 1, 4) = '2009' AND T2.stars = 10 AND T2.percent > 15;", "sql_id": 257}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title \nFROM Award AS T1 \nINNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id \nWHERE substring(T1.year, 1, 4) = '2017' \nAND T1.award = 'Best International TV Series' \nAND T1.result = 'Winner';", "sql_id": 259}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE substring(T1.air_date, 6, 2) BETWEEN '10' AND '11';", "sql_id": 260}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.year - CAST(substring(T1.birthdate, 1, 4) AS Int64) AS age\nFROM Person AS T1\nINNER JOIN Award AS T2 ON T1.name = T2.person\nWHERE T2.award = 'Outstanding Voice-Over Performance'\nAND T2.organization = 'Primetime Emmy Awards'\nAND T2.result = 'Winner';", "sql_id": 261}
{"model": "gpt-3.5-turbo", "message": "SELECT episode, title, rating FROM Episode WHERE substring(air_date, 1, 7) LIKE '2008-10%';", "sql_id": 264}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title, T2.episode_image, T1.award, T1.person \nFROM Award AS T1 \nINNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id \nWHERE T2.rating BETWEEN 7 AND 10 \nAND substring(T2.air_date, 1, 4) = '2008' \nAND T1.result = 'Nominee';", "sql_id": 265}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name, T1.birth_place, T2._role AS role, 2022 - CAST(substring(T1.birthdate, 1, 4) AS Int32) AS age \nFROM Person AS T1 \nINNER JOIN Credit AS T2 ON T1.name = T2.person \nWHERE T1.birthdate != '' \nORDER BY T1.birthdate \nLIMIT 1;", "sql_id": 266}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE person = 'Billy Kimball' AND substring(year, 1, 4) = '2010' AND result = 'Nominee';", "sql_id": 268}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE substring(birthdate, 1, 4) < '1970';", "sql_id": 269}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE substring(birthdate, 1, 4) = '1958' AND birth_place = 'California' AND birth_country = 'USA';", "sql_id": 270}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE substring(toString(T1.year), 1, 4) = '2009' AND T1._role = 'writer' AND T2.votes > 5;", "sql_id": 271}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE substring(birthdate, 1, 4) = '1962' AND birth_region = 'California';", "sql_id": 273}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.episode_id \nFROM Episode AS T1 \nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id \nWHERE substring(T1.air_date, 1, 4) = '2008' \nORDER BY T2.votes DESC \nLIMIT 1;", "sql_id": 274}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title \nFROM Award AS T1 \nINNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id \nWHERE substring(T1.year, 1, 4) = '2010' AND T1.person = 'Joel H. Cohen';", "sql_id": 275}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN birth_region = 'California' AND substring(birthdate, 1, 4) > '1970' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(birthdate) FROM Person;", "sql_id": 276}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title \nFROM Award AS T1 \nINNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id \nWHERE T1.award = 'Best International TV Series' \nAND substring(T1.year, 1, 4) = '2017';", "sql_id": 278}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE substring(year, 1, 4) = '2009';", "sql_id": 279}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.keyword \nFROM Episode AS T1 \nINNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id \nWHERE substring(T1.air_date, 1, 4) = '2008';", "sql_id": 281}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE substring(year, 1, 4) = '2009' AND result = 'Winner';", "sql_id": 283}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.episode_id \nFROM Episode AS T1 \nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id \nWHERE substring(T1.air_date, 1, 4) = '2008' AND T2.stars < 5;", "sql_id": 284}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.percent \nFROM Episode AS T1 \nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id \nWHERE substring(T1.air_date, 1, 4) = '2008' \nAND T1.votes BETWEEN 950 AND 960;", "sql_id": 285}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.stars \nFROM Episode AS T1 \nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id \nWHERE substring(T1.air_date, 1, 7) = '2008-11';", "sql_id": 286}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*)\nFROM Episode AS T1\nINNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id\nWHERE T2.credited = 'true' \nAND T2.person = 'Sam Im' \nAND substring(T1.air_date, 1, 4) = '2009' \nAND T2._role = 'additional timer';", "sql_id": 287}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(CASE WHEN Team_1 = 10 OR Team_2 = 10 THEN 1 ELSE 0 END) FROM Match WHERE substring(Match_Date, 1, 4) = '2012'", "sql_id": 168}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN Win_Margin > 100 THEN 1 ELSE 0 END) AS Float64) * 100 / sum(Match_Id) FROM Match", "sql_id": 169}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(CAST(Role_Desc = 'CaptainKeeper' AS UInt8)) * 100 / count(Player_Id)\nFROM Player_Match AS T1\nINNER JOIN Rolee AS T2 ON T1.Role_Id = T2.Role_Id", "sql_id": 170}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(CAST(Bowling_skill = ' Legbreak' AS Float32)) * 100 / count(Player_Id)\nFROM Player\nINNER JOIN Bowling_Style ON Player.Bowling_skill = Bowling_Style.Bowling_Id", "sql_id": 171}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNTIf(T1.Team_1 = T1.Match_Winner AND T1.Team_1 = T1.Toss_Winner) * 100.0 / sum(T1.Team_1)\nFROM Match AS T1\nINNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id\nINNER JOIN Toss_Decision AS T3 ON T1.Toss_Decide = T3.Toss_Id\nWHERE T3.Toss_Name = 'field' AND T2.Win_Type = 'runs'", "sql_id": 172}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN T2.Win_Margin < 10 THEN 1 ELSE 0 END) AS Float64) * 100 / sum(T1.Venue_Id) FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T1.Venue_Name = 'Dr DY Patil Sports Academy'", "sql_id": 173}
{"model": "gpt-3.5-turbo", "message": "SELECT 2022 - CAST(substring(DOB, 1, 4) AS Int64) FROM Player WHERE Player_Name = 'Ishan Kishan'", "sql_id": 175}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Country_Name = 'India' THEN 1 ELSE 0 END) AS Float64) / COUNT(T1.Player_Id)\nFROM Player AS T1\nINNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id\nWHERE toYear(T1.DOB) BETWEEN 1975 AND 1985", "sql_id": 179}
{"model": "gpt-3.5-turbo", "message": "SELECT count(Player_Id) FROM Player WHERE toYear(DOB) BETWEEN 1970 AND 1975", "sql_id": 180}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.bool = 'pos', 1, 0)) AS Float64) * 100) / SUM(if(T1.bool = 'neg', 1, 0))\nFROM no_payment_due AS T1\nINNER JOIN enlist AS T2 ON T1.name = T2.name\nWHERE T2.organ = 'foreign_legion'", "sql_id": 288}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.school = 'occ', 1.0, 0)) AS Float64) * 100) / COUNT(T1.name)\nFROM enrolled AS T1\nINNER JOIN enlist AS T2 ON T1.name = T2.name\nWHERE T2.organ = 'navy'", "sql_id": 289}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T1.month > 5, 1, 0)) AS Float64) * 100) / COUNT(T1.month)\nFROM longest_absense_from_school AS T1\nINNER JOIN unemployed AS T2 ON T1.name = T2.name", "sql_id": 292}
{"model": "gpt-3.5-turbo", "message": "SELECT if(T.result = 0, 'female', 'male') AS re FROM ( SELECT COUNT(name) AS result FROM male WHERE name = 'studenT1000' ) T", "sql_id": 293}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((sum(if(T3.name IS NULL, 1, 0)) / count(T1.name)) AS Float64) \nFROM disabled AS T1 \nINNER JOIN enlist AS T2 ON T1.name = T2.name \nLEFT JOIN male AS T3 ON T2.name = T3.name \nWHERE T2.organ = 'foreign_legion'", "sql_id": 294}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(month = 0, 1, 0)) AS Float64) * 100) / COUNT(name) FROM longest_absense_from_school", "sql_id": 296}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(if(`bool` = 'pos', 1, 0)) AS Float64) / SUM(if(`bool` = 'neg', 1, 0)) FROM no_payment_due", "sql_id": 297}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST((sum(if(month = 0, 1, 0)) - sum(if(month = 9, 1, 0))) AS Float64) * 100) / sum(if(month = 0, 1, 0)) FROM longest_absense_from_school", "sql_id": 301}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.month = 0, 1, 0)) AS Float64) * 100) / COUNT(T1.name) FROM unemployed AS T1 INNER JOIN longest_absense_from_school AS T2 ON T2.name = T1.name", "sql_id": 304}
{"model": "gpt-3.5-turbo", "message": "SELECT 100 * SUM(if(T2.month = 0, 1, 0)) AS num FROM disabled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name", "sql_id": 305}
{"model": "gpt-3.5-turbo", "message": "SELECT MAX(toUInt32(toDateTime(`Ship Date`)) - toUInt32(toDateTime(`Order Date`))) AS longestTimeDays \nFROM people AS T1 \nINNER JOIN central_superstore AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` \nWHERE T1.`Customer_Name` = 'Aimee Bixby'", "sql_id": 192}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.Product_Name \nFROM people AS T1 \nINNER JOIN central_superstore AS T2 ON T1.Customer_ID = T2.Customer_ID \nINNER JOIN product AS T3 ON T3.Product_ID = T2.Product_ID \nWHERE T1.Customer_Name = 'Aimee Bixby' \nAND formatDateTime(T2.Ship_Date, '%Y') = '2016'", "sql_id": 193}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.Product_ID) \nFROM east_superstore AS T1 \nINNER JOIN product AS T2 ON T1.Product_ID = T2.Product_ID \nWHERE T2.Sub_Category = 'Art' \nAND T1.Region = 'East' \nAND formatDateTime(toDateTime(T1.Order_Date), '%Y') = '2013'", "sql_id": 194}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.Order_ID) \nFROM east_superstore AS T1 \nINNER JOIN people AS T2 ON T1.Customer_ID = T2.Customer_ID \nWHERE T2.Customer_Name = 'Maxwell Schwartz' \nAND formatDateTime(toDate(T1.Order_Date), '%Y') = '2015'", "sql_id": 195}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.Product_Name \nFROM west_superstore AS T1 \nINNER JOIN people AS T2 ON T1.Customer_ID = T2.Customer_ID \nINNER JOIN product AS T3 ON T3.Product_ID = T1.Product_ID \nWHERE T2.Customer_Name = 'Matt Abelman' \nAND formatDateTime(T1.Order_Date, '%Y') = '2013'", "sql_id": 196}
{"model": "gpt-3.5-turbo", "message": "SELECT sum((T1.Sales / (1 - T1.Discount)) * T1.Quantity - T1.Profit) AS cost\nFROM east_superstore AS T1\nINNER JOIN people AS T2 ON T1.Customer_ID = T2.Customer_ID\nINNER JOIN product AS T3 ON T1.Product_ID = T3.Product_ID AND T1.Region = T3.Region\nWHERE T1.Region = 'East' AND T2.Customer_Name = 'Brad Thomas' AND toYear(T1.Order_Date) = 2016", "sql_id": 197}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(T1.Sales) \nFROM east_superstore AS T1 \nINNER JOIN product AS T2 ON T1.Product_ID = T2.Product_ID \nWHERE formatDateTime(T1.Order_Date, '%Y') = '2016' \nAND T2.Category = 'Furniture'", "sql_id": 198}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.Customer_Name \nFROM south_superstore AS T1 \nINNER JOIN people AS T2 ON T1.Customer_ID = T2.Customer_ID \nWHERE formatDateTime(toDate(T1.Order_Date), '%Y') = '2015' \nGROUP BY T2.Customer_Name \nHAVING count(T2.Customer_Name) > 3", "sql_id": 199}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.Customer_ID) \nFROM people AS T1 \nINNER JOIN central_superstore AS T2 \nON T1.Customer_ID = T2.Customer_ID \nWHERE T1.Customer_Name = 'Corey Roper' \nAND formatDateTime(T2.Ship_Date, '%Y') = '2015'", "sql_id": 200}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.Customer_Name \nFROM east_superstore AS T1 \nINNER JOIN people AS T2 ON T1.Customer_ID = T2.Customer_ID \nWHERE T2.Segment = 'Corporate' \nAND T2.State = 'Rhode Island' \nAND T2.Region = 'East' \nAND formatDateTime(toDate(T1.Order_Date), '%Y') = '2016' \nGROUP BY T2.Customer_Name \nORDER BY count(T2.Customer_Name) DESC \nLIMIT 1", "sql_id": 201}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT toUInt32(toDateTime(Ship_Date)) - toUInt32(toDateTime(Order_Date)) AS duration FROM central_superstore WHERE Order_ID = 'CA-2011-134103'", "sql_id": 202}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.Product_Name \nFROM central_superstore AS T1 \nINNER JOIN product AS T2 \nON T1.Product_ID = T2.Product_ID \nWHERE formatDateTime(T1.Ship_Date, '%Y-%m') = '2013-03'", "sql_id": 203}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T2.Order_ID) \nFROM people AS T1 \nINNER JOIN central_superstore AS T2 \nON T1.Customer_ID = T2.Customer_ID \nWHERE T1.Customer_Name = 'Alan Barnes' \nAND formatDateTime(T2.Order_Date, '%Y') = '2015'", "sql_id": 204}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN T1.Ship_Mode = 'First Class' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(*)\nFROM central_superstore AS T1\nINNER JOIN product AS T2 ON T1.Product_ID = T2.Product_ID\nWHERE T2.Category = 'Furniture' AND formatDateTime(toDate(Ship_Date), '%Y') = '2013'", "sql_id": 205}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.Product_Name \nFROM central_superstore AS T1 \nINNER JOIN product AS T2 ON T1.Product_ID = T2.Product_ID \nWHERE T2.Region = 'Central' AND formatDateTime(T1.Order_Date, '%Y') = '2016' \nORDER BY T1.Profit ASC \nLIMIT 1", "sql_id": 206}
{"model": "gpt-3.5-turbo", "message": "SELECT toUInt32(toDateTime(STOP)) - toUInt32(toDateTime(START)) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description LIKE 'Acetaminophen%'", "sql_id": 100}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(sum(toUInt32(toDateTime(STOP)) - toUInt32(toDateTime(START))) AS Float64) / count(patient))\nFROM patients AS T1\nINNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT\nWHERE T1.prefix = 'Mr.' AND T1.first = 'Wesley' AND T1.last = 'Lemke'", "sql_id": 102}
{"model": "gpt-3.5-turbo", "message": "SELECT count(PATIENT) FROM conditions WHERE DESCRIPTION = 'Diabetes' AND toYear(START) = 1988", "sql_id": 105}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.patient) \nFROM patients AS T1 \nINNER JOIN medications AS T2 \nON T1.patient = T2.PATIENT \nWHERE T2.DESCRIPTION = 'Ibuprofen 200 MG Oral Tablet' \nAND T1.ethnicity = 'dominican' \nAND toYear(T2.START) = 2016 \nAND toMonth(T2.STOP) - toMonth(T2.START) = 1", "sql_id": 106}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.patient) \nFROM patients AS T1 \nINNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT \nWHERE DESCRIPTION = 'Pneumonia' \nAND left(toString(T1.birthdate), 4) LIKE '192%'", "sql_id": 107}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first, T1.last, T1.suffix \nFROM patients AS T1 \nINNER JOIN medications AS T2 ON T1.patient = T2.PATIENT \nWHERE T2.DESCRIPTION = 'Yaz 28 Day Pack' \nAND formatDateTime(T2.START, '%Y') = '2011'", "sql_id": 108}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.patient) \nFROM patients AS T1 \nINNER JOIN immunizations AS T2 \nON T1.patient = T2.PATIENT \nWHERE T1.race = 'black' \nAND T2.DESCRIPTION = 'DTaP' \nAND toYear(T2.DATE) = 2013", "sql_id": 109}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.DESCRIPTION \nFROM conditions AS T1 \nINNER JOIN patients AS T2 ON T1.PATIENT = T2.patient \nWHERE T2.deathdate IS NOT NULL \nORDER BY toYear(T2.deathdate) - toYear(T2.birthdate) DESC \nLIMIT 1", "sql_id": 111}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first, T1.last \nFROM patients AS T1 \nINNER JOIN medications AS T2 ON T1.patient = T2.PATIENT \nWHERE T2.DESCRIPTION = 'Clopidogrel 75 MG Oral Tablet' \nAND dateDiff('year', toDate(T2.STOP), toDate(T2.START)) > 10", "sql_id": 112}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    (CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Influenza seasonal injectable preservative free' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(T1.patient) AS result1,\n    SUM(CASE WHEN T1.ethnicity = 'english' THEN 1 ELSE 0 END) AS result2\nFROM patients AS T1 \nINNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT \nWHERE toYear(T2.DATE) = 2017;", "sql_id": 114}
{"model": "gpt-3.5-turbo", "message": "SELECT toUInt32(toDateTime(T2.STOP)) - toUInt32(toDateTime(T2.START)) AS takenDays FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Berry' AND T1.last = 'Keebler' AND T2.REASONDESCRIPTION = 'Acute bronchitis (disorder)' AND T2.DESCRIPTION = 'Acetaminophen 160 MG'", "sql_id": 118}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.patient) \nFROM patients AS T1 \nINNER JOIN medications AS T2 \nON T1.patient = T2.PATIENT \nWHERE T1.marital = 'S' \nAND T2.REASONDESCRIPTION = 'Cystitis' \nAND T2.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]' \nAND toYear(T2.START) = 2010", "sql_id": 119}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.DESCRIPTION \nFROM patients AS T1 \nINNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT \nWHERE T1.first = 'Elly' AND T1.last = 'Koss' AND formatDateTime(T2.START, '%Y') = '2013'", "sql_id": 123}
{"model": "gpt-3.5-turbo", "message": "SELECT countState(PATIENT) / countState(DISTINCT toYear(DATE)) FROM procedures WHERE DESCRIPTION = 'Combined chemotherapy and radiation therapy (procedure)'", "sql_id": 126}
{"model": "gpt-3.5-turbo", "message": "SELECT toUInt32(toDateTime(T2.STOP)) - toUInt32(toDateTime(T2.START)) AS timeFrame, T2.DESCRIPTION\nFROM patients AS T1\nINNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT\nWHERE T1.first = 'Jacquelyn' AND T1.last = 'Shanahan'\nORDER BY T2.START DESC\nLIMIT 1", "sql_id": 127}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.DESCRIPTION \nFROM patients AS T1 \nINNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT \nWHERE T1.first = 'Joye' AND T1.last = 'Homenick' AND formatDateTime(T2.START, '%Y') = '2017'", "sql_id": 128}
{"model": "gpt-3.5-turbo", "message": "SELECT toUInt32(toDateTime(T2.STOP)) - toUInt32(toDateTime(T2.START)) AS days \nFROM patients AS T1 \nINNER JOIN medications AS T2 ON T1.patient = T2.PATIENT \nWHERE T1.first = 'Elly' AND last = 'Koss' AND T2.DESCRIPTION = 'Acetaminophen 160 MG'", "sql_id": 129}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(T1.PATIENT)\nFROM encounters AS T1\nINNER JOIN patients AS T2 ON T1.PATIENT = T2.patient\nWHERE toYear(T1.DATE) = 2010\nAND T1.REASONDESCRIPTION = 'Contact dermatitis'", "sql_id": 130}
{"model": "gpt-3.5-turbo", "message": "SELECT count(T1.patient), \n    (sum(CAST(T2.DESCRIPTION = 'Prenatal visit', 'UInt8')) * 100) / count(T1.patient)\nFROM patients AS T1 \nINNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT \nWHERE T1.first = 'Lorri' \n    AND T1.last = 'Simonis' \n    AND toYear(T2.DATE) BETWEEN 2010 AND 2017", "sql_id": 131}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN T2.race = 'hispanic' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(T1.PATIENT)\nFROM careplans AS T1\nINNER JOIN patients AS T2 ON T1.PATIENT = T2.patient\nWHERE toYear(T1.stop) = 2011", "sql_id": 132}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS Float64) * 100) / COUNT(T1.PATIENT) AS percentage\nFROM careplans AS T1\nINNER JOIN patients AS T2 ON T1.PATIENT = T2.patient\nWHERE toYear(T1.START) = 2010", "sql_id": 133}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T2.patient) \nFROM careplans AS T1 \nINNER JOIN patients AS T2 \nON T1.PATIENT = T2.patient \nWHERE T2.race = 'black' \nAND formatDateTime(T1.STOP, '%Y') = '2017'", "sql_id": 134}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first, T1.last \nFROM patients AS T1 \nINNER JOIN medications AS T2 ON T1.patient = T2.PATIENT \nWHERE T2.DESCRIPTION = 'Penicillin V Potassium 250 MG' \nAND toYear(T2.START) >= 1948", "sql_id": 135}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT T1.patient) \nFROM patients AS T1 \nINNER JOIN conditions AS T2 ON T1.patient = T2.patient \nWHERE toYear(T1.birthdate) = 1935 \nAND T1.race = 'white' \nAND T2.DESCRIPTION = 'Stroke'", "sql_id": 136}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.first, T2.last \nFROM conditions AS T1 \nINNER JOIN patients AS T2 ON T1.PATIENT = T2.patient \nWHERE T1.DESCRIPTION = 'Drug overdose' \nAND round((toUInt32(toDateTime(T2.deathdate)) - toUInt32(toDateTime(T2.birthdate))) / 31536000) = 44", "sql_id": 137}
{"model": "gpt-3.5-turbo", "message": "SELECT app_id , if(is_installed = 1, 'YES', 'NO') AS status FROM app_events WHERE event_id = 844", "sql_id": 57}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    (sum(if(T1.device_model = 'Nexus 5', 1, 0)) * 100) / count(T1.device_id) AS per,\n    sum(if((T1.device_model = 'Nexus 5') AND (T2.gender = 'M'), 1, 0)) / sum(if((T1.device_model = 'Nexus 5') AND (T2.gender = 'F'), 1, 0)) AS r\nFROM phone_brand_device_model2 AS T1\nINNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id\nWHERE T1.phone_brand = 'LG'", "sql_id": 62}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(event_id) FROM events WHERE substring(timestamp, 1, 4) = '2016'", "sql_id": 63}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.event_id) \nFROM events AS T1 \nINNER JOIN phone_brand_device_model2 AS T2 \nON T1.event_id = T2.device_id \nWHERE formatDateTime(T1.timestamp, '%Y') = '2016' \nAND T2.phone_brand = 'vivo'", "sql_id": 65}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(T2.phone_brand = 'vivo', 1, 0)) / count(T1.device_id) AS per FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE T1.event_id = '2'", "sql_id": 67}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(event_id) FROM events WHERE substring(timestamp, 1, 10) = '2016-05-06'", "sql_id": 70}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(phone_brand = 'vivo', 1, 0)) - sum(if(phone_brand = 'LG', 1, 0)) AS num FROM phone_brand_device_model2", "sql_id": 75}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.device_id) \nFROM gender_age AS T1 \nINNER JOIN events AS T2 ON T1.device_id = T2.device_id \nWHERE formatDateTime(T2.timestamp, '%Y') = '2016' \nAND T1._group = 'M23-26'", "sql_id": 76}
{"model": "gpt-3.5-turbo", "message": "SELECT if(sum(if(T2.category = 'Securities', 1, 0)) - sum(if(T2.category = 'Finance', 1, 0)) > 0, 'Securities', 'Finance') AS diff FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id", "sql_id": 77}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    (sum(if(T1.gender = 'M', 1, 0)) / sum(if(T1.gender = 'F', 1, 0))) AS per \nFROM \n    gender_age AS T1 \nINNER JOIN \n    phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id \nWHERE \n    T2.phone_brand = 'vivo'", "sql_id": 78}
{"model": "gpt-3.5-turbo", "message": "SELECT (sum(if(is_active = 1, 1, 0)) / sum(if(is_active = 0, 1, 0))) AS per FROM app_events WHERE event_id = 58", "sql_id": 80}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.device_id) \nFROM events AS T1 \nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id \nWHERE T2.phone_brand = 'OPPO' \nAND formatDateTime(T1.`timestamp`, '%Y-%m-%d') = '2016-05-01'", "sql_id": 82}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    (SUM(if(T1.gender = 'M', 1, 0)) / SUM(if(T1.gender = 'F', 1, 0))) AS per \nFROM \n    gender_age AS T1 \nINNER JOIN \n    phone_brand_device_model2 AS T2 \nON \n    T1.device_id = T2.device_id \nWHERE \n    T2.phone_brand = 'vivo' \n    AND T2.device_model = 'X5Pro'", "sql_id": 83}
{"model": "gpt-3.5-turbo", "message": "SELECT\n    SUM(if(T1._group = 'M23-26', 1.0, 0)) / COUNT(T1.device_id) AS per\nFROM\n    gender_age AS T1\nINNER JOIN\n    phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE\n    T2.phone_brand = 'vivo'", "sql_id": 66}
{"model": "gpt-3.5-turbo", "message": "SELECT\n    (sum(if(timestamp = '2016-05-02 07:50:28', 1, 0)) / sum(if(timestamp = '2016-05-02 07:41:03', 1, 0))) AS num\nFROM\n    events AS T1\nINNER JOIN\n    app_events AS T2 ON T1.event_id = T2.event_id\nWHERE\n    T2.is_active = 1", "sql_id": 74}
{"model": "gpt-3.5-turbo", "message": "SELECT\n    SUM(if(T1.gender = 'F' AND T1.age > 80, 1, 0)) / COUNT(T1.device_id) AS per\nFROM\n    gender_age AS T1\nINNER JOIN\n    phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE\n    T2.phone_brand = 'HTC'", "sql_id": 84}
{"model": "gpt-3.5-turbo", "message": "SELECT longitude, latitude FROM events WHERE toDate(timestamp) = '2016-04-30'", "sql_id": 87}
{"model": "gpt-3.5-turbo", "message": "SELECT T.gender\nFROM (\n    SELECT T1.gender, COUNT(T1.device_id) AS num\n    FROM gender_age AS T1\n    INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id\n    WHERE toDate(T2.timestamp) BETWEEN '2016-05-01' AND '2016-05-10'\n    GROUP BY T1.gender\n) AS T\nORDER BY T.num DESC\nLIMIT 1", "sql_id": 88}
{"model": "gpt-3.5-turbo", "message": "SELECT if(sum(if(T1.gender = 'M', 1, 0)) - sum(if(T1.gender = 'F', 1, 0)) > 0, 'M', 'F') AS gender\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.device_model = 'Galaxy Note 2'", "sql_id": 92}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    (sum(if(T2.gender = 'F', 1, 0)) * 100) / count(T2.device_id) AS perFemale,\n    (sum(if(T2.gender = 'M', 1, 0)) * 100) / count(T2.device_id) AS perMale\nFROM \n    phone_brand_device_model2 AS T1 \nINNER JOIN \n    gender_age AS T2 ON T2.device_id = T1.device_id\nWHERE \n    T1.phone_brand = 'OPPO'", "sql_id": 55}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    SUM(if(T1.category = '80s Japanese comic', 1, 0)) / COUNT(T1.label_id) AS J8,\n    SUM(if(T1.category = '90s Japanese comic', 1, 0)) / COUNT(T1.label_id) AS J9\nFROM \n    label_categories AS T1 \nINNER JOIN \n    app_labels AS T2 ON T1.label_id = T2.label_id", "sql_id": 68}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(T1.category = 'Academic Information', 1.0, 0)) / count(T2.app_id) AS per FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id", "sql_id": 93}
{"model": "gpt-3.5-turbo", "message": "SELECT game_name FROM game ORDER BY length(game_name) DESC LIMIT 1", "sql_id": 248}
{"model": "gpt-3.5-turbo", "message": "SELECT (toUInt32(toDateTime(EndDate)) / 86400 + 2440587.5) - (toUInt32(toDateTime(StartDate)) / 86400 + 2440587.5) AS days_difference\nFROM BillOfMaterials\nORDER BY days_difference DESC\nLIMIT 1", "sql_id": 508}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.CreditRating \nFROM ProductVendor AS T1 \nINNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE T1.StandardPrice = 18.9900 \nAND T1.AverageLeadTime = 16 \nAND formatDateTime(T1.LastReceiptDate, '%Y-%m-%d') = '2011-08-27'", "sql_id": 511}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(if(T1.ShipMethodID = 5, T3.OrderQty, 0)) AS Float64) / COUNT(T3.ProductID) FROM ShipMethod AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.ShipMethodID = T2.ShipMethodID INNER JOIN PurchaseOrderDetail AS T3 ON T2.PurchaseOrderID = T3.PurchaseOrderID", "sql_id": 512}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(T1.city = 'Bothell', 1, 0)) - sum(if(T1.city = 'Kenmore', 1, 0)), stateprovincecode\nFROM Address AS T1\nINNER JOIN StateProvince AS T2 ON T1.stateprovinceid = T2.stateprovinceid\nGROUP BY stateprovincecode", "sql_id": 513}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.ListPrice \nFROM Product AS T1 \nINNER JOIN ProductListPriceHistory AS T2 \nON T1.ProductID = T2.ProductID \nWHERE T1.ListPrice - T1.StandardCost > 21.9037 \nAND formatDateTime(T2.StartDate, '%Y-%m-%d') >= '2012-10-01'", "sql_id": 514}
{"model": "gpt-3.5-turbo", "message": "SELECT length(T2.PasswordHash) FROM Person AS T1 INNER JOIN Password AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Catherine' AND T1.LastName = 'Ward'", "sql_id": 515}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.TransactionType \nFROM TransactionHistory AS T1 \nINNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID \nWHERE T2.Name = 'HL Road Frame - Black, 48' \nAND formatDateTime(T1.TransactionDate, '%Y-%m-%d') = '2013-07-31'", "sql_id": 516}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.TransactionType \nFROM TransactionHistoryArchive AS T1 \nINNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID \nWHERE T2.Name = 'LL Road Handlebars' \nAND formatDateTime(T1.TransactionDate, '%Y-%m-%d') = '2012-11-03'", "sql_id": 517}
{"model": "gpt-3.5-turbo", "message": "SELECT BusinessEntityID \nFROM SalesPerson \nWHERE BusinessEntityID IN ( \n    SELECT BusinessEntityID \n    FROM SalesPersonQuotaHistory \n    WHERE formatDateTime(QuotaDate, '%Y') = '2013' \n) \nORDER BY toFloat32(SalesLastYear) / SalesQuota DESC \nLIMIT 1", "sql_id": 518}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'SP' AND substring(T1.HireDate, 1, 4) < '2010'", "sql_id": 519}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.BusinessEntityID, SUM(T1.SalesQuota)\nFROM SalesPerson AS T1\nINNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nWHERE formatDateTime(T2.QuotaDate, '%Y') = '2011'\nGROUP BY T1.BusinessEntityID\nORDER BY SUM(T1.SalesYTD) DESC\nLIMIT 1", "sql_id": 520}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.BusinessEntityID \nFROM SalesPerson AS T1 \nINNER JOIN SalesPersonQuotaHistory AS T2 \nON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE T1.TerritoryID = 1 \nAND formatDateTime(QuotaDate, '%Y') = '2013'", "sql_id": 521}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(T1.SalesQuota) \nFROM SalesPerson AS T1 \nINNER JOIN SalesPersonQuotaHistory AS T2 \nON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE T1.BusinessEntityID = 275 \nAND formatDateTime(QuotaDate, '%Y') = '2013'", "sql_id": 522}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.BusinessEntityID \nFROM SalesPerson AS T1 \nINNER JOIN SalesPersonQuotaHistory AS T2 \nON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE formatDateTime(T2.QuotaDate, '%Y') = '2013' \nAND T1.SalesQuota < T1.SalesLastYear", "sql_id": 523}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(T1.Bonus) AS sum_bonus, \n       sum(T1.Bonus) * 100 / sum(T1.SalesQuota) AS bonus_percentage\nFROM SalesPerson AS T1 \nINNER JOIN SalesPersonQuotaHistory AS T2 \nON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE toYear(T2.QuotaDate) = 2013", "sql_id": 524}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(BusinessEntityID) FROM Employee WHERE MaritalStatus = 'M' AND toYear(BirthDate) < 1960 AND Gender = 'M'", "sql_id": 526}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T3.Name) FROM Person AS T1 \nINNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID \nWHERE T1.FirstName = 'Sheela' AND T1.LastName = 'Word' \nAND formatDateTime(T3.ModifiedDate, '%Y') BETWEEN '2011' AND '2012'", "sql_id": 528}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(2009 - toYear(T2.BirthDate)) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'SP'", "sql_id": 529}
{"model": "gpt-3.5-turbo", "message": "SELECT 2015 - toYear(T1.BirthDate), T2.Rate\nFROM Employee AS T1\nINNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nWHERE T1.JobTitle = 'Marketing Specialist'\nORDER BY 2015 - toYear(T1.BirthDate) DESC\nLIMIT 1", "sql_id": 530}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.FirstName, T2.MiddleName, T2.LastName \nFROM Employee AS T1 \nINNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nORDER BY toDate(formatDateTime(T1.HireDate, '%Y')) - toDate(formatDateTime(T1.BirthDate, '%Y')) DESC \nLIMIT 1, 1", "sql_id": 533}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.FirstName, T1.LastName \nFROM Person AS T1 \nINNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE toYear(T2.HireDate) >= 2007 AND T2.SalariedFlag = 1", "sql_id": 534}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.FirstName, T1.LastName \nFROM Person AS T1 \nINNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID \nINNER JOIN Department AS T4 ON T3.DepartmentID = T4.DepartmentID \nWHERE formatDateTime(toDateTime(T2.HireDate), '%Y') = '2009' \nAND T4.Name = 'Shipping and Receiving'", "sql_id": 536}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Name, T3.Name \nFROM Product AS T1 \nINNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID \nINNER JOIN Vendor AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID \nWHERE formatDateTime(T1.SellStartDate, '%Y') = '2013'", "sql_id": 539}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.FirstName, T2.LastName \nFROM Employee AS T1 \nINNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE toYear(T1.BirthDate) > 1970 \nORDER BY T1.SickLeaveHours \nLIMIT 1", "sql_id": 540}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.StartTime, T3.EndTime \nFROM Employee AS T1 \nINNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN Shift AS T3 ON T2.ShiftID = T3.ShiftID \nWHERE toYear(T1.BirthDate) < 1969 \nORDER BY T1.BirthDate \nLIMIT 5, 1", "sql_id": 543}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.EndDate \nFROM Employee AS T1 \nINNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID \nWHERE T1.JobTitle = 'Senior Tool Designer' \nAND toYear(T1.HireDate) - toYear(T1.BirthDate) = 33 \nAND T2.EndDate IS NOT NULL", "sql_id": 544}
{"model": "gpt-3.5-turbo", "message": "SELECT PersonType \nFROM Employee AS T1 \nINNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE T1.Gender = 'F' \nAND T1.MaritalStatus = 'S' \nAND formatDateTime(T1.HireDate, '%Y-%m-%d') BETWEEN '2008-01-01' AND '2008-12-31' \nGROUP BY T2.PersonType \nORDER BY count(T2.PersonType) DESC \nLIMIT 1", "sql_id": 546}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) \nFROM Person AS T1 \nINNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID \nWHERE T3.Name = 'Engineering' \nAND toYear(T2.EndDate) > 2009 \nAND toYear(T2.StartDate) < 2009", "sql_id": 547}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) \nFROM EmployeeDepartmentHistory AS T1 \nINNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID \nWHERE T2.GroupName = 'Quality Assurance' \nAND formatDateTime(T1.StartDate, '%Y') = '2007'", "sql_id": 549}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(365 * (toYear(T1.EndDate) - toYear(T1.StartDate)) + 30 * (toMonth(T1.EndDate) - toMonth(T1.StartDate)) + toDayOfMonth(T1.EndDate) - toDayOfMonth(T1.StartDate)) AS Float64) / COUNT(T1.BusinessEntityID)\nFROM EmployeeDepartmentHistory AS T1\nINNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID\nWHERE T2.Name = 'Engineering' AND T1.EndDate IS NOT NULL", "sql_id": 550}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T3.Rate) \nFROM EmployeeDepartmentHistory AS T1 \nINNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID \nINNER JOIN EmployeePayHistory AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID \nWHERE T2.Name = 'Engineering' \nAND toYear(EndDate) > 2007 \nAND toYear(T1.StartDate) < 2007", "sql_id": 551}
{"model": "gpt-3.5-turbo", "message": "SELECT 365 * (toYear(ActualEndDate) - toYear(ActualStartDate)) + 30 * (toMonth(ActualEndDate) - toMonth(ActualStartDate)) + toDayOfMonth(ActualEndDate) - toDayOfMonth(ActualStartDate) FROM WorkOrderRouting WHERE WorkOrderID = 425", "sql_id": 552}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.Language = 'English', 1, 0)) AS Float64) * 100) / COUNT(T1.Code)\nFROM Country AS T1\nINNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode", "sql_id": 559}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(if(T2.Language = 'English', 1, 0)) AS Float64) * 100) / COUNT(T1.Code)\nFROM Country AS T1\nINNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode\nWHERE T1.GNP > 1500", "sql_id": 560}
{"model": "gpt-3.5-turbo", "message": "SELECT (sum(if(T2.Language = 'Chinese', T1.SurfaceArea, 0)) / sum(T1.SurfaceArea)) * 100\nFROM Country AS T1\nINNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode", "sql_id": 561}

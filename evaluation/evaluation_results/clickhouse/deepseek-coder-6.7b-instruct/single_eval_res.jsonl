{"sql_id": 216, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 50\n Code: 50. DB::Exception: Unknown data type family: FLOAT64. Maybe you meant: ['Float64','Float32']: In scope SELECT (CAST(SUM(multiIf(substring('Last Updated', -4) > '2018', 1, 0)), 'FLOAT64') * 100) / COUNT(App) AS PER FROM playstore WHERE (Type = 'Free') AND (Rating >= 4.5). (UNKNOWN_TYPE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 249, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Proceedings of the International IFIP-IEEE Conference on Broadband Communications, Global Infrastructure for the Information Age',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Proceedings of the International IFIP-IEEE Conference on Broadband Communications, Global Infrastructure for the Information Age',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 357, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 358, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 359, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 624, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement for Clickhouse would be:\n```sql\nSELECT max(T2.max_temperature_f) \nFROM trip AS T1 \nINNER JOIN weather AS T2 ON (T2.zip_code = CAST(. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 628, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2014',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal type String of argument of function toYear. Should be Date, Date32, DateTime or DateTime64: In scope SELECT toString(date) FROM weather GROUP BY toYear(date) ORDER BY sum(if((events LIKE '%Rain%') OR (events LIKE '%rain%'), 1, 0)) DESC LIMIT 1. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 629, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('San Jose Diridon Caltrain Station', '8/6/2013', 'San Jose'), ('San Jose Civic Center', '8/5/2013', 'San Jose'), ('Santa Clara at Almaden', '8/6/2013', 'San Jose'), ('Adobe on Almaden', '8/5/2013', 'San Jose'), ('San Pedro Square', '8/7/2013', 'San Jose'), ('Paseo de San Antonio', '8/7/2013', 'San Jose'), ('San Salvador at 1st', '8/5/2013', 'San Jose'), ('Japantown', '8/5/2013', 'San Jose'), ('San Jose City Hall', '8/6/2013', 'San Jose'), ('MLK Library', '8/6/2013', 'San Jose'), ('SJSU 4th at San Carlos', '8/7/2013', 'San Jose'), ('St James Park', '8/6/2013', 'San Jose'), ('Arena Green / SAP Center', '8/5/2013', 'San Jose'), ('SJSU - San Salvador at 9th', '8/7/2013', 'San Jose'), ('Franklin at Maple', '8/12/2013', 'Redwood City'), ('Redwood City Caltrain Station', '8/15/2013', 'Redwood City'), ('San Mateo County Center', '8/15/2013', 'Redwood City'), ('Redwood City Public Library', '8/12/2013', 'Redwood City'), ('Stanford in Redwood City', '8/12/2013', 'Redwood City'), ('Redwood City Medical Center', '8/12/2013', 'Redwood City'), ('Mountain View City Hall', '8/16/2013', 'Mountain View'), ('Mountain View Caltrain Station', '8/15/2013', 'Mountain View'), ('San Antonio Caltrain Station', '8/15/2013', 'Mountain View'), ('Evelyn Park and Ride', '8/16/2013', 'Mountain View'), ('San Antonio Shopping Center', '12/31/2013', 'Mountain View'), ('Castro Street and El Camino Real', '12/31/2013', 'Mountain View'), ('Rengstorff Avenue / California Street', '8/16/2013', 'Mountain View'), ('Palo Alto Caltrain Station', '8/14/2013', 'Palo Alto'), ('University and Emerson', '8/15/2013', 'Palo Alto'), ('California Ave Caltrain Station', '8/14/2013', 'Palo Alto'), ('Cowper at University', '8/14/2013', 'Palo Alto'), ('Park at Olive', '8/14/2013', 'Palo Alto'), ('Powell Street BART', '8/25/2013', 'San Francisco'), ('Clay at Battery', '8/19/2013', 'San Francisco'), ('Davis at Jackson', '8/19/2013', 'San Francisco'), ('Commercial at Montgomery', '8/19/2013', 'San Francisco'), ('Washington at Kearney', '8/19/2013', 'San Francisco'), ('Post at Kearney', '8/19/2013', 'San Francisco'), ('Embarcadero at Vallejo', '8/19/2013', 'San Francisco'), ('Spear at Folsom', '8/20/2013', 'San Francisco'), ('Harry Bridges Plaza (Ferry Building)', '8/20/2013', 'San Francisco'), ('Embarcadero at Folsom', '8/20/2013', 'San Francisco'), ('Embarcadero at Bryant', '8/20/2013', 'San Francisco'), ('Temporary Transbay Terminal (Howard at Beale)', '8/20/2013', 'San Francisco'), ('Beale at Market', '8/20/2013', 'San Francisco'), ('5th at Howard', '8/21/2013', 'San Francisco'), ('San Francisco City Hall', '8/21/2013', 'San Francisco'), ('Golden Gate at Polk', '8/21/2013', 'San Francisco'), ('Embarcadero at Sansome', '8/21/2013', 'San Francisco'), ('2nd at Townsend', '8/22/2013', 'San Francisco'), ('2nd at Folsom', '8/22/2013', 'San Francisco'), ('Howard at 2nd', '8/22/2013', 'San Francisco'), ('2nd at South Park', '8/22/2013', 'San Francisco'), ('Townsend at 7th', '8/22/2013', 'San Francisco'), ('South Van Ness at Market', '8/23/2013', 'San Francisco'), ('Market at 10th', '8/23/2013', 'San Francisco'), ('Yerba Buena Center of the Arts (3rd @ Howard)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain 2 (330 Townsend)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain (Townsend at 4th)', '8/23/2013', 'San Francisco'), ('Powell at Post (Union Square)', '8/23/2013', 'San Francisco'), ('Civic Center BART (7th at Market)', '8/23/2013', 'San Francisco'), ('Grant Avenue at Columbus Avenue', '8/21/2013', 'San Francisco'), ('Steuart at Market', '8/25/2013', 'San Francisco'), ('Mechanics Plaza (Market at Battery)', '8/25/2013', 'San Francisco'), ('Market at 4th', '8/25/2013', 'San Francisco'), ('Market at Sansome', '8/25/2013', 'San Francisco'), ('Santa Clara County Civic Center', '12/31/2013', 'San Jose'))", "rowcount": 67, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('San Jose Diridon Caltrain Station', '8/6/2013', 'San Jose'), ('San Jose Civic Center', '8/5/2013', 'San Jose'), ('Santa Clara at Almaden', '8/6/2013', 'San Jose'), ('Adobe on Almaden', '8/5/2013', 'San Jose'), ('San Pedro Square', '8/7/2013', 'San Jose'), ('Paseo de San Antonio', '8/7/2013', 'San Jose'), ('San Salvador at 1st', '8/5/2013', 'San Jose'), ('Japantown', '8/5/2013', 'San Jose'), ('San Jose City Hall', '8/6/2013', 'San Jose'), ('MLK Library', '8/6/2013', 'San Jose'), ('SJSU 4th at San Carlos', '8/7/2013', 'San Jose'), ('St James Park', '8/6/2013', 'San Jose'), ('Arena Green / SAP Center', '8/5/2013', 'San Jose'), ('SJSU - San Salvador at 9th', '8/7/2013', 'San Jose'), ('Franklin at Maple', '8/12/2013', 'Redwood City'), ('Redwood City Caltrain Station', '8/15/2013', 'Redwood City'), ('San Mateo County Center', '8/15/2013', 'Redwood City'), ('Redwood City Public Library', '8/12/2013', 'Redwood City'), ('Stanford in Redwood City', '8/12/2013', 'Redwood City'), ('Redwood City Medical Center', '8/12/2013', 'Redwood City'), ('Mountain View City Hall', '8/16/2013', 'Mountain View'), ('Mountain View Caltrain Station', '8/15/2013', 'Mountain View'), ('San Antonio Caltrain Station', '8/15/2013', 'Mountain View'), ('Evelyn Park and Ride', '8/16/2013', 'Mountain View'), ('San Antonio Shopping Center', '12/31/2013', 'Mountain View'), ('Castro Street and El Camino Real', '12/31/2013', 'Mountain View'), ('Rengstorff Avenue / California Street', '8/16/2013', 'Mountain View'), ('Palo Alto Caltrain Station', '8/14/2013', 'Palo Alto'), ('University and Emerson', '8/15/2013', 'Palo Alto'), ('California Ave Caltrain Station', '8/14/2013', 'Palo Alto'), ('Cowper at University', '8/14/2013', 'Palo Alto'), ('Park at Olive', '8/14/2013', 'Palo Alto'), ('Powell Street BART', '8/25/2013', 'San Francisco'), ('Clay at Battery', '8/19/2013', 'San Francisco'), ('Davis at Jackson', '8/19/2013', 'San Francisco'), ('Commercial at Montgomery', '8/19/2013', 'San Francisco'), ('Washington at Kearney', '8/19/2013', 'San Francisco'), ('Post at Kearney', '8/19/2013', 'San Francisco'), ('Embarcadero at Vallejo', '8/19/2013', 'San Francisco'), ('Spear at Folsom', '8/20/2013', 'San Francisco'), ('Harry Bridges Plaza (Ferry Building)', '8/20/2013', 'San Francisco'), ('Embarcadero at Folsom', '8/20/2013', 'San Francisco'), ('Embarcadero at Bryant', '8/20/2013', 'San Francisco'), ('Temporary Transbay Terminal (Howard at Beale)', '8/20/2013', 'San Francisco'), ('Beale at Market', '8/20/2013', 'San Francisco'), ('5th at Howard', '8/21/2013', 'San Francisco'), ('San Francisco City Hall', '8/21/2013', 'San Francisco'), ('Golden Gate at Polk', '8/21/2013', 'San Francisco'), ('Embarcadero at Sansome', '8/21/2013', 'San Francisco'), ('2nd at Townsend', '8/22/2013', 'San Francisco'), ('2nd at Folsom', '8/22/2013', 'San Francisco'), ('Howard at 2nd', '8/22/2013', 'San Francisco'), ('2nd at South Park', '8/22/2013', 'San Francisco'), ('Townsend at 7th', '8/22/2013', 'San Francisco'), ('South Van Ness at Market', '8/23/2013', 'San Francisco'), ('Market at 10th', '8/23/2013', 'San Francisco'), ('Yerba Buena Center of the Arts (3rd @ Howard)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain 2 (330 Townsend)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain (Townsend at 4th)', '8/23/2013', 'San Francisco'), ('Powell at Post (Union Square)', '8/23/2013', 'San Francisco'), ('Civic Center BART (7th at Market)', '8/23/2013', 'San Francisco'), ('Grant Avenue at Columbus Avenue', '8/21/2013', 'San Francisco'), ('Steuart at Market', '8/25/2013', 'San Francisco'), ('Mechanics Plaza (Market at Battery)', '8/25/2013', 'San Francisco'), ('Market at 4th', '8/25/2013', 'San Francisco'), ('Market at Sansome', '8/25/2013', 'San Francisco'), ('Santa Clara County Civic Center', '12/31/2013', 'San Jose'))", "rowcount": 67, "error_message": "None", "exec_able": true}}, "TP": 5, "FP": 4, "FN": 0}
{"sql_id": 634, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement from SQLite to ClickHouse would be as follows:\n\n```sql\nSELECT SUM(CASE WHEN city = 'San Francisco' AND substr(installation_date, -4. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 636, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((327,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement in Clickhouse would be: \n\n```sql\nSELECT SUM(IF(start_station_id = end_station_id, 1, 0)) FROM trip\n```\n\n FORMAT Native. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 639, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 361 ('')\n```\n\n FORMAT Native') (line 4, col 302): ')\n```\n\n FORMAT Native. Single quoted string is not closed: '')\n```\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 3, "FP": 4, "FN": 0}
{"sql_id": 640, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The equivalent ClickHouse query would be as follows:\n\n```sql\nSELECT SUM(IF(zip_code = '94107' AND date = '2013-08-29', mean_temperature_f, 0)) FROM weather\n```\n. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 641, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement from sqlite to clickhouse would be: \n```sql\nSELECT SUM(IIF(zip_code = '94107' AND date = '2013-08-29', max_temperature_f - min_temp. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 643, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `IIF` does not exist. In scope SELECT SUM(IIF((zip_code = '94041') AND (events = 'Rain'), 1, 0)) FROM weather. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 644, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 138 ('', dock_count, 0)) AS NUM FROM station\n```\n\nNote that the date format in `installation_date` column is not compatible with ClickHouse. You might need to adjust it accordingly. Also note that string comparison (like city) works fine if the case of letters is same but for numeric calculations, you may want to convert it to DateTime type or equivalent types.\n\n FORMAT Native') (line 4, col 72): ', dock_count, 0)) AS NUM FROM station\n```\n\nNote that the date format in `installation_date` column is not compatible with ClickHouse. You might need to adjust . Single quoted string is not closed: '', dock_count, 0)) AS NUM FROM station\n```\n\nNote that the date format in `installation_date` column is not compatible with ClickHouse. You might need to adjust it accordingly. Also note that string comparison (like city) works fine if the case of letters is same but for numeric calculations, you may want to convert it to DateTime type or equivalent types.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 645, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((23.333333333333332, 20.0, 16.11111111111111), (25.555555555555554, 20.555555555555554, 15.555555555555555), (21.666666666666668, 17.77777777777778, 13.88888888888889))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 247 ('=') (line 6, col 44): = '8' AND substr(toString(date), -4) = '2013' AND zip_code = 94107\n\n FORMAT Native. Expected one of: token, OpeningRoundBracket, FILTER, RESPECT NULLS, IGNORE NULLS, OVER, Comma. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 646, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((inf,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 3, "FN": 0}
{"sql_id": 627, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1',), ('Ryland Park',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 558\n Code: 558. DB::Exception: Expected ALL or DISTINCT in SelectWithUnion query, because setting (union_default_mode) is empty: While processing SELECT SUM(IF((city = 'San Jose') AND (right(installation_date, 4) = '2014'), 1, 0)) FROM station UNION SELECT name FROM station WHERE (city = 'San Jose') AND (right(installation_date, 4) = '2014') FORMAT Native. (EXPECTED_ALL_OR_DISTINCT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 394, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Consider the Lilies',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Consider the Lilies',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 395, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 396, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 397, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((57.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((57.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 398, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((25.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((25.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 399, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Illuminati', 'Thomas Nelson'), ('The Season: A Candid Look at Broadway', 'Limelight'), ('Working Effectively with Legacy Code', 'Prentice Hall'), ('Programming in C', 'Sams'), (\"PHP and MySQL Web Development (Developer's Library)\", 'Sams'), (\"The Bonesetter's Daughter\", 'Harper Perennial'), ('Naked Empire (Sword of Truth  #8)', 'Voyager'), ('The Real Trial of Oscar Wilde', 'Harper Perennial'), ('The Opposite of Fate', 'Harper Perennial'), ('Wild Swans: Three Daughters of China', 'Harper Perennial'), ('Reading Lolita in Tehran', 'Fourth Estate'), ('Where Rainbows End', 'HarperCollins'), ('The Known World', 'Harper Perennial'), ('Going Postal (Discworld  #33)', 'Harper'), ('After', 'HarperTeen'), ('Barracuda 945 (Admiral Arnold Morgan  #6)', 'HarperTorch'), ('Behaving Like Adults', 'William Morrow Paperbacks'), ('Letters from the Earth: Uncensored Writings', 'Harper Perennial Modern Classics'), ('Murder Unleashed (Jack and Jamie #2)', 'Avon Books'), ('To Collar a Killer (Jack and Jamie #3)', 'Avon'), ('A Faint Cold Fear (Grant County  #3)', 'Harper'), ('City of the Beasts (Eagle and Jaguar  #1)', 'Rayo'), ('Brave New World and Brave New World Revisited', 'HarperCollins'), ('How to Make Love Like a Porn Star: A Cautionary Tale', 'It Books'), ('1421: The Year China Discovered America', 'Harper Perennial (NYC)'), ('Nimitz Class (Admiral Arnold Morgan  #1)', 'Harper Paperbacks'), ('Built to Last: Successful Habits of Visionary Companies', 'Harper Business'), ('Fluke: Or  I Know Why the Winged Whale Sings', 'Harper'), ('The Perennial Philosophy', 'Harper Perennial Modern Classics'), ('Dead Witch Walking (The Hollows  #1)', 'HarperTorch'), ('Sabriel (Abhorsen  #1)', 'Eos'), ('Slider', 'It Books'), ('The Way the Crow Flies', 'Harper Perennial'), ('Great Short Works of Herman Melville', 'Harper Perennial Modern Classics'), ('El reino del drag\u00f3n de oro', 'HarperCollins Espanol'), ('Quicksilver (The Baroque Cycle  #1)', 'HarperCollins Perennial'), ('Beautiful Boys (Weetzie Bat  #4-5)', 'HarperTeen'), (\"Since You're Leaving Anyway  Take Out the Trash (Domestic Equalizers #1)\", 'Avon'), ('Outposts: Journeys to the Surviving Relics of the British Empire', 'Harper Perennial'), ('Darkest Hour (The Mediator  #4)', 'HarperCollins'), ('Great Short Works of Fyodor Dostoevsky', 'Harper Perennial Modern Classics'), ('The Collected Letters of C.S. Lewis  Volume 1: Family Letters  1905-1931', 'HarperOne'), ('Bloodsucking Fiends (A Love Story  #1)', 'HarperCollins'), ('Island of the Sequined Love Nun', 'Harper Perennial'), ('The Lust Lizard of Melancholy Cove (Pine Cove  #2)', 'William Morrow Paperbacks'), ('One Hundred Years of Solitude', 'Harper Perennial'), ('Wicked: The Life and Times of the Wicked Witch of the West', 'William Morrow Paperbacks'), ('This Rough Magic', 'HarperTorch'), ('Airs Above the Ground', 'HarperTorch'), ('The Known World', 'Harper'), ('One Hundred Years of Solitude', 'Harper'), ('Journey Into the Void (Sovereign Stone  #3)', 'Harper Voyager'), (\"Harrison's Principles of Internal Medicine\", 'McGraw-Hill Medical Publishing'), ('Advanced Statistics Demystified', 'McGraw-Hill Education'), ('Slim to None: A Journey Through the Wasteland of Anorexia Treatment', 'McGraw-Hill Education'), ('The Last Dance: Encountering Death and Dying', 'McGraw-Hill Humanities/Social Sciences/Languages'), ('The Toy Maker: The Life and Times of Inventor Frank Hornby', 'Ebury Press'), ('The Confessions of Nat Turner', 'Vintage Classics'), ('The Time of Our Singing', 'Vintage'), ('Blood Canticle (The Vampire Chronicles #10)', 'Arrow'), ('Like a Charm', 'Arrow'), ('Bringing Down The House', 'Arrow'), ('Earthly Powers', 'Vintage Classics'), ('The Witching Hour (Lives of the Mayfair Witches  #1)', 'Arrow'), ('Lasher (Lives of the Mayfair Witches  #2)', 'Arrow Books'), ('Women Who Love Too Much', 'Arrow'), ('Physics: for Scientists and Engineers with Modern Physics', 'Benjamin-Cummings Publishing Company'), ('Introduction to the Philosophies of Research and Criticism in Education and the Social Sciences', 'Pearson'), ('Criminal Investigation: The Art and the Science', 'Prentice Hall'), ('Java: An Introduction to Problem Solving and Programming', 'Prentice Hall'), ('The Normans in Sicily: The Normans in the South 1016-1130 and the Kingdom in the Sun 1130-1194', 'Penguin Global'), ('The Nibelungenlied', 'Penguin Classics'), ('Germinal', 'Penguin Classics'), ('Metamorphoses', 'Penguin'), ('Sentimental Education', 'Penguin Classics'), ('Dead Souls', 'Penguin Classics'), ('The Nicomachean Ethics', 'Penguin Classics'), ('The Teeth of the Tiger (Jack Ryan Universe  #12)', 'Penguin Books Ltd.'), ('Stiff: The Curious Lives of Human Cadavers', 'Penguin'), ('You Shall Know Our Velocity', 'Penguin'), ('Citizens: A Chronicle of the French Revolution', 'Penguin'), ('Drop City', 'Penguin Books'), ('Freedom Evolves', 'Penguin'), ('Lost in a Good Book (Thursday Next  #2)', 'Penguin Books'), ('River of Shadows: Eadweard Muybridge and the Technological Wild West', 'Penguin Books'), ('The Life of Graham Greene  Vol. 1: 1904-1939', 'Penguin Books'), ('Outcast of Redwall (Redwall  #8)', 'Firebird'), ('Triss (Redwall  #15)', 'Firebird'), ('In the Land of Time: And Other Fantasy Tales', 'Penguin Classics'), ('The Portable John Adams', 'Penguin Books'), ('Paris: After the Liberation 1944-1949', 'Penguin Books'), (\"Swann's Way (In Search of Lost Time  #1)\", 'Penguin Classics'), ('This Lullaby', 'Speak'), ('The Well of Lost Plots (Thursday Next #3)', 'Penguin Books'), ('Anna Karenina', 'Penguin Classics'), ('The Flanders Panel', 'Mariner Books'), ('The Seville Communion', 'Mariner Books'), ('The Liberated Bride', 'Mariner Books'), ('Life of Pi', 'Mariner Books / Harvest Books'), ('Pride and Prejudice', 'Oxford University Press'), ('Sense and Sensibility', 'Oxford University Press'), ('Purgatorio (La Divina Commedia #2)', 'Oxford University Press USA'), ('The Oresteia', 'Oxford University Press USA'), ('American Legal History: Cases and Materials', 'Oxford University Press USA'), ('Modern Latin America', 'Oxford University Press USA'), ('The Selected Journals Of L.M. Montgomery  Vol. 5: 1935-1942', 'Oxford University Press USA'), ('Infants  Children  and Adolescents (MyDevelopmentLab Series)', 'Allyn & Bacon'), ('The Plot Against America', 'Jonathan Cape'), ('Lost Prophet: The Life and Times of Bayard Rustin', 'University of Chicago Press'), ('Directing the Documentary', 'Focal Press'), ('Desde mi cielo', 'Debolsillo'), ('Breach of Promise', 'Zondervan'), (\"Moloka'i (Moloka'i #1)\", \"St. Martin's Griffin\"), ('The New York Times Guide to Essential Knowledge', \"St. Martin's Press\"), ('Something Borrowed (Darcy & Rachel  #1)', \"St. Martin's Press\"), (\"Marching Powder: A True Story of Friendship  Cocaine  and South America's Strangest Jail\", \"St. Martin's Griffin\"), ('All Things Wise and Wonderful', \"St. Martin's Griffin\"), ('Sideways', \"St. Martin's Griffin\"), ('Rereading America: Cultural Contexts for Critical Thinking and Writing', 'Bedford Books'), ('The Interpreter', 'St. Martins Press'), ('Galatea 2.2', 'Picador'), ('Mason & Dixon', 'Picador USA'), ('The River at the Center of the World: A Journey Up the Yangtze & Back in Chinese Time', 'Picador'), ('Primo Levi: A Life', 'Picador'), ('Dry', 'Picador USA'), ('A Home at the End of the World', 'Picador'), ('Faking It (Dempseys  #2)', \"St. Martin's Paperbacks\"), ('Welcome to Temptation (Dempseys  #1)', \"St. Martin's Paperbacks\"), ('Crazy For You', \"St. Martin's Paperbacks\"), ('Full Blast (Full #4)', \"St. Martin's Paperbacks\"), ('The Awakening (Vampire Huntress  #2)', \"St. Martin's Paperbacks\"), ('The Tristan Betrayal', \"St. Martin's Paperbacks\"), ('The Firefly', \"St. Martin's Paperbacks\"), ('As the Crow Flies', \"St. Martin's Paperbacks\"), ('The Lovely Bones', 'Back Bay Books'), ('An Unfinished Life: John F. Kennedy  1917-1963', 'Back Bay Books'), ('The Necessary Shakespeare', 'Longman Publishing Group'), ('Marching Powder', 'Pan MacMillan'), ('The Battle Of Corrin (Legends of Dune  #3)', 'Hodder & Stoughton Ltd'), ('The Dark Tower (The Dark Tower #7)', 'Hodder & Stoughton'), ('Girl Meets Ape', 'Coronet'), ('Rise to Rebellion', 'Ballantine Books'), ('Standing in the Rainbow (Elmwood Springs  #2)', 'Ballantine Books'), ('The Probable Future', 'Ballantine Books'), ('The Bloody Crown of Conan (Conan the Cimmerian  #2)', 'Del Rey Ballantine Random House'), (\"Dragon's Kin (Pern  #17)\", 'Del Rey'), ('Yoda: Dark Rendezvous', 'Del Rey'), ('The Hunchback of Notre-Dame', 'Modern Library'), ('We Were Soldiers Once... and Young: Ia Drang - The Battle that Changed the War in Vietnam', 'Presidio Press'), ('The Star Wars Trilogy', 'Del Rey'), ('The Guns of August', 'Ballantine Books'), ('The Fortunate Pilgrim', 'Ballantine Books'), ('Interview with the Vampire (The Vampire Chronicles  #1)', 'Ballantine Books'), ('The Vampire Lestat (The Vampire Chronicles  #2)', 'Ballantine Books'), ('Back When We Were Grownups', 'Ballantine Books'), ('Narrative of the Life of Frederick Douglass  an American Slave / Incidents in the Life of a Slave Girl', 'Modern Library'), ('Trump: The Art of the Deal', 'Ballantine Books'), ('Jennifer Government', 'Abacus'), ('Slightly Settled (Slightly  #2)', 'Red Dress Ink'), ('Monkey Business', 'Red Dress Ink'), (\"Girls' Night In\", 'Red Dress Ink'), ('Double-Cross (Athena Force #4)', 'Silhouette Bombshell'), (\"Elphame's Choice (Partholon  #4)\", 'Luna Books'), ('The Fairy Godmother (Five Hundred Kingdoms  #1)', 'Luna Books'), ('Sylvester', 'Harlequin'), ('Selected Verse', 'Farrar Straus and Giroux'), ('The Iliad', 'Farrar Straus and Giroux'), ('The Fixer', 'Farrar Straus and Giroux'), ('My Life', 'Knopf Publishing Group'), ('Sons of Mississippi: A Story of Race and Its Legacy', 'Vintage'), ('The Elegant Universe: Superstrings  Hidden Dimensions  and the Quest for the Ultimate Theory', 'Vintage Books USA'), ('The Adolescent', 'Vintage'), ('The Life and Opinions of Tristram Shandy  Gentleman', 'Modern Library'), ('Shutter Island', 'HarperTorch'), (\"Lamb: The Gospel According to Biff  Christ's Childhood Pal\", 'William Morrow / HarperCollins / Harper Perennial'), ('The Body in the Lighthouse', 'Avon'), ('The Cloud Atlas', 'Dial Press'), ('Coming of Age in Mississippi: The Classic Autobiography of a Young Black Girl in the Rural South', 'Delta'), ('A Painted House', 'Bantam'), ('Sailing the Wine-Dark Sea: Why the Greeks Matter', 'Anchor'), ('Good Faith', 'Anchor Books'), ('Will in the World: How Shakespeare Became Shakespeare', 'W.W. Norton & Company (NY/London)'), ('The Annotated Brothers Grimm', 'W. W. Norton Company'), ('The New Annotated Sherlock Holmes: The Complete Short Stories', 'W. W. Norton & Company'), ('The Complete Aubrey/Maturin Novels (5 Volumes)', 'W. W. Norton Company'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('Moneyball: The Art of Winning an Unfair Game', 'W. W. Norton Company'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('Paradise Lost', 'W. W. Norton & Company'), (\"Anton Chekhov's Selected Plays\", 'W. W. Norton & Company'), ('A History of Modern Europe  Volume 2: From the French Revolution to the Present', 'W. W. Norton & Company'), ('Madame Bovary (Critical Editions)', 'W.W. Norton & Company'), ('Raise the Titanic! (Dirk Pitt  #4)', \"G.P. Putnam's Sons\"), ('For Kicks', \"G.P. Putnam's Sons\"), ('Field of Thirteen', \"G.P. Putnam's Sons\"), ('The Bad Place', 'Berkley'), ('Wild Horses', \"G.P. Putnam's Sons\"), (\"Jane's Warlord (Warlord #1)\", 'Berkley Sensation'), ('Iceberg (Dirk Pitt  #3)', 'Berkley Books'), ('The Mediterranean Caper (Dirk Pitt  #2)', \"G.P. Putnam's Sons\"), ('10 lb Penalty', \"G.P. Putnam's Sons\"), ('Goddess of Spring (Goddess Summoning  #2)', 'Berkley Sensation'), ('Guilty Pleasures (Anita Blake  Vampire Hunter  #1)', 'Berkley'), (\"Death's Acre: Inside the Legendary Forensic Lab the Body Farm Where the Dead Do Tell Tales\", 'Berkley'), ('Blow Fly (Kay Scarpetta  #12)', 'Berkley'), ('Master of the Night (Mageverse #1)', 'Berkley Sensation'), (\"Wild Card (Tom Clancy's Power Plays  #8)\", 'Berkley'), ('Trojan Odyssey (Dirk Pitt  #17)', \"G.P. Putnam's Sons\"), ('Disordered Minds', 'Berkley'), ('Decider', \"G.P. Putnam's Sons\"), ('Murder on the Orient Express (Hercule Poirot  #10)', 'Berkley'), ('The Body Farm (Kay Scarpetta  #5)', 'Berkley'), (\"Splinter Cell (Tom Clancy's Splinter Cell  #1)\", 'Berkley'), ('Atlantis Found (Dirk Pitt  #15)', 'Berkley Trade'), ('Birds Without Wings', 'Secker'), ('Harry Potter and the Order of the Phoenix (Harry Potter  #5)', 'Scholastic Inc.'), ('Harry Potter and the Prisoner of Azkaban (Harry Potter  #3)', 'Scholastic Inc.'), ('Harry Potter Boxed Set  Books 1-5 (Harry Potter  #1-5)', 'Scholastic'), (\"Trickster's Choice (Daughter of the Lioness  #1)\", 'Scholastic Press'), ('Shopaholic Takes Manhattan (Shopaholic  #2)', 'Dell Publishing Company'), ('Shopaholic Ties the Knot (Shopaholic  #3)', 'Dell Publishing Company'), ('Masterpieces: The Best Science Fiction of the Twentieth Century', 'Ace Books'), ('Neuromancer', 'Ace'), ('The Big Bad Wolf  (Alex Cross  #9)', 'Grand Central Publishing'), ('Still Life With Crows (Pendergast  #4)', 'Grand Central Publishing'), ('Gloriana', 'Aspect'), ('Lost Boy Lost Girl', 'Ballantine Books'), ('No Second Chance', 'Dutton Books'), ('A Whole Lotta Love', 'Signet'), ('Night Over Water', 'NAL'), ('Monkeewrench (Monkeewrench  #1)', \"G.P. Putnam's Sons\"), (\"Mayada  Daughter of Iraq: One Woman's Survival Under Saddam Hussein\", 'Berkley Books'), ('The Agony and the Ecstasy: A Biographical Novel of Michelangelo', 'NAL'), ('Four Past Midnight', 'Signet'), ('The Anodyne Necklace (Richard Jury  #3)', 'Onyx'), ('The Dirty Duck (Richard Jury  #4)', 'Onyx'), ('Jerusalem Inn (Richard Jury  #5)', 'Onyx'), ('Wuthering Heights', 'Signet Classics'), ('Little Women', 'Signet Classics'), ('The Sea-Wolf and Selected Stories', 'Signet Classics'), ('Travels of Marco Polo', 'Signet'), ('Lies & the Lying Liars Who Tell Them: A Fair & Balanced Look at the Right', 'Plume Books'), ('Stolen (Women of the Otherworld  #2)', 'Plume'), ('Bitten (Otherworld  #1)', 'Plume Books'), ('Atlas Shrugged', 'NAL'), ('Astronomy: A Self-Teaching Guide', 'John Wiley & Sons'), ('The Philosophy of History', 'Dover Publications'), ('Anna Karenina', 'Dover Publications'), ('Love Bites (Argeneau #2)', 'Love Spell'), (\"Aphrodite's Flame (Superhero Central #4)\", 'Love Spell'), ('Cerulean Sins (Anita Blake  Vampire Hunter  #11)', 'Berkley Books'), ('After Glow (Ghost Hunters  #2)', 'Jove Books'), ('Cravings (Undead #1.5 Moon #3.5)', 'Berkley Books'), ('Sunshine', 'Jove'), ('Bite (Anita Blake  Vampire Hunter  #8.5 Sookie Stackhouse  #5.1 Undead  #2.5 Mageverse  #1.5)', 'Jove'), ('The Shell Seekers', 'Gramercy Books'), ('A History of God: The 4 000-Year Quest of Judaism  Christianity  and Islam', 'Gramercy Books'), ('Pathologies of Power: Health  Human Rights and the New War on the Poor', 'University of California Press'), ('A First Course in String Theory', 'Cambridge University Press'), ('Data Structures and Algorithms in C++', 'Course Technology'), ('Deception Point', 'Corgi Books'), ('Not Without My Daughter', 'Transworld Publishers Ltd'), ('Inferno', 'Bantam Books'), ('Purgatorio (The Divine Comedy  #2)', 'Bantam Books'), ('Light (Kefahuchi Tract  #1)', 'Spectra'), ('The Face', 'Bantam'), ('The Murder Stone', 'Bantam'), ('Dime Store Magic (Women of the Otherworld  #3)', 'Bantam Spectra'), ('Industrial Magic (Women of the Otherworld #4)', 'Bantam Spectra'), ('Beach Girls', 'Bantam'), ('Foundation and Earth (Foundation #5)', 'Spectra'), ('The Devil in the White City: Murder  Magic and Madness at the Fair that Changed America', 'Bantam Press'), ('The Kid Stays in the Picture', 'Faber & Faber'), ('The Avignon Quintet: Monsieur  Livia  Constance  Sebastian and Quinx', 'Faber & Faber'), ('High Performance MySQL: Optimization  Backups  Replication & Load Balancing', \"O'Reilly Media\"), ('BSD Hacks', \"O'Reilly Media\"), ('iMovie 4 & iDVD: The Missing Manual: The Missing Manual', 'Pogue Press'), ('Rising Sun', 'Turtleback Books'), (\"Charlie Wilson's War: The Extraordinary Story of the Largest Cover Operation in History\", 'Turtleback Books'), ('Queen of Scots: The True Life of Mary Stuart', 'Houghton Mifflin'), ('The Best American Mystery Stories 2004', 'Mariner Books'), ('The Best American Nonrequired Reading 2004', 'Houghton Mifflin'), ('The Silmarillion', 'Houghton Mifflin Company'), ('The Earth and Its Peoples: A Global History  Volume C: Since 1750', 'Cengage Learning'), ('Fabulous Small Jews', 'Mariner Books'), ('Reefer Madness: Sex  Drugs  and Cheap Labor in the American Black Market', 'Mariner Books'), ('Dark Star Safari: Overland from Cairo to Cape Town', 'Mariner Books'), ('Natural Health  Natural Medicine', 'Mariner Books'), ('The Lord of the Rings (The Lord of the Rings  #1-3)', 'Houghton Mifflin Harcourt'), ('The Fellowship of the Ring (The Lord of the Rings  #1)', 'Houghton Mifflin Company'), ('In the Shadow of Young Girls in Flower (In Search of Lost Time  #2)', 'Viking Adult'), ('How to Stop Worrying and Start Living', 'Gallery Books'), ('Sharp Edges', 'Pocket Star Books'), ('Four & Twenty Blackbirds (Bardic Voices  #4)', 'Baen Books'), ('Sonnets', 'Simon Schuster'), ('The Color Purple', 'Pocket'), ('What Is Ancient Philosophy?', 'Belknap Press'), ('Magic Circles: The Beatles in Dream and History', 'Harvard University Press'), ('The Killer Angels: A Novel of the Civil War (The Civil War Trilogy  #2)', 'Modern Library'), ('The Collected Autobiographies of Maya Angelou', 'Modern Library'), ('Mortals', 'Vintage'), (\"Mary Stewart's Merlin Trilogy (Arthurian Saga  #1-3)\", 'Harper Voyager'), ('Nancy Drew: Girl Detective: #1-4', 'Aladdin'), ('Walden', 'Princeton University Press'), ('Shamanism: Archaic Techniques of Ecstasy', 'Princeton University Press'), ('Mary Queen of Scots and the Murder of Lord Darnley', 'Pimlico'), ('Robbins and Cotran Review of Pathology', 'Saunders'), ('Hell House', 'Severn House Publishers'), ('Code Complete', 'Microsoft Press'), (\"Zolar's Encyclopedia and Dictionary of Dreams: Fully Revised and Updated for the 21st Century\", 'Atria Books'), ('Authentic Happiness: Using the New Positive Psychology to Realize Your Potential for Lasting Fulfillment', 'Atria Books'), ('Brick Lane', 'Scribner'), (\"Will You Miss Me When I'm Gone? The Carter Family and Their Legacy in American Music\", 'Simon Schuster'), ('Wrapped in Rainbows: The Life of Zora Neale Hurston', 'Scribner'), ('Plan of Attack', 'Simon & Schuster'), ('Frankenstein', 'Kaplan Publishing'), ('The Path Between the Seas: The Creation of the Panama Canal  1870-1914', 'Simon Schuster'), ('The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change', 'Free Press'), ('The Other Boleyn Girl', 'Atria Books'), ('The Good Earth (House of Earth  #1)', 'Washington Square Press'), ('Plain Truth', 'Atria Books'), ('The Coffin Dancer (Lincoln Rhyme  #2)', 'Simon & Schuster'), ('The Second Time Around', 'Pocket Books'), ('Nighttime Is My Time', 'Simon & Schuster Adult Publishing Group'), ('Black Cat (Gemini  #2)', 'Pocket Books'), ('The Vanished Man (Lincoln Rhyme  #5)', 'Pocket Books'), ('The Footprints of God', 'Pocket Star Books'), ('The Price of Pleasure (Sutherland Brothers  #2)', 'Pocket Books'), ('Dead I Well May Be (Dead Trilogy #1)', 'Pocket Books'), ('Romeo and Juliet', 'Simon Schuster'), ('Othello', 'Simon Schuster'), ('Underworld: Blood Enemy (Underworld  #2)', 'Pocket Star'), ('King Lear', 'Simon Schuster'), ('Othello', 'Simon Schuster'), ('Richard III', 'Simon Schuster'), ('Easy Prey (Lucas Davenport  #11)', 'Simon & Schuster'), ('Certain Prey (Lucas Davenport  #10)', 'Simon & Schuster'), ('Henry V', 'Washington Square Press'), ('The Count of Monte Cristo', 'Simon Schuster'), ('The Scarlet Letter', 'Simon & Schuster'), ('Frankenstein  or the Modern Prometheus', 'Pocket Books'), ('A Tale of Two Cities', 'Simon Schuster'), ('The Awakening and Selected Stories', 'Simon Schuster'), ('The Scarlet Pimpernel', 'Simon Schuster'), ('Twisted: The Collected Short Stories', 'Pocket Books'), ('Dracula', 'Walker Books Ltd'), ('To the Nines (Stephanie Plum  #9)', \"St. Martin's Press\"), ('The Dream Kingdom (The Morland Dynasty  #26)', 'Little Brown Book Group'), ('The Bourne Ultimatum (Jason Bourne  #3)', 'Orion'), ('The Icarus Agenda', 'Orion Books'), ('Trevayne', 'Orion'), ('The Shadow of the Wind', 'Phoenix'), ('The Jester', 'Headline'), ('Falling for You', 'Headline Review'), ('Joust (Dragon Jousters  #1)', 'DAW'), ('The War of the Flowers', 'DAW'), (\"Exile's Valor (Heralds of Valdemar  #7)\", 'DAW'), ('The DC Comics Encyclopedia', 'DK Publishing'), ('Lemon Meringue Pie Murder (Hannah Swensen  #4)', 'Kensington'), ('Corvette: Fifty Years', 'Motorbooks'), ('PHP and MySQL for Dummies', 'For Dummies'), ('ebay Timesaving Techniques for Dummies', 'Wiley'), ('Starting an eBay Business for Dummies', 'Wiley'), ('Dreamer of Dune: The Biography of Frank Herbert', 'Tor Books'), ('Maps in a Mirror: The Short Fiction of Orson Scott Card', 'Orb Books'), ('Sleeping in Flame (Answered Prayers  #2)', 'Orb Books'), ('Wasteland of Flint', 'Tor Books'), ('Naked Empire (Sword of Truth  #8)', 'Tor Books'), ('Wolfskin (Saga of the Light Isles  #1)', 'Tor Books'), ('New Threads in the Pattern: The Great Hunt  Part 2 (Wheel of Time  #2-2)', 'Starscape'), ('A Short History of Nearly Everything', 'Broadway Books'), ('Babyville', 'Broadway Books'), ('The Full Matilda', 'Broadway Books'), ('Holy Cow: An Indian Adventure', 'Broadway Books'), ('The Prize (deWarenne Dynasty  #4)', 'Mira Books'), ('Marvels', 'Marvel Comics Group'), ('Essential Monster of Frankenstein  Vol. 1', 'Marvel Comics'), ('The Origin of Species', 'Castle Books'), ('Island Of Bones (Louis Kincaid  #5)', 'Pinnacle'), ('The Mammoth Book of Storms  Shipwrecks and Sea Disasters', 'Running Press'), ('Summerland', 'Miramax'), ('The Legend of Huma (Dragonlance: Heroes  #1)', 'Wizards of the Coast'), ('Time of the Twins (Dragonlance: Legends  #1)', 'Wizards of the Coast'), ('The Search for Power (Dragonlance: Tales from the War of Souls  #3)', 'Wizards of the Coast'), ('Night of Blood (Dragonlance: The Minotaur Wars  #1)', 'Wizards of the Coast'), ('Dragons in the Archives: The Best of Weis & Hickman (Dragonlance Anthology)', 'Wizards of the Coast'), ('In Focus: National Geographic Greatest Portraits', 'National Geographic Society'), ('Cruelest Journey: Six Hundred Miles To Timbuktu', 'National Geographic Society'), ('The Odyssey (New Translations from Antiquity)', 'Johns Hopkins University Press'), (\"Charlie Wilson's War: The Extraordinary Story of How the Wildest Man in Congress and a Rogue CIA Agent Changed the History of our Times\", 'Grove Press'), ('Monster: The Autobiography of an L.A. Gang Member', 'Grove Press'), ('Layer Cake', 'Grove Press Black Cat'), ('The Second World War: A Complete History', 'Holt McDougal'), (\"Hegemony or Survival: America's Quest for Global Dominance\", 'Holt McDougal'), ('The Origins of Totalitarianism', 'Schocken Books'), ('Once Upon a Gulf Coast Summer', 'B Fiction'), ('Anna Karenina', 'Wildside Press'), ('Drum Into Silence (Drums of Chaos  #3)', 'Tor Fantasy'), ('The Scientists: A History of Science Told Through the Lives of Its Greatest Inventors', 'Random House Trade Paperbacks'), ('The Birth of Venus', 'Random House'), ('The Knight of Maison-Rouge', 'Modern Library'), ('Selected Stories', 'Modern Library'), ('Kim', 'Modern Library'), ('The Red and the Black', 'Modern Library'), ('The Mysterious Island (Extraordinary Voyages  #12)', 'Modern Library'), ('Mountains Beyond Mountains: The Quest of Dr. Paul Farmer  a Man Who Would Cure the World', 'Random House Trade'), ('Filth: Dirt  Disgust  and Modern Life', 'Univ Of Minnesota Press'), ('Weekend Warriors (Sisterhood  #1)', 'Kensington'), ('See How She Dies', 'Zebra Books'), ('Courageous Faith Through the Year', 'IVP Books'), ('Rejoice (Redemption  #4)', 'Tyndale House Publishers'), ('Reunion (Redemption  #5)', 'Tyndale House Publishers'), ('Sweet Revenge', 'Leisure Books'), ('The Deed (Deed  #1)', 'Leisure Books'), ('Nightmare House (Harrow House  #1)', 'Leisure Books'), ('The Chase (Deed  #3)', 'Leisure Books'), ('Blood Moon Over Bengal', 'Leisure Books'), ('History of Beauty', 'Rizzoli'), ('Blink', 'Thomas Nelson'), ('Tuscan Countess: The Life and Extraordinary Times of Matilda of Canossa', 'Vendome Press'), ('Republic', 'Hackett Publishing Company Inc.'), ('The St. Paul Stories of F. Scott Fitzgerald', 'Minnesota Historical Society Press'), (\"A Gateway to Sindarin: A Grammar of an Elvish Language from J.R.R. Tolkien's Lord of the Rings\", 'University of Utah Press'), ('Harpo Speaks!', 'Limelight Editions'), ('Bioinformatics: Sequence and Genome Analysis', 'Cold Spring Harbor Laboratory Press'), ('The Elements of Typographic Style', 'Hartley & Marks Publishers'), ('The Complete I Ching: The Definitive Translation', 'Inner Traditions International'), ('The Criss Cross', 'Melodrama Publishing'), (\"Programming Ruby: The Pragmatic Programmers' Guide\", 'Pragmatic Bookshelf'), ('Plants and Landscapes for Summer-Dry Climates of the San Francisco Bay Region', 'East Bay Municipal Utility District'), ('Natural Cures \"They\" Don\\'t Want You to Know about', 'Alliance Publishing'), ('The Dogs of Riga (Kurt Wallander  #2)', 'Vintage Crime/Black Lizard'), ('The Secret History', 'Vintage'), ('Beloved', 'Vintage'), ('Song of Solomon', 'Vintage'), ('Tar Baby', 'Vintage'), ('Providence of a Sparrow: Lessons from a Life Gone to the Birds', 'Anchor'), ('Living to Tell the Tale', 'Vintage'), (\"Lidia's Family Table\", 'Knopf Publishing Group'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", \"Everyman's Library\"), ('The Plague  The Fall  Exile and the Kingdom  and Selected Essays', \"Everyman's Library\"), ('Runaway', 'Alfred A. Knopf'), ('Dead Souls', \"Everyman's Library\"), (\"The Last Hours of Ancient Sunlight: The Fate of the World and What We Can Do Before It's Too Late\", 'Broadway Books'), (\"FDR's Folly: How Roosevelt and His New Deal Prolonged the Great Depression\", 'Crown Forum'), ('Titan: The Life of John D. Rockefeller  Sr.', 'Vintage'), ('The Filth', 'Vertigo'), ('On the Road to Perdition \u2014 Oasis  Sanctuary  and Detour \u2014 (Road to Perdition  #2)', 'DC Comics'), ('Pledged: The Secret Life of Sororities', 'Hyperion'), ('Scar Tissue', 'Hachette Books'), ('Feast: Food to Celebrate Life', 'Hachette Books'), (\"Jamie's Dinners: The Essential Family Cookbook\", 'Hachette Books'), ('Illustrated Guide to the NEC: Based on the 2005 National Electric Code', 'Cengage Learning'), ('Little Women (Little Women  #1)', 'Sterling'), (\"Kushiel's Avatar (Ph\u00e8dre's Trilogy  #3)\", 'Tor'), ('The English Novel: An Introduction', 'Wiley-Blackwell'), ('The Radical Right & the Murder of John F. Kennedy: Stunning Evidence in the Assassination of the President', 'Trafford Publishing'), ('The Best Short Stories of Edith Wharton', 'Kessinger Publishing'), ('Katherine', 'Chicago Review Press'), (\"Not Your Mother's Slow Cooker Cookbook\", 'Harvard Common Press'), ('The Mother', 'Moyer Bell and its subsidiaries'), ('Kinfolk', 'Moyer Bell and its subsidiaries'), ('Expelled from Eden: A William T. Vollmann Reader', 'Da Capo Press'), ('Enslaved by Ducks', 'Algonquin Books'), ('On Genesis/A Refutation of the Manichees/The Unfinished Literal Meaning of Genesis (Works of St Augustine 1)', 'New City Press'), ('Selected Poems of Herman Melville', 'David R. Godine Publisher'), ('Africa South of the Sahara: A Geographical Interpretation (Texts In Regional Geography)', 'The Guilford Press'), ('The Story of Philosophy', 'AudioGO'), ('The Letters of Vita Sackville-West and Virginia Woolf', 'Cleis Press'), ('1000 Rings: Inspiring Adornments for the Hand', 'Lark Books'), ('Prophet', 'Crossway Books'), ('Chop Shop (Bug Man  #2)', 'Howard Books'), ('The Stones of Summer', 'Overlook Press'), ('Cocktail Time', 'Harry N. Abrams'), ('Piccadilly Jim', 'Harry N. Abrams'), ('The Big Book of Boy Stuff', 'Gibbs Smith Publishers'), (\"Heart & Hands: A Midwife's Guide to Pregnancy & Birth\", 'Celestial Arts'), (\"The Music of the Republic: Essays on Socrates' Conversations and Plato's Writings\", 'Paul Dry Books'), ('Open Secrets / Inward Prospects: Reflections on World and Soul', 'Paul Dry Books'), ('The Ivory Tower', 'NYRB Classics'), ('The Wave in the Mind: Talks and Essays on the Writer  the Reader and the Imagination', 'Shambhala'), ('A Guide to the Words of My Perfect Teacher', 'Shambhala'), ('Joel on Software', 'Apress'), ('Tuf Voyaging', 'Meisha Merlin Publishing'), ('The Brothers Karamazov', 'Barnes Noble Classics'), ('The Idiot', 'Barnes Noble Classics'), ('Essential Tales and Poems', 'Barnes Noble Classics'), ('The Portrait of a Lady', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('A Tale of Two Cities', 'Barnes & Noble Classics'), ('The Three Musketeers', 'Barnes Noble Classics'), ('The House of Mirth', 'Barnes Noble Classics'), ('Anna Karenina', 'Barnes & Noble'), ('Oliver Twist', 'Barnes Noble Classics'), ('Pride and Prejudice', 'Barnes Noble Classics'), ('A Tale of Two Cities', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('Write Great Code: Volume 1: Understanding the Machine', 'No Starch Press'), ('The Nature of Play: Great Apes and Humans', 'The Guilford Press'), ('The Lovely Bones', 'Large Print Press'), ('The Zanzibar Chest', 'Riverhead Books'), (\"The Magicians' Guild (Black Magician Trilogy  #1)\", 'Orbit'), ('The Novice (Black Magician Trilogy  #2)', 'Orbit'), ('The High Lord (Black Magician Trilogy  #3)', 'Orbit'), ('Desiring God: Meditations of a Christian Hedonist', 'Inter-Varsity Press'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", 'Random House'), ('Architecture and Tourism: Perception  Performance and Place', 'Bloomsbury Academic'), ('Watchfiends and Rack Screams: Works from the Final Period', 'Exact Change'), (\"Harrington on Hold 'em: Expert Strategy for No-Limit Tournaments  Volume I: Strategic Play\", 'Two Plus Two Publishing LLC'), ('Her Smoke Rose Up Forever', 'Tachyon Publications'), (\"The Devil's in the Details (A Camilla MacPhee Mystery  #4)\", 'Napoleon and Co'), ('Judas Pig', 'Do-Not Press'), ('Little Women', \"Collector's Library\"), ('Collected Stories I: Gimpel the Fool to The Letter Writer', 'Library of America'), ('Collected Stories III: One Night in Brazil to The Death of Methuselah', 'Library of America'), (\"McSweeney's #14\", \"McSweeney's\"), ('Think and Grow Rich', 'High Roads Media'), ('Under the Influence: The Disinformation Guide to Drugs', 'The Disinformation Company (NYC)'), ('\u041c\u0430\u0441\u0442\u0435\u0440 \u0438 \u041c\u0430\u0440\u0433\u0430\u0440\u0438\u0442\u0430', '\u042d\u043a\u0441\u043c\u043e'), ('El club Dante', 'Seix Barral'), ('Ahora sabr\u00e9is lo que es correr', 'Mondadori'), ('El hombre duplicado', 'Punto de Lectura'), ('El azul de la virgen', 'Punto de Lectura'), ('Harry Potter y la Orden del F\u00e9nix (Harry Potter  #5)', 'Emece Editores'), ('El umbral de la noche', 'Debolsillo'), ('O Xar\u00e1', 'Companhia das Letras'), ('Narraciones Extraordinarias', 'Panamericana Editorial'), ('Zaat', 'American University in Cairo Press'))", "rowcount": 528, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 809 ('' condition translates to WHERE dateYear(T1.publication_date) = 2004 in ClickHouse.\n\n FORMAT Native') (line 9, col 212): ' condition translates to WHERE dateYear(T1.publication_date) = 2004 in ClickHouse.\n\n FORMAT Native. Single quoted string is not closed: '' condition translates to WHERE dateYear(T1.publication_date) = 2004 in ClickHouse.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 400, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Saints',), ('Lovelock (Mayflower Trilogy  #1)',), ('Legends',), ('Sarah (Women of Genesis  #1)',), ('Shadow of the Hegemon (The Shadow Series  #2)',), ('How to Write Science Fiction & Fantasy',), (\"X\u00e9nocide (Ender's Saga  #3)\",))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `dateYear` does not exist. In scope SELECT T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON (T1.book_id = T2.book_id) AND (T2.author_id IN (SELECT author_id FROM author WHERE author_name = 'Orson Scott Card')) WHERE dateYear(T1.publication_date) = 2001. Maybe you meant: ['toYear','DAYOFYEAR']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 401, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 402, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 403, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((25.260960334029228,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((25.260960334029228,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 404, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2020',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2020,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 405, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Witness for the Prosecution and Selected Plays',), ('She Came to Stay',), ('The Collection: The Outsiders / Rumble Fish / That Was Then  This Is Now',), ('The Love of the Last Tycoon',), ('Heart Songs and Other Stories',), ('Reason in History',), ('Tyranny of the Majority: Fundamental Fairness in Representative Democracy',), ('Mrs. Piggle-Wiggle Treasury (Mrs. Piggle Wiggle  #1-2  #4)',), ('Embracing the Love of God: The Path and Promise of Christian Life',), ('Cathedral  Forge  and Waterwheel: Technology and Invention in the Middle Ages',), (\"Laura Ingalls Wilder Country: The People and places in Laura Ingalls Wilder's life and books\",), ('Imajica: The Reconciliation',), ('The Pilgrimage: A Contemporary Quest for Ancient Wisdom',), ('Betsy and Joe (Betsy-Tacy  #8)',), ('Betsy Was a Junior (Betsy-Tacy  #7)',), ('Crazy Lady!',), ('Seven Spiders Spinning (The Hamlet Chronicles  #1)',), ('American Dragons: Twenty-five Asian American Voices',), ('Winter Days in the Big Woods',), ('The Professor of Desire',), ('The Rings of Saturn',), ('Slow Learner: Early Stories',), (\"Midnight's Children\",), ('Five Patients',), (\"Love's Executioner  And Other Tales Of Psychotherapy\",), ('The Assault',), (\"The Monkey's Wrench\",), ('Six Characters in Search of an Author and Other Plays',), ('Harvesting the Heart',), ('The Basketball Diaries',), ('The Making of Pride and Prejudice',), ('Great Expectations',), ('Anne Frank Beyond the Diary: A Photographic Remembrance',), ('Oddballs',), ('What is Art?',), ('The Railway Children',), ('Billy Budd  Sailor',), ('Fire: From A Journal of Love - The Unexpurgated Diary of Ana\u00efs Nin (1934-1937)',), ('How to Travel with a Salmon and Other Essays',), ('The Metamorphoses of Ovid',), ('Winterdance: The Fine Madness of Running the Iditarod',), ('Roald Dahl: A Biography',), ('This Is the Way the World Ends',), ('View With a Grain of Sand: Selected Poems',), (\"Paul Revere's Ride\",), ('Justice Oliver Wendell Holmes: Law and the Inner Self',), ('Aristophanes and Athens: An Introduction to the Plays',), ('The Mythical Man-Month: Essays on Software Engineering',), ('Bengal Nights',), ('A Dance to the Music of Time: 1st Movement (A Dance to the Music of Time  #1-3)',), ('A Dance to the Music of Time: 2nd Movement (A Dance to the Music of Time  #4-6)',), ('A Dance to the Music of Time: 3rd Movement (A Dance to the Music of Time  #7-9)',), ('A Dance to the Music of Time: 4th Movement (A Dance to the Music of Time  #10-12)',), (\"Dante's Inferno\",), ('The Shaping of America: A Geographical Perspective on 500 Years of History: Volume 2: Continental America  1800-1867',), (\"White Man's Grave\",), ('Isak Dinesen: The Life of a Storyteller',), ('The Wild Shore (Three Californias Triptych  #1)',), ('The Gold Coast (Three Californias Triptych  #2)',), ('Pacific Edge (Three Californias Triptych  #3)',), ('Earthborn (Homecoming Saga #5)',), ('The Edge of Honor',), (\"The Scold's Bridle\",), ('Rose in Bloom (Eight Cousins  #2)',), ('Cry to Heaven',), ('The Vampire Companion',), ('The Shockwave Rider',), ('The Age of Extremes: The Short Twentieth Century  1914-1991',), ('P.S. I Love You (Sealed with a Kiss #4)',), ('First Love  Second Chance',), ('The Night of Wishes',), ('The Sixteen Pleasures',), ('Running from Safety: An Adventure of the Spirit',), (\"Black Holes & Time Warps: Einstein's Outrageous Legacy\",), ('Excellence',), ('Frankenstein',), ('Jesus the Son of Man',), (\"Revenge of the Lawn / The Abortion / So the Wind Won't Blow it All Away\",), ('The Old Way of Seeing: How Architecture Lost Its Magic - And How to Get It Back',), (\"McNally's Caper (Archy McNally  #4)\",), ('The Key to Midnight',), ('Debt of Honor (Jack Ryan  #7)',), ('A Pinch of Poison (Hemlock Falls Mysteries  #3)',), ('Escape from Fire Mountain (World of Adventure  #3)',), ('A Ring of Endless Light (Austin Family  #4)',), ('Fantastic Alice',), ('Nothing Lasts Forever',), ('Prime Time',), ('Death of a Charming Man (Hamish Macbeth  #10)',), ('Season of the Machete',), ('Charade',), ('Night Train to Memphis (Vicky Bliss  #5)',), (\"Fannie Flagg's Original Whistle Stop Cafe Cookbook\",), ('Four Past Midnight: Featuring \"The Langoliers\"',), ('Nightfall',), ('Angel Christmas',), ('The Forest House (Avalon  #2)',), ('Here I Stand: A Life of Martin Luther',), ('The Armies of the Night: History as a Novel  the Novel as History',), ('Holiday Romance and Other Writings for Children',), ('Extraordinary Popular Delusions and the Madness of Crowds/Confusi\u00f3n de Confusiones (Marketplace Book)',), ('The Oil Jar and Other Stories',), ('The Birth of Tragedy',), ('Arms and Armor: A Pictorial Archive from Nineteenth-Century Sources',), ('Three Complete Xanth Novels (Xanth  #1-3)',), ('Children of the Thunder / The Tides of Time / The Crucible of Time',), (\"Cat's Cradle/God Bless You Mr. Rosewater/Breakfast of Champions\",), ('Setting Free the Bears / The Water-Method Man / The 158-Pound Marriage',), ('The Complete Novels',), ('Fine Lines (One-Eyed Mack  #6)',), ('Of Love and Other Demons',), ('The Orion Mystery: Unlocking the Secrets of the Pyramids',), (\"Foucault's Virginity: Ancient Erotic Fiction & the History of Sexuality (Stanford Memorial Lecture)\",), ('The New Knighthood: A History of the Order of the Temple',), ('The Hot Zone: The Chilling True Story of an Ebola Outbreak',), ('Feersum Endjinn',), ('Judge Dredd (Audio Cassette)',), ('The Celestine Prophecy: An Experiential Guide',), ('I. Asimov',), (\"Heaven's Price\",), ('Lords of the Sky',), ('The Seventh Gate (The Death Gate Cycle  #7)',), (\"Finnegan's Week\",), ('Lines and Shadows',), (\"The Goon Show  Volume 11: He's Fallen in the Water!\",), ('The Last Temptation',), ('If I Die In A Combat Zone',), ('How Much is That Guinea Pig in the Window?',), ('The Leader In You: How to Win Friends  Influence People and Succeed in a Changing World',), ('Sahara (Dirk Pitt  #11)',), ('Star Trek: Logs 7-10',), ('A Place Where the Sea Remembers',), ('New Worlds  Ancient Texts: The Power of Tradition and the Shock of Discovery',), ('The Roman Empire',), ('Children of Heracles / Hippolytus / Andromache / Hecuba',), ('The Divine Comedy',), ('Rabbit Angstrom: The Four Novels',), ('Cancer Ward',), ('The Great American Novel',), ('Democracy',), ('A Book of Common Prayer',), ('The Death of Virgil',), ('The Son Avenger (The Master of Hestviken  #4)',), ('Open Secrets',), (\"The Reed Cutter & Captain Shigemoto's Mother\",), ('When She Was Good',), ('Quicksand',), (\"In Pharaoh's Army: Memories of the Lost War\",), ('The Makioka Sisters',), ('Blues for Mister Charlie',), ('Going to Meet the Man',), ('Aman: The Story of a Somali Girl',), ('Three Plays: Desire Under the Elms / Strange Interlude / Mourning Becomes Electra',), (\"Corelli's Mandolin\",), ('Resistance  Rebellion and Death: Essays',), ('Selected Stories',), ('Les Miserables (Stepping Stones)',), ('Daisy-Head Mayzie',), ('A Frolic of His Own',), ('The Great Gatsby',), ('A Life in Letters',), ('The Pat Hobby Stories',), ('No Ordinary Time: Franklin and Eleanor Roosevelt: The Home Front in World War II',), ('Achilles in Vietnam: Combat Trauma and the Undoing of Character',), ('The Reawakening',), ('Survival in Auschwitz',), ('Trapped in the Mirror: Adult Children of Narcissists in Their Struggle for Self',), ('Julius  the Baby of the World',), ('The Fourth of July Story',), ('Come a Stranger (Tillerman Cycle  #5)',), ('The Moon Lady',), ('Unpainted to the Last: \"Moby Dick\" and Twentieth-century American Art',), ('Mondrian',), ('The Painter of Modern Life and Other Essays (Phaidon Arts and Letters)',), ('Red Phoenix',), ('Different Seasons',), (\"The Wealthy Barber: Everyone's Common-Sense Guide to Becoming Financially Independent\",), ('Something Borrowed',), ('Bad Dreams',), ('Sparrow Hawk Red',), ('Love',), ('Bob Marley - Songs of Freedom',), ('Lectures on the History of Philosophy 1: Greek Philosophy to Plato',), ('The Complete Stories',), ('The Forgotten',), ('Anti-Semite and Jew: An Exploration of the Etiology of Hate',), ('The Trial of God: (as it was held on February 25  1649  in Shamgorod)',), ('The Complete Stories',), ('Warfare in the Classical World: An Illustrated Encyclopedia of Weapons  Warriors  and Warfare in the Ancient Civilizations of Greece and Rome',), (\"The Last Book of Swords: Shieldbreaker's Story (Lost Swords  #8)\",), ('Lord of Chaos (The Wheel of Time  #6)',), ('The Ships of Earth (Homecoming Saga #3)',), ('Harpy Thyme (Xanth #17)',), ('Geis of the Gargoyle (Xanth #18)',), ('The Little Baby Snoogle-Fleejer',), ('Practice! Practice!: A Latin Via Ovid Workbook',), ('You Can Never Go Home Again',), ('The Camera (Ansel Adams Photography  #1)',), ('The Negative (Ansel Adams Photography  #2)',), ('The Print (Ansel Adams Photography  #3)',), ('Six Degrees of Separation',), ('Cigarettes Are Sublime',), ('The Calvin and Hobbes Tenth Anniversary Book',), (\"Romanee Conti: The World's Most Fabled Wine\",), ('Moon in a Dewdrop: Writings of Zen Master Dogen',), ('Fire in the Sky (Diadem: Shadowsong  #1)',), ('Storm Warning (Valdemar: Mage Storms #1)',), ('Walking the Rez Road',), ('Dalit: The Black Untaouchables of India',), ('Ghosts of Gettysburg III: Spirits  Apparitions  and Haunted Places of the Battlefield',), ('Novels and Stories',), ('The Ethics of Rhetoric',), ('Pyramids of Montauk: Explorations in Consciousness',), (\"Cook's Illustrated 1995 (Cook's Illustrated Annuals)\",), ('When the World Was Steady',), ('From Far Away',), ('The Belly of Paris (Les Rougon-Macquart  #3)',), ('Keeping Faith: Memoirs of a President',), ('Intimate Communion: Awakening Your Sexual Essence',), ('East Wind: West Wind',), ('A Guided Tour of 5 Works by Plato: Euthyphro/Apology/Crito/Phaedo/Cave',), (\"Meditations for Manifesting: Morning and Evening Meditations to Literally Create Your Heart's Desire\",), ('The Mystery Play',), ('Prince of the City',), ('Lies My Teacher Told Me: Everything Your History Textbook Got Wrong',), ('World War 3 Illustrated: Confrontational Comics',), ('Arcadia',), ('The Azathoth Cycle: Tales of the Blind Idiot God',), ('The Return of Lum  Volume 1: Urusei Yatsura (Urusei Yatsura  #2)',), ('Gunslinger and Nine Other Action-Packed Stories of the Wild West',), ('Desolation Angels',), ('The Western Canon: The Books and School of the Ages',), ('Illuminata: A Return to Prayer',), ('Fantastic Mr. Fox (Cover to Cover)',), ('One Hundred Years Of Solitude',), ('The Bridge over the Drina',), ('The Transit of Venus',), ('Collected Poems  Prose  and Plays',), ('Stories and Early Novels: Pulp Stories / The Big Sleep / Farewell  My Lovely / The High Window',), ('Later Novels and Other Writings: The Lady in the Lake / The Little Sister / The Long Goodbye / Playback / Double Indemnity (screenplay) / Selected Essays and Letters',), (\"Edward Lear's Book of Nonsense: With Lear's Original Illustrations\",), ('En attendant Godot',), ('Premi\u00e8res Histoires',), ('The Art of Richard P. Feynman',), ('April  May und June',), ('Homo faber: Ein Bericht.',), ('La m\u00e1quina de follar',), ('El Hotel New Hampshire',), ('Relato de Um N\u00e1ufrago',))", "rowcount": 249, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Witness for the Prosecution and Selected Plays',), ('She Came to Stay',), ('The Collection: The Outsiders / Rumble Fish / That Was Then  This Is Now',), ('The Love of the Last Tycoon',), ('Heart Songs and Other Stories',), ('Reason in History',), ('Tyranny of the Majority: Fundamental Fairness in Representative Democracy',), ('Mrs. Piggle-Wiggle Treasury (Mrs. Piggle Wiggle  #1-2  #4)',), ('Embracing the Love of God: The Path and Promise of Christian Life',), ('Cathedral  Forge  and Waterwheel: Technology and Invention in the Middle Ages',), (\"Laura Ingalls Wilder Country: The People and places in Laura Ingalls Wilder's life and books\",), ('Imajica: The Reconciliation',), ('The Pilgrimage: A Contemporary Quest for Ancient Wisdom',), ('Betsy and Joe (Betsy-Tacy  #8)',), ('Betsy Was a Junior (Betsy-Tacy  #7)',), ('Crazy Lady!',), ('Seven Spiders Spinning (The Hamlet Chronicles  #1)',), ('American Dragons: Twenty-five Asian American Voices',), ('Winter Days in the Big Woods',), ('The Professor of Desire',), ('The Rings of Saturn',), ('Slow Learner: Early Stories',), (\"Midnight's Children\",), ('Five Patients',), (\"Love's Executioner  And Other Tales Of Psychotherapy\",), ('The Assault',), (\"The Monkey's Wrench\",), ('Six Characters in Search of an Author and Other Plays',), ('Harvesting the Heart',), ('The Basketball Diaries',), ('The Making of Pride and Prejudice',), ('Great Expectations',), ('Anne Frank Beyond the Diary: A Photographic Remembrance',), ('Oddballs',), ('What is Art?',), ('The Railway Children',), ('Billy Budd  Sailor',), ('Fire: From A Journal of Love - The Unexpurgated Diary of Ana\u00efs Nin (1934-1937)',), ('How to Travel with a Salmon and Other Essays',), ('The Metamorphoses of Ovid',), ('Winterdance: The Fine Madness of Running the Iditarod',), ('Roald Dahl: A Biography',), ('This Is the Way the World Ends',), ('View With a Grain of Sand: Selected Poems',), (\"Paul Revere's Ride\",), ('Justice Oliver Wendell Holmes: Law and the Inner Self',), ('Aristophanes and Athens: An Introduction to the Plays',), ('The Mythical Man-Month: Essays on Software Engineering',), ('Bengal Nights',), ('A Dance to the Music of Time: 1st Movement (A Dance to the Music of Time  #1-3)',), ('A Dance to the Music of Time: 2nd Movement (A Dance to the Music of Time  #4-6)',), ('A Dance to the Music of Time: 3rd Movement (A Dance to the Music of Time  #7-9)',), ('A Dance to the Music of Time: 4th Movement (A Dance to the Music of Time  #10-12)',), (\"Dante's Inferno\",), ('The Shaping of America: A Geographical Perspective on 500 Years of History: Volume 2: Continental America  1800-1867',), (\"White Man's Grave\",), ('Isak Dinesen: The Life of a Storyteller',), ('The Wild Shore (Three Californias Triptych  #1)',), ('The Gold Coast (Three Californias Triptych  #2)',), ('Pacific Edge (Three Californias Triptych  #3)',), ('Earthborn (Homecoming Saga #5)',), ('The Edge of Honor',), (\"The Scold's Bridle\",), ('Rose in Bloom (Eight Cousins  #2)',), ('Cry to Heaven',), ('The Vampire Companion',), ('The Shockwave Rider',), ('The Age of Extremes: The Short Twentieth Century  1914-1991',), ('P.S. I Love You (Sealed with a Kiss #4)',), ('First Love  Second Chance',), ('The Night of Wishes',), ('The Sixteen Pleasures',), ('Running from Safety: An Adventure of the Spirit',), (\"Black Holes & Time Warps: Einstein's Outrageous Legacy\",), ('Excellence',), ('Frankenstein',), ('Jesus the Son of Man',), (\"Revenge of the Lawn / The Abortion / So the Wind Won't Blow it All Away\",), ('The Old Way of Seeing: How Architecture Lost Its Magic - And How to Get It Back',), (\"McNally's Caper (Archy McNally  #4)\",), ('The Key to Midnight',), ('Debt of Honor (Jack Ryan  #7)',), ('A Pinch of Poison (Hemlock Falls Mysteries  #3)',), ('Escape from Fire Mountain (World of Adventure  #3)',), ('A Ring of Endless Light (Austin Family  #4)',), ('Fantastic Alice',), ('Nothing Lasts Forever',), ('Prime Time',), ('Death of a Charming Man (Hamish Macbeth  #10)',), ('Season of the Machete',), ('Charade',), ('Night Train to Memphis (Vicky Bliss  #5)',), (\"Fannie Flagg's Original Whistle Stop Cafe Cookbook\",), ('Four Past Midnight: Featuring \"The Langoliers\"',), ('Nightfall',), ('Angel Christmas',), ('The Forest House (Avalon  #2)',), ('Here I Stand: A Life of Martin Luther',), ('The Armies of the Night: History as a Novel  the Novel as History',), ('Holiday Romance and Other Writings for Children',), ('Extraordinary Popular Delusions and the Madness of Crowds/Confusi\u00f3n de Confusiones (Marketplace Book)',), ('The Oil Jar and Other Stories',), ('The Birth of Tragedy',), ('Arms and Armor: A Pictorial Archive from Nineteenth-Century Sources',), ('Three Complete Xanth Novels (Xanth  #1-3)',), ('Children of the Thunder / The Tides of Time / The Crucible of Time',), (\"Cat's Cradle/God Bless You Mr. Rosewater/Breakfast of Champions\",), ('Setting Free the Bears / The Water-Method Man / The 158-Pound Marriage',), ('The Complete Novels',), ('Fine Lines (One-Eyed Mack  #6)',), ('Of Love and Other Demons',), ('The Orion Mystery: Unlocking the Secrets of the Pyramids',), (\"Foucault's Virginity: Ancient Erotic Fiction & the History of Sexuality (Stanford Memorial Lecture)\",), ('The New Knighthood: A History of the Order of the Temple',), ('The Hot Zone: The Chilling True Story of an Ebola Outbreak',), ('Feersum Endjinn',), ('Judge Dredd (Audio Cassette)',), ('The Celestine Prophecy: An Experiential Guide',), ('I. Asimov',), (\"Heaven's Price\",), ('Lords of the Sky',), ('The Seventh Gate (The Death Gate Cycle  #7)',), (\"Finnegan's Week\",), ('Lines and Shadows',), (\"The Goon Show  Volume 11: He's Fallen in the Water!\",), ('The Last Temptation',), ('If I Die In A Combat Zone',), ('How Much is That Guinea Pig in the Window?',), ('The Leader In You: How to Win Friends  Influence People and Succeed in a Changing World',), ('Sahara (Dirk Pitt  #11)',), ('Star Trek: Logs 7-10',), ('A Place Where the Sea Remembers',), ('New Worlds  Ancient Texts: The Power of Tradition and the Shock of Discovery',), ('The Roman Empire',), ('Children of Heracles / Hippolytus / Andromache / Hecuba',), ('The Divine Comedy',), ('Rabbit Angstrom: The Four Novels',), ('Cancer Ward',), ('The Great American Novel',), ('Democracy',), ('A Book of Common Prayer',), ('The Death of Virgil',), ('The Son Avenger (The Master of Hestviken  #4)',), ('Open Secrets',), (\"The Reed Cutter & Captain Shigemoto's Mother\",), ('When She Was Good',), ('Quicksand',), (\"In Pharaoh's Army: Memories of the Lost War\",), ('The Makioka Sisters',), ('Blues for Mister Charlie',), ('Going to Meet the Man',), ('Aman: The Story of a Somali Girl',), ('Three Plays: Desire Under the Elms / Strange Interlude / Mourning Becomes Electra',), (\"Corelli's Mandolin\",), ('Resistance  Rebellion and Death: Essays',), ('Selected Stories',), ('Les Miserables (Stepping Stones)',), ('Daisy-Head Mayzie',), ('A Frolic of His Own',), ('The Great Gatsby',), ('A Life in Letters',), ('The Pat Hobby Stories',), ('No Ordinary Time: Franklin and Eleanor Roosevelt: The Home Front in World War II',), ('Achilles in Vietnam: Combat Trauma and the Undoing of Character',), ('The Reawakening',), ('Survival in Auschwitz',), ('Trapped in the Mirror: Adult Children of Narcissists in Their Struggle for Self',), ('Julius  the Baby of the World',), ('The Fourth of July Story',), ('Come a Stranger (Tillerman Cycle  #5)',), ('The Moon Lady',), ('Unpainted to the Last: \"Moby Dick\" and Twentieth-century American Art',), ('Mondrian',), ('The Painter of Modern Life and Other Essays (Phaidon Arts and Letters)',), ('Red Phoenix',), ('Different Seasons',), (\"The Wealthy Barber: Everyone's Common-Sense Guide to Becoming Financially Independent\",), ('Something Borrowed',), ('Bad Dreams',), ('Sparrow Hawk Red',), ('Love',), ('Bob Marley - Songs of Freedom',), ('Lectures on the History of Philosophy 1: Greek Philosophy to Plato',), ('The Complete Stories',), ('The Forgotten',), ('Anti-Semite and Jew: An Exploration of the Etiology of Hate',), ('The Trial of God: (as it was held on February 25  1649  in Shamgorod)',), ('The Complete Stories',), ('Warfare in the Classical World: An Illustrated Encyclopedia of Weapons  Warriors  and Warfare in the Ancient Civilizations of Greece and Rome',), (\"The Last Book of Swords: Shieldbreaker's Story (Lost Swords  #8)\",), ('Lord of Chaos (The Wheel of Time  #6)',), ('The Ships of Earth (Homecoming Saga #3)',), ('Harpy Thyme (Xanth #17)',), ('Geis of the Gargoyle (Xanth #18)',), ('The Little Baby Snoogle-Fleejer',), ('Practice! Practice!: A Latin Via Ovid Workbook',), ('You Can Never Go Home Again',), ('The Camera (Ansel Adams Photography  #1)',), ('The Negative (Ansel Adams Photography  #2)',), ('The Print (Ansel Adams Photography  #3)',), ('Six Degrees of Separation',), ('Cigarettes Are Sublime',), ('The Calvin and Hobbes Tenth Anniversary Book',), (\"Romanee Conti: The World's Most Fabled Wine\",), ('Moon in a Dewdrop: Writings of Zen Master Dogen',), ('Fire in the Sky (Diadem: Shadowsong  #1)',), ('Storm Warning (Valdemar: Mage Storms #1)',), ('Walking the Rez Road',), ('Dalit: The Black Untaouchables of India',), ('Ghosts of Gettysburg III: Spirits  Apparitions  and Haunted Places of the Battlefield',), ('Novels and Stories',), ('The Ethics of Rhetoric',), ('Pyramids of Montauk: Explorations in Consciousness',), (\"Cook's Illustrated 1995 (Cook's Illustrated Annuals)\",), ('When the World Was Steady',), ('From Far Away',), ('The Belly of Paris (Les Rougon-Macquart  #3)',), ('Keeping Faith: Memoirs of a President',), ('Intimate Communion: Awakening Your Sexual Essence',), ('East Wind: West Wind',), ('A Guided Tour of 5 Works by Plato: Euthyphro/Apology/Crito/Phaedo/Cave',), (\"Meditations for Manifesting: Morning and Evening Meditations to Literally Create Your Heart's Desire\",), ('The Mystery Play',), ('Prince of the City',), ('Lies My Teacher Told Me: Everything Your History Textbook Got Wrong',), ('World War 3 Illustrated: Confrontational Comics',), ('Arcadia',), ('The Azathoth Cycle: Tales of the Blind Idiot God',), ('The Return of Lum  Volume 1: Urusei Yatsura (Urusei Yatsura  #2)',), ('Gunslinger and Nine Other Action-Packed Stories of the Wild West',), ('Desolation Angels',), ('The Western Canon: The Books and School of the Ages',), ('Illuminata: A Return to Prayer',), ('Fantastic Mr. Fox (Cover to Cover)',), ('One Hundred Years Of Solitude',), ('The Bridge over the Drina',), ('The Transit of Venus',), ('Collected Poems  Prose  and Plays',), ('Stories and Early Novels: Pulp Stories / The Big Sleep / Farewell  My Lovely / The High Window',), ('Later Novels and Other Writings: The Lady in the Lake / The Little Sister / The Long Goodbye / Playback / Double Indemnity (screenplay) / Selected Essays and Letters',), (\"Edward Lear's Book of Nonsense: With Lear's Original Illustrations\",), ('En attendant Godot',), ('Premi\u00e8res Histoires',), ('The Art of Richard P. Feynman',), ('April  May und June',), ('Homo faber: Ein Bericht.',), ('La m\u00e1quina de follar',), ('El Hotel New Hampshire',), ('Relato de Um N\u00e1ufrago',))", "rowcount": 249, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 406, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('amazonaws.com',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('To') (line 1, col 1): To translate the SQL statement from sqlite to clickhouse, you can use the `substring()` function instead of `SUBSTR()` and the `position()` function for finding. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 407, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT count() FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE (T1.status_value = 'Returned') AND (toYYYYString(T2.status_date) = '2020'). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 408, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toDate64` does not exist. In scope SELECT toDate64('%J', T2.status_date) - toDate64('%J', T1.order_date) FROM cust_order AS T1 INNER JOIN order_history AS T2 ON T1.order_id = T2.order_id WHERE T1.order_id = 2398. Maybe you meant: ['toDate','toDate32']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 409, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 410, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 448 ('\\xe2') (line 6, col 83): \u2019s STRFTIME with '%Y'. The COUNT(*) is also the same across both databases. \n\nPlease replace `toYear(T2.status_date)=2022` if your ClickHouse and SQLite versi. Unrecognized token: '\\xe2'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 411, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT COUNT(*) FROM book WHERE toYYYYString(publication_date) = '2017'. Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 413, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('The Landmark Thucydides: A Comprehensive Guide to the Peloponnesian War',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('The Landmark Thucydides: A Comprehensive Guide to the Peloponnesian War',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 414, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.84,), (4.82,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE (T1.title = 'The Servant Leader') AND (toYYYYString(T1.publication_date) = '2003'). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 415, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 416, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 417, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 11, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 71 (''t have a direct equivalent because it does not support date manipulation functions like this. However, you can use the YEAR function provided by ClickHouse which extracts year from datetime values.\n\nSo your translated query will look something like this:\n\n```sql\nSELECT fname, lname FROM employee WHERE YEAR(hire_date) < 1990\n``` \n\nThis assumes that \"hire_date\" is of type DateTime in ClickHouse. The function `YEAR()` extracts the year from a Date or DateTime value. It returns an integer number with four digits, representing the year (YYYY).\n\n FORMAT Native') (line 1, col 71): 't have a direct equivalent because it does not support date manipulation functions like this. However, you can use the YEAR function provided by ClickHouse whi. Single quoted string is not closed: ''t have a direct equivalent because it does not support date manipulation functions like this. However, you can use the YEAR function provided by ClickHouse which extracts year from datetime values.\n\nSo your translated query will look something like this:\n\n```sql\nSELECT fname, lname FROM employee WHERE YEAR(hire_date) < 1990\n``` \n\nThis assumes that \"hire_date\" is of type DateTime in ClickHouse. The function `YEAR()` extracts the year from a Date or DateTime value. It returns an integer number with four digits, representing the year (YYYY).\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 12, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1990',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((datetime.date(1988, 6, 19),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 14, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',))", "rowcount": 6, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 15, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('psychology',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.type' cannot be resolved from table with name T1. In scope SELECT DISTINCT T1.type FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE toDate(T2.ord_date) = '1993-05-29'. Maybe you meant: ['T1._type']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 16, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8.333333333333334,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8.333333333333334,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 17, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Francisco', '', 'Chang'), ('Matti', 'G', 'Karttunen'), ('Ann', 'M', 'Devon'), ('Rita', 'B', 'Muller'), ('Palle', 'D', 'Ibsen'), ('Diego', 'W', 'Roel'), ('Mary', 'M', 'Saveley'), ('Laurence', 'A', 'Lebihan'), ('Janine', 'Y', 'Labrune'), ('Karla', 'J', 'Jablonski'), ('Martin', 'F', 'Sommer'), ('Paul', 'X', 'Henriot'), ('Annette', '', 'Roulet'), ('Sven', 'K', 'Ottlieb'), ('Roland', '', 'Mendel'), ('Victoria', 'P', 'Ashworth'), ('Maria', '', 'Larsson'), ('Paula', 'S', 'Parente'), ('Lesley', '', 'Brown'), ('Helvetius', 'A', 'Nagy'), ('Miguel', 'A', 'Paolino'), ('Karin', 'F', 'Josephs'), ('Anabela', 'R', 'Domingues'), ('Pedro', 'S', 'Afonso'), ('Aria', '', 'Cruz'), ('Pirkko', 'O', 'Koskitalo'), ('Peter', 'H', 'Franken'), ('Daniel', 'B', 'Tonini'), ('Martine', '', 'Rance'), ('Carine', 'G', 'Schmitt'), ('Paolo', 'M', 'Accorti'), ('Elizabeth', 'N', 'Lincoln'))", "rowcount": 32, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Francisco', '', 'Chang'), ('Matti', 'G', 'Karttunen'), ('Ann', 'M', 'Devon'), ('Rita', 'B', 'Muller'), ('Palle', 'D', 'Ibsen'), ('Diego', 'W', 'Roel'), ('Mary', 'M', 'Saveley'), ('Laurence', 'A', 'Lebihan'), ('Janine', 'Y', 'Labrune'), ('Karla', 'J', 'Jablonski'), ('Martin', 'F', 'Sommer'), ('Paul', 'X', 'Henriot'), ('Annette', '', 'Roulet'), ('Sven', 'K', 'Ottlieb'), ('Roland', '', 'Mendel'), ('Victoria', 'P', 'Ashworth'), ('Maria', '', 'Larsson'), ('Paula', 'S', 'Parente'), ('Lesley', '', 'Brown'), ('Helvetius', 'A', 'Nagy'), ('Miguel', 'A', 'Paolino'), ('Karin', 'F', 'Josephs'), ('Anabela', 'R', 'Domingues'), ('Pedro', 'S', 'Afonso'), ('Aria', '', 'Cruz'), ('Pirkko', 'O', 'Koskitalo'), ('Peter', 'H', 'Franken'), ('Daniel', 'B', 'Tonini'), ('Martine', '', 'Rance'), ('Carine', 'G', 'Schmitt'), ('Paolo', 'M', 'Accorti'), ('Elizabeth', 'N', 'Lincoln'))", "rowcount": 32, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 9, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement in Clickhouse should be as follows:\n\n```sql\nSELECT T2.title \nFROM sales AS T1 \nINNER JOIN titles AS T2 ON T1.title_id = T2.title_id \nWHERE toY. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 10, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"The Busy Executive's Database Guide\", 'An overview of available database systems with emphasis on common business applications. Illustrated.', 'Algodata Infosystems'), ('Cooking with Computers: Surreptitious Balance Sheets', 'Helpful hints on how to use your electronic resources to the best advantage.', 'Algodata Infosystems'), ('You Can Combat Computer Stress!', 'The latest medical and psychological techniques for living with the electronic office. Easy-to-understand explanations.', 'New Moon Books'), ('Straight Talk About Computers', 'Annotated analysis of what computers can do for you: a no-hype guide for the critical user.', 'Algodata Infosystems'), ('Silicon Valley Gastronomic Treats', 'Favorite recipes for quick, easy, and elegant meals.', 'Binnet & Hardley'), ('The Gourmet Microwave', 'Traditional French gourmet recipes adapted for modern microwave cooking.', 'Binnet & Hardley'), ('But Is It User Friendly?', \"A survey of software for the naive user, focusing on the 'friendliness' of each.\", 'Algodata Infosystems'), ('Computer Phobic AND Non-Phobic Individuals: Behavior Variations', \"A must for the specialist, this book examines the difference between those who hate and fear computers and those who don't.\", 'Binnet & Hardley'), ('Is Anger the Enemy?', 'Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.', 'New Moon Books'), ('Life Without Fear', 'New exercise, meditation, and nutritional techniques that can reduce the shock of daily interactions. Popular audience. Sample menus included, exercise video available separately.', 'New Moon Books'), ('Prolonged Data Deprivation: Four Case Studies', 'What happens when the data runs dry?  Searching evaluations of information-shortage effects.', 'New Moon Books'), ('Emotional Security: A New Algorithm', 'Protecting yourself and your loved ones from undue emotional stress in the modern world. Use of computer and nutritional aids emphasized.', 'New Moon Books'), ('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean', 'Profusely illustrated in color, this makes a wonderful gift book for a cuisine-oriented friend.', 'Binnet & Hardley'), ('Fifty Years in Buckingham Palace Kitchens', \"More anecdotes from the Queen's favorite cook describing life among English royalty. Recipes, techniques, tender vignettes.\", 'Binnet & Hardley'), ('Sushi, Anyone?', 'Detailed instructions on how to make authentic Japanese sushi in your spare time.', 'Binnet & Hardley'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT T1.title, T1.notes, T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE toYYYYString(T1.pubdate) = '1991'. Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 13, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Binnet & Hardley',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE toYYYYString(T1.pubdate) = '1991' GROUP BY T1.pub_id, T2.pub_name ORDER BY COUNT(T1.title_id) DESC LIMIT 1. Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 140, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4825.44,), (3344.0,), (3375.84,), (2097.6000000000004,), (1846.0,), (2156.5499999999997,), (1395.42,), (2831.54,), (2552.7000000000003,), (3390.48,), (3644.8,), (2757.3999999999996,), (3315.2599999999998,), (3863.02,), (3002.44,), (3222.73,), (1732.59,), (2798.0,), (4373.53,), (2056.7799999999997,), (2618.12,), (1623.51,), (2279.16,), (925.97,), (1064.3400000000001,), (2268.9500000000003,), (1249.5,), (2484.0,), (4039.2000000000003,), (1432.3400000000001,), (3941.0299999999997,), (3081.32,), (1591.52,), (2694.52,))", "rowcount": 34, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 141, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 142, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((65, 'Handji Gifts& Co'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 1\n Code: 1. DB::Exception: Resolve identifier 'creditLimit' from parent scope only supported for constants and CTE. Actual T1.creditLimit node type COLUMN. In scope (SELECT count() FROM payments WHERE (creditLimit <= 100000) AND (customerNumber IN (SELECT customerNumber FROM payments WHERE toYear(paymentDate) = 2004))). (UNSUPPORTED_METHOD) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 143, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((99,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((99,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 144, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3638.630243902439,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4972.794666666667,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 145, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 146, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression identifier `customernumber` in scope SELECT customernumber FROM payments WHERE (toYear(paymentDate) >= 2003) AND (toYear(paymentDate) <= 2004) GROUP BY customernumber HAVING count() > 3. Maybe you meant: ['customerNumber']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 147, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('24, place Kl\u00e9ber', None, '88.60.1555'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('24, place Kl\u00e9ber', None, '88.60.1555'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 148, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((datetime.date(2005, 4, 8),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((datetime.date(2005, 4, 8),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 149, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression or function identifier `t1.shippeddate` in scope SELECT COUNT(multiIf((toDate32(t1.shippeddate) - toDate32(t1.requireddate)) > 3, t1.customerNumber, NULL)) FROM orders AS T1 INNER JOIN orderdetails AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.status = 'Shipped'. Maybe you meant: ['T1.shippedDate']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 150, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Euro+ Shopping Channel',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Euro+ Shopping Channel',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 151, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.17951149440110425,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.17951149440110425,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 152, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT sum(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE (t3.productLine = 'motorcycles') AND (toYYYYString(t1.orderDate) = '2004'). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 153, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2005', 6), ('2004', 21), ('2003', 15))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 148 ('Native') (line 3, col 9): Native. Expected one of: OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, token, Comma, WITH, HAVING, WINDOW, QUALIFY, ORDER BY, LIMIT, OFFSET, FETCH, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, end of query. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 154, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1992 Ferrari 360 Spider red', 624), ('1964 Mercedes Tour Bus', 384), ('1936 Mercedes-Benz 500K Special Roadster', 381))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYY` does not exist. In scope SELECT t3.productName, SUM(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE toYYYY(t1.orderDate) = 2003 GROUP BY t3.productName ORDER BY SUM(t2.quantityOrdered) DESC LIMIT 3. Maybe you meant: ['toYYYYMM']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 588, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: First argument for function 'arrayElement' must be array, got 'String' instead: In scope SELECT toFloat64(count(T1.fbi_code_no)) / 4 FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE ((T2.date[1]) = '1') AND (substr(T2.date, 5, 4) = '2018'). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 591, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((493,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 592, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((53,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 593, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Robert A. Rubio',), ('Glenn White',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal type Date of first argument of function substring, expected String, FixedString or Enum: In scope SELECT T1.commander FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = toInt64(T2.district_no) WHERE (T1.commander IN ('Robert A. Rubio', 'Glenn White')) AND (substr(T2.date, 1, 1) = '1') AND (substr(toDate(T2.date), 7, 4) = '2018') GROUP BY T1.commander. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 49, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 50, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('```sql\nSELECT SUBSTRING(SUBSTRING(Name FROM position('.', Name) + 1), 1, position('.' , SUBSTRING(Name FROM position('.', Name) + 1)) - 1) AS task FROM Method WHERE Id = 2\n```') (line 1, col 1): ```sql\nSELECT SUBSTRING(SUBSTRING(Name FROM position('.', Name) + 1), 1, position('.' , SUBSTRING(Name FROM position('.', Name) + 1)) - 1) AS task FROM Method W. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 52, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 512 (''re querying. The translation might not be 100% accurate if there are other differences between ClickHouse and SQLite.\n\n FORMAT Native') (line 7, col 294): 're querying. The translation might not be 100% accurate if there are other differences between ClickHouse and SQLite.\n\n FORMAT Native. Single quoted string is not closed: ''re querying. The translation might not be 100% accurate if there are other differences between ClickHouse and SQLite.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 48, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Filtering',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Nested type Array(String) cannot be inside Nullable type: In scope SELECT splitByChar('.', Name)[2] AS task FROM Method WHERE NameTokenized = 'online median filter test median window filling'. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 443, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('12:44:28', '23:09:25', datetime.date(2016, 8, 1)), ('00:04:25', '06:29:25', datetime.date(2016, 8, 30)), ('17:54:26', '20:49:26', datetime.date(2016, 8, 31)), ('14:29:25', '00:24:25', datetime.date(2016, 8, 23)), ('00:24:25', '22:24:25', datetime.date(2016, 8, 24)), ('07:24:25', '16:29:25', datetime.date(2016, 8, 25)), ('23:19:26', '07:19:25', datetime.date(2016, 8, 26)), ('00:04:26', '14:34:25', datetime.date(2016, 8, 27)), ('12:19:25', '15:39:25', datetime.date(2016, 8, 28)), ('16:14:26', '23:54:25', datetime.date(2016, 8, 29)), ('01:44:25', '20:04:25', datetime.date(2016, 8, 16)), ('00:19:25', '20:39:25', datetime.date(2016, 8, 17)), ('06:09:27', '23:29:25', datetime.date(2016, 8, 18)), ('23:19:24', '18:09:25', datetime.date(2016, 8, 19)), ('11:39:24', '08:49:25', datetime.date(2016, 8, 20)), ('15:14:24', '04:04:25', datetime.date(2016, 8, 21)), ('19:54:25', '08:49:24', datetime.date(2016, 8, 22)), ('20:09:26', '01:04:25', datetime.date(2016, 8, 9)), ('02:54:25', '01:04:25', datetime.date(2016, 8, 10)), ('01:24:25', '20:44:25', datetime.date(2016, 8, 11)), ('17:24:25', '11:34:25', datetime.date(2016, 8, 12)), ('16:54:24', '04:19:15', datetime.date(2016, 8, 13)), ('23:59:24', '22:19:25', datetime.date(2016, 8, 14)), ('22:24:25', '03:24:24', datetime.date(2016, 8, 15)), ('17:34:25', '00:04:25', datetime.date(2016, 8, 2)), ('19:49:25', '13:34:25', datetime.date(2016, 8, 3)), ('04:39:24', '19:54:25', datetime.date(2016, 8, 4)), ('21:34:25', '07:04:24', datetime.date(2016, 8, 5)), ('01:29:25', '17:09:25', datetime.date(2016, 8, 6)), ('15:09:25', '21:54:25', datetime.date(2016, 8, 7)), ('02:29:25', '15:54:24', datetime.date(2016, 8, 8)))", "rowcount": 31, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('12:44:28', '23:09:25', datetime.date(2016, 8, 1)), ('00:04:25', '06:29:25', datetime.date(2016, 8, 30)), ('17:54:26', '20:49:26', datetime.date(2016, 8, 31)), ('14:29:25', '00:24:25', datetime.date(2016, 8, 23)), ('00:24:25', '22:24:25', datetime.date(2016, 8, 24)), ('07:24:25', '16:29:25', datetime.date(2016, 8, 25)), ('23:19:26', '07:19:25', datetime.date(2016, 8, 26)), ('00:04:26', '14:34:25', datetime.date(2016, 8, 27)), ('12:19:25', '15:39:25', datetime.date(2016, 8, 28)), ('16:14:26', '23:54:25', datetime.date(2016, 8, 29)), ('01:44:25', '20:04:25', datetime.date(2016, 8, 16)), ('00:19:25', '20:39:25', datetime.date(2016, 8, 17)), ('06:09:27', '23:29:25', datetime.date(2016, 8, 18)), ('23:19:24', '18:09:25', datetime.date(2016, 8, 19)), ('11:39:24', '08:49:25', datetime.date(2016, 8, 20)), ('15:14:24', '04:04:25', datetime.date(2016, 8, 21)), ('19:54:25', '08:49:24', datetime.date(2016, 8, 22)), ('20:09:26', '01:04:25', datetime.date(2016, 8, 9)), ('02:54:25', '01:04:25', datetime.date(2016, 8, 10)), ('01:24:25', '20:44:25', datetime.date(2016, 8, 11)), ('17:24:25', '11:34:25', datetime.date(2016, 8, 12)), ('16:54:24', '04:19:15', datetime.date(2016, 8, 13)), ('23:59:24', '22:19:25', datetime.date(2016, 8, 14)), ('22:24:25', '03:24:24', datetime.date(2016, 8, 15)), ('17:34:25', '00:04:25', datetime.date(2016, 8, 2)), ('19:49:25', '13:34:25', datetime.date(2016, 8, 3)), ('04:39:24', '19:54:25', datetime.date(2016, 8, 4)), ('21:34:25', '07:04:24', datetime.date(2016, 8, 5)), ('01:29:25', '17:09:25', datetime.date(2016, 8, 6)), ('15:09:25', '21:54:25', datetime.date(2016, 8, 7)), ('02:29:25', '15:54:24', datetime.date(2016, 8, 8)))", "rowcount": 31, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 444, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((102415334.30651999,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 349\n Code: 349. DB::Exception: Cannot convert NULL value to non-Nullable type: while executing 'FUNCTION CAST(sum(__table2.circulating_supply) :: 0, 'FLOAT'_String :: 1) -> CAST(sum(__table2.circulating_supply), 'FLOAT'_String) Float32 : 3'. (CANNOT_INSERT_NULL_IN_ORDINARY_COLUMN) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 445, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((568.492413380107,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((434.333740234375,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 446, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((257.4744598327145,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((257.4744598327145,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 448, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Novacoin',), ('Mincoin',), ('Freicoin',), ('BitBar',), ('WorldCoin',), ('Digitalcoin',), ('Goldcoin',), ('Argentum',), ('Fastcoin',), ('Megacoin',), ('Infinitecoin',), ('Primecoin',), ('Anoncoin',), ('CasinoCoin',), ('Bullion',), ('Emerald Crypto',), ('Quark',), ('Zetacoin',), ('SecureCoin',), ('Sexcoin',), ('TagCoin',), ('I0Coin',), ('FLO',), ('Joulecoin',), ('Datacoin',), ('BetaCoin',), ('GrandCoin',), ('Deutsche eMark',), ('NetCoin',), ('HoboNickels',), ('Tigercoin',), ('Orbitcoin',), ('Catcoin',), ('RonPaulCoin',), ('Mooncoin',), ('Dimecoin',), ('RedCoin',), ('TeslaCoin',), ('NobleCoin',), ('Nyancoin',), ('UltraCoin',), ('PotCoin',), ('Blakecoin',), ('HunterCoin',), ('CacheCoin',), ('Aricoin',), ('Auroracoin',), ('Pesetacoin',), ('Marscoin',), ('Cashcoin',), ('Pandacoin',), ('MAZA',), ('Uniform Fiscal Object',), ('LiteBar',), ('Photon',), ('Myriad',), ('DNotes',), ('Skeincoin',), ('Einsteinium',), ('Bitcoin Scrypt',), ('Coin(O)',), ('FlutterCoin',), ('OctoCoin',), ('e-Gulden',), ('PLNcoin',), ('AsiaCoin',), ('PopularCoin',), ('CannaCoin',), ('BlueCoin',), ('Canada eCoin',), ('Guncoin',), ('Pinkcoin',), ('Energycoin',), ('VeriCoin',), ('TEKcoin',), ('Litecoin Plus',), ('UnbreakableCoin',), ('CryptCoin',), ('SuperCoin',), ('BoostCoin',), ('Hyper',), ('BitQuark',), ('CloakCoin',), ('Fantomcoin',), ('ArtByte',), ('Donationcoin',), ('Piggycoin',), ('Startcoin',), ('Boolberry',), ('SHACoin',), ('BritCoin',), ('Quatloo',), ('Viacoin',), ('Triangles',), ('I/O Coin',), ('Cryptonite',), ('Carboncoin',), ('Titcoin',), ('Virtacoin',), ('Joincoin',), ('Bitmark',), ('Halcyon',), ('Donu',), ('Emercoin',), ('NativeCoin',), ('BunnyCoin',), ('Acoin',), ('FoldingCoin',), ('bitCNY',), ('Sterlingcoin',), ('Magi',), ('ExclusiveCoin',), ('Trollcoin',), ('GlobalBoost-Y',), ('Prime-XI',), ('Dashcoin',), ('Sativacoin',), ('SpreadCoin',), ('Blocknet',), ('Gapcoin',), ('GCN Coin',), ('Bitcoin Fast',), ('PayCoin',), ('Unitus',), ('IncaKoin',), ('SmileyCoin',), ('Bean Cash',), ('Wild Beast Block',), ('Gridcoin',), ('Sharkcoin',), ('SongCoin',), ('Crave',), ('Pura',), ('Neutron',), ('Xaurum',), ('Californium',), ('Advanced Internet Blocks',), ('Universal Currency',), ('Bata',), ('FujiCoin',), ('EuropeCoin',), ('The Cypherfunks',), ('GravityCoin',), ('IrishCoin',), ('Bitzeny',), ('BowsCoin',), ('AnarchistsPrime',), ('CompuCoin',), ('Hellenic Coin',), ('TransferCoin',), ('AmsterdamCoin',), ('Eurocoin',), ('VectorAI',), ('SpaceCoin',), ('Pakcoin',), ('Influxcoin',), ('Expanse',), ('Swing',), ('ParallelCoin',), ('Save and Gain',), ('Elite',), ('SOILcoin',), ('Adzcoin',), ('RussiaCoin',), ('EverGreenCoin',), ('Creditbit',), ('Litecred',), ('Yocoin',), ('Francs',), ('Evil Coin',), ('Asiadigicoin',), ('TrumpCoin',), ('C-Bit',), ('Independent Money System',), ('HOdlcoin',), ('BERNcash',), ('DigixDAO',), ('Fantasy Cash',), ('FuzzBalls',), ('HiCoin',), ('Zurcoin',), ('SixEleven',), ('2GIVE',), ('PlatinumBAR',), ('MarteXcoin',), ('Nullex',), ('Citadel',), ('RevolverCoin',), ('GoldBlocks',), ('Breakout',), ('Debitcoin',), ('Comet',), ('Rise',), ('LBRY Credits',), ('PutinCoin',), ('Syndicate',), ('Cryptojacks',), ('Steem Dollars',), ('Ardor',), ('808Coin',), ('VapersCoin',), ('TajCoin',), ('Experience Points',), ('B3Coin',), ('Neo',), ('Bitcloud',), ('Zayedcoin',), ('Tao',), ('Tellurion',), ('Dollarcoin',), ('MustangCoin',), ('PROUD Money',), ('Sequence',), ('Atomic Coin',), ('JobsCoin',), ('Sakuracoin',), ('Cubits',), ('BipCoin',), ('Zoin',), ('Lykke',), ('Golem',), ('Internet of People',), ('Nexium',), ('Vault Coin',), ('Pabyosi Coin (Special)',), ('Alias',), ('BenjiRolls',), ('iBank',), ('FirstCoin',), ('Solarflarecoin',), ('Eryllium',), ('Elysium',), ('Centurion',), ('Marijuanacoin',), ('PRCoin',), ('Argus',), ('MarxCoin',), ('Pascal Lite',), ('MiloCoin',), ('Musicoin',), ('ZSEcoin',), ('Impact',), ('DubaiCoin',), ('Darsek',), ('Matchpool',), ('Ultimate Secure Cash',), ('BlazerCoin',), ('HappyPay',), ('Coinonat',), ('Lunyr',), ('Qtum',), ('Aeternity',), ('Metaverse ETP',), ('MobileGo',), ('Neuro',), ('More Coin',), ('TenX',), ('Ecobit',), ('Gas',), ('Santiment Network Token',), ('CVCoin',), ('SkinCoin',), ('OracleChain',), ('Shadow Token',), ('BlockCAT',), ('Nebulas',), ('Achain',), ('Loopring',), ('Monetha',), ('Agrello',), ('Elixir',), ('VIBE',), ('Voise',), ('RChain',), ('FLiK',), ('BridgeCoin',), ('ALIS',), ('HelloGold',), ('Enigma',), ('Change',), ('Bitcoin Gold',), ('KuCoin Token',), ('EXRNchain',), ('LATOKEN',), ('NULS',), ('JavaScript Token',), ('Etherparty',), ('Revain',), ('Electroneum',), ('Raiden Network Token',), ('Ties.DB',), ('Upfiring',), ('bitJob',), ('Viuly',), ('EncrypGen',), ('Bodhi',), ('Quantstamp',), ('QASH',), ('Bitcoin Diamond',), ('Divi Exchange Token',), ('Flixxo',), ('Presearch',), ('CyberMiles',), ('IoT Chain',), ('Wabi',), ('Verify',), ('Uquid Coin',), ('ProChain',), ('Ignis',), ('Playkey',), ('Datum',), ('LockTrip',), ('Genaro Network',), ('aelf',), ('Bibox Token',), ('Single Collateral DAI ',), ('SophiaTX',), ('HTMLCOIN',), ('Utrust',), ('AppCoins',), ('Mixin',), ('GameChain System',), ('Coinlancer',), ('AI Doctor',), ('Show',), ('United Traders Token',), ('Spectre.ai Dividend Token',), ('Vezt',), ('ugChain',), ('Bottos',), ('Selfkey',), ('MOAC',), ('IOST',), ('Nitro',), ('Aurora DAO',), ('SingularityNET',), ('Scry.info',), ('Mobius',), ('Hydro Protocol',), ('Maggie',), ('Trinity Network Credit',), ('DATA',), ('Matrix AI Network',), ('CoinFi',), ('Zeepin',), ('CPChain',), ('Zilla',), ('EtherSportz',), ('LOCIcoin',), ('Dether',), ('Fusion',), ('Neurotoken',), ('Concensum',), ('Insights Network',), ('Ravencoin',), ('Sharpe Platform Token',), ('Loom Network',), ('Noah Coin',), ('Mithril',), ('PolySwarm',), ('Stakenet',), ('U Network',), ('AdHive',), ('DeviantCoin',), ('Auctus',), ('Zebi Token',), ('Nexo',), ('Hydro',), ('Sharder',), ('Digitex',), ('Plian',), ('XMax',), ('Project Pai',), ('Karatgold Coin',), ('BitZ Token',), ('Everipedia',), ('Blue Whale EXchange',), ('NIX',), ('Apollo Currency',), ('Vexanium',), ('Maximine Coin',), ('Birake',), ('Gemini Dollar',), ('Paxos Standard',), ('FREE Coin',), ('USD Coin',), ('MMOCoin',), ('Italian Lira',), ('SINOVATE',), ('CWV Chain',), ('MXC',), ('Aergo',), ('HedgeTrade',), ('RSK Infrastructure Framework',), ('v.systems',), ('Grin',), ('Stably USD',), ('SOLVE',), ('PlayChip',), ('Constant',), ('Fetch.ai',), ('BORA',), ('Flexacoin',), ('Theta Fuel',), ('Japan Content Token',), ('Nash',), ('OTOCASH',), ('Locus Chain',), ('Newton',), ('ThoreNext',), ('Diamond Platform Token',), ('Artfinity',), ('Origo',), ('StakeCubeCoin',), ('Bitsdaq',), ('EOSDT',), ('Contentos',), ('MovieBloc',), ('MX Token',), ('USDK',), ('Silverway',), ('Dusk Network',), ('ChainX',), ('Oasis City',), ('GateToken',), ('Cocos-BCX',), ('BHEX Token',), ('BitForex Token',), ('Ladder Network Token',), ('Netbox Coin',), ('VideoCoin',), ('Streamit Coin',), ('MineBee',), ('Lightyears',), ('NuCypher',), ('1irstGold',), ('Ultragate',), ('Beyondcoin',), ('Waves Enterprise',), ('Bitcoin Vault',), ('Jarvis Network',), ('Ghost',), ('Xaya',), ('DXdao',), ('Secret',), ('Simple Software Solutions',), ('MATH',), ('Orion Protocol',), ('Kadena',), ('Sylo',), ('renBTC',), ('Sora',), ('sDEFI',), ('MCDEX',), ('Blocery',), ('ECOMI',), ('Kulupu',), ('Hakka.Finance',), ('UniLayer',), ('NFT',), ('YAMv2',), ('Lien',), ('Falconswap',), ('Polkaswap',), ('DataHighway',), ('BUILD Finance',), ('REVV',), ('Empty Set Dollar',), ('Wing',), ('Percent',), ('Defi Shopping Stake',), ('Rotten',), ('yAxis',), ('DeFiner',), ('DerivaDAO',), ('Nsure.Network',), ('Celo Dollar',), ('cVault.finance',), ('Persistence',), ('Polyient Games Governance Token',), ('Wrapped Origin Axie',), ('CoFiX',), ('Atari Token',), ('Value Liquidity',), ('UniLend',), ('DAOFi',), ('Akash Network',), ('Pepemon Pepeballs',), ('ETG Finance',), ('UnFederalReserve',), ('CryptoFrog.Finance',), ('Gameswap',), ('Unifi Protocol DAO',), ('88mph',), ('Vanilla Network',), ('Pancake Bunny',), ('Bifrost (BFC)',), ('Zoracles',), ('Plasma Finance',), ('Honey',), ('Unit Protocol Duck',), ('AnRKey X',), ('SafePal',), ('MAPS',), ('COVER Protocol',), ('Shabu Shabu Finance',), ('BSCEX',), ('NFTX',), ('ZKSwap',), ('CheeseSwap',), ('Poolz Finance',), ('Paralink Network',), ('Mdex',), ('Onooks',), ('Umbrella Network',), ('Lotto',), ('APYSwap',), ('Goose Finance',), ('Premia',), ('DAOventures',), ('Midas Dollar',), ('Vesper',), ('AC Milan Fan Token',), ('RamenSwap',), ('Polkacity',), ('PRCY Coin',), ('SOTA Finance',), ('Wault Finance (OLD)',), ('FileStar',), ('xToken',), ('Bounce Token',), ('BSCPAD',), ('Vortex Defi',), ('Konomi Network',), ('Playcent',), ('Space Cow Boy',), ('Illuvium',), ('Inverse Finance',), ('Belt',), ('LABS Group',), ('Splyt',), ('Oracle Top 5 Tokens Index',), ('StakerDAO',), ('Ellipsis',), ('Uhive',), ('Scaleswap',), ('WHEAT Token',), ('UniFarm',), ('Refinable',), ('Chainswap',), ('DAIN',), ('Vulcan Forged PYR',), ('Crowny',), ('Phuture',), ('Synthetify',), ('Wault [New]',), ('Smaugs NFT',), ('ETHERLAND',), ('Cubiex Power',), ('MemePad',), ('CrossFi',), ('Coldstack',), ('JaguarSwap',), ('DinoExchange',), ('SingularityDAO',), ('Don-key',), ('My DeFi Pet',), ('Frenchie Network',), ('Sleepy Sloth Finance',), ('Bakery Tools',), ('xxxNifty',), ('Oviex',), ('YooShi',), ('HODL',), ('Netvrk',), ('Dotmoovs',), ('Lean',), ('Elk Finance',), ('Rabbit Finance',), ('Vega Protocol',), ('Convex CRV',), ('EthereumPay',), ('Alpha Impact',), ('Dina',), ('Waivlength',), ('Whale Fall',), ('Pornstar',), ('AirNFTs',), ('PureFi Protocol',))", "rowcount": 589, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translated SQL statement for ClickHouse.\n\n```sql\nSELECT name FROM coins WHERE length(tag_names) - lengthReplace(tag_names, ',', '') = 2\n```\n\n FORMAT. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 449, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Freicoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('BBQCoin',), ('Ixcoin',), ('BitBar',))", "rowcount": 28, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 38\n Code: 38. DB::Exception: Cannot parse date: value is too short: Cannot parse Date32 from String: In scope SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE (toDate32('2013-05') = T2.date) AND (T2.open IS NULL). (CANNOT_PARSE_DATE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 450, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 38\n Code: 38. DB::Exception: Cannot parse date: value is too short: Cannot parse Date from String: In scope SELECT COUNT(T2.coin_id) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE (T1.name = 'Bytecoin') AND (toDate('2013-06') = date). (CANNOT_PARSE_DATE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 609, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.818181818181817,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((700.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 610, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.7037037037037037,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translated SQL statement:\n\n```sql\nSELECT toFloat64(sum(if(T2.state = 'WI', 1, 0))) * 100 / count(T1.id)\nFROM beers AS T1 INNER JOIN breweries AS T2 . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 309, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 311, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"Ev'rybody Wants to Be a Cat\",))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 6\n Code: 6. DB::Exception: Cannot parse string 'Jan 25, 1961' as UInt32: syntax error at begin of string. Note: there are toUInt32OrZero and toUInt32OrNull functions, which returns zero/NULL instead of throwing exception.: while executing 'FUNCTION CAST(substring(__table1.release_date, plus(position(__table1.release_date, '-'_String), 1_UInt8)) :: 2, 'UInt32'_String :: 3) -> CAST(substring(__table1.release_date, plus(position(__table1.release_date, '-'_String), 1_UInt8)), 'UInt32'_String) UInt32 : 1': While executing MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder). (CANNOT_PARSE_TEXT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 313, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 314, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 6\n Code: 6. DB::Exception: Cannot parse string ' 1997' as Int32: syntax error at begin of string. Note: there are toInt32OrZero and toInt32OrNull functions, which returns zero/NULL instead of throwing exception.: while executing 'FUNCTION CAST(substring(__table1.release_date, plus(positionCaseInsensitive(__table1.release_date, ','_String), 1_UInt8)) :: 2, 'Int32'_String :: 3) -> CAST(substring(__table1.release_date, plus(positionCaseInsensitive(__table1.release_date, ','_String), 1_UInt8)), 'Int32'_String) Int32 : 1': While executing MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder). (CANNOT_PARSE_TEXT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 315, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 316, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Barry Cook',), ('Ron Clements',), ('Ralph Zondag',), ('Roger Allers',), ('Gary Trousdale',), ('Mike Gabriel',), ('Mark Dindal',), ('Chris Buck',), ('Wolfgang Reitherman',))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translation of your SQLite statement to ClickHouse:\n\n```sql\nSELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_t. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 317, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 321, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('A Beautiful Planet', 'Documentary'), ('Alice Through the Looking Glass', 'Adventure'), ('Captain America: Civil War', 'Action'), ('Doctor Strange', 'Adventure'), ('Finding Dory', 'Adventure'), ('Moana', 'Adventure'), ('Pete\u2019s Dragon', 'Adventure'), ('Queen of Katwe', 'Drama'), ('Rogue One: A Star Wars Story', 'Adventure'), ('The BFG', 'Adventure'), ('The Finest Hours', 'Thriller/Suspense'), ('The Jungle Book', 'Adventure'), ('The Light Between Oceans', 'Drama'), ('Zootopia', 'Adventure'))", "rowcount": 14, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('A Beautiful Planet', 'Documentary'), ('Alice Through the Looking Glass', 'Adventure'), ('Captain America: Civil War', 'Action'), ('Doctor Strange', 'Adventure'), ('Finding Dory', 'Adventure'), ('Moana', 'Adventure'), ('Pete\u2019s Dragon', 'Adventure'), ('Queen of Katwe', 'Drama'), ('Rogue One: A Star Wars Story', 'Adventure'), ('The BFG', 'Adventure'), ('The Finest Hours', 'Thriller/Suspense'), ('The Jungle Book', 'Adventure'), ('The Light Between Oceans', 'Drama'), ('Zootopia', 'Adventure'))", "rowcount": 14, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 322, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Star Wars Ep. VII: The Force Awakens', 1.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement you provided can be translated as follows:\n```sql\nSELECT \n    movie_title, \n    CAST(REPLACE(trim(inflation_adjusted_gross), ',', '') AS FLOAT. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 323, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Many Adventures of Winnie the Pooh', 'Winnie the Pooh', 'Winnie the Pooh'), ('The Rescuers', 'Bernard and Miss Bianca', 'The Journey'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.name' cannot be resolved from table with name T1. In scope SELECT T1.movie_title, T2.hero, T2.song FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title INNER JOIN director AS T3 ON T1.name = T3.name WHERE (T3.director = 'Wolfgang Reitherman') AND (toYear(T1.release_date) = 1977). (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 324, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Beauty and the Beast', '$218,951,625'), ('Hercules', '$99,112,101'), ('Pocahontas', '$141,579,773'), ('Tangled', '$200,821,936'), ('The Rescuers Down Under', '$27,931,461'))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 218 (',') (line 4, col 88): , '$'), ',', '') AS Float64) / CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS Float64) < 2\n\n FORMAT Native. Expected one of: ParserArrayOfJSONIdentifierDelimiter, token sequence, OpeningSquareBracket, Dot, token, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, identifier. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 325, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Roger Allers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 6\n Code: 6. DB::Exception: Cannot parse string '153,000,000' as Float32: syntax error at position 3 (parsed just '153'). Note: there are toFloat32OrZero and toFloat32OrNull functions, which returns zero/NULL instead of throwing exception.: while executing 'FUNCTION CAST(replaceRegexpOne(trimBoth(__table1.total_gross), '[$,]'_String, ''_String) :: 1, 'FLOAT'_String :: 5) -> CAST(replaceRegexpOne(trimBoth(__table1.total_gross), '[$,]'_String, ''_String), 'FLOAT'_String) Float32 : 4'. (CANNOT_PARSE_TEXT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 326, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal type String of argument of function toYear. Should be Date, Date32, DateTime or DateTime64: In scope SELECT T2.director, T1.MPAA_rating FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE (T1.genre = 'Musical') AND (toYear(T1.release_date) = 1993). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 329, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('ClickHouse') (line 1, col 1): ClickHouse query: \n\nSELECT COUNT(movie_title) FROM characters WHERE release_date LIKE '%37' OR release_date LIKE '%48' OR release_date LIKE '%49' OR release_dat. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 330, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Make Mine Music',), ('Saludos Amigos',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Fun and Fancy Free',), ('Make Mine Music',), ('Saludos Amigos',), ('The Adventures of Ichabod and Mr. Toad',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 331, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Ron Clements',), ('Clyde Geronimi',), ('Gary Trousdale',), ('Don Hall',), ('Chris Williams',), ('Mark Dindal',), ('Wilfred Jackson',), ('Ralph Zondag',), ('Chris Buck',), ('Chris Sanders',), ('Barry Cook',), ('Mike Gabriel',), ('David Hand',), ('Nathan Greno',), ('Wolfgang Reitherman',), ('Roger Allers',), ('Rich Moore',), ('Byron Howard',))", "rowcount": 18, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 214 (',') (line 1, col 214): , '$'), ',', '') AS FLOAT) > 100000000\n\n FORMAT Native. Expected one of: ParserArrayOfJSONIdentifierDelimiter, token sequence, OpeningSquareBracket, Dot, token, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, identifier. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 332, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Circle of Life',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal types String and UInt8 of arguments of function plus: In scope SELECT T2.song FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = trimBoth(T2.movie_title) ORDER BY REPLACE(trimBoth(REPLACE(T1.total_gross, '$', '')), ',', '') + 0 DESC LIMIT 1. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 333, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('David Hand',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal type String of argument of function toYear. Should be Date, Date32, DateTime or DateTime64: In scope SELECT T2.director FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name INNER JOIN movies_total_gross AS T3 ON T3.movie_title = T1.movie_title WHERE (toYear(T3.release_date) >= 1937) AND (toYear(T3.release_date) <= 1990) ORDER BY replaceRegexpOne('$', '', trimBoth(T3.total_gross)) AS FLOAT DESC LIMIT 1. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 335, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 798 (')') (line 12, col 291): ).\n\n FORMAT Native. Unmatched parentheses: ). (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 336, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 394 (''\n```\nThis assumes that the `release_date` field is stored as a string in the format YYYY-MM-DD. If this is not the case, you would need to adjust the conditions accordingly.\n\n FORMAT Native') (line 5, col 143): '\n```\nThis assumes that the `release_date` field is stored as a string in the format YYYY-MM-DD. If this is not the case, you would need to adjust the condition. Single quoted string is not closed: ''\n```\nThis assumes that the `release_date` field is stored as a string in the format YYYY-MM-DD. If this is not the case, you would need to adjust the conditions accordingly.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 337, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Clayton',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translated SQL statement from sqlite to clickhouse:\n\n```sql\nSELECT villian FROM characters ORDER BY release_date DESC LIMIT 1\n```\n\nPlease note that . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 338, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Avengers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 105 (',') (line 1, col 105): , '$'), ',', '') AS Float64) DESC LIMIT 1\n\n FORMAT Native. Expected one of: token sequence, Dot, token, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, identifier. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 339, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pinocchio',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 192 (',') (line 1, col 192): , '$'), ',', '') AS FLOAT) DESC LIMIT 1\n\n FORMAT Native. Expected one of: ParserArrayOfJSONIdentifierDelimiter, token sequence, OpeningSquareBracket, Dot, token, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, identifier. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 340, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Wolfgang Reitherman',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the SQL statement translated from SQLite to ClickHouse. The main differences are related to data types and syntax in these two database systems that sup. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 341, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((81180741.98620689,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 50 (',') (line 1, col 50): , '$')), ',', '')) / COUNT(movie_title) FROM movies_total_gross WHERE MPAA_rating = 'PG-13'\n\n FORMAT Native. Expected one of: token sequence, Dot, token, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, identifier. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 344, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((15.949077544028004,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 172 ('\\xef') (line 1, col 172): \uff5cbegin\u2581of\u2581sentence\uff5c>_adjusted_gross), '')) ELSE 0 END) * 100 / SUM(toFloat64(replaceRegexpOne('^\\\\D+', trimBoth(inflation_adjusted_gross), ''))) FROM mo. Unrecognized token: '\\xef'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 247, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('f',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('f',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 594, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression or function identifier `type` in scope SELECT COUNT(toDate32(date)) FROM inspections WHERE (toYear(date) = 2016) AND (type = 'Routine \u2013 Unscheduled'). Maybe you meant: ['_type']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 595, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((523,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 235 ('Native') (line 3, col 9): Native. Expected one of: OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, GROUP BY, WITH, HAVING, WINDOW, QUALIFY, ORDER BY, LIMIT, OFFSET, FETCH, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, end of query. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 596, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Tiramisu Kitchen',), ('OMNI S.F. Hotel - 2nd Floor Pantry',), (\"CHARLIE'S DELI CAFE\",), (\"ART'S CAFE\",), ('CAFE X + O',), ('Chowders',), ('STARBUCKS',), (\"DINO'S UNCLE VITO\",), ('OMNI S.F. Hotel - 3rd Floor Pantry',), ('OMNI S.F. Hotel - Employee Cafeteria',), (\"J.B.'S PLACE\",), ('Vega',), (\"Akiko's Sushi Bar\",), ('Akikos Sushi',), ('Broadway Dim Sum',), ('Silver Star Cafe and Deli',), (\"AFC SUSHI @ MOLLIE STONE'S 2\",), ('C & Y Cafe',), ('SECRET GARDEN TEA HOUSE',), ('NENAS RESTAURANT',), ('RADIO HABANA',), ('COURTYARD BY MARRIOTT-STAFF KITCHEN',), ('ARLEQUIN',), ('BAYSIDE COFFEE SHOP',), (\"JIM'S SMOKE SHOP\",), ('CONSTANS GROCERY',), ('PROGRESSIVE GROUNDS',), ('NOODLE EXPRESS',), (\"Grumpy's American Pub\",), ('Caffe Puccini',), ('New Moon Restaurant',), ('Gelato Classico Italian Ice',), ('Just Wonton',), ('MIKI RESTAURANT',), ('Toy Boat Dessert Cafe',), ('BEANERY INC.',), ('Marche Club of S.F.',), ('VIKINGS GIANT SUBMARINE',), ('LOS HERMANOS',), ('ON THE BRIDGE',), ('HAI SUN RESTAURANT',), (\"Ben & Jerry's\",), ('CORSAGNA',), ('Inga Donuts',), ('BISTRO AIX',), ('Bamboo Restaurant',), ('YUKOL PLACE THAI CUISINE',), ('SUBWAY',), ('MOULIN ROUGE',), ('PACIFIC CATCH',), ('The Posh Bagel',), ('FIRST CUP',), ('NAPOLI PIZZA RESTAURANT',), ('Miyako',), ('Polkers',), ('GORDO TAQUERIA #2',), ('GIANT SCOOP',), ('RINCONSITO SALVADORENO',), ('REINA RESTAURANT',), (\"ADELITA'S CAKES\",), ('SUPER STAR RESTAURANT',), ('SF MARRIOTT HOTEL PANTRY 4/F',), ('COW HOLLOW CATERING',), ('HAAGEN-DAZS #561',), ('HOUSE OF HUNAN',), ('Cafe Madeleine',), (\"Buster's\",), ('Caffe Roma Coffee Roasting Co',), ('Michelangelo Caffe',), ('Orale Orale Inc',), ('CHATZ',), (\"Calzone's\",), ('Rose Pistola',), ('Bohemian Cigar Store',), ('Vieni-Vieni',), ('North Beach Restaurant',), ('The Stinking Rose',), ('Yuet Lee Restaurant',), ('Garden of Eden',), (\"Sam's Pizza\",), ('Taqueria Zorro',), ('Franchino',), (\"Mara's\",), ('Il Pollaio',), ('Ristorante Ideale',), (\"Mo's Grill\",), ('Maykadeh Restaurant',), ('Columbus Cafe',), ('Silverhat Bar, Inc',), ('The House',), ('Dol-Ho Restaurant',), ('San Francisco Athletic Club',), ('Caffe Trieste',), ('Roxanne Cafe',), ('COURTYARD BY MARRIOTT-COFFEE SHOP',), ('Quickly',), (\"Viking's Giant Sub\",), ('Donut Time',), ('SHERATON PALACE - EMP.  CAFETERIA',), (\"MELISA'S CHINESE CUISINE\",), (\"Nizario's Pizza\",), ('Marnee Thai Restaurant',), ('Hamburger Haven',), ('Gordo Taqueria #1',), (\"Loi's Vietnamese Restaurant\",), ('CAJUN PACIFIC',), ('SAN FRANCISCO SOUP COMPANY',), (\"MUFFIN'S MUFFIN\",), ('TACO LOS ALTOS',), ('BURRITO EXPRESS',), ('YOU SEE SUSHI',), ('Caffe Del Sole',), ('TSING TAO RESTAURANT',), ('A-1 BAKERY',), ('EL BURRITO EXPRESS #2',), ('SUBWAY SANDWICHES & SALADS',), ('Golden Coffee',), ('BRAZEN HEAD RESTAURANT',), ('VIKINGS GIANT SUBMARINE SANDWICHES',), ('Kitchen Kura',), ('MARINA SUBMARINE',), ('BARBARY COAST PASTRY & COFFEE',), ('BEN WAH RESTAURANT',), ('ASHOKA Indian Cuisine',), ('MOZZARELLA DI BUFALA PIZZERIA II',), ('Cafe Bellini',), ('APERTO RESTAURANT',), ('MARIPOSA HUNTERS POINT YACHT CLUB',), ('BAY VIEW BOAT CLUB',), ('Piperade',), ('Boudin Bakery',), ('Hunan Restaurant',), ('Sushi Rapture',), (\"Courtyard by Marriott at Fisherman's Wharf\",), ('TRIPTYCH',), ('B & J QUARTER POUNDER BURGERS',), ('LA SANTANECA',), (\"BABY'S EATERY AND PALABOK\",), ('TAQUERIA EL FAROLITO NO. 2',), ('LOS PLANES DE RENDEROS',), ('Molinari Delicatessen',), ('Estia Restaurant',), ('Golden Boy Pizza',), ('New Hollywood Bakery & Restaurant',), ('Firenze By Night',), ('DELFINA RESTAURANT',), ('PATPONG THAI CUISINE, INC.',), ('Delicious Dim Sum',), ('House of Nanking',), (\"MARCELLO'S PIZZA\",), ('Sabra Restaurant',), ('Town & Country Club',), ('Ritz-Carlton SF - Club Lounge',), ('Cafe Ethiopia',), ('PEKING WOK RESTAURANT',), ('BUFFALO BURGERS RESTAURANT',), ('KENTUCKY FRIED CHICKEN #50',), ('SHANGRILA VEGETARIAN REST',), ('JAVA BEACH CAFE',), (\"L'AVENIDA\",), ('GOLDEN ISLAND CAFE',), ('MING TAI WUN TUN NOODLE, INC.',), ('VANIDA THAI KITCHEN',), (\"The Sunset's Best Seafood Restaurant\",), ('RAILROAD EXPRESSO CAFE',), ('HEUNG YUEN RESTAURANT',), ('BIG MOUTH BURGERS',), ('RINCON PERUANO RESTAURANT',), (\"CHAVITA'S MEXICAN RESTAURANT\",), ('IL BORGO',), ('PORK STORE CAFE',), ('CREPE EXPRESS',), ('BEAN THERE COFFEE & TEA',), ('UNIVERSAL CAFE',), ('HOANG DAT COFFEE SHOP',), ('STARBUCKS COFFEE #509',), (\"Peet's Coffee & Tea, Inc\",), ('Starbucks Coffee',), ('Star Bagels',), ('Aux Delices Vietnam',), ('POMELO ON CHURCH',), ('Boudin Petit Cafe',), ('Zona Rosa',), (\"TULLY'S  COFFEE\",), ('TEKKA JAPANESE RESTAURANT',), (\"PEET'S COFFEES & TEAS\",), (\"TAWAN'S THAI FOOD\",), ('ZAOH RESTAURANT',), ('JAVA SUPREME',), ('THANH THANH',), ('KABABAYAN FAST FOOD',), (\"KD'S GROG & GROCERY\",), ('NORTH BEACH PIZZA',), ('STARBUCKS COFFEE CO.',), (\"ORPHAN ANDY'S\",), ('ANCHOR OYSTER BAR INC.',), ('GORDO TAQUERIA #6',), ('SAN MIGUEL RESTAURANT #2',), ('HIGHER GROUNDS',), ('Beanery',), ('Cordon Bleu',), ('EXIT THEATRE',), ('LA TORTILLA',), (\"GASPARE'S PIZZA HOUSE & REST.\",), (\"YUMMA'S MED GRILL\",), ('La Copa Loca',), ('SWEET DELIGHT BAKERY',), ('MIFUNE DON',), ('CABLE CAR COFFEE CO',), ('Waterfront Bakery',), ('CAFE V',), ('KISS SEAFOOD',), ('BIO',), ('BAZAAR CAFE',), ('Whole Foods Steep Brew',), ('A2 CAFE',), (\"ZEKE'S DIAMOND BAR\",), ('Starbucks Coffee Company #6765',), ('Nonna Rose Restaurant',), ('CLUB WAZIEMA',), ('AT&T - Cognac Bar/ KITCHEN Room3232 [145080]',), ('AT&T - FIELD CLUB KITCHEN [145082]',), (\"CHOUQUET'S\",), (\"CITY'S CHOICE\",), ('Neiman Marcus On The Square',), ('Cafe Niebaum Coppola',), ('OMNI S.F. Hotel - Food & Beverage Storeroom',), (\"Uncle Vito's Pizza\",), ('Asia Chinese Food #2',), ('TANPOPO',), ('901 Columbus Cafe',), ('SF Bay Club - Court Cafe',), (\"Nick's Lighthouse\",), ('ESPERPENTO RESTAURANT',), ('Zazie',), ('BURGERMEISTER',), ('LE ZINC',), ('CLADDAGH COFFEE',), ('Tung Sing Restaurant',), ('CLEMENT BBQ RESTAURANT',), ('Bistro Burger',), ('LUPA TRATTORIA',), ('Casa Mexicana Restaurant',), ('KEZAR PUB',), ('AXUM',), ('MARTHA & BROS. COFFEE CO',), ('COURTYARD BY MARRIOTT-RESTAURANT',), ('PANDA EXPRESS',), ('Just For You Cafe Inc.',), (\"WORKING GIRLS' CAFE III\",), ('NORDSTROM CAFE BISTRO',), ('PRIMO PATIO CAFE',), ('New Lun Ting Cafe, Inc',), ('Plouf',), ('Raintree Cafe',), ('Lanna Restaurant',), ('Emporio Rulli Il Caffe at Union Square',), ('SEA BREEZE CAFE',), ('CAFE MUMS',), ('KFC/TACO BELL',), ('Osha Thai Noodle Cafe',), ('RED BALLOON',), (\"Fisherman's Pizzeria Inc [#50]\",), ('Dar Bar Pakistani/Indian Cusine',), ('FLORIO',), (\"Pete's Deli & Cafe\",), ('Academy Bar & Kitchen',), ('GARDEN HOUSE CAFE',), ('ATLAS CAFE',), ('CHEVRON #1512',), ('TAL-Y-TARA TEA & POLO SHOPPE',), ('MOONLIGHT CAFE',), ('Cesario',), ('Nob Hill Cafe',), ('Rogue Ales Public House',), ('Sushi on North Beach',), (\"Murphy's\",), ('The Old Ship Saloon',), ('Cafe Bastille',), (\"Ma's Dim Sum & Cafe\",), ('Battery Street Coffee Roastery',), (\"Pat's Cafe\",), ('Cafe Venue',), (\"Diller's Delicatessen\",), ('Latte Express #3',), ('Starbucks Coffee Company',), ('Escape From New York Pizza',), ('Cafe Tiramisu',), ('Pasquales',), ('Sorabol-Stonestown Galleria',), (\"MAI'S VIETNAMESE RESTAURANT\",), ('SIMPLE PLEASURES CAFE',), ('Clement Street Bar & Grill',), ('GEARY STREET BELLA PIZZA',), ('TARAVAL OKAZU YA',), ('Allstar Donuts',), ('LINCOLN PARK BAR AND GRILL',), ('Sunrise Deli',), ('YUMMY YUMMY VIETNAMESE RESTAURANT',), ('JITRA THAI CUISINE',), ('S.F. Pizza',), ('BULLSHEAD RESTAURANT',), ('Han Bat Korean Restaurant',), ('T C PASTRY',), ('Spiazzo',), ('AL-MASRI EGYPTIAN RESTAURANT',), ('KENTUCKY FRIED CHICKEN',), ('MY FAVORITE CAFE',), ('BURMA SUPERSTAR RESTAURANT',), ('GOLDEN CHARIOT BAKERY & REST',), ('PRESIDIO GOLF CLUB',), ('GENEVA STEAK HOUSE',), ('EL POLLO SUPREMO',), (\"Elaine's Kitchen\",), ('Bocadillos',), ('Hook a Cook',), ('CHEESE STEAK SHOP, THE',), ('EXTREME  PIZZA',), ('THE GROVE FILLMORE',), ('MONROE RESIDENCE CLUB',), ('SANPPO RESTAURANT',), ('QUEEN ANNE HOTEL',), ('ISUMIYA',), (\"Joanie's Diner Inc.\",), ('Chestnut Diner',), ('Hyde Street Seafood House & Raw Bar, Inc',), ('Cocotte',), ('ZA',), ('Zarzuela',), ('Sun Kwong Restaurant',), ('Amarena',), ('CAFE LOMBARD',), ('ATAMI SUSHI BAR & GRILL',), ('ZUSHI-PUZZLE',), ('Thai Spice Restaurant',), ('Street Restaurant',), (\"Peet's Coffee & Tea\",), ('KENTUCKY FRIED CHICKEN #249',), (\"CARL'S JUNIOR\",), ('Olympic Flame Cafe',), ('Original Perfect Hamburger',), ('Kim Thanh Restaurant',), ('ANH HONG PHU-NHUAN RESTAURANT',), ('A La Turca',), (\"LITTLE HENRY'S RESTAURANT\",), (\"NOAH'S BAGELS\",), ('DRAGON WELL',), ('B & M MEI SING RESTAURANT',), ('HOWARD STREET COFFEE ROASTERY CAFE',), ('THE BITTER END',), ('FRINGALE',), ('HARD KNOX CAFE',), ('Caffe Sapore',))", "rowcount": 353, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Tiramisu Kitchen',), ('OMNI S.F. Hotel - 2nd Floor Pantry',), (\"CHARLIE'S DELI CAFE\",), (\"ART'S CAFE\",), ('CAFE X + O',), ('Chowders',), ('STARBUCKS',), (\"DINO'S UNCLE VITO\",), ('OMNI S.F. Hotel - 3rd Floor Pantry',), ('OMNI S.F. Hotel - Employee Cafeteria',), (\"J.B.'S PLACE\",), ('Vega',), (\"Akiko's Sushi Bar\",), ('Akikos Sushi',), ('Broadway Dim Sum',), ('Silver Star Cafe and Deli',), (\"AFC SUSHI @ MOLLIE STONE'S 2\",), ('C & Y Cafe',), ('SECRET GARDEN TEA HOUSE',), ('NENAS RESTAURANT',), ('RADIO HABANA',), ('COURTYARD BY MARRIOTT-STAFF KITCHEN',), ('ARLEQUIN',), ('BAYSIDE COFFEE SHOP',), (\"JIM'S SMOKE SHOP\",), ('CONSTANS GROCERY',), ('PROGRESSIVE GROUNDS',), ('NOODLE EXPRESS',), (\"Grumpy's American Pub\",), ('Caffe Puccini',), ('New Moon Restaurant',), ('Gelato Classico Italian Ice',), ('Just Wonton',), ('MIKI RESTAURANT',), ('Toy Boat Dessert Cafe',), ('BEANERY INC.',), ('Marche Club of S.F.',), ('VIKINGS GIANT SUBMARINE',), ('LOS HERMANOS',), ('ON THE BRIDGE',), ('HAI SUN RESTAURANT',), (\"Ben & Jerry's\",), ('CORSAGNA',), ('Inga Donuts',), ('BISTRO AIX',), ('Bamboo Restaurant',), ('YUKOL PLACE THAI CUISINE',), ('SUBWAY',), ('MOULIN ROUGE',), ('PACIFIC CATCH',), ('The Posh Bagel',), ('FIRST CUP',), ('NAPOLI PIZZA RESTAURANT',), ('Miyako',), ('Polkers',), ('GORDO TAQUERIA #2',), ('GIANT SCOOP',), ('RINCONSITO SALVADORENO',), ('REINA RESTAURANT',), (\"ADELITA'S CAKES\",), ('SUPER STAR RESTAURANT',), ('SF MARRIOTT HOTEL PANTRY 4/F',), ('COW HOLLOW CATERING',), ('HAAGEN-DAZS #561',), ('HOUSE OF HUNAN',), ('Cafe Madeleine',), (\"Buster's\",), ('Caffe Roma Coffee Roasting Co',), ('Michelangelo Caffe',), ('Orale Orale Inc',), ('CHATZ',), (\"Calzone's\",), ('Rose Pistola',), ('Bohemian Cigar Store',), ('Vieni-Vieni',), ('North Beach Restaurant',), ('The Stinking Rose',), ('Yuet Lee Restaurant',), ('Garden of Eden',), (\"Sam's Pizza\",), ('Taqueria Zorro',), ('Franchino',), (\"Mara's\",), ('Il Pollaio',), ('Ristorante Ideale',), (\"Mo's Grill\",), ('Maykadeh Restaurant',), ('Columbus Cafe',), ('Silverhat Bar, Inc',), ('The House',), ('Dol-Ho Restaurant',), ('San Francisco Athletic Club',), ('Caffe Trieste',), ('Roxanne Cafe',), ('COURTYARD BY MARRIOTT-COFFEE SHOP',), ('Quickly',), (\"Viking's Giant Sub\",), ('Donut Time',), ('SHERATON PALACE - EMP.  CAFETERIA',), (\"MELISA'S CHINESE CUISINE\",), (\"Nizario's Pizza\",), ('Marnee Thai Restaurant',), ('Hamburger Haven',), ('Gordo Taqueria #1',), (\"Loi's Vietnamese Restaurant\",), ('CAJUN PACIFIC',), ('SAN FRANCISCO SOUP COMPANY',), (\"MUFFIN'S MUFFIN\",), ('TACO LOS ALTOS',), ('BURRITO EXPRESS',), ('YOU SEE SUSHI',), ('Caffe Del Sole',), ('TSING TAO RESTAURANT',), ('A-1 BAKERY',), ('EL BURRITO EXPRESS #2',), ('SUBWAY SANDWICHES & SALADS',), ('Golden Coffee',), ('BRAZEN HEAD RESTAURANT',), ('VIKINGS GIANT SUBMARINE SANDWICHES',), ('Kitchen Kura',), ('MARINA SUBMARINE',), ('BARBARY COAST PASTRY & COFFEE',), ('BEN WAH RESTAURANT',), ('ASHOKA Indian Cuisine',), ('MOZZARELLA DI BUFALA PIZZERIA II',), ('Cafe Bellini',), ('APERTO RESTAURANT',), ('MARIPOSA HUNTERS POINT YACHT CLUB',), ('BAY VIEW BOAT CLUB',), ('Piperade',), ('Boudin Bakery',), ('Hunan Restaurant',), ('Sushi Rapture',), (\"Courtyard by Marriott at Fisherman's Wharf\",), ('TRIPTYCH',), ('B & J QUARTER POUNDER BURGERS',), ('LA SANTANECA',), (\"BABY'S EATERY AND PALABOK\",), ('TAQUERIA EL FAROLITO NO. 2',), ('LOS PLANES DE RENDEROS',), ('Molinari Delicatessen',), ('Estia Restaurant',), ('Golden Boy Pizza',), ('New Hollywood Bakery & Restaurant',), ('Firenze By Night',), ('DELFINA RESTAURANT',), ('PATPONG THAI CUISINE, INC.',), ('Delicious Dim Sum',), ('House of Nanking',), (\"MARCELLO'S PIZZA\",), ('Sabra Restaurant',), ('Town & Country Club',), ('Ritz-Carlton SF - Club Lounge',), ('Cafe Ethiopia',), ('PEKING WOK RESTAURANT',), ('BUFFALO BURGERS RESTAURANT',), ('KENTUCKY FRIED CHICKEN #50',), ('SHANGRILA VEGETARIAN REST',), ('JAVA BEACH CAFE',), (\"L'AVENIDA\",), ('GOLDEN ISLAND CAFE',), ('MING TAI WUN TUN NOODLE, INC.',), ('VANIDA THAI KITCHEN',), (\"The Sunset's Best Seafood Restaurant\",), ('RAILROAD EXPRESSO CAFE',), ('HEUNG YUEN RESTAURANT',), ('BIG MOUTH BURGERS',), ('RINCON PERUANO RESTAURANT',), (\"CHAVITA'S MEXICAN RESTAURANT\",), ('IL BORGO',), ('PORK STORE CAFE',), ('CREPE EXPRESS',), ('BEAN THERE COFFEE & TEA',), ('UNIVERSAL CAFE',), ('HOANG DAT COFFEE SHOP',), ('STARBUCKS COFFEE #509',), (\"Peet's Coffee & Tea, Inc\",), ('Starbucks Coffee',), ('Star Bagels',), ('Aux Delices Vietnam',), ('POMELO ON CHURCH',), ('Boudin Petit Cafe',), ('Zona Rosa',), (\"TULLY'S  COFFEE\",), ('TEKKA JAPANESE RESTAURANT',), (\"PEET'S COFFEES & TEAS\",), (\"TAWAN'S THAI FOOD\",), ('ZAOH RESTAURANT',), ('JAVA SUPREME',), ('THANH THANH',), ('KABABAYAN FAST FOOD',), (\"KD'S GROG & GROCERY\",), ('NORTH BEACH PIZZA',), ('STARBUCKS COFFEE CO.',), (\"ORPHAN ANDY'S\",), ('ANCHOR OYSTER BAR INC.',), ('GORDO TAQUERIA #6',), ('SAN MIGUEL RESTAURANT #2',), ('HIGHER GROUNDS',), ('Beanery',), ('Cordon Bleu',), ('EXIT THEATRE',), ('LA TORTILLA',), (\"GASPARE'S PIZZA HOUSE & REST.\",), (\"YUMMA'S MED GRILL\",), ('La Copa Loca',), ('SWEET DELIGHT BAKERY',), ('MIFUNE DON',), ('CABLE CAR COFFEE CO',), ('Waterfront Bakery',), ('CAFE V',), ('KISS SEAFOOD',), ('BIO',), ('BAZAAR CAFE',), ('Whole Foods Steep Brew',), ('A2 CAFE',), (\"ZEKE'S DIAMOND BAR\",), ('Starbucks Coffee Company #6765',), ('Nonna Rose Restaurant',), ('CLUB WAZIEMA',), ('AT&T - Cognac Bar/ KITCHEN Room3232 [145080]',), ('AT&T - FIELD CLUB KITCHEN [145082]',), (\"CHOUQUET'S\",), (\"CITY'S CHOICE\",), ('Neiman Marcus On The Square',), ('Cafe Niebaum Coppola',), ('OMNI S.F. Hotel - Food & Beverage Storeroom',), (\"Uncle Vito's Pizza\",), ('Asia Chinese Food #2',), ('TANPOPO',), ('901 Columbus Cafe',), ('SF Bay Club - Court Cafe',), (\"Nick's Lighthouse\",), ('ESPERPENTO RESTAURANT',), ('Zazie',), ('BURGERMEISTER',), ('LE ZINC',), ('CLADDAGH COFFEE',), ('Tung Sing Restaurant',), ('CLEMENT BBQ RESTAURANT',), ('Bistro Burger',), ('LUPA TRATTORIA',), ('Casa Mexicana Restaurant',), ('KEZAR PUB',), ('AXUM',), ('MARTHA & BROS. COFFEE CO',), ('COURTYARD BY MARRIOTT-RESTAURANT',), ('PANDA EXPRESS',), ('Just For You Cafe Inc.',), (\"WORKING GIRLS' CAFE III\",), ('NORDSTROM CAFE BISTRO',), ('PRIMO PATIO CAFE',), ('New Lun Ting Cafe, Inc',), ('Plouf',), ('Raintree Cafe',), ('Lanna Restaurant',), ('Emporio Rulli Il Caffe at Union Square',), ('SEA BREEZE CAFE',), ('CAFE MUMS',), ('KFC/TACO BELL',), ('Osha Thai Noodle Cafe',), ('RED BALLOON',), (\"Fisherman's Pizzeria Inc [#50]\",), ('Dar Bar Pakistani/Indian Cusine',), ('FLORIO',), (\"Pete's Deli & Cafe\",), ('Academy Bar & Kitchen',), ('GARDEN HOUSE CAFE',), ('ATLAS CAFE',), ('CHEVRON #1512',), ('TAL-Y-TARA TEA & POLO SHOPPE',), ('MOONLIGHT CAFE',), ('Cesario',), ('Nob Hill Cafe',), ('Rogue Ales Public House',), ('Sushi on North Beach',), (\"Murphy's\",), ('The Old Ship Saloon',), ('Cafe Bastille',), (\"Ma's Dim Sum & Cafe\",), ('Battery Street Coffee Roastery',), (\"Pat's Cafe\",), ('Cafe Venue',), (\"Diller's Delicatessen\",), ('Latte Express #3',), ('Starbucks Coffee Company',), ('Escape From New York Pizza',), ('Cafe Tiramisu',), ('Pasquales',), ('Sorabol-Stonestown Galleria',), (\"MAI'S VIETNAMESE RESTAURANT\",), ('SIMPLE PLEASURES CAFE',), ('Clement Street Bar & Grill',), ('GEARY STREET BELLA PIZZA',), ('TARAVAL OKAZU YA',), ('Allstar Donuts',), ('LINCOLN PARK BAR AND GRILL',), ('Sunrise Deli',), ('YUMMY YUMMY VIETNAMESE RESTAURANT',), ('JITRA THAI CUISINE',), ('S.F. Pizza',), ('BULLSHEAD RESTAURANT',), ('Han Bat Korean Restaurant',), ('T C PASTRY',), ('Spiazzo',), ('AL-MASRI EGYPTIAN RESTAURANT',), ('KENTUCKY FRIED CHICKEN',), ('MY FAVORITE CAFE',), ('BURMA SUPERSTAR RESTAURANT',), ('GOLDEN CHARIOT BAKERY & REST',), ('PRESIDIO GOLF CLUB',), ('GENEVA STEAK HOUSE',), ('EL POLLO SUPREMO',), (\"Elaine's Kitchen\",), ('Bocadillos',), ('Hook a Cook',), ('CHEESE STEAK SHOP, THE',), ('EXTREME  PIZZA',), ('THE GROVE FILLMORE',), ('MONROE RESIDENCE CLUB',), ('SANPPO RESTAURANT',), ('QUEEN ANNE HOTEL',), ('ISUMIYA',), (\"Joanie's Diner Inc.\",), ('Chestnut Diner',), ('Hyde Street Seafood House & Raw Bar, Inc',), ('Cocotte',), ('ZA',), ('Zarzuela',), ('Sun Kwong Restaurant',), ('Amarena',), ('CAFE LOMBARD',), ('ATAMI SUSHI BAR & GRILL',), ('ZUSHI-PUZZLE',), ('Thai Spice Restaurant',), ('Street Restaurant',), (\"Peet's Coffee & Tea\",), ('KENTUCKY FRIED CHICKEN #249',), (\"CARL'S JUNIOR\",), ('Olympic Flame Cafe',), ('Original Perfect Hamburger',), ('Kim Thanh Restaurant',), ('ANH HONG PHU-NHUAN RESTAURANT',), ('A La Turca',), (\"LITTLE HENRY'S RESTAURANT\",), (\"NOAH'S BAGELS\",), ('DRAGON WELL',), ('B & M MEI SING RESTAURANT',), ('HOWARD STREET COFFEE ROASTERY CAFE',), ('THE BITTER END',), ('FRINGALE',), ('HARD KNOX CAFE',), ('Caffe Sapore',))", "rowcount": 353, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 597, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((374,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((374,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 598, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement can be translated to ClickHouse as follows:\n```sql\nSELECT COUNT(business_id) FROM inspections WHERE toYYYYString(date) = '2014' AND type = 'Fo. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 599, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT DISTINCT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE (toYYYYString(T1.date) = '2013') AND (T1.score = 100). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 600, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('SF',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SF',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 601, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 38\n Code: 38. DB::Exception: Cannot parse date: value is too short: Cannot parse Date32 from String: In scope SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE (toDate32('date') = '2013-01-01') AND (T1.description = 'Contaminated or adulterated food'). (CANNOT_PARSE_DATE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 602, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 603, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Clickhouse') (line 1, col 1): Clickhouse SQL is different in many ways from SQLite. Here's how the SQL statement would look like in ClickHouse.\n\nPlease note that in ClickHouse we do not use . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 604, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((74.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((74.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 606, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 607, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 608, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 254 (''\n```\n\n FORMAT Native') (line 7, col 65): '\n```\n\n FORMAT Native. Single quoted string is not closed: ''\n```\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 418, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Anastasia', 'Hansen'), ('Joshua', 'Rosa'), ('Zach', 'Barber'), ('Lisa', 'Tillman'), ('Bob', 'Benson'), ('Craig', 'Kerr'), ('Standard', 'Murray'), ('Rosemary', 'Kennedy'), ('Sarah', 'Lindsey'), ('Jessica', 'Anthony'), ('Mark', 'Atkins'), ('Vicky', 'Coleman'), ('Randall', 'Curtis'), ('Ruth', 'Noble'), ('Arnold', 'Holder'), ('Robert', 'Morin'), ('David', 'Hodges'))", "rowcount": 17, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Anastasia', 'Hansen'), ('Joshua', 'Rosa'), ('Zach', 'Barber'), ('Lisa', 'Tillman'), ('Bob', 'Benson'), ('Craig', 'Kerr'), ('Standard', 'Murray'), ('Rosemary', 'Kennedy'), ('Sarah', 'Lindsey'), ('Jessica', 'Anthony'), ('Mark', 'Atkins'), ('Vicky', 'Coleman'), ('Randall', 'Curtis'), ('Ruth', 'Noble'), ('Arnold', 'Holder'), ('Robert', 'Morin'), ('David', 'Hodges'))", "rowcount": 17, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 419, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 420, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((108,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((108,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 421, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 422, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"TONY'S BURRITO MEX, INC\",), (\"PIZZARO'S\",), ('ORANGE GARDEN RESTAURANT LLC',), ('COALFIRE',), ('FOREVER YOGURT',), ('DUKS RED HOTS',), ('Southern Grill',), ('EL SALVADOR RESTAURANT',), ('LA HACIENDITA TAQUERIA INC',), ('COMPUTER AND NETWORK SOLUTIONS',), ('TAQUERIA JAMAY',), ('JALISCO RESTAURANT',), ('EL CONCORDIA',), ('LAS ISLAS MARIAS',), ('McDonalds',), ('STARFRUIT CAFE',), ('SMOTHER BROTHERS',), ('GOLDEN CRUST PIZZERIA',), ('THE PARTHENON RESTAURANT INC',), ('THE WORM HOLE',), (\"CHICAGO'S HOME OF CHICKEN & WAFFLES\",), ('SAN JOSE RESTAURANT, INC.',), ('EL MEZQUITE GRILL',), ('PR CAFETERIA INCORPORATED',), ('ROCKIN  TACO',))", "rowcount": 25, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 423, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 424, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 38\n Code: 38. DB::Exception: Cannot parse date: value is too short: Cannot parse Date from String: In scope SELECT COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE (T2.address = '5000 N Wolcott Ave') AND (T2.title = 'Sanitarian') AND (toDate32(T1.inspection_date) = (toDate('2011-05') - 1)). (CANNOT_PARSE_DATE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 425, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 426, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 427, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 428, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 429, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 430, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 94 ('only') (line 1, col 94): only the translated SQL. Do not add any extra commentary.\n\n FORMAT Native. Expected one of: token sequence, Dot, token, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, GROUP BY, WITH, HAVING, WINDOW, QUALIFY, ORDER BY, LIMIT, OFFSET, FETCH, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, end of query. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 431, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('ClickHouse') (line 1, col 1): ClickHouse uses the function toYear() instead of strftime(). So the SQL statement would look like this in ClickHouse:\n\n```sql\nSELECT COUNT(inspection_id) FROM i. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 432, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 433, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((125.125,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((125.125,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 434, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 435, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal types of arguments (Date, UInt16) of function equals: In scope SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE (T1.dba_name = 'JOHN SCHALLER') AND (toDate(T2.inspection_date) = 2010). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 436, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 437, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 38\n Code: 38. DB::Exception: Cannot parse date: value is too short: Cannot parse Date32 from String: In scope SELECT COUNTDistinct(T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE (toDate32('2010-07') <= T2.inspection_date) AND (T2.inspection_date < addDays(toDate32('2010-08'), 1)) AND (T2.results = 'Fail') AND (T1.facility_type = 'Restaurant'). (CANNOT_PARSE_DATE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 438, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('COALFIRE', 'Fail'), ('LOS CANDILES', 'Pass'), (\"BANANA JOE'S\", 'Pass'), ('RIB PLACE INC.', 'Pass'), ('MR CAJAKES SANDWICH SHOP', 'Pass w/ Conditions'), ('AMEER KABOB', 'Pass'), ('AL BAR B QUE', 'Pass'), (\"TONY'S SUB\", 'Pass'), (\"MARY'S SNACK SHOP\", 'Pass w/ Conditions'), (\"MCDONALD'S CORPORATION\", 'Pass'))", "rowcount": 10, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `strftime` does not exist. In scope SELECT DISTINCT T3.dba_name, T2.results FROM employee AS T1 INNER JOIN inspection AS T2 ON (T1.employee_id = T2.employee_id) AND (strftime('%Y', T2.inspection_date) = '2010') INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE (T1.first_name = 'Bob') AND (T1.last_name = 'Benson'). Maybe you meant: ['toTime']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 439, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 38\n Code: 38. DB::Exception: Cannot parse date: value is too short: Cannot parse Date32 from String: In scope SELECT COUNTDistinct(T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE (toDate32('2010-04') = T2.inspection_date) AND (T1.facility_type = 'Restaurant') AND (T2.results = 'Fail'). (CANNOT_PARSE_DATE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 440, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 441, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 212, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.342229199372056,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `sumReplicatedOnCluster` does not exist. In scope SELECT (toFloat64(sumReplicatedOnCluster('local')(sign(if((T1.Chromosome > 10) AND (T3.Chromosome > 10), 1, 0)))) * 100) / uniqCombined(GeneID)(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 INNER JOIN Genes AS T3 ON T3.GeneID = T2.GeneID2 WHERE T2.Expression_Corr > 0. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 213, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((84.61538461538461,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The equivalent ClickHouse SQL statement is as follows:\n\n```sql\nSELECT toFloat64(sum(if(T2.Expression_Corr > 0, 1, 0))) * 100 / count(distinct T2.GeneID1) \nFROM . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 556, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('NO',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('NO',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 557, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 611, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('222-23-2222',), ('444-45-4444',), ('500-50-0505',), ('925-45-7116',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 36\n Code: 36. DB::Exception: Substitution '\\1' in replacement argument is invalid, regexp has only 0 capturing groups: while executing 'FUNCTION replaceRegexpOne('(\\\\d+),(\\\\d{3})'_String :: 0, salary : 1, '\\\\1.\\\\2'_String :: 2) -> replaceRegexpOne('(\\\\d+),(\\\\d{3})'_String, __table1.salary, '\\\\1.\\\\2'_String) Nullable(String) : 6': While executing MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder). (BAD_ARGUMENTS) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 612, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the SQL statement translated from SQLite to ClickHouse:\n\n```sql\nSELECT \n    CAST(REPLACE(substring(T1.salary, 4), ',', '') AS Float64) - CAST(REPLACE(su. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 613, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 42\n Code: 42. DB::Exception: Number of arguments for function replaceRegexpOne doesn't match: passed 2, should be 3: In scope SELECT COUNT(*) FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = CAST(T2.positionID, 'UInt64') WHERE (replaceRegexpOne('(\\\\d+\\\\,\\\\d{3})', '$1') > '20000') AND (T2.positiontitle = 'Trainee'). (NUMBER_OF_ARGUMENTS_DOESNT_MATCH) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 614, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 354 (''s `SUBSTR` and also it uses FLOAT data type for real numbers rather than REAL as in SQLite. Also, primary key is defined with no specific type unlike in sqlite. I have assumed all integer types from schema information are Int64.\n\n FORMAT Native') (line 9, col 83): 's `SUBSTR` and also it uses FLOAT data type for real numbers rather than REAL as in SQLite. Also, primary key is defined with no specific type unlike in sqlite. Single quoted string is not closed: ''s `SUBSTR` and also it uses FLOAT data type for real numbers rather than REAL as in SQLite. Also, primary key is defined with no specific type unlike in sqlite. I have assumed all integer types from schema information are Int64.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 616, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((66.66666666666667,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the SQL statement translated from sqlite to clickhouse:\n\n```sql\nSELECT 100 * ((toFloat64(replaceRegexpOne('[^\\\\d]', T2.maxsalary)) - toFloat64(replaceRe. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 617, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 42\n Code: 42. DB::Exception: Number of arguments for function replaceRegexpOne doesn't match: passed 2, should be 3: In scope SELECT COUNT(*) FROM employee WHERE (performance = 'Poor') AND (toFloat64(replaceRegexpOne('^\\\\D+', salary)) > 50000). (NUMBER_OF_ARGUMENTS_DOESNT_MATCH) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 618, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('David', 'Whitehead'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('David', 'Whitehead'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 619, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('```sql\nSELECT COUNT(*) FROM position WHERE toFloat64(replaceRegexpOne(substring(maxsalary, 4), ',', '')) < 100000\n```') (line 1, col 1): ```sql\nSELECT COUNT(*) FROM position WHERE toFloat64(replaceRegexpOne(substring(maxsalary, 4), ',', '')) < 100000\n```\n\n FORMAT Native. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 620, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 621, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((55250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((55250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 507, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8.026030368763557,), (11.946050096339114,), (0.0,))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8.026030368763557,), (11.946050096339114,), (0.0,))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 553, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((27, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 521 (''s represented as `T1.IMG_ID = 1`). \n- The second summation counts rows where `X=341 AND Y=27 AND W=42 AND H=51` (again in ClickHouse syntax).\n\n FORMAT Native') (line 10, col 86): 's represented as `T1.IMG_ID = 1`). \n- The second summation counts rows where `X=341 AND Y=27 AND W=42 AND H=51` (again in ClickHouse syntax).\n\n FORMAT Native. Single quoted string is not closed: ''s represented as `T1.IMG_ID = 1`). \n- The second summation counts rows where `X=341 AND Y=27 AND W=42 AND H=51` (again in ClickHouse syntax).\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 96, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE (toYYYYString(T1.air_date) = '1998') AND (T2.organization = 'International Monitor Awards') AND (T2.result = 'Winner'). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 349, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.15267175572519084,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.15267175572519084,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 356, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 372, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Strawberries',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), ('Cream of Cauliflower Soup',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Raw Oysters',), ('Stewed tomatoes',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('Rockaways oysters',), ('Hafergrutze',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Grape fruit',), ('Oranges',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('Rissoles a la Merrill',), ('Lammkoteletten nach Villeroi',), ('SALTED ALMONDS',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Vegetable Soup',), ('Baked fish, wine sauce',), ('Pur\u00e9e of split peas aux croutons',), ('Consomm\u00e9 in cup',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Hot ribs of beef',), ('Doucette salad',), ('Stewed tomatoes',), ('New beets',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Old fashioned rice pudding',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Oranges',), ('Strawberries',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Grape fruit',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Stewed prunes',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges',), ('Oranges sliced',), ('Large pot of coffee',), ('Cup of coffee (served in small pot)',), ('Large pot of Oolong tea',), ('Pot of chocolate',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Sliced Bananas and Cream',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('French rolls',), ('Milk rolls',), ('Celery',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Mohren Suppe mit Sago',), ('Oranges',), ('Food',), ('Shreaded Wheat',), ('Clam cocktail',), ('Oyster cocktail',), ('Sardines',), ('Little Neck clams',), ('Stuffed olives',), ('Lalla Rookh Sorbet',), ('Celery',), ('Malaga grapes',), ('Pears',), ('Martineaus',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('Strawberry',), ('Oyster Bay asparagus',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Fruit',), ('Plain Omelette',), ('Canape, Martha',), ('Fruit',), ('Quaker Oats',), ('Cracked Wheat',), ('Puree of beans',), ('Fruits in Season',), ('Fried Flounders',), ('Oatmeal Porridge',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Bouillon in cup',), ('Queen olives',), ('Radishes',), ('Chow chow',), ('Panfish, Meuniere, German fried potatoes',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Philadelphia Cream Cheese',), ('Assorted cakes',), ('Scollops en caisse, Supreme',), ('Irish stew',), ('Marrow on toast, Bordelaise',), ('Lobster salad',), ('Potato salad',), ('Chicken salad',), ('Mashed potatoes',), ('Coffee',), ('Spinach with egg',), ('Boiled potatoes',), ('Baba au rhum',), ('Hot buns',), ('Tongue',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Stewed prunes',), ('Boiled rice',), ('Roast beef',), ('Sliced Bananas',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Sardines',), ('Chicken',), ('Apple Sauce',), ('Tea',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Coffee',), ('Milk',), ('Rolls',), ('Griddle cakes',), ('Baked Potatoes',), ('Porterhouse Steak',), ('Pommes de Terre a la Creme',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Onions plain or fried',), ('Sandwiches of all Kinds',), ('Small Steak',), ('Hamburger Steak',), ('Veal Chops',), ('Mutton Chops',), ('Pork Chops',), ('Ham & Eggs',), ('Bacon & Eggs',), ('Fried Liver',), ('German Pancake',), ('Omelettes',), ('Oysters & Clams',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters stewed',), ('Oysters box stew',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Fruit',), ('Oat Meal',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Fish cakes',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Griddle cakes',), ('Hominy',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Fish cakes',), ('Sirloin Steak',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Lyonnaise Potatoes',), ('Griddle cakes',), ('Marmalade',), ('Coffee',), ('Tomato Soup',), ('Baked Weakfish',), ('Oysters, Raw on the shell',), ('Half and Half Scallops & Oysters',), ('Oranges',), ('Rolled Oats',), ('Broiled Mullet',), ('Sirloin Steak with Mushrooms',), ('Pork Chops Piquante Sauce',), ('Broiled Chicken on Toast',), ('Calfs Liver and Onions',), ('Broiled Kidney with Bacon',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Waffles',), ('Split Rolls',), ('Hot Cakes',), ('Tea',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Oranges',), ('Oatmeal Porridge',), ('Smelts Meuniere',), ('Findon Haddock',), ('Oatmeal Porridge',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Cold Half Chicken and Ham ',), ('Cold Veal and Ham Pie',), ('Cold Roast Lamb',), ('Oranges',), ('Fried Flounder',), ('Grillirte Kuken',), ('Hoot Mon Mush',), ('Fillet Steaks aux Champignon',), ('Fruit',), ('Strawberries',), ('broiled shad',), ('Oysters, Milk Stew',), ('Oysters, Boston stew',), ('Oysters, Box Stew',), ('Oysters, Raw on the Half Shell',), ('Coffee',), ('Quaker Oats',), ('Boiled rice',), ('Smelts, Tartare sauce',), ('Findon Haddock',), ('Beef Steak, Saratoga chips',), ('Calves Liver & Bacon',), ('Sausage',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Sliced Pineapples',), ('Oatmeal Porridge',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Broiled Ham',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Cold Steak Pie',), ('Cold Mutton',), ('Cold Roast Beef',), ('Cold German Sausage',), ('Oysters, Boston Box Stew',), ('Oysters, Fry',), ('Oysters, Fry with Bacon',), ('Oatmeal',), ('Oyster Omelette',), ('Stewed Tripe',), ('Pork Sausage and Lyonnaise Potatoes',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Mock turtle soup',), ('Consomme Benoiton',), ('Filet Steaks aux Champignon',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Consomme San Remo',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Clear green turtle soup',), ('Corned Beef Hash',), ('Consomme Maceo',), ('Boiled rice',), ('Puree Mongol',), ('Broiled Rashers of Ham',), ('Consomme Printanier',), ('French fried potatoes',), ('Chicken Mulligatawny',), ('Split Rolls',), ('Oysters, Blue Point Stew',), ('French bread',), ('Corn bread',), ('Oysters, Crumb Fry',), ('English Beef soup',), ('Beef Stew',), ('Oysters, Blue Point Fry',), ('Filet of sole a la Horly',), ('broiled shad',), ('Diamond back terrapin',), ('Fruit',), ('Oat Meal',), ('Boiled rice',), ('Plain Omelette',), ('Fried Eggs',), ('Fried Plaice - Meuniere',), ('Kippered Herring',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Sausage & Mashed Potatoes',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fruits in Season',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Boiled potatoes',), ('Fried fish',), ('Egg, to order',), ('Diamond stew',), ('Jam',), ('Marmalade',), ('Tea',), ('Stewed prunes',), ('Clam Fritters',), ('Boiled Salt Mackerel',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Pork Chops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('English Mutton Chops',), ('Broiled Spring Chicken',), ('Sirloin Steak',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Plain Omelet',), ('Fried Indian Mush',), ('Baked Potatoes',), ('Saratoga Chips',), ('French fried potatoes',), ('Lyonnaise Potatoes',), ('Potatoes stewed in Cream',), ('Saute Potatoes',), ('Rye Bread',), ('French rolls',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn muffins',), ('Wheat Cakes, with Maple Syrup',), ('Coffee',), ('Tea',), ('Chocolate',), ('Cocoa',), ('Oatmeal Porridge',), ('Fruits in Season',), ('Corn Meal Mush',), ('Boiled',), ('Rolled Oats',), ('Scotch grouse en casserole',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Fruit',), ('Quaker Oats',), ('Scrambled Eggs',), ('Eggs au Beurre Noir',), ('Broiled Blue Fish',), ('Fish cakes',), ('Sirloin Steak, Fried French Chips',), ('Chicken Liver on Toast with Bacon',), ('Pork Chops, Sage & Onions',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Marmalade',), ('Coffee',), ('Salt Codfish, Spanish Style',), ('Marmalade',), ('Mashed potatoes',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Apples',), ('Passion Fruit',), ('Kippered Herrings',), ('Curried Pork and Rice',), ('Stewed Tripe with Cream sauce',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Chicken broth',), ('Consomme Macaroni',), ('Oat Meal',), ('Buckwheat Cakes',), ('Hard Boiled Egg',), ('Fruit',), ('Cream Cheese',), ('Plain Omelette',), ('Fried Eggs',), ('Hominy',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Kippered Herring',), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Fish cakes',), ('Apfelsinen',), ('Apfel',), ('Maisgries',), ('Hafergrutze',), ('Snowflakes',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Salt Codfish, Spanish Style',), ('Fruit',), ('Fillet Steads with Mushrooms',), ('Poached Eggs on Toast',), ('Curried Prawns and Rice, Bombay Duck',), ('Eggs au Beurre Noir',), ('Lamb Chops, Broiled Plain',), ('Whiting - Meuniere',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Fish cakes',), ('Sirloin Steak - Fried Onions',), ('Broiled Ham',), ('Grape fruit',), (\"Lambs' Liver Saute\",), ('Breakfast',), ('Chicken Liver on Toast with Bacon',), ('Tripe Fritters',), ('Jambon Grille',), ('Minced Veal a la Zingari',), ('Eggs to order',), ('Dried Hash',), ('Corned Beef Hash',), ('Mutton Chops - Saute Potatoes',), ('Calfs Liver + Bacon',), ('Boiled rice',), ('Cold Smoked Tongue and Ham',), ('Buckwheat Cakes',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Marmalade',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Coffee',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Broiled Fresh Mackerel',), ('English Muffins',), ('Salt Cod, Egg Sauce',), ('Cracked Wheat with Fresh Milk',), ('Rice Cakes',), ('Shad roe and bacon',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Marmalade',), ('Jam',), ('Smoked Schnapper Butter Sce',), ('Yarmouth Bloaters',), ('Tea',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Coffee',), ('Cocoa',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Fruits in Season',), ('Frizzled Breakfast Bacon (to order)',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Saute of Kidney',), ('Corned Beef Hash',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('Coffee',), ('Scrambled Eggs and bacon',), ('liver and bacon',), ('Oranges',), ('Apples',), ('Oatmeal',), ('Fillet de Boeuf a la Parisienne',), ('Fried Chicken a la Maryland',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Kippered Herrings',), ('Broiled Ham',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Strawberries',), ('Hominy',), ('Jam',), ('Boiled potatoes',), ('Pork Sausage and Lyonnaise Potatoes',), ('Baked Apple Dumpling, Hard Sauce',), (\"Potato a la Maitre d'Hotel\",), ('Tea',), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Oysters, Roast in Shell',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Asparagus Omelette ',), ('rice pudding',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Swiss Rolls',), ('Fruit in Season',), ('Charlotte Russe',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Jam',), ('Lettuce',), ('Cum-quats',), ('Raisin cake',), ('Tea',), ('Apples',), ('Orange',), ('Fillet Steak ',), ('Oranges',), ('Grape fruit',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Ham omelette',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('China Teas',), ('Coffee',), ('Broiled Salt Mackerel',), ('Corned Beef Hash',), ('Apples',), ('Stewed Tripe Spanish',), ('Germea',), ('Eggs to order',), ('Eggs to order',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Butter Cakes with Maple Syrup',), ('Marmalade',), ('Eggs to order',), ('Bananas',), ('Hot Rolls',), ('Coffee ',), ('Kraftsuppe, Prinzessin Art',), ('Cracked Wheat',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Boiled rice',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Liver & Bacon',), ('Blumenkohl, hollandische Sauce',), ('Stewed Tripe Spanish',), ('Beef Steak, fried onions',), ('Cotelettes de Veau, Sauce Tomate',), ('Gratinierter Eierkuchen nach Mornay',), ('Boiled eggs',), ('Split Rolls',), ('Veal Cuttlets Lyonnaise',), ('Entenbraten, Bordeaux Sauce',), ('Fried Potatoes',), ('Pork Sausages, Snowflake Potatoes',), ('Mutton Chops & Potato Chips',), ('Hot Rolls',), (\"Lambs' Liver with Bacon\",), ('Mirabellen',), ('Coffee',), ('Tripe, Spanish Style',), ('Citronen-Auflauf',), ('Boiled rice',), ('Liver & Bacon',), ('Cape Horn Hash',), ('Broiled Rashers of Ham',), ('Fruit in Season',), ('Breakfast Rolls',), ('Corn Meal Fritters',), ('Corn bread',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Dry Toast',), ('Boiled Potatos',), ('Pikelets',), ('Rolled Oats',), ('Fried Whiting',), ('Hot Rolls',), ('Flannel Cakes',), ('Marmalade',), ('Tea',), ('Jam',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Tea',), ('Coffee',), ('Fillet Steak Fried Potatoes',), ('Cocoa',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Bacon to order',), ('Breakfast Rolls',), ('Wheat Cakes',), ('Marmalade',), ('Coffee',), ('Beef Steak & onions',), ('Fried Bananas',), ('Egg to Order',), ('Beef Steak and Champignons',), ('Boiled potato',), ('Currant Buns',), ('Cold Ham',), ('Boiled Cod',), ('Waffle',), ('Marmalade',), ('Broiled Spring Chicken',), ('Fruit',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Tea',), ('Oatmeal Porridge',), ('Buckwheat Cakes',), ('Yarmouth Bloaters',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Broiled Ham',), ('Curried Chicken with Rice',), ('Two Eggs Boiled',), ('Eggs to order',), ('Tea',), ('Tea',), ('Mutton Chops',), ('Potato Chips',), (\"Lambs' Liver Saute\",), ('Tea',), ('Curried Veal and Rice',), ('Broiled Rashers of Bacon',), ('Cold: Ox Tongue',), ('French bread',), ('Marmalade',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Bananas',), ('Coffee Cake',), ('Cold Ham',), ('Fried Sausages, Mashed Potatoes',), ('Corned Beef Hash',), ('Split Rolls',), ('Eggs to order',), ('Eggs to order',), ('Tea',), ('Waffles',), ('Coffee',), ('Cocoa',), ('Quaker Oats',), ('Devilled Kidney',), ('Marmalade',), ('Fried Potatoes',), ('Pettijohn',), ('Hot Rolls',), ('Coffee',), ('Corn bread',), ('Fried Ham & Eggs',), ('French bread',), ('Pork Sausage and Mashed Potatoes',), ('Boiled Cracked Wheat',), ('Dry Toast',), ('Spanish Omelettes',), ('Rice Cakes',), ('Fried smelts',), ('English Muffins',), ('Calves Liver and Onions',), ('Marmalade',), ('Mutton Chops (to order)',), ('Jam',), ('Porterhouse Steak and Lamb Chops',), ('Honey in the Comb',), ('Jacket Potatoes',), ('Chocolate',), ('Curried Shrimps and Rice',), ('Corn bread',), ('Boiled Corn Meal with Cream',), ('Yarmouth Bloaters',), ('Maple Syrup',), ('Fried Fresh Fish',), ('Corned Beef Hash',), ('Honey',), ('Jam',), ('Fillet Steaks with Mushrooms',), ('Marmalade',), ('Tea',), ('Cocoa',), ('Tea',), ('Tongues and Sounds',), ('Hot Rolls',), ('Stewed Tripe',), ('Cornmeal Mush',), ('Coffee',), ('Cocoa',), ('Rice Cakes',), ('Breakfast Delight',), ('Diamond stew',), ('Fresh Comb Honey',), ('Flaked Rice',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fricassee of Turkey Wings Celery Sauce',), ('Fried Country Sausages and Lima Beans',), ('Rolled Oats',), ('Oxtail Ragout and Vegetables',), ('Yarmouth Bloaters',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Broiled Ham',), ('Lynnhavens oysters',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Frankfurter Sausages and Sauerkraut',), ('Cape Cods oysters',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Mashed Turnips',), ('Fried Liver & Bacon',), ('Stewed tomatoes',), ('Corned Beef Hash',), ('Oyster cocktail',), ('Boiled potatoes',), ('Potatoes',), ('Potatoes Saute',), ('Cherrystones clams',), ('Fried Ham',), ('Eclairs',), ('Boiled potatoes',), ('Pies',), ('Clam cocktail',), ('Potatoes Boiled',), ('Baked Shad Wine Sauce',), ('Corn bread',), ('Hot Biscuits',), (\"Calf's Liver and Bacon\",), ('Boiled Fish',), ('Broiled Lamb Kidneys and Bacon',), ('Corn bread',), ('Roast Leg of English Mutton',), ('Toast',), (\"Frogs' legs in every style\",), ('French bread',), (\"Roast Phil'a Chicken\",), ('Flannel Cakes',), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), (\"Roast Phil'a Chicken\",), (\"Lambs' Liver Saute\",), ('York Ham, Grilled',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sauterne 1ere',), ('St. Julien Sup\u00e8rieur',), ('Tripe Fritters',), ('Pontet Canet',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Niersteiner',), ('Hochheimer',), ('Corned Beef Hash',), ('Perrier Jou\u00ebt Special and Brut',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Eggs to order',), ('Clicquot Sec',), ('Mo\u00ebt & Chandon, White Seal',), ('Mo\u00ebt & Chandon, Brut',), ('Irroy Brut',), ('Fried New Potatoes',), ('Apollinaris',), ('Johannis',), ('Hot Rolls',), ('Corn bread',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Dry Toast',), ('Bisque of Crawfish',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('English Muffins',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('French bread',), ('New Asparagus, Cream Sauce',), ('Sherbert Roman',), ('Red Head Duck',), ('Rice Cakes',), ('Celery Salad',), ('Fancy Ice Cream',), ('Honey in the Comb',), (\"Broiled Shad Maitre d'Hotel\",), ('Fruit',), ('Cakes',), ('Marmalade',), ('Cheese',), ('Coffee',), ('Jam',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Oranges',), ('Bananas',), ('Apples',), ('Passion Fruit',), ('Fried Whiting',), ('Rolled Oats',), ('Oranges',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Bananas',), ('Curried Lamb and Rice',), ('Broiled Chicken on Toast',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Fried Bananas',), ('Boiled Mackerel',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Veal Cutlets Breaded',), ('Obst',), ('Hamburg Steak with Onions',), ('Nachtisch',), ('Pork Sausages',), ('Corned Beef Hash',), ('Fried Gar fish',), ('Fried Ham',), ('liver and bacon',), ('Eggs to order',), ('Potatoes Boiled',), ('Corn bread',), ('Hot Rolls',), ('Smoked Snapper',), ('English Muffins',), ('Toast',), ('Batter Cakes',), ('Tea',), ('Gemischtes Rahmeis',), ('Oat Meal Porridge',), ('Pork Cutlets',))", "rowcount": 1001, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Strawberries',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), ('Cream of Cauliflower Soup',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Raw Oysters',), ('Stewed tomatoes',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('Rockaways oysters',), ('Hafergrutze',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Grape fruit',), ('Oranges',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('Rissoles a la Merrill',), ('Lammkoteletten nach Villeroi',), ('SALTED ALMONDS',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Vegetable Soup',), ('Baked fish, wine sauce',), ('Pur\u00e9e of split peas aux croutons',), ('Consomm\u00e9 in cup',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Hot ribs of beef',), ('Doucette salad',), ('Stewed tomatoes',), ('New beets',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Old fashioned rice pudding',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Oranges',), ('Strawberries',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Grape fruit',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Stewed prunes',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges',), ('Oranges sliced',), ('Large pot of coffee',), ('Cup of coffee (served in small pot)',), ('Large pot of Oolong tea',), ('Pot of chocolate',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Sliced Bananas and Cream',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('French rolls',), ('Milk rolls',), ('Celery',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Mohren Suppe mit Sago',), ('Oranges',), ('Food',), ('Shreaded Wheat',), ('Clam cocktail',), ('Oyster cocktail',), ('Sardines',), ('Little Neck clams',), ('Stuffed olives',), ('Lalla Rookh Sorbet',), ('Celery',), ('Malaga grapes',), ('Pears',), ('Martineaus',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('Strawberry',), ('Oyster Bay asparagus',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Fruit',), ('Plain Omelette',), ('Canape, Martha',), ('Fruit',), ('Quaker Oats',), ('Cracked Wheat',), ('Puree of beans',), ('Fruits in Season',), ('Fried Flounders',), ('Oatmeal Porridge',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Bouillon in cup',), ('Queen olives',), ('Radishes',), ('Chow chow',), ('Panfish, Meuniere, German fried potatoes',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Philadelphia Cream Cheese',), ('Assorted cakes',), ('Scollops en caisse, Supreme',), ('Irish stew',), ('Marrow on toast, Bordelaise',), ('Lobster salad',), ('Potato salad',), ('Chicken salad',), ('Mashed potatoes',), ('Coffee',), ('Spinach with egg',), ('Boiled potatoes',), ('Baba au rhum',), ('Hot buns',), ('Tongue',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Stewed prunes',), ('Boiled rice',), ('Roast beef',), ('Sliced Bananas',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Sardines',), ('Chicken',), ('Apple Sauce',), ('Tea',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Coffee',), ('Milk',), ('Rolls',), ('Griddle cakes',), ('Baked Potatoes',), ('Porterhouse Steak',), ('Pommes de Terre a la Creme',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Onions plain or fried',), ('Sandwiches of all Kinds',), ('Small Steak',), ('Hamburger Steak',), ('Veal Chops',), ('Mutton Chops',), ('Pork Chops',), ('Ham & Eggs',), ('Bacon & Eggs',), ('Fried Liver',), ('German Pancake',), ('Omelettes',), ('Oysters & Clams',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters stewed',), ('Oysters box stew',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Fruit',), ('Oat Meal',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Fish cakes',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Griddle cakes',), ('Hominy',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Fish cakes',), ('Sirloin Steak',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Lyonnaise Potatoes',), ('Griddle cakes',), ('Marmalade',), ('Coffee',), ('Tomato Soup',), ('Baked Weakfish',), ('Oysters, Raw on the shell',), ('Half and Half Scallops & Oysters',), ('Oranges',), ('Rolled Oats',), ('Broiled Mullet',), ('Sirloin Steak with Mushrooms',), ('Pork Chops Piquante Sauce',), ('Broiled Chicken on Toast',), ('Calfs Liver and Onions',), ('Broiled Kidney with Bacon',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Waffles',), ('Split Rolls',), ('Hot Cakes',), ('Tea',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Oranges',), ('Oatmeal Porridge',), ('Smelts Meuniere',), ('Findon Haddock',), ('Oatmeal Porridge',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Cold Half Chicken and Ham ',), ('Cold Veal and Ham Pie',), ('Cold Roast Lamb',), ('Oranges',), ('Fried Flounder',), ('Grillirte Kuken',), ('Hoot Mon Mush',), ('Fillet Steaks aux Champignon',), ('Fruit',), ('Strawberries',), ('broiled shad',), ('Oysters, Milk Stew',), ('Oysters, Boston stew',), ('Oysters, Box Stew',), ('Oysters, Raw on the Half Shell',), ('Coffee',), ('Quaker Oats',), ('Boiled rice',), ('Smelts, Tartare sauce',), ('Findon Haddock',), ('Beef Steak, Saratoga chips',), ('Calves Liver & Bacon',), ('Sausage',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Sliced Pineapples',), ('Oatmeal Porridge',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Broiled Ham',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Cold Steak Pie',), ('Cold Mutton',), ('Cold Roast Beef',), ('Cold German Sausage',), ('Oysters, Boston Box Stew',), ('Oysters, Fry',), ('Oysters, Fry with Bacon',), ('Oatmeal',), ('Oyster Omelette',), ('Stewed Tripe',), ('Pork Sausage and Lyonnaise Potatoes',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Mock turtle soup',), ('Consomme Benoiton',), ('Filet Steaks aux Champignon',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Consomme San Remo',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Clear green turtle soup',), ('Corned Beef Hash',), ('Consomme Maceo',), ('Boiled rice',), ('Puree Mongol',), ('Broiled Rashers of Ham',), ('Consomme Printanier',), ('French fried potatoes',), ('Chicken Mulligatawny',), ('Split Rolls',), ('Oysters, Blue Point Stew',), ('French bread',), ('Corn bread',), ('Oysters, Crumb Fry',), ('English Beef soup',), ('Beef Stew',), ('Oysters, Blue Point Fry',), ('Filet of sole a la Horly',), ('broiled shad',), ('Diamond back terrapin',), ('Fruit',), ('Oat Meal',), ('Boiled rice',), ('Plain Omelette',), ('Fried Eggs',), ('Fried Plaice - Meuniere',), ('Kippered Herring',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Sausage & Mashed Potatoes',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fruits in Season',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Boiled potatoes',), ('Fried fish',), ('Egg, to order',), ('Diamond stew',), ('Jam',), ('Marmalade',), ('Tea',), ('Stewed prunes',), ('Clam Fritters',), ('Boiled Salt Mackerel',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Pork Chops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('English Mutton Chops',), ('Broiled Spring Chicken',), ('Sirloin Steak',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Plain Omelet',), ('Fried Indian Mush',), ('Baked Potatoes',), ('Saratoga Chips',), ('French fried potatoes',), ('Lyonnaise Potatoes',), ('Potatoes stewed in Cream',), ('Saute Potatoes',), ('Rye Bread',), ('French rolls',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn muffins',), ('Wheat Cakes, with Maple Syrup',), ('Coffee',), ('Tea',), ('Chocolate',), ('Cocoa',), ('Oatmeal Porridge',), ('Fruits in Season',), ('Corn Meal Mush',), ('Boiled',), ('Rolled Oats',), ('Scotch grouse en casserole',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Fruit',), ('Quaker Oats',), ('Scrambled Eggs',), ('Eggs au Beurre Noir',), ('Broiled Blue Fish',), ('Fish cakes',), ('Sirloin Steak, Fried French Chips',), ('Chicken Liver on Toast with Bacon',), ('Pork Chops, Sage & Onions',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Marmalade',), ('Coffee',), ('Salt Codfish, Spanish Style',), ('Marmalade',), ('Mashed potatoes',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Apples',), ('Passion Fruit',), ('Kippered Herrings',), ('Curried Pork and Rice',), ('Stewed Tripe with Cream sauce',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Chicken broth',), ('Consomme Macaroni',), ('Oat Meal',), ('Buckwheat Cakes',), ('Hard Boiled Egg',), ('Fruit',), ('Cream Cheese',), ('Plain Omelette',), ('Fried Eggs',), ('Hominy',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Kippered Herring',), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Fish cakes',), ('Apfelsinen',), ('Apfel',), ('Maisgries',), ('Hafergrutze',), ('Snowflakes',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Salt Codfish, Spanish Style',), ('Fruit',), ('Fillet Steads with Mushrooms',), ('Poached Eggs on Toast',), ('Curried Prawns and Rice, Bombay Duck',), ('Eggs au Beurre Noir',), ('Lamb Chops, Broiled Plain',), ('Whiting - Meuniere',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Fish cakes',), ('Sirloin Steak - Fried Onions',), ('Broiled Ham',), ('Grape fruit',), (\"Lambs' Liver Saute\",), ('Breakfast',), ('Chicken Liver on Toast with Bacon',), ('Tripe Fritters',), ('Jambon Grille',), ('Minced Veal a la Zingari',), ('Eggs to order',), ('Dried Hash',), ('Corned Beef Hash',), ('Mutton Chops - Saute Potatoes',), ('Calfs Liver + Bacon',), ('Boiled rice',), ('Cold Smoked Tongue and Ham',), ('Buckwheat Cakes',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Marmalade',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Coffee',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Broiled Fresh Mackerel',), ('English Muffins',), ('Salt Cod, Egg Sauce',), ('Cracked Wheat with Fresh Milk',), ('Rice Cakes',), ('Shad roe and bacon',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Marmalade',), ('Jam',), ('Smoked Schnapper Butter Sce',), ('Yarmouth Bloaters',), ('Tea',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Coffee',), ('Cocoa',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Fruits in Season',), ('Frizzled Breakfast Bacon (to order)',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Saute of Kidney',), ('Corned Beef Hash',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('Coffee',), ('Scrambled Eggs and bacon',), ('liver and bacon',), ('Oranges',), ('Apples',), ('Oatmeal',), ('Fillet de Boeuf a la Parisienne',), ('Fried Chicken a la Maryland',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Kippered Herrings',), ('Broiled Ham',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Strawberries',), ('Hominy',), ('Jam',), ('Boiled potatoes',), ('Pork Sausage and Lyonnaise Potatoes',), ('Baked Apple Dumpling, Hard Sauce',), (\"Potato a la Maitre d'Hotel\",), ('Tea',), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Oysters, Roast in Shell',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Asparagus Omelette ',), ('rice pudding',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Swiss Rolls',), ('Fruit in Season',), ('Charlotte Russe',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Jam',), ('Lettuce',), ('Cum-quats',), ('Raisin cake',), ('Tea',), ('Apples',), ('Orange',), ('Fillet Steak ',), ('Oranges',), ('Grape fruit',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Ham omelette',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('China Teas',), ('Coffee',), ('Broiled Salt Mackerel',), ('Corned Beef Hash',), ('Apples',), ('Stewed Tripe Spanish',), ('Germea',), ('Eggs to order',), ('Eggs to order',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Butter Cakes with Maple Syrup',), ('Marmalade',), ('Eggs to order',), ('Bananas',), ('Hot Rolls',), ('Coffee ',), ('Kraftsuppe, Prinzessin Art',), ('Cracked Wheat',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Boiled rice',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Liver & Bacon',), ('Blumenkohl, hollandische Sauce',), ('Stewed Tripe Spanish',), ('Beef Steak, fried onions',), ('Cotelettes de Veau, Sauce Tomate',), ('Gratinierter Eierkuchen nach Mornay',), ('Boiled eggs',), ('Split Rolls',), ('Veal Cuttlets Lyonnaise',), ('Entenbraten, Bordeaux Sauce',), ('Fried Potatoes',), ('Pork Sausages, Snowflake Potatoes',), ('Mutton Chops & Potato Chips',), ('Hot Rolls',), (\"Lambs' Liver with Bacon\",), ('Mirabellen',), ('Coffee',), ('Tripe, Spanish Style',), ('Citronen-Auflauf',), ('Boiled rice',), ('Liver & Bacon',), ('Cape Horn Hash',), ('Broiled Rashers of Ham',), ('Fruit in Season',), ('Breakfast Rolls',), ('Corn Meal Fritters',), ('Corn bread',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Dry Toast',), ('Boiled Potatos',), ('Pikelets',), ('Rolled Oats',), ('Fried Whiting',), ('Hot Rolls',), ('Flannel Cakes',), ('Marmalade',), ('Tea',), ('Jam',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Tea',), ('Coffee',), ('Fillet Steak Fried Potatoes',), ('Cocoa',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Bacon to order',), ('Breakfast Rolls',), ('Wheat Cakes',), ('Marmalade',), ('Coffee',), ('Beef Steak & onions',), ('Fried Bananas',), ('Egg to Order',), ('Beef Steak and Champignons',), ('Boiled potato',), ('Currant Buns',), ('Cold Ham',), ('Boiled Cod',), ('Waffle',), ('Marmalade',), ('Broiled Spring Chicken',), ('Fruit',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Tea',), ('Oatmeal Porridge',), ('Buckwheat Cakes',), ('Yarmouth Bloaters',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Broiled Ham',), ('Curried Chicken with Rice',), ('Two Eggs Boiled',), ('Eggs to order',), ('Tea',), ('Tea',), ('Mutton Chops',), ('Potato Chips',), (\"Lambs' Liver Saute\",), ('Tea',), ('Curried Veal and Rice',), ('Broiled Rashers of Bacon',), ('Cold: Ox Tongue',), ('French bread',), ('Marmalade',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Bananas',), ('Coffee Cake',), ('Cold Ham',), ('Fried Sausages, Mashed Potatoes',), ('Corned Beef Hash',), ('Split Rolls',), ('Eggs to order',), ('Eggs to order',), ('Tea',), ('Waffles',), ('Coffee',), ('Cocoa',), ('Quaker Oats',), ('Devilled Kidney',), ('Marmalade',), ('Fried Potatoes',), ('Pettijohn',), ('Hot Rolls',), ('Coffee',), ('Corn bread',), ('Fried Ham & Eggs',), ('French bread',), ('Pork Sausage and Mashed Potatoes',), ('Boiled Cracked Wheat',), ('Dry Toast',), ('Spanish Omelettes',), ('Rice Cakes',), ('Fried smelts',), ('English Muffins',), ('Calves Liver and Onions',), ('Marmalade',), ('Mutton Chops (to order)',), ('Jam',), ('Porterhouse Steak and Lamb Chops',), ('Honey in the Comb',), ('Jacket Potatoes',), ('Chocolate',), ('Curried Shrimps and Rice',), ('Corn bread',), ('Boiled Corn Meal with Cream',), ('Yarmouth Bloaters',), ('Maple Syrup',), ('Fried Fresh Fish',), ('Corned Beef Hash',), ('Honey',), ('Jam',), ('Fillet Steaks with Mushrooms',), ('Marmalade',), ('Tea',), ('Cocoa',), ('Tea',), ('Tongues and Sounds',), ('Hot Rolls',), ('Stewed Tripe',), ('Cornmeal Mush',), ('Coffee',), ('Cocoa',), ('Rice Cakes',), ('Breakfast Delight',), ('Diamond stew',), ('Fresh Comb Honey',), ('Flaked Rice',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fricassee of Turkey Wings Celery Sauce',), ('Fried Country Sausages and Lima Beans',), ('Rolled Oats',), ('Oxtail Ragout and Vegetables',), ('Yarmouth Bloaters',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Broiled Ham',), ('Lynnhavens oysters',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Frankfurter Sausages and Sauerkraut',), ('Cape Cods oysters',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Mashed Turnips',), ('Fried Liver & Bacon',), ('Stewed tomatoes',), ('Corned Beef Hash',), ('Oyster cocktail',), ('Boiled potatoes',), ('Potatoes',), ('Potatoes Saute',), ('Cherrystones clams',), ('Fried Ham',), ('Eclairs',), ('Boiled potatoes',), ('Pies',), ('Clam cocktail',), ('Potatoes Boiled',), ('Baked Shad Wine Sauce',), ('Corn bread',), ('Hot Biscuits',), (\"Calf's Liver and Bacon\",), ('Boiled Fish',), ('Broiled Lamb Kidneys and Bacon',), ('Corn bread',), ('Roast Leg of English Mutton',), ('Toast',), (\"Frogs' legs in every style\",), ('French bread',), (\"Roast Phil'a Chicken\",), ('Flannel Cakes',), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), (\"Roast Phil'a Chicken\",), (\"Lambs' Liver Saute\",), ('York Ham, Grilled',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sauterne 1ere',), ('St. Julien Sup\u00e8rieur',), ('Tripe Fritters',), ('Pontet Canet',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Niersteiner',), ('Hochheimer',), ('Corned Beef Hash',), ('Perrier Jou\u00ebt Special and Brut',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Eggs to order',), ('Clicquot Sec',), ('Mo\u00ebt & Chandon, White Seal',), ('Mo\u00ebt & Chandon, Brut',), ('Irroy Brut',), ('Fried New Potatoes',), ('Apollinaris',), ('Johannis',), ('Hot Rolls',), ('Corn bread',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Dry Toast',), ('Bisque of Crawfish',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('English Muffins',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('French bread',), ('New Asparagus, Cream Sauce',), ('Sherbert Roman',), ('Red Head Duck',), ('Rice Cakes',), ('Celery Salad',), ('Fancy Ice Cream',), ('Honey in the Comb',), (\"Broiled Shad Maitre d'Hotel\",), ('Fruit',), ('Cakes',), ('Marmalade',), ('Cheese',), ('Coffee',), ('Jam',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Oranges',), ('Bananas',), ('Apples',), ('Passion Fruit',), ('Fried Whiting',), ('Rolled Oats',), ('Oranges',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Bananas',), ('Curried Lamb and Rice',), ('Broiled Chicken on Toast',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Fried Bananas',), ('Boiled Mackerel',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Veal Cutlets Breaded',), ('Obst',), ('Hamburg Steak with Onions',), ('Nachtisch',), ('Pork Sausages',), ('Corned Beef Hash',), ('Fried Gar fish',), ('Fried Ham',), ('liver and bacon',), ('Eggs to order',), ('Potatoes Boiled',), ('Corn bread',), ('Hot Rolls',), ('Smoked Snapper',), ('English Muffins',), ('Toast',), ('Batter Cakes',), ('Tea',), ('Gemischtes Rahmeis',), ('Oat Meal Porridge',), ('Pork Cutlets',))", "rowcount": 1001, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 373, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Hafergrutze',), ('Hafergrutze',), ('Apfelsinen',), ('Apfelsinen',), ('Milchreis',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs as Ordered',), ('Fried & Boiled Potatoes',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Fillet de Boeuf a la Parisienne',), ('Bouchees aux Macaroni',), ('Roast Goose & Apple Sauce',), ('Mashed Pumpkins',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Swiss Rolls',), ('Cum-quats',), ('MacLaren Cheese',), ('Cotelettes de Veau, Sauce Tomate',), ('A. A. Oats with Fresh Milk',), ('Egg to Order',), (\"Broiled Shad Maitre d'Hotel\",), ('Batter Cakes',), ('Pork Cutlets',), ('Obst',), ('Nachtisch',), ('Pork Sausage and Mashed Potatoes',), ('China Teas',), ('Gemischtes Rahmeis',), ('Hot ribs of beef',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Fillet Steak ',), ('Scrambled Eggs and bacon',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Cold Steak Pie',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",))", "rowcount": 60, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Hafergrutze',), ('Hafergrutze',), ('Apfelsinen',), ('Apfelsinen',), ('Milchreis',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs as Ordered',), ('Fried & Boiled Potatoes',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Fillet de Boeuf a la Parisienne',), ('Bouchees aux Macaroni',), ('Roast Goose & Apple Sauce',), ('Mashed Pumpkins',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Swiss Rolls',), ('Cum-quats',), ('MacLaren Cheese',), ('Cotelettes de Veau, Sauce Tomate',), ('A. A. Oats with Fresh Milk',), ('Egg to Order',), (\"Broiled Shad Maitre d'Hotel\",), ('Batter Cakes',), ('Pork Cutlets',), ('Obst',), ('Nachtisch',), ('Pork Sausage and Mashed Potatoes',), ('China Teas',), ('Gemischtes Rahmeis',), ('Hot ribs of beef',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Fillet Steak ',), ('Scrambled Eggs and bacon',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Cold Steak Pie',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",))", "rowcount": 60, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 374, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 575, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((43.333333333333336,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 223 ('')\n```\n\n FORMAT Native') (line 4, col 167): ')\n```\n\n FORMAT Native. Single quoted string is not closed: '')\n```\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 576, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('ET', 1), ('EAU', 1), ('WAN', 1), ('CH', 17), ('NEP', 1), ('B', 10), ('RA', 1), ('WL', 1), ('SA', 3), ('FJI', 1), ('CZ', 1), ('IL', 1), ('G', 1), ('THA', 1), ('HCA', 1), ('BY', 1), ('GUY', 1), ('RB', 1), ('A', 5), ('RP', 1), ('JOR', 2), ('MA', 1), ('RCH', 1), ('RCA', 1), ('NCA', 1), ('DJI', 1), ('UAE', 1), ('PE', 1), ('GCA', 1), ('YV', 1), ('S', 1), ('H', 1), ('SF', 1), ('ROU', 1), ('AUS', 1), ('RT', 1), ('RCB', 1), ('SGP', 1), ('SUD', 1), ('RSA', 1), ('SYR', 1), ('CI', 2), ('CL', 1), ('L', 1), ('ETH', 2), ('IR', 1))", "rowcount": 46, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal types Date32 and Date32 of arguments of function minus: In scope SELECT T1.Country, COUNT(*) FROM economy AS T1 INNER JOIN organization AS T2 ON T1.Country = T2.Country WHERE (T1.GDP < 500000) AND ((toDate32('9999-01-01') - T2.Established) > 0) GROUP BY T1.Country. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 577, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('SP',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SP',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 579, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((174.54734802615644,), (174.54734802615644,), (174.54734802615644,), (11.932633788037775,), (114.49680350194552,))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((174.54734802615644,), (174.54734802615644,), (174.54734802615644,), (11.932633788037775,), (114.49680350194552,))", "rowcount": 5, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 582, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Belgium',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQLite query has been translated into ClickHouse as follows:\n\n```sql\nSELECT T1.Name FROM country AS T1 \nINNER JOIN organization AS T2 ON T1.Code = T2.Countr. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 583, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5, 62.5))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('ClickHouse') (line 1, col 1): ClickHouse SQL query should be like this:\n\n```sql\nSELECT \n    sum(if(government = 'parliamentary democracy', 1, 0)), \n    (sum(if(government = 'parliamentary de. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 584, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Arab Bank for Economic Development in Africa',), ('Agency for Cultural and Technical Cooperation',), ('African, Caribbean, and Pacific Countries',), ('Arab Monetary Fund',), ('Central African States Development Bank',), ('Economic Community of the Great Lakes Countries',), ('Caribbean Community and Common Market',), ('Economic Community of West African States',), ('European Space Agency',), ('Economic and Social Commission for Western Asia',), ('Group of 19',), ('Group of 24',), ('Group of 8',), ('Islamic Development Bank',), ('International Energy Agency',), ('International Fund for Agricultural Development',), ('International Mobile Satellite Organization',), ('International Telecommunications Satellite Organization',), ('Latin American Economic System',), ('Latin American Integration Association',), ('Nordic Investment Bank',), ('South Pacific Forum',), ('United Nations Disengagement Observer Force',), ('United Nations Interim Force in Lebanon',), ('United Nations University',), ('West African Development Bank',), ('World Tourism Organization',))", "rowcount": 27, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The ClickHouse version of your SQL statement would look like this:\n\n```sql\nSELECT Name FROM organization WHERE toYear(Established) BETWEEN 1970 AND 1980\n```\n\nTh. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 585, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1949',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 586, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('AG', datetime.date(1981, 11, 1), None, 'parliamentary democracy'), ('BDS', datetime.date(1966, 11, 30), None, 'parliamentary democracy'), ('BZ', datetime.date(1981, 9, 21), None, 'parliamentary democracy'), ('CZ', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('HR', datetime.date(1991, 6, 25), None, 'parliamentary democracy'), ('JA', datetime.date(1962, 8, 6), None, 'parliamentary democracy'), ('M', datetime.date(1964, 9, 21), None, 'parliamentary democracy'), ('MS', datetime.date(1968, 3, 12), None, 'parliamentary democracy'), ('PNG', datetime.date(1975, 9, 16), None, 'parliamentary democracy'), ('SK', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('SLB', datetime.date(1978, 7, 7), None, 'parliamentary democracy'), ('TT', datetime.date(1962, 8, 31), None, 'parliamentary democracy'), ('WD', datetime.date(1978, 11, 3), None, 'parliamentary democracy'), ('WG', datetime.date(1974, 2, 7), None, 'parliamentary democracy'), ('WL', datetime.date(1979, 2, 22), None, 'parliamentary democracy'), ('ZW', datetime.date(1980, 4, 18), None, 'parliamentary democracy'))", "rowcount": 16, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('AG', datetime.date(1981, 11, 1), None, 'parliamentary democracy'), ('BDS', datetime.date(1966, 11, 30), None, 'parliamentary democracy'), ('BZ', datetime.date(1981, 9, 21), None, 'parliamentary democracy'), ('CZ', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('HR', datetime.date(1991, 6, 25), None, 'parliamentary democracy'), ('JA', datetime.date(1962, 8, 6), None, 'parliamentary democracy'), ('M', datetime.date(1964, 9, 21), None, 'parliamentary democracy'), ('MS', datetime.date(1968, 3, 12), None, 'parliamentary democracy'), ('PNG', datetime.date(1975, 9, 16), None, 'parliamentary democracy'), ('SK', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('SLB', datetime.date(1978, 7, 7), None, 'parliamentary democracy'), ('TT', datetime.date(1962, 8, 31), None, 'parliamentary democracy'), ('WD', datetime.date(1978, 11, 3), None, 'parliamentary democracy'), ('WG', datetime.date(1974, 2, 7), None, 'parliamentary democracy'), ('WL', datetime.date(1979, 2, 22), None, 'parliamentary democracy'), ('ZW', datetime.date(1980, 4, 18), None, 'parliamentary democracy'))", "rowcount": 16, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 587, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7.563025210084033,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7.563025210084033,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 53, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 3}
{"sql_id": 181, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((24.2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `IIF` does not exist. In scope SELECT (CAST(SUM(IIF(T2.u_gender = 'F', 1, 0)), 'Float64') * 100) / COUNTDistinct(T2.userid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 2. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 183, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((98.4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((98400.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 184, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.871838111298484,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((31.871837615966797,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 185, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 186, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.257328990228013,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.257328990228013,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 187, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('```sql\nSELECT toFloat64(sum(if(T2.cast_num = 2 AND T1.a_quality = 2, 1, 0))) * 100 / count(distinct T1.actorid) \nFROM actors AS T1 \nINNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid \nWHERE T2.movieid = 1672580 AND T1.a_gender = 'F'\n```') (line 1, col 1): ```sql\nSELECT toFloat64(sum(if(T2.cast_num = 2 AND T1.a_quality = 2, 1, 0))) * 100 / count(distinct T1.actorid) \nFROM actors AS T1 \nINNER JOIN movies2actors AS . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 188, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 4, "FN": 0}
{"sql_id": 189, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 41, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((82677500.47867298,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 45, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Spellbound',), ('State Fair',), ('The Lost Weekend',), ('The Valley of Decision',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement can be translated as follows:\n\nSELECT title FROM movie WHERE toYear(release_date) = 1945\n\n FORMAT Native. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 40, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression or function identifier `Date32` in scope SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON (T1.movie_id = T2.movie_id) AND (CAST(T1.release_date, 'Date32') < '01-01-1996') INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE (T3.person_name = 'Quentin Tarantino') AND (CAST(T1.release_date, Date32) >= '01-01-1995') AND (CAST(T1.release_date, Date32) < '01-01-1996'). (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 42, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((61641217.33333334,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((61641217.33333334,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 44, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1307,), (1308,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1307,), (1308,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 46, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 47, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Shaft',), ('Rugrats in Paris: The Movie',), ('The Next Best Thing',), ('Rugrats in Paris: The Movie',), ('Mission: Impossible II',), ('The Next Best Thing',), ('What Women Want',), ('Bless the Child',), ('Lucky Numbers',), ('Wonder Boys',), ('Snow Day',))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 647, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 648, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12.7134724857685,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 649, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.703747619741401,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 141 (')') (line 1, col 141): )\nFROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN store AS T3 ON T2.store_id = T3.store_id\n\n FORMAT Native. Unmatched parentheses: ). (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 650, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8.571428571428571,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8.571428571428571,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 651, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression or function identifier `T2.first_name` in scope (SELECT sum((T2.first_name = 'GINA') AND (T2.last_name = 'DEGENERES')) AS UNSIGNED). (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 652, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((351,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((351,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 654, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((421,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((421,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 655, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.5041736227045077,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.5041736227045077,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 656, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1481.4899999999996,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1481.4899999999996,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 657, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('BLANKET BEVERLY',), ('LAWLESS VISION',), ('LOVE SUICIDES',), ('MYSTIC TRUMAN',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('ACADEMY DINOSAUR',), ('AFFAIR PREJUDICE',), ('AGENT TRUMAN',), ('ALADDIN CALENDAR',), ('ALAMO VIDEOTAPE',), ('ALASKA PHANTOM',), ('ALASKA PHANTOM',), ('ALASKA PHANTOM',), ('ALIEN CENTER',), ('ALIEN CENTER',), ('ALTER VICTORY',), ('ALTER VICTORY',), ('ALTER VICTORY',), ('AMADEUS HOLY',), ('AMELIE HELLFIGHTERS',), ('AMERICAN CIRCUS',), ('AMERICAN CIRCUS',), ('AMERICAN CIRCUS',), ('AMISTAD MIDSUMMER',), ('AMISTAD MIDSUMMER',), ('ANACONDA CONFESSIONS',), ('ANACONDA CONFESSIONS',), ('ANALYZE HOOSIERS',), ('ANGELS LIFE',), ('ANNIE IDENTITY',), ('ANNIE IDENTITY',), ('ANONYMOUS HUMAN',), ('ANONYMOUS HUMAN',), ('ANTHEM LUKE',), ('ANTHEM LUKE',), ('ANTHEM LUKE',), ('ANTHEM LUKE',), ('ANTITRUST TOMATOES',), ('ANTITRUST TOMATOES',), ('ANTITRUST TOMATOES',), ('ANYTHING SAVANNAH',), ('ANYTHING SAVANNAH',), ('ANYTHING SAVANNAH',), ('APACHE DIVINE',), ('APACHE DIVINE',), ('APACHE DIVINE',), ('ARACHNOPHOBIA ROLLERCOASTER',), ('ARACHNOPHOBIA ROLLERCOASTER',), ('ARIZONA BANG',), ('ARMAGEDDON LOST',), ('ATLANTIS CAUSE',), ('BACKLASH UNDEFEATED',), ('BACKLASH UNDEFEATED',), ('BALLOON HOMEWARD',), ('BALLOON HOMEWARD',), ('BANG KWAI',), ('BANGER PINOCCHIO',), ('BANGER PINOCCHIO',), ('BARBARELLA STREETCAR',), ('BARBARELLA STREETCAR',), ('BARBARELLA STREETCAR',), ('BARBARELLA STREETCAR',), ('BAREFOOT MANCHURIAN',), ('BASIC EASY',), ('BEAR GRACELAND',), ('BEAR GRACELAND',), ('BEAST HUNCHBACK',), ('BEAST HUNCHBACK',), ('BEAST HUNCHBACK',), ('BEAUTY GREASE',), ('BEAUTY GREASE',), ('BEAUTY GREASE',), ('BEDAZZLED MARRIED',), ('BEDAZZLED MARRIED',), ('BETRAYED REAR',), ('BETRAYED REAR',), ('BILL OTHERS',), ('BINGO TALENTED',), ('BLACKOUT PRIVATE',), ('BLACKOUT PRIVATE',), ('BLADE POLISH',), ('BLADE POLISH',), ('BLANKET BEVERLY',), ('BLANKET BEVERLY',), ('BLINDNESS GUN',), ('BLINDNESS GUN',), ('BLOOD ARGONAUTS',), ('BLOOD ARGONAUTS',), ('BLUES INSTINCT',), ('BLUES INSTINCT',), ('BOILED DARES',), ('BOILED DARES',), ('BOILED DARES',), ('BOOGIE AMELIE',), ('BOOGIE AMELIE',), ('BOOGIE AMELIE',), ('BOOGIE AMELIE',), ('BOOGIE AMELIE',), ('BORROWERS BEDAZZLED',), ('BORROWERS BEDAZZLED',), ('BOULEVARD MOB',), ('BREAKING HOME',), ('BREAKING HOME',), ('BREAKING HOME',), ('BRIGHT ENCOUNTERS',), ('BRIGHT ENCOUNTERS',), ('BROOKLYN DESERT',), ('BROOKLYN DESERT',), ('BROTHERHOOD BLANKET',), ('BROTHERHOOD BLANKET',), ('BROTHERHOOD BLANKET',), ('BUCKET BROTHERHOOD',), ('BUCKET BROTHERHOOD',), ('BULWORTH COMMANDMENTS',), ('BUTTERFLY CHOCOLAT',), ('BUTTERFLY CHOCOLAT',), ('CABIN FLASH',), ('CALENDAR GUNFIGHT',), ('CAMELOT VACATION',), ('CAMELOT VACATION',), ('CAMELOT VACATION',), ('CANDLES GRAPES',), ('CANDLES GRAPES',), ('CANDLES GRAPES',), ('CANDLES GRAPES',), ('CARIBBEAN LIBERTY',), ('CAT CONEHEADS',), ('CELEBRITY HORN',), ('CELEBRITY HORN',), ('CENTER DINOSAUR',), ('CENTER DINOSAUR',), ('CENTER DINOSAUR',), ('CENTER DINOSAUR',), ('CHAINSAW UPTOWN',), ('CHAINSAW UPTOWN',), ('CHANCE RESURRECTION',), ('CHARIOTS CONSPIRACY',), ('CHARIOTS CONSPIRACY',), ('CHASING FIGHT',), ('CHEAPER CLYDE',), ('CHEAPER CLYDE',), ('CHICAGO NORTH',), ('CHICKEN HELLFIGHTERS',), ('CHICKEN HELLFIGHTERS',), ('CHICKEN HELLFIGHTERS',), ('CHICKEN HELLFIGHTERS',), ('CHILL LUCK',), ('CHOCOLAT HARRY',), ('CHOCOLAT HARRY',), ('CHRISTMAS MOONSHINE',), ('CHRISTMAS MOONSHINE',), ('CHRISTMAS MOONSHINE',), ('CINCINATTI WHISPERER',), ('CINCINATTI WHISPERER',), ('CIRCUS YOUTH',), ('CIRCUS YOUTH',), ('CITIZEN SHREK',), ('CITIZEN SHREK',), ('CLEOPATRA DEVIL',), ('CLEOPATRA DEVIL',), ('CLONES PINOCCHIO',), ('CLOSER BANG',), ('CLOSER BANG',), ('CLOSER BANG',), ('CLUELESS BUCKET',), ('CLUELESS BUCKET',), ('COAST RAINBOW',), ('COAST RAINBOW',), ('COLDBLOODED DARLING',), ('COLOR PHILADELPHIA',), ('COLOR PHILADELPHIA',), ('COLOR PHILADELPHIA',), ('COMA HEAD',), ('COMA HEAD',), ('COMA HEAD',), ('COMA HEAD',), ('COMANCHEROS ENEMY',), ('COMFORTS RUSH',), ('CONEHEADS SMOOCHY',), ('CONFIDENTIAL INTERVIEW',), ('CONGENIALITY QUEST',), ('CONNECTION MICROCOSMOS',), ('CONQUERER NUTS',), ('CONQUERER NUTS',), ('CONQUERER NUTS',), ('CONQUERER NUTS',), ('CONQUERER NUTS',), ('CONTACT ANONYMOUS',), ('CONTROL ANTHEM',), ('COWBOY DOOM',), ('CRAFT OUTFIELD',), ('CRAFT OUTFIELD',), ('CRAFT OUTFIELD',), ('CRAFT OUTFIELD',), ('CREATURES SHAKESPEARE',), ('CROOKED FROGMEN',), ('CRUELTY UNFORGIVEN',), ('CRUSADE HONEY',), ('CRUSADE HONEY',), ('CURTAIN VIDEOTAPE',), ('CYCLONE FAMILY',), ('CYCLONE FAMILY',), ('CYCLONE FAMILY',), ('DADDY PITTSBURGH',), ('DADDY PITTSBURGH',), ('DADDY PITTSBURGH',), ('DALMATIONS SWEDEN',), ('DANCES NONE',), ('DANCES NONE',), ('DANCING FEVER',), ('DARES PLUTO',), ('DARKNESS WAR',), ('DARLING BREAKING',), ('DARN FORRESTER',), ('DARN FORRESTER',), ('DATE SPEED',), ('DATE SPEED',), ('DAWN POND',), ('DAWN POND',), ('DECEIVER BETRAYED',), ('DEEP CRUSADE',), ('DEEP CRUSADE',), ('DEEP CRUSADE',), ('DEER VIRGINIAN',), ('DEER VIRGINIAN',), ('DESERT POSEIDON',), ('DESTINY SATURDAY',), ('DESTINY SATURDAY',), ('DETAILS PACKER',), ('DIARY PANIC',), ('DIRTY ACE',), ('DISCIPLE MOTHER',), ('DISCIPLE MOTHER',), ('DISCIPLE MOTHER',), ('DISTURBING SCARFACE',), ('DISTURBING SCARFACE',), ('DISTURBING SCARFACE',), ('DIVORCE SHINING',), ('DIVORCE SHINING',), ('DOCTOR GRAIL',), ('DOGMA FAMILY',), ('DOGMA FAMILY',), ('DOGMA FAMILY',), ('DOGMA FAMILY',), ('DONNIE ALLEY',), ('DONNIE ALLEY',), ('DOOM DANCING',), ('DOOM DANCING',), ('DOORS PRESIDENT',), ('DORADO NOTTING',), ('DORADO NOTTING',), ('DORADO NOTTING',), ('DORADO NOTTING',), ('DOUBLE WRATH',), ('DOUBLE WRATH',), ('DOUBLE WRATH',), ('DOWNHILL ENOUGH',), ('DOWNHILL ENOUGH',), ('DRACULA CRYSTAL',), ('DRACULA CRYSTAL',), ('DRAGONFLY STRANGERS',), ('DRAGONFLY STRANGERS',), ('DREAM PICKUP',), ('DREAM PICKUP',), ('DREAM PICKUP',), ('DRIFTER COMMANDMENTS',), ('DRIVING POLISH',), ('DRIVING POLISH',), ('DURHAM PANKY',), ('DYING MAKER',), ('DYING MAKER',), ('DYING MAKER',), ('DYING MAKER',), ('EAGLES PANKY',), ('EAGLES PANKY',), ('EAGLES PANKY',), ('EARRING INSTINCT',), ('EARRING INSTINCT',), ('EASY GLADIATOR',), ('EASY GLADIATOR',), ('EDGE KISSING',), ('EDGE KISSING',), ('EDGE KISSING',), ('EFFECT GLADIATOR',), ('EFFECT GLADIATOR',), ('ELEPHANT TROJAN',), ('ELEPHANT TROJAN',), ('ELEPHANT TROJAN',), ('ELF MURDER',), ('ELIZABETH SHANE',), ('ELIZABETH SHANE',), ('ELIZABETH SHANE',), ('ENCINO ELF',), ('ENCOUNTERS CURTAIN',), ('ENDING CROWDS',), ('ENDING CROWDS',), ('ENEMY ODDS',), ('ENEMY ODDS',), ('ENEMY ODDS',), ('ENGLISH BULWORTH',), ('ENGLISH BULWORTH',), ('ENOUGH RAGING',), ('ENTRAPMENT SATISFACTION',), ('ESCAPE METROPOLIS',), ('EVERYONE CRAFT',), ('EVERYONE CRAFT',), ('EVERYONE CRAFT',), ('EVOLUTION ALTER',), ('EXCITEMENT EVE',), ('EXORCIST STING',), ('EXPENDABLE STALLION',), ('EXPENDABLE STALLION',), ('EXPENDABLE STALLION',), ('EXPRESS LONELY',), ('EYES DRIVING',), ('FACTORY DRAGON',), ('FACTORY DRAGON',), ('FACTORY DRAGON',), ('FALCON VOLUME',), ('FALCON VOLUME',), ('FALCON VOLUME',), ('FAMILY SWEET',), ('FAMILY SWEET',), ('FAMILY SWEET',), ('FANTASIA PARK',), ('FANTASY TROOPERS',), ('FANTASY TROOPERS',), ('FARGO GANDHI',), ('FARGO GANDHI',), ('FARGO GANDHI',), ('FATAL HAUNTED',), ('FATAL HAUNTED',), ('FEATHERS METAL',), ('FEATHERS METAL',), ('FELLOWSHIP AUTUMN',), ('FELLOWSHIP AUTUMN',), ('FELLOWSHIP AUTUMN',), ('FELLOWSHIP AUTUMN',), ('FERRIS MOTHER',), ('FEUD FROGMEN',), ('FEUD FROGMEN',), ('FIDELITY DEVIL',), ('FIDELITY DEVIL',), ('FIGHT JAWBREAKER',), ('FIGHT JAWBREAKER',), ('FIGHT JAWBREAKER',), ('FIREBALL PHILADELPHIA',), ('FISH OPUS',), ('FLASH WARS',), ('FLATLINERS KILLER',), ('FLATLINERS KILLER',), ('FLATLINERS KILLER',), ('FLINTSTONES HAPPINESS',), ('FLINTSTONES HAPPINESS',), ('FOOL MOCKINGBIRD',), ('FOOL MOCKINGBIRD',), ('FORRESTER COMANCHEROS',), ('FORRESTER COMANCHEROS',), ('FORWARD TEMPLE',), ('FORWARD TEMPLE',), ('FORWARD TEMPLE',), ('FREAKY POCUS',), ('FREDDY STORM',), ('FRENCH HOLIDAY',), ('FROST HEAD',), ('FROST HEAD',), ('FROST HEAD',), ('FROST HEAD',), ('FURY MURDER',), ('FURY MURDER',), ('GABLES METROPOLIS',), ('GABLES METROPOLIS',), ('GABLES METROPOLIS',), ('GALAXY SWEETHEARTS',), ('GAMES BOWFINGER',), ('GAMES BOWFINGER',), ('GAMES BOWFINGER',), ('GAMES BOWFINGER',), ('GANGS PRIDE',), ('GANGS PRIDE',), ('GANGS PRIDE',), ('GANGS PRIDE',), ('GHOST GROUNDHOG',), ('GHOST GROUNDHOG',), ('GIANT TROOPERS',), ('GIANT TROOPERS',), ('GILMORE BOILED',), ('GILMORE BOILED',), ('GLASS DYING',), ('GLASS DYING',), ('GLASS DYING',), ('GLEAMING JAWBREAKER',), ('GLEAMING JAWBREAKER',), ('GO PURPLE',), ('GO PURPLE',), ('GOLDFINGER SENSIBILITY',), ('GOLDFINGER SENSIBILITY',), ('GOLDMINE TYCOON',), ('GOLDMINE TYCOON',), ('GOLDMINE TYCOON',), ('GONE TROUBLE',), ('GONE TROUBLE',), ('GONE TROUBLE',), ('GONE TROUBLE',), ('GOODFELLAS SALUTE',), ('GOODFELLAS SALUTE',), ('GORGEOUS BINGO',), ('GRADUATE LORD',), ('GRADUATE LORD',), ('GRAFFITI LOVE',), ('GRAFFITI LOVE',), ('GRAFFITI LOVE',), ('GRAFFITI LOVE',), ('GRAIL FRANKENSTEIN',), ('GRAIL FRANKENSTEIN',), ('GRAIL FRANKENSTEIN',), ('GRAPES FURY',), ('GREASE YOUTH',), ('GREATEST NORTH',), ('GRIT CLOCKWORK',), ('GRIT CLOCKWORK',), ('GRIT CLOCKWORK',), ('GROUNDHOG UNCUT',), ('GROUNDHOG UNCUT',), ('GUN BONNIE',), ('GUN BONNIE',), ('GUNFIGHT MOON',), ('GUNFIGHT MOON',), ('GUYS FALCON',), ('HALF OUTFIELD',), ('HALF OUTFIELD',), ('HALLOWEEN NUTS',), ('HALLOWEEN NUTS',), ('HAMLET WISDOM',), ('HAMLET WISDOM',), ('HAMLET WISDOM',), ('HANDICAP BOONDOCK',), ('HANDICAP BOONDOCK',), ('HANDICAP BOONDOCK',), ('HANDICAP BOONDOCK',), ('HANKY OCTOBER',), ('HANKY OCTOBER',), ('HAROLD FRENCH',), ('HAROLD FRENCH',), ('HARPER DYING',), ('HARRY IDAHO',), ('HAUNTING PIANIST',), ('HAWK CHILL',), ('HAWK CHILL',), ('HEAVENLY GUN',), ('HEAVYWEIGHTS BEAST',), ('HEDWIG ALTER',), ('HEDWIG ALTER',), ('HEDWIG ALTER',), ('HELLFIGHTERS SIERRA',), ('HIGH ENCINO',), ('HIGH ENCINO',), ('HIGHBALL POTTER',), ('HILLS NEIGHBORS',), ('HILLS NEIGHBORS',), ('HOBBIT ALIEN',), ('HOBBIT ALIEN',), ('HOLLYWOOD ANONYMOUS',), ('HOLOCAUST HIGHBALL',), ('HOMICIDE PEACH',), ('HOMICIDE PEACH',), ('HONEY TIES',), ('HOPE TOOTSIE',), ('HORN WORKING',), ('HORROR REIGN',), ('HOTEL HAPPINESS',), ('HOURS RAGE',), ('HOURS RAGE',), ('HUNCHBACK IMPOSSIBLE',), ('HUNTING MUSKETEERS',), ('HUNTING MUSKETEERS',), ('HUNTING MUSKETEERS',), ('HUSTLER PARTY',), ('HYDE DOCTOR',), ('HYDE DOCTOR',), ('HYSTERICAL GRAIL',), ('ICE CROSSING',), ('ICE CROSSING',), ('ICE CROSSING',), ('IDAHO LOVE',), ('IDOLS SNATCHERS',), ('IGBY MAKER',), ('IGBY MAKER',), ('IMPACT ALADDIN',), ('IMPACT ALADDIN',), ('IMPACT ALADDIN',), ('INNOCENT USUAL',), ('INSIDER ARIZONA',), ('INSTINCT AIRPORT',), ('INSTINCT AIRPORT',), ('INTOLERABLE INTENTIONS',), ('INVASION CYCLONE',), ('INVASION CYCLONE',), ('ISHTAR ROCKETEER',), ('ISLAND EXORCIST',), ('ISLAND EXORCIST',), ('JASON TRAP',), ('JEDI BENEATH',), ('JEKYLL FROGMEN',), ('JEKYLL FROGMEN',), ('JEOPARDY ENCINO',), ('JERICHO MULAN',), ('JET NEIGHBORS',), ('JOON NORTHWEST',), ('JUGGLER HARDLY',), ('JUGGLER HARDLY',), ('JUGGLER HARDLY',), ('JUGGLER HARDLY',), ('JUMANJI BLADE',), ('JUMPING WRATH',), ('JUNGLE CLOSER',), ('JUNGLE CLOSER',), ('JUNGLE CLOSER',), ('KARATE MOON',), ('KARATE MOON',), ('KICK SAVANNAH',), ('KICK SAVANNAH',), ('KING EVOLUTION',), ('KING EVOLUTION',), ('KISS GLORY',), ('KISS GLORY',), ('KISSING DOLLS',), ('KISSING DOLLS',), ('KNOCK WARLOCK',), ('KNOCK WARLOCK',), ('KNOCK WARLOCK',), ('KWAI HOMEWARD',), ('LADY STAGE',), ('LAWLESS VISION',), ('LAWLESS VISION',), ('LAWLESS VISION',), ('LEBOWSKI SOLDIERS',), ('LIAISONS SWEET',), ('LIAISONS SWEET',), ('LICENSE WEEKEND',), ('LIES TREATMENT',), ('LIES TREATMENT',), ('LIES TREATMENT',), ('LIGHTS DEER',), ('LION UNCUT',), ('LOATHING LEGALLY',), ('LOLITA WORLD',), ('LOLITA WORLD',), ('LONELY ELEPHANT',), ('LONELY ELEPHANT',), ('LONELY ELEPHANT',), ('LORD ARIZONA',), ('LOST BIRD',), ('LOST BIRD',), ('LOST BIRD',), ('LOVE SUICIDES',), ('LOVE SUICIDES',), ('LOVE SUICIDES',), ('LOVE SUICIDES',), ('LOVE SUICIDES',), ('LOVE SUICIDES',), ('LOVE SUICIDES',), ('LUCK OPUS',), ('LUCK OPUS',), ('LUCK OPUS',), ('LUCKY FLYING',), ('LUCKY FLYING',), ('LUCKY FLYING',), ('LUCKY FLYING',), ('LUST LOCK',), ('MADIGAN DORADO',), ('MADIGAN DORADO',), ('MADIGAN DORADO',), ('MADNESS ATTACKS',), ('MADNESS ATTACKS',), ('MADNESS ATTACKS',), ('MADNESS ATTACKS',), ('MAGNIFICENT CHITTY',), ('MAIDEN HOME',), ('MALKOVICH PET',), ('MALKOVICH PET',), ('MALLRATS UNITED',), ('MALTESE HOPE',), ('MANCHURIAN CURTAIN',), ('MARRIED GO',), ('MARS ROMAN',), ('MASK PEACH',), ('MASK PEACH',), ('MASK PEACH',), ('MASKED BUBBLE',), ('MASSACRE USUAL',), ('MASSACRE USUAL',), ('MASSACRE USUAL',), ('MATRIX SNOWMAN',), ('MATRIX SNOWMAN',), ('MATRIX SNOWMAN',), ('MAUDE MOD',), ('MAUDE MOD',), ('MEET CHOCOLATE',), ('MENAGERIE RUSHMORE',), ('METAL ARMAGEDDON',), ('METAL ARMAGEDDON',), ('METAL ARMAGEDDON',), ('METAL ARMAGEDDON',), ('MICROCOSMOS PARADISE',), ('MICROCOSMOS PARADISE',), ('MIDNIGHT WESTWARD',), ('MIDNIGHT WESTWARD',), ('MIDSUMMER GROUNDHOG',), ('MILE MULAN',), ('MILE MULAN',), ('MILLION ACE',), ('MINDS TRUMAN',), ('MINE TITANS',), ('MINORITY KISS',), ('MINORITY KISS',), ('MISSION ZOOLANDER',), ('MISSION ZOOLANDER',), ('MOCKINGBIRD HOLLYWOOD',), ('MOD SECRETARY',), ('MONSTER SPARTACUS',), ('MOON BUNCH',), ('MOONSHINE CABIN',), ('MOSQUITO ARMAGEDDON',), ('MOSQUITO ARMAGEDDON',), ('MOTIONS DETAILS',), ('MOURNING PURPLE',), ('MOURNING PURPLE',), ('MOVIE SHAKESPEARE',), ('MOVIE SHAKESPEARE',), ('MOVIE SHAKESPEARE',), ('MUMMY CREATURES',), ('MURDER ANTITRUST',), ('MURDER ANTITRUST',), ('MURDER ANTITRUST',), ('MUSCLE BRIGHT',), ('MUSIC BOONDOCK',), ('MUSKETEERS WAIT',), ('MUSKETEERS WAIT',), ('MYSTIC TRUMAN',), ('MYSTIC TRUMAN',), ('NAME DETECTIVE',), ('NATURAL STOCK',), ('NATURAL STOCK',), ('NEIGHBORS CHARADE',), ('NETWORK PEAK',), ('NETWORK PEAK',), ('NIGHTMARE CHILL',), ('NONE SPIKING',), ('NONE SPIKING',), ('NONE SPIKING',), ('NOVOCAINE FLIGHT',), ('NUTS TIES',), ('OLEANDER CLUE',), ('OLEANDER CLUE',), ('OPEN AFRICAN',), ('OPEN AFRICAN',), ('OPERATION OPERATION',), ('OTHERS SOUP',), ('OTHERS SOUP',), ('OTHERS SOUP',), ('OTHERS SOUP',), ('OUTBREAK DIVINE',), ('OUTBREAK DIVINE',), ('OZ LIAISONS',), ('PACIFIC AMISTAD',), ('PACIFIC AMISTAD',), ('PACKER MADIGAN',), ('PARTY KNOCK',), ('PAST SUICIDES',), ('PATRIOT ROMAN',), ('PAYCHECK WAIT',), ('PEACH INNOCENT',), ('PEACH INNOCENT',), ('PEAK FOREVER',), ('PELICAN COMFORTS',), ('PELICAN COMFORTS',), ('PELICAN COMFORTS',), ('PERFECT GROOVE',), ('PERSONAL LADYBUGS',), ('PICKUP DRIVING',), ('PILOT HOOSIERS',), ('PIRATES ROXANNE',), ('PIRATES ROXANNE',), ('PITTSBURGH HUNCHBACK',), ('PITY BOUND',), ('PITY BOUND',), ('PLUTO OLEANDER',), ('PLUTO OLEANDER',), ('PLUTO OLEANDER',), ('POCUS PULP',), ('POLLOCK DELIVERANCE',), ('POND SEATTLE',), ('POND SEATTLE',), ('POTTER CONNECTICUT',), ('POTTER CONNECTICUT',), ('POTTER CONNECTICUT',), ('POTTER CONNECTICUT',), ('PREJUDICE OLEANDER',), ('PRINCESS GIANT',), ('PRINCESS GIANT',), ('PULP BEVERLY',), ('PULP BEVERLY',), ('PULP BEVERLY',), ('PULP BEVERLY',), ('PURE RUNNER',), ('PURE RUNNER',), ('PURPLE MOVIE',), ('PURPLE MOVIE',), ('RANGE MOONWALKER',), ('RANGE MOONWALKER',), ('RANGE MOONWALKER',), ('RANGE MOONWALKER',), ('REAR TRADING',), ('RECORDS ZORRO',), ('REDS POCUS',), ('REDS POCUS',), ('REDS POCUS',), ('REIGN GENTLEMEN',), ('REQUIEM TYCOON',), ('RESURRECTION SILVERADO',), ('REUNION WITCHES',), ('REUNION WITCHES',), ('REUNION WITCHES',), ('REUNION WITCHES',), ('RIDGEMONT SUBMARINE',), ('RIDGEMONT SUBMARINE',), ('RINGS HEARTBREAKERS',), ('RINGS HEARTBREAKERS',), ('RINGS HEARTBREAKERS',), ('RIVER OUTLAW',), ('ROBBERS JOON',), ('ROBBERS JOON',), ('ROBBERS JOON',), ('ROBBERY BRIGHT',), ('ROBBERY BRIGHT',), ('ROCKETEER MOTHER',), ('ROCKETEER MOTHER',), ('ROCKETEER MOTHER',), ('ROCKETEER MOTHER',), ('ROCKY WAR',), ('ROMAN PUNK',), ('ROMAN PUNK',), ('ROMAN PUNK',), ('ROOTS REMEMBER',), ('ROSES TREASURE',), ('ROSES TREASURE',), ('ROSES TREASURE',), ('ROUGE SQUAD',), ('ROXANNE REBEL',), ('ROXANNE REBEL',), ('RUGRATS SHAKESPEARE',), ('RUGRATS SHAKESPEARE',), ('RULES HUMAN',), ('RULES HUMAN',), ('RUN PACIFIC',), ('SAGEBRUSH CLUELESS',), ('SATISFACTION CONFIDENTIAL',), ('SAVANNAH TOWN',), ('SCALAWAG DUCK',), ('SCALAWAG DUCK',), ('SCALAWAG DUCK',), ('SCALAWAG DUCK',), ('SCARFACE BANG',), ('SCARFACE BANG',), ('SCORPION APOLLO',), ('SEA VIRGIN',), ('SEABISCUIT PUNK',), ('SEABISCUIT PUNK',), ('SEATTLE EXPECATIONS',), ('SEATTLE EXPECATIONS',), ('SEATTLE EXPECATIONS',), ('SEATTLE EXPECATIONS',), ('SEATTLE EXPECATIONS',), ('SECRET GROUNDHOG',), ('SECRET GROUNDHOG',), ('SECRETARY ROUGE',), ('SECRETS PARADISE',), ('SECRETS PARADISE',), ('SHAKESPEARE SADDLE',), ('SHANE DARKNESS',), ('SHAWSHANK BUBBLE',), ('SHAWSHANK BUBBLE',), ('SHEPHERD MIDSUMMER',), ('SHEPHERD MIDSUMMER',), ('SHEPHERD MIDSUMMER',), ('SHIP WONDERLAND',), ('SHOCK CABIN',), ('SHOCK CABIN',), ('SHRUNK DIVINE',), ('SIEGE MADRE',), ('SIEGE MADRE',), ('SINNERS ATLANTIS',), ('SLACKER LIAISONS',), ('SLACKER LIAISONS',), ('SLEEPING SUSPECTS',), ('SLEEPING SUSPECTS',), ('SLEEPY JAPANESE',), ('SLEEPY JAPANESE',), ('SLEUTH ORIENT',), ('SLEUTH ORIENT',), ('SLEUTH ORIENT',), ('SLEUTH ORIENT',), ('SLUMS DUCK',), ('SLUMS DUCK',), ('SLUMS DUCK',), ('SMILE EARRING',), ('SMOKING BARBARELLA',), ('SMOKING BARBARELLA',), ('SNATCH SLIPPER',), ('SNATCH SLIPPER',), ('SNATCHERS MONTEZUMA',), ('SNOWMAN ROLLERCOASTER',), ('SNOWMAN ROLLERCOASTER',), ('SOLDIERS EVOLUTION',), ('SOMETHING DUCK',), ('SOMETHING DUCK',), ('SOMETHING DUCK',), ('SONG HEDWIG',), ('SONS INTERVIEW',), ('SOUTH WAIT',), ('SPEAKEASY DATE',), ('SPEAKEASY DATE',), ('SPICE SORORITY',), ('SPICE SORORITY',), ('SPIRITED CASUALTIES',), ('SPLASH GUMP',), ('SPLASH GUMP',), ('SPLASH GUMP',), ('SPY MILE',), ('SPY MILE',), ('STAMPEDE DISTURBING',), ('STATE WASTELAND',), ('STATE WASTELAND',), ('STEERS ARMAGEDDON',), ('STEPMOM DREAM',), ('STONE FIRE',), ('STONE FIRE',), ('STORM HAPPINESS',), ('STORM HAPPINESS',), ('STORM HAPPINESS',), ('STORY SIDE',), ('STORY SIDE',), ('STRANGELOVE DESIRE',), ('STRANGELOVE DESIRE',), ('STRANGELOVE DESIRE',), ('STRANGER STRANGERS',), ('STRANGER STRANGERS',), ('STREAK RIDGEMONT',), ('STRICTLY SCARFACE',), ('STRICTLY SCARFACE',), ('SUN CONFESSIONS',), ('SUNDANCE INVASION',), ('SUNDANCE INVASION',), ('SUNRISE LEAGUE',), ('SUPER WYOMING',), ('SUPER WYOMING',), ('SUPERFLY TRIP',), ('SUPERFLY TRIP',), ('SUSPECTS QUILLS',), ('SUSPECTS QUILLS',), ('SWEDEN SHINING',), ('SWEDEN SHINING',), ('SWEETHEARTS SUSPECTS',), ('SWEETHEARTS SUSPECTS',), ('SWEETHEARTS SUSPECTS',), ('TALENTED HOMICIDE',), ('TAXI KICK',), ('TAXI KICK',), ('TELEGRAPH VOYAGE',), ('TELEGRAPH VOYAGE',), ('TENENBAUMS COMMAND',), ('THIEF PELICAN',), ('THIEF PELICAN',), ('THIN SAGEBRUSH',), ('TIES HUNGER',), ('TIGHTS DAWN',), ('TIGHTS DAWN',), ('TIMBERLAND SKY',), ('TIMBERLAND SKY',), ('TIMBERLAND SKY',), ('TIMBERLAND SKY',), ('TITANIC BOONDOCK',), ('TOMORROW HUSTLER',), ('TOMORROW HUSTLER',), ('TOOTSIE PILOT',), ('TORQUE BOUND',), ('TORQUE BOUND',), ('TORQUE BOUND',), ('TOURIST PELICAN',), ('TOURIST PELICAN',), ('TOURIST PELICAN',), ('TOURIST PELICAN',), ('TOWERS HURRICANE',), ('TOWN ARK',), ('TOWN ARK',), ('TRACY CIDER',), ('TRACY CIDER',), ('TRADING PINOCCHIO',), ('TRAINSPOTTING STRANGERS',), ('TRAINSPOTTING STRANGERS',), ('TRANSLATION SUMMER',), ('TRANSLATION SUMMER',), ('TRANSLATION SUMMER',), ('TRAP GUYS',), ('TRIP NEWTON',), ('TROJAN TOMORROW',), ('TRUMAN CRAZY',), ('TRUMAN CRAZY',), ('TRUMAN CRAZY',), ('TURN STAR',), ('TURN STAR',), ('TURN STAR',), ('TYCOON GATHERING',), ('UNBREAKABLE KARATE',), ('UNBREAKABLE KARATE',), ('UNBREAKABLE KARATE',), ('UNCUT SUICIDES',), ('UNFORGIVEN ZOOLANDER',), ('UNITED PILOT',), ('UPRISING UPTOWN',), ('UPRISING UPTOWN',), ('UPRISING UPTOWN',), ('UPRISING UPTOWN',), ('UPTOWN YOUNG',), ('UPTOWN YOUNG',), ('USUAL UNTOUCHABLES',), ('USUAL UNTOUCHABLES',), ('VACATION BOONDOCK',), ('VACATION BOONDOCK',), ('VALLEY PACKER',), ('VALLEY PACKER',), ('VAMPIRE WHALE',), ('VARSITY TRIP',), ('VELVET TERMINATOR',), ('VELVET TERMINATOR',), ('VELVET TERMINATOR',), ('VIDEOTAPE ARSENIC',), ('VIDEOTAPE ARSENIC',), ('VIDEOTAPE ARSENIC',), ('VISION TORQUE',), ('VOICE PEACH',), ('VOLCANO TEXAS',), ('VOLCANO TEXAS',), ('VOYAGE LEGALLY',), ('VOYAGE LEGALLY',), ('WAGON JAWS',), ('WAIT CIDER',), ('WAIT CIDER',), ('WAIT CIDER',), ('WAIT CIDER',), ('WAIT CIDER',), ('WAIT CIDER',), ('WANDA CHAMBER',), ('WANDA CHAMBER',), ('WANDA CHAMBER',), ('WARDROBE PHANTOM',), ('WARDROBE PHANTOM',), ('WASH HEAVENLY',), ('WASH HEAVENLY',), ('WASH HEAVENLY',), ('WASH HEAVENLY',), ('WASH HEAVENLY',), ('WASTELAND DIVINE',), ('WASTELAND DIVINE',), ('WEDDING APOLLO',), ('WEREWOLF LOLA',), ('WEREWOLF LOLA',), ('WEREWOLF LOLA',), ('WEREWOLF LOLA',), ('WEST LION',), ('WEST LION',), ('WESTWARD SEABISCUIT',), ('WESTWARD SEABISCUIT',), ('WHALE BIKINI',), ('WHALE BIKINI',), ('WHALE BIKINI',), ('WHALE BIKINI',), ('WHALE BIKINI',), ('WHISPERER GIANT',), ('WIFE TURN',), ('WIFE TURN',), ('WIFE TURN',), ('WIFE TURN',), ('WILD APOLLO',), ('WILLOW TRACY',), ('WIND PHANTOM',), ('WIND PHANTOM',), ('WITCHES PANIC',), ('WITCHES PANIC',), ('WITCHES PANIC',), ('WIZARD COLDBLOODED',), ('WIZARD COLDBLOODED',), ('WOLVES DESIRE',), ('WON DARES',), ('WONDERFUL DROP',), ('WONDERFUL DROP',), ('WONDERLAND CHRISTMAS',), ('WORDS HUNTER',), ('WORKING MICROCOSMOS',), ('WYOMING STORM',), ('WYOMING STORM',), ('YENTL IDAHO',), ('YENTL IDAHO',), ('ZORRO ARK',), ('ZORRO ARK',))", "rowcount": 1001, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 658, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 659, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 660, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10.01669449081803,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10.01669449081803,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 663, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SANDRA', 'MARTIN', 'SANDRA.MARTIN@sakilacustomer.org'), ('JUDITH', 'COX', 'JUDITH.COX@sakilacustomer.org'), ('SHEILA', 'WELLS', 'SHEILA.WELLS@sakilacustomer.org'), ('ERICA', 'MATTHEWS', 'ERICA.MATTHEWS@sakilacustomer.org'), ('HEIDI', 'LARSON', 'HEIDI.LARSON@sakilacustomer.org'), ('PENNY', 'NEAL', 'PENNY.NEAL@sakilacustomer.org'), ('KENNETH', 'GOODEN', 'KENNETH.GOODEN@sakilacustomer.org'), ('HARRY', 'ARCE', 'HARRY.ARCE@sakilacustomer.org'), ('NATHAN', 'RUNYON', 'NATHAN.RUNYON@sakilacustomer.org'), ('THEODORE', 'CULP', 'THEODORE.CULP@sakilacustomer.org'), ('MAURICE', 'CRAWLEY', 'MAURICE.CRAWLEY@sakilacustomer.org'), ('BEN', 'EASTER', 'BEN.EASTER@sakilacustomer.org'), ('CHRISTIAN', 'JUNG', 'CHRISTIAN.JUNG@sakilacustomer.org'), ('JIMMIE', 'EGGLESTON', 'JIMMIE.EGGLESTON@sakilacustomer.org'), ('TERRANCE', 'ROUSH', 'TERRANCE.ROUSH@sakilacustomer.org'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('```sql\nSELECT first_name, last_name, email FROM customer WHERE toYear(create_date) = 2006 AND active = 0\n```') (line 1, col 1): ```sql\nSELECT first_name, last_name, email FROM customer WHERE toYear(create_date) = 2006 AND active = 0\n```\n\n FORMAT Native. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 664, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((22.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((22.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 665, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression or function identifier `T2.category_id` in scope SELECT (toFloat64(sum(if(T2.name = 'horror', 1, 0))) * 100) / countDistinct(T1.category_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = `T2.category_id`. Maybe you meant: ['category_id']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 666, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-0.008347245409015025,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `IIF` does not exist. In scope SELECT avg(IIF(T4.country = 'Australia', 1, 0)) - avg(IIF(T4.country = 'Canada', 1, 0)) AS diff FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id INNER JOIN city AS T3 ON T2.city_id = T3.city_id INNER JOIN country AS T4 ON T3.country_id = T4.country_id. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 670, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 671, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the equivalent ClickHouse SQL statement: \n\n```sql\nSELECT sum(T2.amount) FROM rental AS T1 INNER JOIN payment AS T2 ON T1.rental_id = T2.rental_id WHERE . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 672, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 673, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 207\n Code: 207. DB::Exception: JOIN  INNER JOIN ... ON T1.film_id = T2.film_id ambiguous identifier 'film_id'. In scope SELECT (toFloat64(sum(if((T2.length < 100) AND (T3.name = 'Drama'), 1, 0))) * 100) / count() OVER (PARTITION BY film_id) AS result FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id. (AMBIGUOUS_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 674, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `IIF` does not exist. In scope SELECT SUM(IIF(T2.name = 'Children', 1, 0)) - SUM(IIF(T2.name = 'Action', 1, 0)) AS diff FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 675, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('```sql\nSELECT toFloat64(sum(if(T2.`') (line 1, col 1): ```sql\nSELECT toFloat64(sum(if(T2.`name` = 'Documentary', 1, 0))) * 100 / uniq(T1.`film_id`) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.`category_. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 676, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement can be translated as follows in ClickHouse:\n\n```sql\nSELECT toFloat64(sumState(T2.name = 'Horror')) * 100 / uniqCombined(T1.film_id) \nFROM film. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 677, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.17150984883853,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.17150984883853,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 679, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 683, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 668, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('BRAD',), ('0',), ('0',), ('0',), ('0',), ('CLINTON',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('VIOLA',), ('SHERRI',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('JO',), ('0',), ('0',), ('SHANNON',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('APRIL',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('SEAN',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('SHARON',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('JACQUELINE',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('SYLVIA',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('MARION',), ('0',), ('0',), ('0',), ('0',), ('EDWIN',), ('0',), ('MARK',), ('0',), ('BRITTANY',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('SANDRA',), ('RAYMOND',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('ADRIAN',), ('0',), ('0',), ('0',), ('0',), ('0',), ('ROSA',), ('DAISY',), ('MARIO',), ('0',), ('0',), ('0',), ('TIM',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('MILDRED',), ('0',), ('0',), ('0',), ('ROSS',), ('0',), ('YOLANDA',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('OLGA',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('MARLENE',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('JACK',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('PAULINE',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('CAROL',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('BYRON',), ('0',), ('0',), ('0',), ('0',), ('EMMA',), ('0',), ('0',), ('CHRIS',), ('0',), ('0',), ('0',), ('0',), ('0',), ('KARL',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('CRAIG',), ('0',), ('0',), ('0',), ('0',), ('ERIKA',), ('0',), ('DOUGLAS',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('LARRY',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('HERMAN',), ('0',), ('0',), ('0',), ('VIVIAN',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('DORIS',), ('0',), ('0',), ('0',), ('0',), ('JOSEPH',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('JARED',), ('0',), ('0',), ('MICHAEL',), ('0',), ('0',), ('0',), ('0',), ('0',), ('MELINDA',), ('0',), ('0',), ('0',), ('WALTER',), ('JULIO',), ('0',), ('0',), ('0',), ('0',), ('0',), ('JACKIE',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('ROLAND',), ('NEIL',), ('0',), ('ANDY',), ('0',), ('0',), ('FRED',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('DARRYL',), ('0',), ('0',), ('0',), ('0',), ('VICKI',), ('0',), ('ALBERT',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('JAIME',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('BARBARA',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('0',), ('MABEL',))", "rowcount": 496, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 386\n Code: 386. DB::Exception: There is no supertype for types String, UInt8 because some of them are String/FixedString/Enum and some of them are not: In scope SELECT DISTINCT IF((SUM(IF(T5.name = 'Family', 1, 0)) - SUM(IF(T5.name = 'Sci-Fi', 1, 0))) > 0, T1.first_name, 0) AS first_name FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film_category AS T4 ON T4.film_id = T3.film_id INNER JOIN category AS T5 ON T4.category_id = T5.category_id GROUP BY T1.customer_id. (NO_COMMON_TYPE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 2, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 563, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Classical Minutes: Musical Skills and Motivation | Tips and Insights | Instrumental Coaching | Onlin...',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Classical Minutes: Musical Skills and Motivation | Tips and Insights | Instrumental Coaching | Onlin...',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 235, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Chauncey', 'Ray', 'Billups', 27))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal types Date32 and UInt16 of arguments of function multiply: In scope SELECT T1.firstName, T1.middleName, T1.lastName, 2003 - toUnixTimestamp64Milli(T1.birthDate * 1000) FROM awards_players AS T2 INNER JOIN players AS T1 ON T2.playerID = T1.playerID WHERE (T2.award = 'Finals MVP') AND (T2.year = 2003). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 237, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.112449799196787,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((30.693069306930692,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 252, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 448 (''t differentiate between integer and text data types for numeric values, so we use Int64 instead of integer. For string type, it uses String.\n\n FORMAT Native') (line 7, col 217): 't differentiate between integer and text data types for numeric values, so we use Int64 instead of integer. For string type, it uses String.\n\n FORMAT Native. Single quoted string is not closed: ''t differentiate between integer and text data types for numeric values, so we use Int64 instead of integer. For string type, it uses String.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 217, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Medsep Group',), ('Ole Group',), ('Pure Group',), ('Prasco Group',), ('Wuxi Group',), ('S.S.S. Group',), ('Uriel Group',), ('Amylin Group',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement to be translated from SQLite to ClickHouse is as follows:\n\n```sql\nSELECT T FROM ( SELECT if(`Customer_Names` LIKE '%Group%', `Customer_Names`,. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 218, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Elorac, Corp',), ('Linde ',), ('Prasco Group',), ('Dharma Ltd',), ('O.E. Ltd',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Elorac, Corp',), ('Linde ',), ('Prasco Group',), ('Dharma Ltd',), ('O.E. Ltd',))", "rowcount": 5, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 219, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 38\n Code: 38. DB::Exception: Cannot parse date: value is too short: Cannot parse Date from String: In scope SELECT SUM(IIF(toDate(OrderDate) = toDate('18-05-31'), 1, 0)) FROM Sales_Orders. (CANNOT_PARSE_DATE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 220, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SO - 000106',), ('SO - 000136',), ('SO - 000163',), ('SO - 000165',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 221, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((396,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((396,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 222, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Georgia',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Georgia',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 224, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('10/15/18',), ('10/12/18',), ('6/13/18',), ('10/9/18',), ('10/13/18',), ('10/19/18',), ('10/18/18',), ('10/26/18',), ('6/16/18',), ('11/10/18',), ('11/15/18',), ('11/4/18',), ('11/13/18',), ('6/21/18',), ('11/23/18',), ('11/27/18',), ('12/22/18',), ('12/8/18',), ('7/4/18',), ('1/3/19',), ('12/11/18',), ('12/28/18',), ('1/4/19',), ('7/3/18',), ('1/13/19',), ('12/29/18',), ('1/18/19',))", "rowcount": 27, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `iif` does not exist. In scope SELECT DISTINCT iif(T2.Product_Name = 'Cookware', T1.DeliveryDate, NULL) AS T FROM Sales_Orders AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 225, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Cookware',), ('Wine Storage',), ('Stemware',), ('Pendants',), ('Serveware',), ('Festive',), ('Candles',), ('Wall Coverings',), ('Accessories',), ('Table Lamps',), ('Wardrobes',), ('Floral',), ('Floor Lamps',), ('Home Fragrances',), ('Pillows',), ('Bedroom Furniture',), ('Cocktail Glasses',), ('Mirrors',), ('Bar Tools',), ('Audio',), ('Wall Frames',), ('Ornaments',), ('Blankets',), ('Furniture Cushions',), ('Platters',), ('Baseball',), ('Vases',), ('Table Linens',), ('Dinnerware',), ('Clocks',), ('Bakeware',), ('Basketball',), ('TV and video',), ('Photo Frames',), ('Dining Furniture',), ('Candleholders',), ('Phones',), ('Computers',), ('Collectibles',), ('Vanities',), ('Sculptures',), ('Bean Bags',), ('Wreaths',), ('Outdoor Decor',))", "rowcount": 44, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Cookware',), ('Wine Storage',), ('Stemware',), ('Pendants',), ('Serveware',), ('Festive',), ('Candles',), ('Wall Coverings',), ('Accessories',), ('Table Lamps',), ('Wardrobes',), ('Floral',), ('Floor Lamps',), ('Home Fragrances',), ('Pillows',), ('Bedroom Furniture',), ('Cocktail Glasses',), ('Mirrors',), ('Bar Tools',), ('Audio',), ('Wall Frames',), ('Ornaments',), ('Blankets',), ('Furniture Cushions',), ('Platters',), ('Baseball',), ('Vases',), ('Table Linens',), ('Dinnerware',), ('Clocks',), ('Bakeware',), ('Basketball',), ('TV and video',), ('Photo Frames',), ('Dining Furniture',), ('Candleholders',), ('Phones',), ('Computers',), ('Collectibles',), ('Vanities',), ('Sculptures',), ('Bean Bags',), ('Wreaths',), ('Outdoor Decor',))", "rowcount": 44, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 226, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('18',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T2._SalesTeamID' cannot be resolved from table with name T2. In scope SELECT substr(T1.OrderDate, -2, 2) FROM Sales_Orders AS T1 INNER JOIN Sales_Team AS T2 ON T2._SalesTeamID = T1._SalesTeamID WHERE T2.Sales_Team = 'George Lewis' GROUP BY substr(T1.OrderDate, -2, 2) ORDER BY count(T1.OrderNumber) DESC LIMIT 1. Maybe you meant: ['T2.SalesTeamID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 227, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('781.22',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression or function identifier `Unit Cost` in scope SELECT if(OrderNumber = 'SO-000103', `Unit Cost`, NULL) AS T FROM Sales_Orders. Maybe you meant: ['Unit_Cost']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 229, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T2.Customer Names' cannot be resolved from table with name T2. In scope SELECT SUM(multiIf((right(T1.OrderDate, 2) IN ('18', '19', '20')) AND (T2.`Customer Names` = 'Medsep Group'), 1, 0)) FROM Sales_Orders AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID. Maybe you meant: ['T2.Customer_Names']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 230, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((30,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 42\n Code: 42. DB::Exception: Aggregate function sum requires single argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 231, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SO - 000159', 'Cookware'), ('SO - 000156', 'Outdoor Decor'), ('SO - 000157', 'Home Fragrances'), ('SO - 000158', 'Home Fragrances'))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 60\n Code: 60. DB::Exception: Unknown table expression identifier 'Sales Orders' in scope SELECT IF(T2.OrderDate = '2018-06-06', T2.OrderNumber, NULL) AS OrderNumber, IF(T2.OrderDate = '2018-06-06', T1.`Product Name`, NULL) AS `Product Name` FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID. (UNKNOWN_TABLE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 232, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('7/19/18',), ('4/10/18',), ('12/31/17',), ('10/27/18',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The given SQL statement can be translated to ClickHouse as follows:\n\n```sql\nSELECT DISTINCT T FROM ( SELECT if(_CustomerID = 11, ProcuredDate, NULL) AS T FROM S. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 233, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((28,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 60\n Code: 60. DB::Exception: Unknown table expression identifier 'Sales Orders' in scope SELECT SUM(IF((ShipDate LIKE '2018-06%') AND (`Sales Channel` = 'Online'), 1, 0)) FROM `Sales Orders`. (UNKNOWN_TABLE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 155, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here's the SQL translation for your query from Sqlite to Clickhouse: \n\n```sql\nSELECT toFloat64(sum(if(T2.food_type = 'mexican', 1, 0))) * 100 / uniqCombined(T2.. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 156, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `sumReplicated` does not exist. In scope SELECT (toFloat64(sumReplicated(T1.street_name = '11th st')) * 100) / uniqCombined(T1.id_restaurant) AS result FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.County = 'alameda county'. Maybe you meant: ['replicate']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 157, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 158, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.21344717182497333,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.21344717182497333,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 159, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 160, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement from SQLite to ClickHouse would be as follows:\n\n```sql\nSELECT CAST((SUM(IF(region = 'Napa Valley', 1, 0)) / COUNT(*)) * 100 AS FLOA. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 161, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 471, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.5964035964035963,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('ClickHouse') (line 1, col 1): ClickHouse query would look like this: \n```sql\nSELECT toFloat64(sum(if(T2.n_name = 'GERMANY', 1, 0))) * 100 / count(*) FROM customer AS T1 INNER JOIN nation AS . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 472, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-32.0,), (93.0,), (49.0,), (-25.0,), (-23.0,), (111.0,))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal types Date32 and Date32 of arguments of function minus: In scope SELECT toDate32(T2.l_receiptdate) - toDate32(T2.l_commitdate) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE (T1.o_custkey = 129301) AND (T1.o_orderdate = '1996-07-27'). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 473, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translated SQL query:\n```sql\nSELECT CAST((COUNTIF(T2.r_name = 'EUROPE') / NULLIFZERO(COUNT(*))) * 100 AS Float64) FROM nation AS T1 INNER JOIN regio. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 474, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4.714912280701754,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4.714912280701754,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 475, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((995,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((995,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 476, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 477, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal types Date32 and Date32 of arguments of function minus: In scope SELECT COUNT(T2.o_orderkey) FROM lineitem AS T1 INNER JOIN orders AS T2 ON T2.o_orderkey = CAST(T1.l_orderkey, 'Int64') WHERE ((toDate32(T1.l_shipdate) - toDate32(T2.o_orderdate)) = 1) AND (T2.o_orderpriority = '1-URGENT'). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 478, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((9.49050949050949,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((9.49050949050949,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 479, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 408 ('#') (line 4, col 38): #3', 1, 0)) / uniqCombined64(p_partkey)) * 100 FROM part\n```\n\nNote: The function `uniqCombined64` is used to replace the COUNT() SQLite function because ClickHo. Unrecognized token: '#'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 481, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4.495614035087719,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4.495614035087719,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 482, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 483, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 484, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((48.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement from SQLite to ClickHouse would be as follows:\n\n```sql\nSELECT CAST(SUM(IF(ps_supplycost > 500, 1, 0)) AS FLOAT) * 100 / COUNT(*) FR. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 485, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((26.829268292682926,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((26.829268292682926,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 486, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((23.3502538071066,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((23.3502538071066,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 487, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-21.988263888888923,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-21.988199869791742,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 1, "FN": 0}
{"sql_id": 488, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((67.3992673992674,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((67.3992673992674,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 490, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.091370558375634,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 215\n Code: 215. DB::Exception: Column T1.c_custkey is not under aggregate function and not in GROUP BY keys. In query SELECT (toFloat64(sum(if(T2.n_name = 'IRAN', 1, 0))) * 100) / count() OVER (PARTITION BY T1.c_custkey) AS percent_iran FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD'. (NOT_AN_AGGREGATE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 492, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 493, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-229,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-229,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 494, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal types Date32 and Date32 of arguments of function minus: In scope SELECT toDate32(T2.l_receiptdate) - toDate32(T2.l_commitdate), T1.o_clerk FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderkey = 6. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 495, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18.48151848151848,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 97 ('', 1, 0)) AS FLOAT) * 100 / COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r<\uff5cbegin\u2581of\u2581sentence\uff5c>\n FORMAT Native') (line 4, col 37): ', 1, 0)) AS FLOAT) * 100 / COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r<\uff5cbegin\u2581of\u2581sentence\uff5c>\n FORMAT Native. Single quoted string is not closed: '', 1, 0)) AS FLOAT) * 100 / COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r<\uff5cbegin\u2581of\u2581sentence\uff5c>\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 496, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 497, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 499, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('ClickHouse') (line 1, col 1): ClickHouse SQL statement would be like this: \n```sql\nSELECT toFloat64(sum(if(T1.r_name = 'America', 1, 0))) * 100 / uniq(T2.n_regionkey) FROM region AS T1 INNER. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 500, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((25.641025641025642,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 924 (''t need to change it for this translated version.\n- Also note that ClickHouse uses backticks (`tableName` or `columnName`) instead of quotes while referring table or column names. This formatting is not standard SQL but specific to ClickHouse. The provided query matches the given schema information, so no changes are required here.\n\n FORMAT Native') (line 14, col 233): 't need to change it for this translated version.\n- Also note that ClickHouse uses backticks (`tableName` or `columnName`) instead of quotes while referring tab. Single quoted string is not closed: ''t need to change it for this translated version.\n- Also note that ClickHouse uses backticks (`tableName` or `columnName`) instead of quotes while referring table or column names. This formatting is not standard SQL but specific to ClickHouse. The provided query matches the given schema information, so no changes are required here.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 501, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 502, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement from SQLite to ClickHouse would be:\n\n```sql\nSELECT COUNT(l_orderkey) FROM lineitem WHERE toDate(l_shipdate) = '1994-01-01' AND l_re. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 503, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 19, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((981,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Clickhouse') (line 1, col 1): Clickhouse does not have a function named strftime. However, you can convert the datetime data type to string and then compare it with '2016'. Here is your tran. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 20, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((47.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((47.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 21, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-96.96969696969697,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 503 ('\\xe2') (line 7, col 105): \u2019t have a built-in SQLite equivalent for strftime('%Y', ...).\n\n FORMAT Native. Unrecognized token: '\\xe2'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 23, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.Complaint ID' cannot be resolved from table with name T1. In scope SELECT toDate32('%Y-01-01', T3.`Date received`) AS Year, sum(multiIf(T3.`Company response to consumer` = 'Closed with explanation', 1, 0)) / countDistinct(T3.`Complaint ID`) AS average FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.rand_client = T2.client_id INNER JOIN events AS T3 ON T1.`Complaint ID` = T3.`Complaint ID` WHERE T2.city = 'New Bedford' GROUP BY Year. Maybe you meant: ['T1.Complaint_ID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 29, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('CR0678444', 36017, '915-818-1976'), ('CR0775199', 40342, '978-527-8432'), ('CR1026897', 35730, '978-277-2764'))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement is as follows:\n\n```sql\nSELECT `Complaint_ID`, call_id, phonefinal FROM callcenterlogs WHERE toYear(Date_received) = 2014 AND server. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 30, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.353982300884956,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement you provided would translate as follows in ClickHouse:\n\n```sql\nSELECT AVG(toUInt8(substring(ser_time, 4, 2))) FROM callcenterlogs WHERE Date_r. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 33, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translated SQL statement from sqlite to clickhouse: \n\n```sql\nSELECT CAST(SUM(CASE WHEN T1.priority = 2 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 34, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 35, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 36, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T2.Date sent to company' cannot be resolved from table with name T2. In scope SELECT (toFloat64(sum(multiIf((toDate32('%Y-%m-%d', T2.`Date sent to company`) - toDate32('%Y-%m-%d', T2.`Date received`)) > 5, 1, 0))) * 100) / count(T1.client_id) AS result FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE (T1.city = 'Houston') AND (toYear(toDate32('%Y-%m-%d', T2.`Date received`)) = 2014). Maybe you meant: ['T2.Date_sent_to_company']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 37, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 38, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT COUNT(T1.Complaint_ID) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.Complaint_ID = T2.Complaint_ID WHERE (toYYYYString(T1.Date_received) = '2015') AND (T2.Timely_response_ = 'Yes') AND (T2.Company_response_to_consumer = 'Closed with explanation'). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 39, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 24, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression identifier `Complaint ID` in scope SELECT `Complaint ID` FROM events WHERE ((toUnixTimestamp(`Date sent to company`) - toUnixTimestamp(`Date received`)) = (SELECT max(toUnixTimestamp(`Date sent to company`) - toUnixTimestamp(`Date received`)) FROM events WHERE `Date sent to company` = '2014-09-25')) AND (`Date sent to company` = '2014-09-25'). Maybe you meant: ['Complaint_ID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 453, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 455, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,), (5,), (14,), (2,), (1,), (5,), (4,), (4,), (14,), (1,), (3,), (6,), (9,), (10,), (24,), (8,), (22,), (3,), (8,), (3,))", "rowcount": 20, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement you provided can be translated to ClickHouse as follows:\n\n```sql\nSELECT COUNT(T2.CustomerID) \nFROM Customers AS T1 \nINNER JOIN Orders AS T2 ON. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 463, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Guaran\u00e1 Fant\u00e1stica',), ('R\u00f6ssle Sauerkraut',), ('Raclette Courdavault',), ('Fl\u00f8temysost',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Guaran\u00e1 Fant\u00e1stica',), ('R\u00f6ssle Sauerkraut',), ('Raclette Courdavault',), ('Fl\u00f8temysost',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 363, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('```sql\nSELECT T1.SalesID FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID WHERE startsWith(T2.FirstName, 's')\n```') (line 1, col 1): ```sql\nSELECT T1.SalesID FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID WHERE startsWith(T2.FirstName, 's')\n```\n\n FORMAT Native. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 364, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((134,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `IIF` does not exist. In scope SELECT (SUM(IIF(T2.FirstName = 'Morningstar', 1, 0)) + SUM(IIF(T2.FirstName = 'Heather', 1, 0))) + SUM(IIF(T2.FirstName = 'Dean', 1, 0)) AS num FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 3, "FP": 1, "FN": 0}
{"sql_id": 365, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('YES',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('YES',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 366, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19073,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement can be translated to ClickHouse as follows:\n\n```sql\nSELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.Pr. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 367, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Black',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 516 ('' \n    END\nFROM Products AS T1 \nINNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID\n```\n\n FORMAT Native') (line 9, col 20): ' \n    END\nFROM Products AS T1 \nINNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID\n```\n\n FORMAT Native. Single quoted string is not closed: '' \n    END\nFROM Products AS T1 \nINNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID\n```\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 368, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `iif` does not exist. In scope SELECT (toFloat64(sum(iif((T3.FirstName = 'Albert') AND (T3.MiddleInitial = 'I') AND (T3.LastName = 'Ringer'), 1, 0))) * 100) / countDistinct(T2.CustomerID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID WHERE T1.Name = 'ML Bottom Bracket'. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 369, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4.278838342810723,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4.278838342810723,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 370, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 42\n Code: 42. DB::Exception: Aggregate function sum requires single argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 371, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 573, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 386\n Code: 386. DB::Exception: There is no supertype for types String, DateTime because some of them are String/FixedString/Enum and some of them are not. (NO_COMMON_TYPE) (version 24.9.2.42 (official build))\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement you provided is a simple query to select the number of distinct dates in the weather table where the sunrise time is before 05:00:00. In Click. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 238, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 42\n Code: 42. DB::Exception: Aggregate function sum requires single argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 239, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((44.827586206896555,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((44.827586206896555,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 240, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, 0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `IIF` does not exist. In scope SELECT sum(IIF(T4.CharName = 'Romeo', 1, 0)) AS RomeoCount, sum(IIF(T4.CharName = 'Juliet', 1, 0)) AS JulietCount, (CAST(sum(IIF(T4.CharName = 'Romeo', 1, 0)) + sum(IIF(T4.CharName = 'Juliet', 1, 0)), 'FLOAT') * 100) / count(*) AS Percentage FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 4, "FP": 5, "FN": 0}
{"sql_id": 241, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 242, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 243, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((21.428571428571427,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T2.act' cannot be resolved from table with name T2. In scope SELECT (CAST(SUM(IF(T2.act = 5, 1, 0)), 'FLOAT') * 100) / COUNT(*) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Titus Andronicus'. Maybe you meant: ['T2.Act']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 244, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Pericles, Prince of Tyre',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Pericles, Prince of Tyre',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 245, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Venus and Adonis.',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Venus and Adonis.',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 246, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 207, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((56.52173913043478,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('```sql\nSELECT toFloat64(sum(if(race = 'W', 1, 0))) * 100 / uniqCombined(case_number) FROM officers WHERE gender = 'M'\n```') (line 1, col 1): ```sql\nSELECT toFloat64(sum(if(race = 'W', 1, 0))) * 100 / uniqCombined(case_number) FROM officers WHERE gender = 'M'\n```\n\n FORMAT Native. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 210, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `IIF` does not exist. In scope SELECT SUM(IIF(toString(date) LIKE '2007%', 1, 0)) - SUM(IIF(toString(date) LIKE '2008%', 1, 0)) FROM incidents WHERE subject_weapon = 'Vehicle'. Maybe you meant: ['if']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 211, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('031347-2015',), ('125333Z',), ('130254Z',), ('134472-2015',), ('135680Z',), ('143473-2014',), ('154184-2014',), ('155466-2015',), ('155523Z',), ('165193-2016',), ('182199A',), ('183313Z',), ('192024-2014',), ('192550-2014',), ('199250-2015',), ('203639-2016',), ('204701-2014',), ('206124-2014',), ('216145-2014',), ('219229-2015',), ('248051A',), ('280218A',), ('302115Z',), ('308643Z',), ('32587A',), ('36192Z',), ('45802Z',), ('56628A',), ('60045A',), ('79223B',), ('912B',), ('94757B',))", "rowcount": 32, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement you provided can be translated as follows in ClickHouse:\n\n```sql\nSELECT case_number \nFROM incidents \nWHERE year(date) > 2011 AND subject_statu. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 255, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement in ClickHouse would be as follows:\n\n```sql\nSELECT COUNT(name) FROM Person WHERE birth_region = 'New York' AND toInt32(substring(birthdate, 1, . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 256, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal type Int64 of first argument of function substring, expected String, FixedString or Enum: In scope SELECT T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE (T1.award = 'Outstanding Voice-Over Performance') AND (substring(T1.year, 1, 4) = '2009') AND (T1.person = 'Dan Castellaneta'). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 257, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 259, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('MyPods and Boomsticks',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal type Int64 of argument of function left: In scope SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE (left(T1.year, 4) = '2017') AND (T1.award = 'Best International TV Series') AND (T1.result = 'Winner'). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 260, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Ray Claffey',), ('Daniel Chun',), ('David Mirkin',), ('Denise Sirkot',), ('Max Pross',), ('Mike Reiss',), ('Utit Choomuang',), ('Nelson Shin',), ('Brian J. Kaufman',), ('Joe Saunders',), ('Dominique Braud',), ('Bonita Pietila',), ('Dan Greaney',), ('Richard Sakai',), ('Tom Gammill',), ('Ronny Cox',), ('Jefferson R. Weekley',), ('Richard Hinds Jr.',), ('Alan Decker',), ('Kurtis Kunsak',), ('Michael Bridge',), ('Don Barrozo',), ('Jennifer Dolce',), ('Javier Pineda',), ('Mike Scully',), ('Richard Raynis',), ('Scott Clausen',), ('Ian Maxtone-Graham',), ('James L. Brooks',), ('Matt Groening',), ('Matt Selman',), ('Sam Simon',), ('Tim Long',), ('Joe Zimmerman',), ('Rick Riccio',), ('Steven L. Smith',), ('Victor Pesavento',), ('Tom Boyd',), ('Alf Clausen',), ('Dell Hake',), ('Rosanna Lyons',), ('Charles McCaskill',), ('Al Jean',), ('Robyn Anderson',), ('Sally Stevens',), ('Chris Ledesma',), ('Bobby Mackston',), ('Norm MacLeod',), ('Terry Greene',), ('Steve Mills',), ('Raymond S. Persi',), ('Carolyn Omine',), ('David Silverman',), ('Don Payne',), ('Paul Newman',), ('Anne Legge',), ('Chris Bolden',), ('Eli Balser',), ('Danny Elfman',), ('Brian Kelley',), ('John Frink',), ('Kevin Curran',), ('Marc Wilmore',), ('Michael Price',), ('Rob LaZebnik',), ('Ron Hauge',), ('Karen Bauer',), ('Silvia Pompei',), ('Tricia Benson',), ('Yelena Geodakyan',), ('Ed Ghertner',), ('Bill Odenkirk',), ('J. Stewart Burns',), ('Joel H. Cohen',), ('Alex Ruiz',), ('Chance Raspberry',), ('Ernie Elicanal',), ('Istvan Majoros',), ('Jonathan Gebhart',), ('Rick Salonga',), ('Ryan Rivette',), ('John Pattison',), ('Eric S. Keyes',), ('Kevin M. Newman',), ('Kevin N. Moore',), ('Alex Que',), ('Michael Nobori',), ('Mindi Lee',), ('Lance Wilder',), ('Lynna Blankenship',), ('T.J. Kim',), ('Daniel Chiu',), ('John Liu',), ('Jesse D. Miller',), ('Gabriel DeFrancesco',), ('Andrea Schell',), ('Karolina Waclawiak',), ('Lauren Biller',), ('Matt Marshall',), ('Michael D. Mitchell',), ('N. Vyolet Diaz',), ('Alexander Duke',), ('Felicia Nalivansky-Caplan',), ('Dean Scammahorn',), ('Debbie Peterson',), (\"Shannon O'Connor\",), ('Trista H. Navarro',), ('Carlton Batten',), ('Lisa S. Cervantes',), ('Mike Battle',), ('Sergio Guerra',), ('Colin Contreary',), ('Lisa Walder',), ('Angela Wixtrom',), ('Brooks Stonestreet',), ('Nikki Isordia',), ('Desiree E. Craig',), ('Deanna Asato',), ('Stephenie Moffatt',), ('Elizabeth Ableson',), ('Amanda Byrnes',), ('Ashley Brooke Cooper',), ('Michael G. Mahan',), ('Laurie Biernacki',), ('Rick Polizzi',), ('Ray Miceli',), ('Will Anderson',), ('Jason Bikowski',), ('Esther H. Lee',), ('William Bemiller',), ('Richard K. Chung',), ('John W. Hyde',), ('Michael Wolf',), ('Scott D. Greenberg',), ('Tom Mazzocco',), ('Derek Casari',), ('Bill Higley',), ('Michael Miller',), ('Eric Loudon',), ('Heliodoro Salvatierra',), ('Martin Alvarez',), ('Myung Nam Chang',), ('John Krause',), ('Leasa Epps-Eisele',), ('Michael Polcino',), ('Young Yoo',), ('Jeff Johnson',), ('Josh Taback',), ('Julia Fitzmaurice',), ('Liz Climo',), ('Mark Ervin',), ('Orlando Baeza',), ('Richard Manginsay',), ('Christianna Lang Daley',), ('Dane Romley',), ('Eddie Rosas',), ('Eric Koenig',), ('Greg Checketts',), ('Jay Robinson',), ('Steve Pilapil',), ('Ben Lane',), ('Drew McPhail',), ('Larry Smith',), ('Oscar Cervantes',), ('Adam Kuhlman',), ('Glen Wuthrich',), ('John Berman',), ('Bob Anderson',), ('Tom Madrid Jr.',), ('Victor E. Almaguer',), ('Eric Lara',), ('Erick T. Tran',), ('Grant Lee',), ('Jeanne Erickson',), ('Jung A. Yoo',), ('Luis Escobar',), ('Norman P. Auble',), ('Matthew Schofield',), ('Cynthia Jill French',), ('Dante Fabiero',), ('Debbie Mahan',), ('Edwin E. Aguilar',), ('Rene Vega',), ('Joe Wack',), ('Jabu Henderson',), ('Patrick Buchanan',), ('Billy Theriot',), ('Robert Ingram',), ('Jarod Daetwiler',), ('Matthew Faughnan',), ('Oscar Pangestu',), ('Jason D. Warnesky',), ('Jennifer Moeller',), ('John Achenbach',), ('Manny DeGuzman',), ('Matthew Herbert',), ('Mike Morris',), ('Fill Marc Sagadraca',), ('J.C. Wegman',), ('Sam Ho',), ('Adam Klein',), ('William L. Arance',), ('Alfred Cruz',), ('Ian Wilcox',), ('Mike Pettengill',), ('Charles Ragins',), ('Scott Brutz',), ('Chris Clements',), ('Tom Klein',), ('Sam Im',), ('Jack Dyer',), ('Merl Reagle',), ('Cameron Porter',), ('Nancy Kruse',), ('Lena Podesta',), ('Mary Orario-Natale',), ('Sooan Kim',), ('Jennie Hoffer',), ('Paul Wee',), ('Kent Rice',), ('Richard Gasparian',), ('Harry Shearer',), ('Russi Taylor',), ('Hank Azaria',), ('Karl Wiedergott',), ('Tress MacNeille',), ('Shohreh Aghdashloo',), ('Dan Castellaneta',), ('Nancy Cartwright',), ('Julie Kavner',), ('Felix Sanchez',), ('Larry Field',), ('Laurie Wetzler',), ('Denise Donatelli',), ('Pamela Hayden',), ('Yeardley Smith',), ('Louise Jaffe',), ('Robert Nichols II',), ('Tim Lauber',), ('Valentina Garza',), ('Rudi Berden',), ('Mike B. Anderson',), ('Jeff Westbrook',), ('Larina Jean Adamson',), ('Matt Warburton',), ('Mark Linden',), ('John Mathot',), ('Scott Alberts',), ('Jim Reardon',), ('Heejin Kim',), ('Steven Dean Moore',), ('Viorel Voronca',), ('Maeve McGrath',), ('Peter Gomez',), ('Caroline Cruikshank',), ('David Salvador',), ('Larry Miravalles',))", "rowcount": 257, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 261, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((52,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((52,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 264, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 265, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Treehouse of Horror XIX', 'https://m.media-amazon.com/images/M/MV5BMTgzOTYyNTc2OF5BMl5BanBnXkFtZTgwNjc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Best Directing in an Animated Television Production or Short Form', 'Bob Anderson'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Outstanding Writing in a Comedy Series', 'Marc Wilmore'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('Homer and Lisa Exchange Cross Words', 'https://m.media-amazon.com/images/M/MV5BMTQ2MzcyOTMyMl5BMl5BanBnXkFtZTgwNDc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Animation', 'Tim Long'))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Treehouse of Horror XIX', 'https://m.media-amazon.com/images/M/MV5BMTgzOTYyNTc2OF5BMl5BanBnXkFtZTgwNjc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Best Directing in an Animated Television Production or Short Form', 'Bob Anderson'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Outstanding Writing in a Comedy Series', 'Marc Wilmore'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('Homer and Lisa Exchange Cross Words', 'https://m.media-amazon.com/images/M/MV5BMTQ2MzcyOTMyMl5BMl5BanBnXkFtZTgwNDc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Animation', 'Tim Long'))", "rowcount": 6, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 266, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Paul Newman', 'Shaker Heights', 'dedicated to the memory of', 97))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T2.role' cannot be resolved from table with name T2. In scope SELECT T1.name, T1.birth_place, T2.role, 2022 - CAST(SUBSTR(T1.birthdate, 1, 4), 'UInt32') AS age FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.birthdate IS NOT NULL ORDER BY T1.birthdate ASC LIMIT 1. Maybe you meant: ['T2._role']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 268, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 269, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Al Jean',), ('Alex Dilts',), ('Alf Clausen',), ('Anna Pagan',), ('Bill Odenkirk',), ('Billy Kimball',), ('Bobby Mackston',), ('Bonita Pietila',), ('Brian Grazer',), ('Carolyn Omine',), ('Chris Ledesma',), ('Chuck Sheetz',), ('Colm Meaney',), ('Dan Castellaneta',), ('Dan Greaney',), ('Danny Elfman',), ('David Mirkin',), ('David Silverman',), ('Dean Scammahorn',), ('Dell Hake',), ('Denis Leary',), ('Denise Sirkot',), ('Don Payne',), ('Don Vanderbeek',), ('Ed Begley Jr.',), ('Eric S. Keyes',), ('Glen Wuthrich',), ('Grant Lee',), ('Hank Azaria',), ('Harry Shearer',), ('Ian Maxtone-Graham',), ('J. Stewart Burns',), ('James L. Brooks',), ('Jeff Bezos',), ('Jeff Topping',), ('Jefferson R. Weekley',), ('Jodie Foster',), ('Joe Mantegna',), ('Joe Montana',), ('John Achenbach',), ('John Berman',), ('John Frink',), ('John Mathot',), ('Julia Louis-Dreyfus',), ('Julie Kavner',), ('Karen Bauer',), ('Karl Wiedergott',), ('Kelsey Grammer',), ('Kevin Curran',), ('Kipp Lennon',), ('Lance Kramer',), ('Larina Jean Adamson',), ('Lynna Blankenship',), ('Maggie Roswell',), ('Marc Wilmore',), ('Marcia Wallace',), ('Mark Cuban',), ('Mark Kirkland',), ('Marv Albert',), ('Matt Groening',), ('Matthew Nastuk',), ('Maurice LaMarche',), ('Max Pross',), ('Merl Reagle',), ('Michael Polcino',), ('Michael Price',), ('Mike Reiss',), ('Mike Scully',), ('Nancy Cartwright',), ('Nancy Kruse',), ('Orlando Gumatay',), ('Pamela Hayden',), ('Patty Shinagawa',), ('Paul Newman',), ('Richard Raynis',), ('Richard Sakai',), ('Rob LaZebnik',), ('Robert Forster',), ('Robert Nichols II',), ('Russi Taylor',), ('Sally Stevens',), ('Sam Simon',), ('Scott Thompson',), ('Shohreh Aghdashloo',), ('Sooan Kim',), ('Stephanie Gillis',), ('Tim Long',), ('Tom Gammill',), ('Tom Mazzocco',), ('Tress MacNeille',), ('Will Shortz',), ('William Bemiller',), ('Yeardley Smith',))", "rowcount": 93, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Al Jean',), ('Alex Dilts',), ('Alf Clausen',), ('Anna Pagan',), ('Bill Odenkirk',), ('Billy Kimball',), ('Bobby Mackston',), ('Bonita Pietila',), ('Brian Grazer',), ('Carolyn Omine',), ('Chris Ledesma',), ('Chuck Sheetz',), ('Colm Meaney',), ('Dan Castellaneta',), ('Dan Greaney',), ('Danny Elfman',), ('David Mirkin',), ('David Silverman',), ('Dean Scammahorn',), ('Dell Hake',), ('Denis Leary',), ('Denise Sirkot',), ('Don Payne',), ('Don Vanderbeek',), ('Ed Begley Jr.',), ('Eric S. Keyes',), ('Glen Wuthrich',), ('Grant Lee',), ('Hank Azaria',), ('Harry Shearer',), ('Ian Maxtone-Graham',), ('J. Stewart Burns',), ('James L. Brooks',), ('Jeff Bezos',), ('Jeff Topping',), ('Jefferson R. Weekley',), ('Jodie Foster',), ('Joe Mantegna',), ('Joe Montana',), ('John Achenbach',), ('John Berman',), ('John Frink',), ('John Mathot',), ('Julia Louis-Dreyfus',), ('Julie Kavner',), ('Karen Bauer',), ('Karl Wiedergott',), ('Kelsey Grammer',), ('Kevin Curran',), ('Kipp Lennon',), ('Lance Kramer',), ('Larina Jean Adamson',), ('Lynna Blankenship',), ('Maggie Roswell',), ('Marc Wilmore',), ('Marcia Wallace',), ('Mark Cuban',), ('Mark Kirkland',), ('Marv Albert',), ('Matt Groening',), ('Matthew Nastuk',), ('Maurice LaMarche',), ('Max Pross',), ('Merl Reagle',), ('Michael Polcino',), ('Michael Price',), ('Mike Reiss',), ('Mike Scully',), ('Nancy Cartwright',), ('Nancy Kruse',), ('Orlando Gumatay',), ('Pamela Hayden',), ('Patty Shinagawa',), ('Paul Newman',), ('Richard Raynis',), ('Richard Sakai',), ('Rob LaZebnik',), ('Robert Forster',), ('Robert Nichols II',), ('Russi Taylor',), ('Sally Stevens',), ('Sam Simon',), ('Scott Thompson',), ('Shohreh Aghdashloo',), ('Sooan Kim',), ('Stephanie Gillis',), ('Tim Long',), ('Tom Gammill',), ('Tom Mazzocco',), ('Tress MacNeille',), ('Will Shortz',), ('William Bemiller',), ('Yeardley Smith',))", "rowcount": 93, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 270, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQLite query can be translated to ClickHouse as follows:\n\n```sql\nSELECT name FROM Person WHERE left(birthdate, 4) = '1958' AND birth_place = 'California' AN. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 271, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Billy Kimball',), ('Ian Maxtone-Graham',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal type Int64 of argument of function toYear. Should be Date, Date32, DateTime or DateTime64: In scope SELECT T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE (year(T1.year) = 2009) AND (T1.role = 'writer') AND (T2.votes > 5). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 273, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Jodie Foster',), ('Rob LaZebnik',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('In') (line 1, col 1): In ClickHouse, the function to get a substring of a string is `subString()`. The SQL query translated would be as follows:\n\n```sql\nSELECT name FROM Person WHERE. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 274, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E1',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement from SQLite to ClickHouse is as follows:\n\n```sql\nSELECT T1.episode_id \nFROM Episode AS T1 \nINNER JOIN Vote AS T2 ON T2.episode_id =. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 275, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Wedding for Disaster',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the SQL statement translated from SQLite to ClickHouse:\n\n```sql\nSELECT T2.title \nFROM Award AS T1 \nINNER JOIN Episode AS T2 ON T1.episode_id = T2.episod. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 276, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.878787878787879,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 255 ('', 1, 0))) * 100 / count() FROM Person\n```\n\n FORMAT Native') (line 4, col 88): ', 1, 0))) * 100 / count() FROM Person\n```\n\n FORMAT Native. Single quoted string is not closed: '', 1, 0))) * 100 / count() FROM Person\n```\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 278, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('MyPods and Boomsticks',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('MyPods and Boomsticks',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 279, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((61,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 259 ('' column type is DateTime or Int64 (as it seems from your schema), because ClickHouse does not have a direct equivalent for extracting the year part from a string as SQLite does.\n\n FORMAT Native') (line 7, col 123): ' column type is DateTime or Int64 (as it seems from your schema), because ClickHouse does not have a direct equivalent for extracting the year part from a stri. Single quoted string is not closed: '' column type is DateTime or Int64 (as it seems from your schema), because ClickHouse does not have a direct equivalent for extracting the year part from a string as SQLite does.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 281, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('1930s to 2020s',), ('suffocation',), ('taser',), ('twin',), ('twin sister',), ('wanted poster',), ('wet cement',), ('riot',), ('school principal',), ('secret from husband',), ('shillelagh',), ('shot in the arm',), ('slow motion scene',), (\"st. patrick's day\",), ('plastic bag',), ('police arrest',), ('prayer',), ('prison',), ('punched in the face',), ('reference to the fantastic four',), ('ricochet',), ('male in female clothes',), ('man in drag',), (\"man in woman's clothes\",), ('montage with pop song',), ('parade float',), ('partnership',), ('phallus shaped cake',), ('flashback',), ('gratitude',), ('gun',), ('irish joke',), ('leprechaun',), ('male bonding',), ('male in drag',), ('concrete',), ('construction site',), ('erotic bakery',), ('face slap',), ('fantastic four spoof',), ('female slaps male',), ('fistfight',), ('bullet',), ('bulletproof glass',), ('cake',), ('catholic joke',), ('catholic priest',), ('cigar smoking',), ('coffee',), ('2d animation',), ('bail bondsman',), ('biblical quote',), ('biblical reference',), ('bleeding arm',), ('bounty hunter',), ('buddy cop spoof',), ('1930s to 2020s',), ('2d animation',), ('cell phone',), ('machu picchu',), ('overprotective mother',), ('peru',), ('pun in title',), ('tracking device',), ('1930s to 2020s',), ('rich kid',), ('2d animation',), ('bad behavior',), ('identity swap',), ('lottery',), ('lottery ticket',), ('lottery winner',), ('party',), ('1930s to 2020s',), ('voting booth',), ('witch costume',), ('year 2008',), ('reference to the great pumpkin',), ('roman numeral in title',), ('skeleton costume',), ('toy car',), ('transformer',), ('transformer toy',), ('turkey the bird',), ('reference to john mccain',), ('reference to john wayne',), ('reference to kate winslet',), ('reference to mad men',), ('reference to pontius pilate',), ('reference to prince',), ('reference to rip taylor',), ('reference to charlton heston',), ('reference to dwight d. eisenhower',), ('reference to edward g. robinson',), ('reference to george clooney',), ('reference to george washington',), ('reference to golda meir',), ('reference to jimmy stewart',), ('halloween spoof',), (\"jack o'lantern\",), ('princess costume',), ('pumpkin patch',), ('reference to abraham lincoln',), ('reference to barack obama',), ('reference to charlie brown',), ('frankenstein costume',), ('ghost costume',), ('giant pumpkin',), ('halloween',), ('halloween costume',), ('halloween episode',), ('halloween party',), ('2d animation',), ('advertising campaign',), ('alien',), ('body in chipper',), ('celebrity death',), ('christmas',), ('dead celebrity',), ('1930s to 2020s',), ('bear trap',), ('body in a trunk',), ('limbo dancing',), ('premarital sex',), ('steamer trunk',), ('1930s to 2020s',), ('2d animation',), ('crossword puzzle',), ('disco',), ('gay bar',), ('getting dumped',), ('lemonade stand',), ('1930s to 2020s',), ('2d animation',), ('arab culture',), ('arab stereotype',), ('ipod',), ('time machine',), ('1930s to 2020s',), ('wetting pants',), ('poker game',), ('prank',), ('secret handshake',), ('skinny dipping',), ('stadium',), ('surrealism',), ('town meeting',), ('construction site',), ('dare',), ('demolition',), ('eskimo indian',), ('greenhouse',), ('killer bee',), ('male bonding',), ('2d animation',), ('bagpipes',), ('beehive',), ('beekeeper',), ('billionaire',), ('boston celtics',), ('colony collapse disorder',))", "rowcount": 161, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('1930s to 2020s',), ('suffocation',), ('taser',), ('twin',), ('twin sister',), ('wanted poster',), ('wet cement',), ('riot',), ('school principal',), ('secret from husband',), ('shillelagh',), ('shot in the arm',), ('slow motion scene',), (\"st. patrick's day\",), ('plastic bag',), ('police arrest',), ('prayer',), ('prison',), ('punched in the face',), ('reference to the fantastic four',), ('ricochet',), ('male in female clothes',), ('man in drag',), (\"man in woman's clothes\",), ('montage with pop song',), ('parade float',), ('partnership',), ('phallus shaped cake',), ('flashback',), ('gratitude',), ('gun',), ('irish joke',), ('leprechaun',), ('male bonding',), ('male in drag',), ('concrete',), ('construction site',), ('erotic bakery',), ('face slap',), ('fantastic four spoof',), ('female slaps male',), ('fistfight',), ('bullet',), ('bulletproof glass',), ('cake',), ('catholic joke',), ('catholic priest',), ('cigar smoking',), ('coffee',), ('2d animation',), ('bail bondsman',), ('biblical quote',), ('biblical reference',), ('bleeding arm',), ('bounty hunter',), ('buddy cop spoof',), ('1930s to 2020s',), ('2d animation',), ('cell phone',), ('machu picchu',), ('overprotective mother',), ('peru',), ('pun in title',), ('tracking device',), ('1930s to 2020s',), ('rich kid',), ('2d animation',), ('bad behavior',), ('identity swap',), ('lottery',), ('lottery ticket',), ('lottery winner',), ('party',), ('1930s to 2020s',), ('voting booth',), ('witch costume',), ('year 2008',), ('reference to the great pumpkin',), ('roman numeral in title',), ('skeleton costume',), ('toy car',), ('transformer',), ('transformer toy',), ('turkey the bird',), ('reference to john mccain',), ('reference to john wayne',), ('reference to kate winslet',), ('reference to mad men',), ('reference to pontius pilate',), ('reference to prince',), ('reference to rip taylor',), ('reference to charlton heston',), ('reference to dwight d. eisenhower',), ('reference to edward g. robinson',), ('reference to george clooney',), ('reference to george washington',), ('reference to golda meir',), ('reference to jimmy stewart',), ('halloween spoof',), (\"jack o'lantern\",), ('princess costume',), ('pumpkin patch',), ('reference to abraham lincoln',), ('reference to barack obama',), ('reference to charlie brown',), ('frankenstein costume',), ('ghost costume',), ('giant pumpkin',), ('halloween',), ('halloween costume',), ('halloween episode',), ('halloween party',), ('2d animation',), ('advertising campaign',), ('alien',), ('body in chipper',), ('celebrity death',), ('christmas',), ('dead celebrity',), ('1930s to 2020s',), ('bear trap',), ('body in a trunk',), ('limbo dancing',), ('premarital sex',), ('steamer trunk',), ('1930s to 2020s',), ('2d animation',), ('crossword puzzle',), ('disco',), ('gay bar',), ('getting dumped',), ('lemonade stand',), ('1930s to 2020s',), ('2d animation',), ('arab culture',), ('arab stereotype',), ('ipod',), ('time machine',), ('1930s to 2020s',), ('wetting pants',), ('poker game',), ('prank',), ('secret handshake',), ('skinny dipping',), ('stadium',), ('surrealism',), ('town meeting',), ('construction site',), ('dare',), ('demolition',), ('eskimo indian',), ('greenhouse',), ('killer bee',), ('male bonding',), ('2d animation',), ('bagpipes',), ('beehive',), ('beekeeper',), ('billionaire',), ('boston celtics',), ('colony collapse disorder',))", "rowcount": 161, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 283, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 284, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E1',), ('S20-E2',), ('S20-E3',), ('S20-E4',), ('S20-E5',), ('S20-E6',), ('S20-E7',), ('S20-E8',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The original SQL statement can be translated to ClickHouse SQL as follows:\n\n```sql\nSELECT DISTINCT episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.epi. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 285, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5.9,), (6.5,), (8.9,), (2.6,), (5.9,), (11.6,), (13.5,), (22.0,), (23.2,), (2.1,), (2.6,), (3.7,), (6.9,), (4.6,), (6.1,), (15.4,), (15.4,), (15.1,), (15.4,), (17.4,), (29.0,), (0.7,), (2.2,), (2.6,), (5.2,), (6.0,), (9.2,), (2.9,), (6.0,), (11.6,), (14.4,), (19.1,), (24.7,), (2.4,), (2.9,), (4.4,))", "rowcount": 36, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5.9,), (6.5,), (8.9,), (2.6,), (5.9,), (11.6,), (13.5,), (22.0,), (23.2,), (2.1,), (2.6,), (3.7,), (6.9,), (4.6,), (6.1,), (15.4,), (15.4,), (15.1,), (15.4,), (17.4,), (29.0,), (0.7,), (2.2,), (2.6,), (5.2,), (6.0,), (9.2,), (2.9,), (6.0,), (11.6,), (14.4,), (19.1,), (24.7,), (2.4,), (2.9,), (4.4,))", "rowcount": 36, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 286, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((9,), (1,), (5,), (10,), (6,), (6,), (8,), (10,), (7,), (2,), (3,), (4,), (9,), (1,), (5,), (2,), (9,), (8,), (10,), (6,), (7,), (3,), (2,), (4,), (9,), (1,), (5,), (6,), (6,), (10,), (6,), (8,), (7,), (2,), (3,), (4,), (9,), (1,), (5,), (6,), (8,), (10,), (7,), (3,), (2,), (4,))", "rowcount": 46, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((9,), (1,), (5,), (10,), (6,), (6,), (8,), (10,), (7,), (2,), (3,), (4,), (9,), (1,), (5,), (2,), (9,), (8,), (10,), (6,), (7,), (3,), (2,), (4,), (9,), (1,), (5,), (6,), (6,), (10,), (6,), (8,), (7,), (2,), (3,), (4,), (9,), (1,), (5,), (6,), (8,), (10,), (7,), (3,), (2,), (4,))", "rowcount": 46, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 287, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 168, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYY` does not exist. In scope SELECT SUM(multiIf((Team_1 = 10) OR (Team_2 = 10), 1, 0)) FROM Match WHERE toYYYY(Match_Date) = '2012'. Maybe you meant: ['toYYYYMM']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 169, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.00016902285552537663,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1.0398613518197575,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 170, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.023706926606144277,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQLite statement can be translated to ClickHouse as follows:\n\n```sql\nSELECT sum(CASE WHEN T2.Role_Desc = 'CaptainKeeper' THEN 1 ELSE 0 END) * 100 / uniqComb. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 171, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 53\n Code: 53. DB::Exception: Cannot convert string 'Legbreak' to type Int64. (TYPE_MISMATCH) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 172, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((19.183673469387756,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((19.183673469387756,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 173, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.11111111111111,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1700.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 175, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: Illegal type Date32 of first argument of function substring, expected String, FixedString or Enum: In scope SELECT 2022 - substring(DOB, 1, 4) FROM Player WHERE Player_Name = 'Ishan Kishan'. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 179, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.47257383966244726,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T2.Country_ID' cannot be resolved from table with name T2. In scope SELECT toInt64(sum(multiIf(T2.Country_Name = 'India', 1, 0))) / uniqCombined(T1.Player_Id) AS ratio FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_ID WHERE (year(T1.DOB) >= '1975') AND (year(T1.DOB) <= '1985'). Maybe you meant: ['T2.Country_Id']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 180, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((37,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((37,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 288, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((54.166666666666664,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((54.166666666666664,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 289, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16.363636363636363,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('```sql\nSELECT toFloat64(sum(if(T1.school = 'occ', 1, 0))) * 100 / count(distinct T1.name) FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.`') (line 1, col 1): ```sql\nSELECT toFloat64(sum(if(T1.school = 'occ', 1, 0))) * 100 / count(distinct T1.name) FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` W. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 292, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((37.755102040816325,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((37.755102040816325,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 293, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 294, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 42\n Code: 42. DB::Exception: Aggregate function sum requires single argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 296, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translated SQL statement from sqlite to ClickHouse:\n\n```sql\nSELECT CAST(SUM(IF(month = 0, 1, 0)) AS FLOAT) * 100 / COUNT(name) FROM longest_absense_. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 297, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1.8011204481792717,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 574 (''. Ensure that you have data types correctly mapped in ClickHouse as per your schema information. Here, I assumed String for `name` and `bool` fields, if they are actually text or some other type in SQLite then adjust it accordingly in above query.\n\n FORMAT Native') (line 7, col 133): '. Ensure that you have data types correctly mapped in ClickHouse as per your schema information. Here, I assumed String for `name` and `bool` fields, if they a. Single quoted string is not closed: ''. Ensure that you have data types correctly mapped in ClickHouse as per your schema information. Here, I assumed String for `name` and `bool` fields, if they are actually text or some other type in SQLite then adjust it accordingly in above query.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 301, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 111 (')') (line 1, col 111): ) FROM longest_absense_from_school\n\n FORMAT Native. Unmatched parentheses: ). (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 304, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((12.244897959183673,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12.244897959183673,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 305, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1500,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translated SQL statement from SQLite to ClickHouse:\n\n```sql\nSELECT 100 * sum(if(T2.month = 0, 1, 0)) AS num FROM disabled AS T1 INNER JOIN longest_a. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 192, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: A value of illegal type was provided as 2nd argument 'timezone' to function 'toDate32'. Expected: String, got: Date32: In scope SELECT MAX(toDate32('%J', Ship_Date) - toDate32('%J', Order_Date)) AS longestTimeDays FROM people INNER JOIN central_superstore ON people.Customer_ID = central_superstore.Customer_ID WHERE people.Customer_Name = 'Aimee Bixby'. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 193, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Xerox 1901',), ('Acme Elite Stainless Steel Scissors',), ('Boston School Pro Electric Pencil Sharpener, 1670',), ('Telescoping Adjustable Floor Lamp',), ('Xerox 1952',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Xerox 1901',), ('Acme Elite Stainless Steel Scissors',), ('Boston School Pro Electric Pencil Sharpener, 1670',), ('Telescoping Adjustable Floor Lamp',), ('Xerox 1952',))", "rowcount": 5, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 194, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((42,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.Product ID' cannot be resolved from table with name T1. In scope SELECT COUNTDistinct(T1.`Product ID`) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE (T2.`Sub-Category` = 'Art') AND (T1.Region = 'East') AND (toDate32(T1.`Order Date`) = '2013-01-01') AS date. Maybe you meant: ['T1.Product_ID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 195, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 196, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Mophie Juice Pack Helium for iPhone',), ('Commercial WindTunnel Clean Air Upright Vacuum, Replacement Belts, Filtration Bags',), ('Xerox 1979',))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT DISTINCT T3.Product_Name FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.Customer_ID = T2.Customer_ID INNER JOIN product AS T3 ON T3.Product_ID = T1.Product_ID WHERE (T2.Customer_Name = 'Matt Abelman') AND (toYYYYString(T1.Order_Date) = '2013'). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 197, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((739.0306,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((739.0306,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 198, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((353210.0869999999,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((353210.0869999999,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 199, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Jay Fein',), ('Corey Catlett',), ('Sheri Gordon',), ('Aaron Smayling',), ('Tony Sayre',), ('Kimberly Carter',), ('Joe Kamberova',), ('Roy Franz\u00f6sisch',), ('Giulietta Weimer',), ('Vivek Sundaresam',), ('Anna Andreadi',), ('Michael Moore',), ('Herbert Flentye',), (\"Jack O'Briant\",), ('Craig Carreira',), ('Thomas Boland',), ('Clytie Kelty',), ('Maria Etezadi',), ('Chris Selesnick',), ('Steven Roelle',), ('Lena Hernandez',), ('Frank Hawley',), ('Kristen Hastings',), ('Randy Ferguson',), ('Jay Kimmel',), ('Maxwell Schwartz',), ('Laurel Elliston',), ('Shirley Daniels',), ('Allen Armold',), ('Ben Ferrer',), ('Brian Dahlen',), ('James Galang',), ('Joe Elijah',), ('Ken Heidel',), ('Mark Haberlin',), ('Raymond Buch',), ('Patrick Gardner',), ('Greg Maxwell',), ('Gary McGarr',), ('Jonathan Doherty',), ('Shahid Hopkins',), ('Harold Pawlan',), ('Sally Hughsby',), ('Cynthia Arntzen',), ('Ruben Ausman',), ('Sean Miller',), ('Mitch Willingham',), ('Lindsay Castell',), ('Roy Collins',), ('Alejandro Ballentine',), ('Elpida Rittenbach',), ('Delfina Latchford',), ('Natalie DeCherney',), ('Denise Leinenbach',), ('Russell Applegate',))", "rowcount": 55, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.Customer ID' cannot be resolved from table with name T1. In scope SELECT DISTINCT T2.`Customer Name` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE toYear(T1.`Order Date`) = 2015 GROUP BY T2.`Customer Name` HAVING COUNTDistinct(T2.`Customer Name`) > 3. Maybe you meant: ['T1.Customer_ID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 200, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 201, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Erin Smith',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.Customer ID' cannot be resolved from table with name T1. In scope SELECT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE (T2.Segment = 'Corporate') AND (T2.State = 'Rhode Island') AND (T2.Region = 'East') AND (toYear(T1.`Order Date`) = 2016) GROUP BY T2.`Customer Name` ORDER BY COUNT(*) DESC LIMIT 1. Maybe you meant: ['T1.Customer_ID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 202, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: A value of illegal type was provided as 2nd argument 'timezone' to function 'toDate32'. Expected: String, got: Date32: In scope SELECT DISTINCT toDate32('%J', Ship_Date) - toDate32('%J', Order_Date) AS duration FROM central_superstore WHERE Order_ID = 'CA-2011-134103'. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 203, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Novimex Swivel Fabric Task Chair',), ('Black Print Carbonless 8 1/2\" x 8 1/4\" Rapid Memo Book',), ('Plymouth Boxed Rubber Bands by Plymouth',), ('Harbour Creations Steel Folding Chair',), ('DAX Black Cherry Wood-Tone Poster Frame',), ('Fellowes Bankers Box Recycled Super Stor/Drawer',), ('Recycled Steel Personal File for Hanging File Folders',), ('Bevis Round Conference Room Tables and Bases',), ('3.6 Cubic Foot Counter Height Office Refrigerator',), ('Geographics Note Cards, Blank, White, 8 1/2\" x 11\"',), ('Hewlett-Packard Deskjet 6540 Color Inkjet Printer',), ('Xerox 1963',), ('Bionaire Personal Warm Mist Humidifier/Vaporizer',), ('Memo Book, 100 Message Capacity, 5 3/8_ x 11_',), ('Newell 35',), ('Wilson Jones 14 Line Acrylic Coated Pressboard Data Binders',), ('Avery Non-Stick Heavy Duty View Round Locking Ring Binders',), ('Newell 333',), ('Xerox 1966',), ('RSVP Cards & Envelopes, Blank White, 8-1/2\" X 11\", 24 Cards/25 Envelopes/Set',), ('Xerox 1967',), ('Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack',))", "rowcount": 22, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.Product ID' cannot be resolved from table with name T1. In scope SELECT DISTINCT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE toDate(T1.`Ship Date`) = toDate('2013-03-01'). Maybe you meant: ['T1.Product_ID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 204, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: A value of illegal type was provided as 2nd argument 'timezone' to function 'toDate32'. Expected: String, got: Date32: In scope SELECT COUNTDistinct(T2.Order_ID) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE (T1.Customer_Name = 'Alan Barnes') AND (toDate32('%Y-01-01', T2.Order_Date) = '2015-01-01'). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 205, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((13.175675675675675,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((13.175675675675675,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 206, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Ibico EPK-21 Electric Binding System',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.Product ID' cannot be resolved from table with name T1. In scope SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE (T2.Region = 'Central') AND (toDate32(T1.`Order Date`) = toDate32('2016-01-01')) ORDER BY T1.Profit ASC LIMIT 1. Maybe you meant: ['T1.Product_ID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 100, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: A value of illegal type was provided as 2nd argument 'timezone' to function 'toDate32'. Expected: String, got: Date32: In scope SELECT toDate32('UTC', T2.STOP) - toDate32('UTC', T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE (T1.first = 'Elly') AND (T1.last = 'Koss') AND (T2.description LIKE '%Acetaminophen%'). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 102, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((175.14285714285714,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-476.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 105, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 106, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 3}
{"sql_id": 107, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT COUNTDistinct(T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE (T2.DESCRIPTION = 'Pneumonia') AND (toYYYYString(T1.birthdate) LIKE '192%'). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 108, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Gabrielle', 'Wunsch', None), ('Tien', 'Turner', None), ('Camelia', 'Boyle', None), ('Lindsay', 'Kilback', None))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 109, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: A value of illegal type was provided as 2nd argument 'timezone' to function 'toDate32'. Expected: String, got: Date32: In scope SELECT COUNTDistinct(T1.patient) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE (T1.race = 'black') AND (T2.DESCRIPTION = 'DTaP') AND (toDate32('%Y-01-01', T2.DATE) = toDate32('2013-01-01')). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 111, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Chronic sinusitis (disorder)',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Chronic sinusitis (disorder)',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 112, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Irvin', 'Barrows'), ('Jerald', 'Hilpert'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Irvin', 'Barrows'), ('Jerald', 'Hilpert'))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 114, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0, 101))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0, 101))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 118, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.0,), (18.0,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the SQL statement translated from Sqlite to ClickHouse:\n\n```sql\nSELECT toDate32('STOP') - toDate32('START') AS takenDays \nFROM patients INNER JOIN medic. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 119, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 123, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 126, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18.727272727272727,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The original SQL statement can be translated to ClickHouse as follows. Note that date and time functions are slightly different between the two databases. In th. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 127, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, 'Diabetes self management plan'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: A value of illegal type was provided as 2nd argument 'timezone' to function 'toDate32'. Expected: String, got: Date32: In scope SELECT toDate32('%J', T2.STOP) - toDate32('%J', T2.START) AS timeFrame, T2.DESCRIPTION FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE (T1.first = 'Jacquelyn') AND (T1.last = 'Shanahan') ORDER BY T2.START DESC LIMIT 1. (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 128, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Acute bronchitis (disorder)',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 129, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: A value of illegal type was provided as 2nd argument 'timezone' to function 'toDate32'. Expected: String, got: Date32: In scope SELECT toDate32('%J', T2.STOP) - toDate32('%J', T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE (T1.first = 'Elly') AND (T1.last = 'Koss') AND (T2.DESCRIPTION = 'Acetaminophen 160 MG'). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 130, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((33.333333333333336,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 473 (''t exist in ClickHouse, so we use the `toFloat64()` function instead.\n- In some cases, aggregation functions like `COUNT(T1.PATIENT)` behave differently between SQL dialects, ClickHouse uses the `uniq()` function to count unique values of a column. This should be equivalent in this case as we are counting patients based on their ID. If you have any specific use-case for this that I might not be considering here, please let me know!\n\n FORMAT Native') (line 9, col 72): 't exist in ClickHouse, so we use the `toFloat64()` function instead.\n- In some cases, aggregation functions like `COUNT(T1.PATIENT)` behave differently between. Single quoted string is not closed: ''t exist in ClickHouse, so we use the `toFloat64()` function instead.\n- In some cases, aggregation functions like `COUNT(T1.PATIENT)` behave differently between SQL dialects, ClickHouse uses the `uniq()` function to count unique values of a column. This should be equivalent in this case as we are counting patients based on their ID. If you have any specific use-case for this that I might not be considering here, please let me know!\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 131, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((31, 45.16129032258065))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((31, 45.16129032258065))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 132, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 50\n Code: 50. DB::Exception: Unknown data type family: FLOAT64. Maybe you meant: ['Float64','Float32']: In scope SELECT (CAST(SUM(multiIf(T2.race = 'hispanic', 1, 0)), 'FLOAT64') * 100) / COUNT(T1.PATIENT) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE toYear(T1.STOP) = 2011. (UNKNOWN_TYPE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 133, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 134, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 43\n Code: 43. DB::Exception: A value of illegal type was provided as 2nd argument 'timezone' to function 'toDate32'. Expected: String, got: Date32: In scope SELECT COUNTDistinct(T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE (T2.race = 'black') AND (toDate32('%Y', T1.STOP) = (('2017' - 0) - 1)). (ILLEGAL_TYPE_OF_ARGUMENT) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 135, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Corrina', 'Feest'), ('Rusty', \"D'Amore\"), ('Yanira', 'Flatley'), ('Charlene', 'Mann'), ('Yahaira', 'Ortiz'), ('Dania', 'Trantow'), ('Mathew', 'Windler'), ('Mana', 'Schiller'), ('Lavelle', 'Vandervort'), ('Loise', 'Will'), ('Walter', 'Bahringer'), ('Miquel', 'Pouros'), ('Donn', 'Schowalter'), ('Pok', 'Thompson'), ('Lynwood', 'Stehr'), ('Mohammed', 'Larson'), ('Bryan', 'Mayer'), ('Neville', 'McDermott'), ('Jessie', 'Corkery'), ('Tish', 'Donnelly'), ('Verline', 'Konopelski'), ('Avelina', 'Block'), ('Markus', 'Mraz'), ('Orlando', 'Cormier'), ('Reva', 'Schmeler'), ('Wilmer', 'Koepp'), ('Rico', 'Schmitt'), ('Margaretta', \"O'Hara\"), ('Ozell', 'Armstrong'), ('Clora', 'Veum'), ('Mauro', 'McCullough'), ('Mckinley', 'Cartwright'), ('Jospeh', 'VonRueden'), ('Buck', 'Kshlerin'), ('Trey', 'Wunsch'), ('21-Jan', 'Koelpin'), ('Courtney', 'Schaden'), ('Gwenda', \"O'Conner\"), ('Lenore', 'Gleason'), ('Dillon', 'Lehner'), ('Terry', 'Kuhic'), ('Adrianne', 'Rodriguez'), ('Heath', 'Doyle'), ('Jonathan', 'Douglas'), ('Kyra', 'Bode'), ('Mario', 'Gottlieb'), ('Sherlene', 'Murphy'), ('Chris', 'Hamill'), ('Annie', 'Prosacco'), ('Andres', 'Parisian'), ('Garry', \"O'Connell\"), ('Adolfo', 'Schmitt'), ('Edgar', 'Von'), ('Nickie', 'Stiedemann'), ('Gwendolyn', 'Ziemann'), ('Lesli', 'Gislason'), ('Randall', 'Wilderman'), ('Diego', 'Mosciski'), ('Kathaleen', 'Cummerata'), ('Tobias', 'Carroll'), ('Deetta', 'Harber'), ('Anette', 'Hand'), ('Lindsey', 'Lowe'), ('Berry', 'Keebler'), ('Margarette', 'Maggio'), ('Maryjane', 'Herzog'), ('Fern', 'Padberg'), ('Gricelda', 'Hane'), ('Julian', 'Strosin'), ('Saundra', 'Monahan'), ('Hector', 'Ziemann'), ('Wendy', 'Huels'), ('Scot', 'Morissette'), ('Rigoberto', 'Heidenreich'), ('Dena', 'Kutch'), ('Tabitha', 'Baumbach'), ('Ethel', 'Cormier'), ('Milan', 'DuBuque'), ('Denita', 'Nitzsche'), ('Arielle', 'Nader'), ('Albert', 'Lemke'), ('Ernestine', 'Rutherford'), ('Judith', 'Fay'), ('Royal', 'Turcotte'), ('Lloyd', 'Kemmer'), ('Verda', 'Stehr'), ('Ima', 'Murphy'), ('Tony', 'Kessler'), ('Olen', 'Homenick'), ('Shon', 'Nikolaus'), ('Stacey', 'Pollich'), ('Rosendo', 'Hodkiewicz'), ('Larue', 'Brekke'), ('Shantel', 'White'), ('Emelina', 'Abernathy'), ('Florida', 'Stark'), ('Dana', 'Bayer'), ('Delilah', 'Kuhic'), ('Georgianna', 'Boehm'), ('Gala', 'Carroll'), ('Victor', 'Walter'), ('Nelson', 'Jast'), ('Laci', 'Heller'), ('Dallas', 'Spencer'), ('Ezekiel', 'Herzog'), ('Jamar', 'Durgan'), ('Particia', 'Ward'), ('Livia', 'Williamson'), ('Demarcus', 'Cormier'), ('Deanne', 'Kilback'), ('Austin', 'Waelchi'), ('Marcelo', 'Mayert'), ('Martha', 'Swaniawski'), ('Thomas', 'Altenwerth'), ('Mui', 'Trantow'), ('Danilo', 'Feeney'), ('Missy', 'MacGyver'), ('Ester', 'Schinner'), ('Dexter', 'Mitchell'), ('Robert', 'Stamm'), ('Emile', 'Brekke'), ('Alina', 'Padberg'), ('Jaye', 'Schroeder'), ('Maurice', 'Bins'), ('Tiffani', 'Dickens'), ('Lula', 'Spencer'), ('Bret', 'Grant'), ('Tyrone', 'Johns'), ('Kary', 'Schmitt'), ('Patrick', 'Kilback'), ('Vinita', 'Stanton'), ('Jasper', 'Ernser'), ('Rodolfo', 'Heathcote'), ('Jerrod', 'Mayert'), ('Shawnta', 'Erdman'), ('Ashlee', 'Leannon'), ('Patrick', 'Lind'), ('Ernie', 'Fisher'), ('Shonta', 'Mann'), ('Claudette', 'Renner'), ('Gwen', 'Satterfield'), ('Ellyn', 'Block'), ('Renaldo', 'Kshlerin'), ('Hana', 'Brekke'), ('Warner', 'Wisozk'), ('Carley', 'Schneider'), ('Akilah', 'Fadel'), ('Florencio', 'Turner'), ('Dirk', 'Stoltenberg'), ('Harriette', 'Hessel'), ('Kelsey', 'Skiles'), ('Felicitas', 'Hahn'), ('Rikki', 'Osinski'), ('Benny', 'Herzog'), ('Phillis', 'Mante'), ('Sara', 'Pacocha'), ('Carroll', 'Bernhard'), ('Jimmy', 'Marks'), ('Refugio', 'Barton'), ('Neely', 'Keeling'), ('Natalie', 'Green'), ('Mack', 'Orn'), ('Dion', 'Auer'), ('Reuben', 'Bashirian'), ('Anamaria', 'Mraz'), ('Serina', 'Robel'), ('Renda', 'Botsford'), ('Elly', 'Koss'), ('Micki', 'Haag'), ('Dave', 'Hudson'), ('Omar', 'Ziemann'), ('Maurice', 'Kshlerin'), ('Nicolas', 'Prosacco'), ('Valentine', 'Jacobson'), ('Serafina', 'Bosco'), ('Isadora', 'Moen'), ('Telma', 'Jakubowski'), ('Lourie', 'Crooks'), ('Deane', 'Kris'), ('Elisa', 'Lowe'), ('Emanuel', 'Kerluke'), ('Shona', 'Hamill'), ('Hugh', 'Kuhn'), ('Mora', 'Hand'), ('Chin', 'Kub'), ('Lizeth', 'Ernser'), ('Myrtie', 'Reilly'), ('Betty', 'Hickle'), ('Lillian', 'Stark'), ('Augustus', 'Parker'), ('Carroll', 'Boyle'), ('Terra', 'Heller'), ('Kelle', 'Kessler'), ('Muoi', 'Kuhlman'), ('Stacy', 'McLaughlin'), ('Ozie', 'Larson'), ('Georgie', 'Herzog'), ('Arlette', 'Leuschke'), ('Alycia', 'Olson'), ('Dorian', 'Kovacek'), ('Eldon', 'Ryan'), ('Bradley', 'Kerluke'), ('Janean', 'Bashirian'), ('Rob', 'Pouros'), ('Damian', 'Schultz'), ('Augustine', 'Erdman'), ('Bonnie', 'Wisoky'), ('Sang', 'Bauch'), ('Shawna', 'Lowe'), ('Cleo', 'Hilpert'), ('Barrie', 'Abernathy'), ('Lon', 'Simonis'), ('Curtis', 'Schroeder'), ('Caron', 'Volkman'), ('Ryan', 'Keeling'), ('Kory', 'Klocko'), ('Hildred', 'Schuppe'), ('Wilmer', 'Denesik'), ('Gertrud', 'Roob'), ('Adam', 'Pacocha'), ('Farah', 'Gerhold'), ('Alfredo', 'Halvorson'), ('Leena', 'Kemmer'), ('Jesse', 'Leuschke'), ('Willene', 'Orn'), ('Alonzo', 'Prohaska'), ('Jere', 'Spinka'), ('Sung', 'Carter'), ('Conrad', 'Kuhlman'), ('Cami', 'Terry'), ('Tuyet', 'Abernathy'), ('Luis', 'Wilderman'), ('Octavia', 'Klein'), ('Suk', 'Hartmann'), ('Rudy', 'Cormier'), ('Oswaldo', 'Abernathy'), ('Whitney', 'Nolan'), ('Otto', 'Wolff'), ('Elvis', 'Lockman'), ('Merlin', 'Roob'), ('Demetrius', 'Dickens'), ('Tabetha', 'Hamill'), ('Cole', 'Keeling'), ('Cesar', 'Larson'), ('Rod', 'Hahn'), ('Charlsie', 'Vandervort'), ('Ronnie', 'Lindgren'), ('Thuy', 'Luettgen'), ('Raymonde', 'Heathcote'), ('Darren', 'Predovic'), ('Weldon', 'Murphy'), ('Randall', 'Smith'), ('Jazmine', 'Rau'), ('Kyle', 'Bernier'), ('Carl', 'Sawayn'), ('Siobhan', 'Conroy'), ('Filiberto', 'Bartoletti'), ('Martin', 'Harris'), ('Nyla', 'Heathcote'), ('Yuriko', 'Schumm'), ('Faustino', 'Huel'), ('Alfonzo', 'Smitham'), ('Jorge', 'Wolff'), ('Nestor', 'Dibbert'), ('Eulalia', 'Wiegand'), ('Darla', 'Crona'), ('Doreen', 'Mohr'), ('Jerome', 'Spinka'), ('Kim', 'Barrows'), ('Dominic', 'Bins'), ('Clarisa', 'Tromp'), ('Leisha', 'Monahan'), ('Tiffany', 'Mertz'), ('Cecil', 'Gaylord'), ('Winford', 'Jast'), ('Laree', 'Strosin'), ('Dannie', 'Considine'), ('Lenard', 'Schiller'), ('Adam', 'Lynch'), ('Quentin', 'Toy'), ('Siu', 'Pagac'), ('Andreas', 'Bauch'), ('Nanci', 'Huel'), ('Ona', 'Waters'), ('Lyndon', 'Pacocha'), ('Brain', 'Hudson'), ('Tarra', 'Gerhold'), ('Jules', 'Barton'), ('Joselyn', 'Marquardt'), ('Elizbeth', 'Konopelski'), ('Xavier', 'Krajcik'), ('Young', 'Treutel'), ('Neal', 'Eichmann'), ('Ira', 'Deckow'), ('Percy', 'Wunsch'), ('Cheree', 'Rice'), ('Lawanda', 'Murray'), ('Tonette', 'Gislason'), ('Melanie', 'Schroeder'), ('Nathan', 'Botsford'), ('Lai', 'Ebert'), ('Astrid', 'Schroeder'), ('Roosevelt', 'Breitenberg'), ('Hilma', 'Rath'), ('Jose', 'Pfeffer'), ('Irmgard', 'Krajcik'), ('Merrill', 'Kassulke'), ('Darleen', 'Tillman'), ('Williams', 'Torp'), ('Andres', 'Sipes'), ('Rubin', 'Thiel'), ('Pasquale', 'Crist'), ('Emmanuel', 'Douglas'), ('Will', 'Mayert'), ('Gilbert', 'Bradtke'), ('Keri', 'Veum'), ('Jame', 'Mayer'), ('Abraham', 'Balistreri'), ('Lorie', 'Cruickshank'), ('Delpha', 'Schinner'), ('Willette', 'Hyatt'), ('Deeann', 'Jacobson'), ('Trudi', 'Murray'), ('Trula', 'Harber'), ('Joesph', 'Runte'), ('Katelynn', 'Tremblay'), ('Tyisha', 'Brekke'), ('Isaiah', 'Bernier'), ('Augustine', \"O'Reilly\"), ('Latasha', 'Adams'), ('Benito', 'Wiegand'), ('Lorean', 'Gulgowski'), ('Jeremy', 'Goodwin'), ('Javier', 'Hamill'), ('Chelsey', 'Balistreri'), ('Diego', 'Hand'), ('Jeff', 'Labadie'), ('Chance', 'Schamberger'), ('Lacy', 'Collier'), ('Chad', 'Hartmann'), ('Antone', 'Dickinson'), ('Marianela', 'Funk'), ('Viva', 'Walker'), ('Ivana', 'Rowe'), ('Katharine', 'Dach'), ('Belle', 'Smitham'), ('Brice', 'Jerde'))", "rowcount": 347, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Corrina', 'Feest'), ('Rusty', \"D'Amore\"), ('Yanira', 'Flatley'), ('Charlene', 'Mann'), ('Yahaira', 'Ortiz'), ('Dania', 'Trantow'), ('Mathew', 'Windler'), ('Mana', 'Schiller'), ('Lavelle', 'Vandervort'), ('Loise', 'Will'), ('Walter', 'Bahringer'), ('Miquel', 'Pouros'), ('Donn', 'Schowalter'), ('Pok', 'Thompson'), ('Lynwood', 'Stehr'), ('Mohammed', 'Larson'), ('Bryan', 'Mayer'), ('Neville', 'McDermott'), ('Jessie', 'Corkery'), ('Tish', 'Donnelly'), ('Verline', 'Konopelski'), ('Avelina', 'Block'), ('Markus', 'Mraz'), ('Orlando', 'Cormier'), ('Reva', 'Schmeler'), ('Wilmer', 'Koepp'), ('Rico', 'Schmitt'), ('Margaretta', \"O'Hara\"), ('Ozell', 'Armstrong'), ('Clora', 'Veum'), ('Mauro', 'McCullough'), ('Mckinley', 'Cartwright'), ('Jospeh', 'VonRueden'), ('Buck', 'Kshlerin'), ('Trey', 'Wunsch'), ('21-Jan', 'Koelpin'), ('Courtney', 'Schaden'), ('Gwenda', \"O'Conner\"), ('Lenore', 'Gleason'), ('Dillon', 'Lehner'), ('Terry', 'Kuhic'), ('Adrianne', 'Rodriguez'), ('Heath', 'Doyle'), ('Jonathan', 'Douglas'), ('Kyra', 'Bode'), ('Mario', 'Gottlieb'), ('Sherlene', 'Murphy'), ('Chris', 'Hamill'), ('Annie', 'Prosacco'), ('Andres', 'Parisian'), ('Garry', \"O'Connell\"), ('Adolfo', 'Schmitt'), ('Edgar', 'Von'), ('Nickie', 'Stiedemann'), ('Gwendolyn', 'Ziemann'), ('Lesli', 'Gislason'), ('Randall', 'Wilderman'), ('Diego', 'Mosciski'), ('Kathaleen', 'Cummerata'), ('Tobias', 'Carroll'), ('Deetta', 'Harber'), ('Anette', 'Hand'), ('Lindsey', 'Lowe'), ('Berry', 'Keebler'), ('Margarette', 'Maggio'), ('Maryjane', 'Herzog'), ('Fern', 'Padberg'), ('Gricelda', 'Hane'), ('Julian', 'Strosin'), ('Saundra', 'Monahan'), ('Hector', 'Ziemann'), ('Wendy', 'Huels'), ('Scot', 'Morissette'), ('Rigoberto', 'Heidenreich'), ('Dena', 'Kutch'), ('Tabitha', 'Baumbach'), ('Ethel', 'Cormier'), ('Milan', 'DuBuque'), ('Denita', 'Nitzsche'), ('Arielle', 'Nader'), ('Albert', 'Lemke'), ('Ernestine', 'Rutherford'), ('Judith', 'Fay'), ('Royal', 'Turcotte'), ('Lloyd', 'Kemmer'), ('Verda', 'Stehr'), ('Ima', 'Murphy'), ('Tony', 'Kessler'), ('Olen', 'Homenick'), ('Shon', 'Nikolaus'), ('Stacey', 'Pollich'), ('Rosendo', 'Hodkiewicz'), ('Larue', 'Brekke'), ('Shantel', 'White'), ('Emelina', 'Abernathy'), ('Florida', 'Stark'), ('Dana', 'Bayer'), ('Delilah', 'Kuhic'), ('Georgianna', 'Boehm'), ('Gala', 'Carroll'), ('Victor', 'Walter'), ('Nelson', 'Jast'), ('Laci', 'Heller'), ('Dallas', 'Spencer'), ('Ezekiel', 'Herzog'), ('Jamar', 'Durgan'), ('Particia', 'Ward'), ('Livia', 'Williamson'), ('Demarcus', 'Cormier'), ('Deanne', 'Kilback'), ('Austin', 'Waelchi'), ('Marcelo', 'Mayert'), ('Martha', 'Swaniawski'), ('Thomas', 'Altenwerth'), ('Mui', 'Trantow'), ('Danilo', 'Feeney'), ('Missy', 'MacGyver'), ('Ester', 'Schinner'), ('Dexter', 'Mitchell'), ('Robert', 'Stamm'), ('Emile', 'Brekke'), ('Alina', 'Padberg'), ('Jaye', 'Schroeder'), ('Maurice', 'Bins'), ('Tiffani', 'Dickens'), ('Lula', 'Spencer'), ('Bret', 'Grant'), ('Tyrone', 'Johns'), ('Kary', 'Schmitt'), ('Patrick', 'Kilback'), ('Vinita', 'Stanton'), ('Jasper', 'Ernser'), ('Rodolfo', 'Heathcote'), ('Jerrod', 'Mayert'), ('Shawnta', 'Erdman'), ('Ashlee', 'Leannon'), ('Patrick', 'Lind'), ('Ernie', 'Fisher'), ('Shonta', 'Mann'), ('Claudette', 'Renner'), ('Gwen', 'Satterfield'), ('Ellyn', 'Block'), ('Renaldo', 'Kshlerin'), ('Hana', 'Brekke'), ('Warner', 'Wisozk'), ('Carley', 'Schneider'), ('Akilah', 'Fadel'), ('Florencio', 'Turner'), ('Dirk', 'Stoltenberg'), ('Harriette', 'Hessel'), ('Kelsey', 'Skiles'), ('Felicitas', 'Hahn'), ('Rikki', 'Osinski'), ('Benny', 'Herzog'), ('Phillis', 'Mante'), ('Sara', 'Pacocha'), ('Carroll', 'Bernhard'), ('Jimmy', 'Marks'), ('Refugio', 'Barton'), ('Neely', 'Keeling'), ('Natalie', 'Green'), ('Mack', 'Orn'), ('Dion', 'Auer'), ('Reuben', 'Bashirian'), ('Anamaria', 'Mraz'), ('Serina', 'Robel'), ('Renda', 'Botsford'), ('Elly', 'Koss'), ('Micki', 'Haag'), ('Dave', 'Hudson'), ('Omar', 'Ziemann'), ('Maurice', 'Kshlerin'), ('Nicolas', 'Prosacco'), ('Valentine', 'Jacobson'), ('Serafina', 'Bosco'), ('Isadora', 'Moen'), ('Telma', 'Jakubowski'), ('Lourie', 'Crooks'), ('Deane', 'Kris'), ('Elisa', 'Lowe'), ('Emanuel', 'Kerluke'), ('Shona', 'Hamill'), ('Hugh', 'Kuhn'), ('Mora', 'Hand'), ('Chin', 'Kub'), ('Lizeth', 'Ernser'), ('Myrtie', 'Reilly'), ('Betty', 'Hickle'), ('Lillian', 'Stark'), ('Augustus', 'Parker'), ('Carroll', 'Boyle'), ('Terra', 'Heller'), ('Kelle', 'Kessler'), ('Muoi', 'Kuhlman'), ('Stacy', 'McLaughlin'), ('Ozie', 'Larson'), ('Georgie', 'Herzog'), ('Arlette', 'Leuschke'), ('Alycia', 'Olson'), ('Dorian', 'Kovacek'), ('Eldon', 'Ryan'), ('Bradley', 'Kerluke'), ('Janean', 'Bashirian'), ('Rob', 'Pouros'), ('Damian', 'Schultz'), ('Augustine', 'Erdman'), ('Bonnie', 'Wisoky'), ('Sang', 'Bauch'), ('Shawna', 'Lowe'), ('Cleo', 'Hilpert'), ('Barrie', 'Abernathy'), ('Lon', 'Simonis'), ('Curtis', 'Schroeder'), ('Caron', 'Volkman'), ('Ryan', 'Keeling'), ('Kory', 'Klocko'), ('Hildred', 'Schuppe'), ('Wilmer', 'Denesik'), ('Gertrud', 'Roob'), ('Adam', 'Pacocha'), ('Farah', 'Gerhold'), ('Alfredo', 'Halvorson'), ('Leena', 'Kemmer'), ('Jesse', 'Leuschke'), ('Willene', 'Orn'), ('Alonzo', 'Prohaska'), ('Jere', 'Spinka'), ('Sung', 'Carter'), ('Conrad', 'Kuhlman'), ('Cami', 'Terry'), ('Tuyet', 'Abernathy'), ('Luis', 'Wilderman'), ('Octavia', 'Klein'), ('Suk', 'Hartmann'), ('Rudy', 'Cormier'), ('Oswaldo', 'Abernathy'), ('Whitney', 'Nolan'), ('Otto', 'Wolff'), ('Elvis', 'Lockman'), ('Merlin', 'Roob'), ('Demetrius', 'Dickens'), ('Tabetha', 'Hamill'), ('Cole', 'Keeling'), ('Cesar', 'Larson'), ('Rod', 'Hahn'), ('Charlsie', 'Vandervort'), ('Ronnie', 'Lindgren'), ('Thuy', 'Luettgen'), ('Raymonde', 'Heathcote'), ('Darren', 'Predovic'), ('Weldon', 'Murphy'), ('Randall', 'Smith'), ('Jazmine', 'Rau'), ('Kyle', 'Bernier'), ('Carl', 'Sawayn'), ('Siobhan', 'Conroy'), ('Filiberto', 'Bartoletti'), ('Martin', 'Harris'), ('Nyla', 'Heathcote'), ('Yuriko', 'Schumm'), ('Faustino', 'Huel'), ('Alfonzo', 'Smitham'), ('Jorge', 'Wolff'), ('Nestor', 'Dibbert'), ('Eulalia', 'Wiegand'), ('Darla', 'Crona'), ('Doreen', 'Mohr'), ('Jerome', 'Spinka'), ('Kim', 'Barrows'), ('Dominic', 'Bins'), ('Clarisa', 'Tromp'), ('Leisha', 'Monahan'), ('Tiffany', 'Mertz'), ('Cecil', 'Gaylord'), ('Winford', 'Jast'), ('Laree', 'Strosin'), ('Dannie', 'Considine'), ('Lenard', 'Schiller'), ('Adam', 'Lynch'), ('Quentin', 'Toy'), ('Siu', 'Pagac'), ('Andreas', 'Bauch'), ('Nanci', 'Huel'), ('Ona', 'Waters'), ('Lyndon', 'Pacocha'), ('Brain', 'Hudson'), ('Tarra', 'Gerhold'), ('Jules', 'Barton'), ('Joselyn', 'Marquardt'), ('Elizbeth', 'Konopelski'), ('Xavier', 'Krajcik'), ('Young', 'Treutel'), ('Neal', 'Eichmann'), ('Ira', 'Deckow'), ('Percy', 'Wunsch'), ('Cheree', 'Rice'), ('Lawanda', 'Murray'), ('Tonette', 'Gislason'), ('Melanie', 'Schroeder'), ('Nathan', 'Botsford'), ('Lai', 'Ebert'), ('Astrid', 'Schroeder'), ('Roosevelt', 'Breitenberg'), ('Hilma', 'Rath'), ('Jose', 'Pfeffer'), ('Irmgard', 'Krajcik'), ('Merrill', 'Kassulke'), ('Darleen', 'Tillman'), ('Williams', 'Torp'), ('Andres', 'Sipes'), ('Rubin', 'Thiel'), ('Pasquale', 'Crist'), ('Emmanuel', 'Douglas'), ('Will', 'Mayert'), ('Gilbert', 'Bradtke'), ('Keri', 'Veum'), ('Jame', 'Mayer'), ('Abraham', 'Balistreri'), ('Lorie', 'Cruickshank'), ('Delpha', 'Schinner'), ('Willette', 'Hyatt'), ('Deeann', 'Jacobson'), ('Trudi', 'Murray'), ('Trula', 'Harber'), ('Joesph', 'Runte'), ('Katelynn', 'Tremblay'), ('Tyisha', 'Brekke'), ('Isaiah', 'Bernier'), ('Augustine', \"O'Reilly\"), ('Latasha', 'Adams'), ('Benito', 'Wiegand'), ('Lorean', 'Gulgowski'), ('Jeremy', 'Goodwin'), ('Javier', 'Hamill'), ('Chelsey', 'Balistreri'), ('Diego', 'Hand'), ('Jeff', 'Labadie'), ('Chance', 'Schamberger'), ('Lacy', 'Collier'), ('Chad', 'Hartmann'), ('Antone', 'Dickinson'), ('Marianela', 'Funk'), ('Viva', 'Walker'), ('Ivana', 'Rowe'), ('Katharine', 'Dach'), ('Belle', 'Smitham'), ('Brice', 'Jerde'))", "rowcount": 347, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 136, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the translated SQL statement from sqlite to clickhouse:\n\n```sql\nSELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 137, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Elizbeth', 'Konopelski'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 57, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-6689096779184407258, 'YES'), (-6590029937880196169, 'YES'), (-5305692228635096563, 'YES'), (-2917998150844653076, 'YES'), (-1633968677373322472, 'YES'), (-450723994850216235, 'YES'), (-324761265507882224, 'YES'), (528590055286269542, 'YES'), (4296637564570566271, 'YES'), (5354621554047170232, 'YES'), (5497109940653330488, 'YES'), (5611317768433566721, 'YES'), (5927333115845830913, 'YES'), (6607018907660377991, 'YES'), (6666573787717908158, 'YES'), (8693964245073640147, 'YES'), (9112463114311278255, 'YES'))", "rowcount": 17, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-6689096779184407258, 'YES'), (-6590029937880196169, 'YES'), (-5305692228635096563, 'YES'), (-2917998150844653076, 'YES'), (-1633968677373322472, 'YES'), (-450723994850216235, 'YES'), (-324761265507882224, 'YES'), (528590055286269542, 'YES'), (4296637564570566271, 'YES'), (5354621554047170232, 'YES'), (5497109940653330488, 'YES'), (5611317768433566721, 'YES'), (5927333115845830913, 'YES'), (6607018907660377991, 'YES'), (6666573787717908158, 'YES'), (8693964245073640147, 'YES'), (9112463114311278255, 'YES'))", "rowcount": 17, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 62, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((nan, nan))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 63, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1001,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1001,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 65, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 67, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The equivalent SQL statement in ClickHouse would be as follows: \n\n```sql\nSELECT SUM(T2.phone_brand = 'vivo') / COUNT(DISTINCT T1.device_id) AS per \nFROM events . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 70, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 75, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 76, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `toYYYYString` does not exist. In scope SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id WHERE (toYYYYString(T2.timestamp) = '2016') AND (T1._group = 'M23-26'). Maybe you meant: ['toJSONString','toString']. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 77, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Finance',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Finance',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 78, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((nan,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 80, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 82, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement translated to ClickHouse would be:\n```sql\nSELECT COUNT(T1.device_id) \nFROM events AS T1 \nINNER JOIN phone_brand_device_model2 AS T2 ON T1.devi. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 83, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((nan,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 66, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T1.group' cannot be resolved from table with name T1. In scope SELECT SUM(IF(T1.group = 'M23-26', 1., 0)) / COUNTDistinct(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo'. Maybe you meant: ['T1._group']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 74, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 41\n Code: 41. DB::Exception: Cannot parse time component of DateTime 7:50:28: while converting '2016-05-02 7:50:28' to DateTime. (CANNOT_PARSE_DATETIME) (version 24.9.2.42 (official build))\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Unknown expression or function identifier `equalsTo20160502` in scope SELECT sum(equalsTo20160502) / sum(equalsTo20160503) AS num FROM events AS T1 INNER JOIN app_events AS T2 ON T1.event_id = T2.event_id WHERE (toDateTime(T1.timestamp) = '2016-05-02 7:50:28') AND (T2.is_active = 1). (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 84, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((nan,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 87, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((114.0, 24.0), (88.0, 44.0), (120.0, 32.0), (114.0, 31.0), (106.0, 27.0), (113.0, 23.0), (113.0, 23.0), (104.0, 36.0), (114.0, 37.0), (116.0, 40.0), (113.0, 23.0), (120.0, 37.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (122.0, 30.0), (113.0, 23.0), (114.0, 38.0), (116.0, 40.0), (114.0, 39.0), (0.0, 0.0), (1.0, 1.0), (116.0, 40.0), (105.0, 32.0), (113.0, 23.0), (104.0, 30.0), (107.0, 30.0), (119.0, 32.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (114.0, 23.0), (114.0, 23.0), (118.0, 24.0), (119.0, 32.0), (121.0, 29.0), (114.0, 23.0), (121.0, 29.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (102.0, 25.0), (116.0, 29.0), (104.0, 31.0), (109.0, 34.0), (116.0, 24.0), (122.0, 40.0), (118.0, 39.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (1.0, 1.0), (0.0, 0.0), (114.0, 35.0), (122.0, 42.0), (121.0, 30.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (118.0, 39.0), (1.0, 1.0), (104.0, 30.0), (118.0, 32.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (113.0, 36.0), (108.0, 23.0), (114.0, 23.0), (117.0, 32.0), (113.0, 23.0), (1.0, 1.0), (1.0, 1.0), (120.0, 30.0), (121.0, 31.0), (108.0, 23.0), (0.0, 0.0), (114.0, 23.0), (114.0, 25.0), (120.0, 36.0), (113.0, 36.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (120.0, 32.0), (120.0, 37.0), (118.0, 38.0), (0.0, 0.0), (118.0, 24.0), (0.0, 0.0), (0.0, 0.0), (114.0, 37.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (114.0, 38.0), (126.0, 42.0), (113.0, 23.0), (0.0, 0.0), (108.0, 23.0), (117.0, 34.0), (114.0, 31.0), (116.0, 29.0), (121.0, 31.0), (0.0, 0.0), (106.0, 27.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (0.0, 0.0), (114.0, 23.0), (104.0, 30.0), (104.0, 31.0), (114.0, 35.0), (115.0, 33.0), (116.0, 40.0), (116.0, 40.0), (120.0, 30.0), (0.0, 0.0), (114.0, 23.0), (105.0, 23.0), (0.0, 0.0), (0.0, 0.0), (116.0, 40.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (120.0, 36.0), (115.0, 37.0), (104.0, 36.0), (114.0, 31.0), (119.0, 32.0), (0.0, 0.0), (124.0, 42.0), (116.0, 40.0), (106.0, 30.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (120.0, 36.0), (112.0, 23.0), (0.0, 0.0), (114.0, 37.0), (116.0, 40.0), (110.0, 25.0), (118.0, 24.0), (104.0, 30.0), (108.0, 23.0), (107.0, 29.0), (121.0, 31.0), (0.0, 0.0), (113.0, 34.0), (0.0, 0.0), (120.0, 29.0), (104.0, 30.0), (0.0, 0.0), (117.0, 28.0), (108.0, 23.0), (0.0, 0.0), (104.0, 31.0), (114.0, 36.0), (116.0, 40.0), (117.0, 31.0), (0.0, 0.0), (114.0, 38.0), (120.0, 30.0), (104.0, 30.0), (108.0, 23.0), (112.0, 22.0), (114.0, 23.0), (116.0, 23.0), (116.0, 23.0), (117.0, 38.0), (114.0, 31.0), (113.0, 36.0), (122.0, 40.0), (112.0, 36.0), (109.0, 34.0), (122.0, 30.0), (115.0, 26.0), (115.0, 26.0), (121.0, 28.0), (0.0, 0.0), (119.0, 32.0), (119.0, 32.0), (113.0, 23.0), (120.0, 29.0), (119.0, 26.0), (0.0, 0.0), (0.0, 0.0), (115.0, 23.0), (0.0, 0.0), (119.0, 32.0), (120.0, 33.0), (121.0, 30.0), (111.0, 27.0), (120.0, 29.0), (117.0, 39.0), (1.0, 1.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (124.0, 42.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (122.0, 40.0), (105.0, 23.0), (122.0, 40.0), (122.0, 31.0), (112.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (106.0, 37.0), (106.0, 27.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 36.0), (106.0, 38.0), (120.0, 42.0), (0.0, 0.0), (121.0, 31.0), (114.0, 31.0), (110.0, 21.0), (0.0, 0.0), (110.0, 20.0), (120.0, 36.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (1.0, 1.0), (118.0, 35.0), (122.0, 30.0), (120.0, 30.0), (113.0, 23.0), (113.0, 28.0), (0.0, 0.0), (114.0, 31.0), (126.0, 42.0), (0.0, 0.0), (114.0, 23.0), (120.0, 37.0), (112.0, 38.0), (113.0, 28.0), (103.0, 30.0), (113.0, 28.0), (119.0, 32.0), (115.0, 30.0), (110.0, 20.0), (121.0, 31.0), (113.0, 36.0), (1.0, 1.0), (103.0, 25.0), (108.0, 26.0), (123.0, 41.0), (114.0, 23.0), (118.0, 26.0), (116.0, 40.0), (120.0, 27.0), (0.0, 0.0), (121.0, 31.0), (109.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 35.0), (117.0, 37.0), (118.0, 38.0), (0.0, 0.0), (119.0, 26.0), (0.0, 0.0), (114.0, 36.0), (0.0, 0.0), (121.0, 31.0), (104.0, 30.0), (123.0, 41.0), (123.0, 41.0), (109.0, 30.0), (0.0, 0.0), (122.0, 30.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (0.0, 0.0), (117.0, 32.0), (118.0, 39.0), (121.0, 28.0), (121.0, 31.0), (121.0, 38.0), (113.0, 34.0), (121.0, 28.0), (121.0, 31.0), (113.0, 29.0), (114.0, 23.0), (114.0, 23.0), (112.0, 36.0), (113.0, 23.0), (118.0, 40.0), (0.0, 0.0), (111.0, 21.0), (116.0, 40.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (120.0, 37.0), (120.0, 30.0), (114.0, 31.0), (113.0, 38.0), (119.0, 32.0), (115.0, 38.0), (112.0, 32.0), (109.0, 35.0), (0.0, 0.0), (117.0, 36.0), (120.0, 36.0), (119.0, 26.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (102.0, 25.0), (0.0, 0.0), (120.0, 30.0), (115.0, 30.0), (121.0, 30.0), (116.0, 23.0), (117.0, 28.0), (127.0, 46.0), (121.0, 31.0), (114.0, 23.0), (114.0, 35.0), (120.0, 32.0), (114.0, 23.0), (105.0, 29.0), (114.0, 35.0), (102.0, 25.0), (116.0, 40.0), (121.0, 31.0), (112.0, 30.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (1.0, 1.0), (0.0, 0.0), (88.0, 44.0), (118.0, 34.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (119.0, 26.0), (114.0, 23.0), (114.0, 23.0), (106.0, 38.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (88.0, 44.0), (0.0, 0.0), (114.0, 23.0), (106.0, 27.0), (113.0, 23.0), (121.0, 28.0), (118.0, 36.0), (109.0, 18.0), (109.0, 18.0), (118.0, 28.0), (118.0, 28.0), (108.0, 23.0), (0.0, 0.0), (123.0, 42.0), (114.0, 23.0), (0.0, 0.0), (106.0, 27.0), (119.0, 34.0), (0.0, 0.0), (0.0, 0.0), (120.0, 29.0), (119.0, 25.0), (119.0, 25.0), (0.0, 0.0), (114.0, 27.0), (121.0, 31.0), (116.0, 40.0), (109.0, 34.0), (109.0, 34.0), (100.0, 27.0), (0.0, 0.0), (122.0, 40.0), (0.0, 0.0), (0.0, 0.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (112.0, 22.0), (114.0, 35.0), (1.0, 1.0), (114.0, 23.0), (104.0, 31.0), (0.0, 0.0), (110.0, 25.0), (104.0, 30.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (121.0, 29.0), (120.0, 30.0), (114.0, 23.0), (110.0, 20.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (113.0, 23.0), (113.0, 34.0), (113.0, 23.0), (0.0, 0.0), (113.0, 38.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (115.0, 30.0), (114.0, 30.0), (118.0, 35.0), (118.0, 35.0), (121.0, 30.0), (0.0, 0.0), (117.0, 39.0), (0.0, 0.0), (120.0, 33.0), (0.0, 0.0), (116.0, 40.0), (114.0, 31.0), (113.0, 35.0), (0.0, 0.0), (119.0, 40.0), (114.0, 23.0), (106.0, 38.0), (116.0, 40.0), (119.0, 26.0), (114.0, 28.0), (117.0, 37.0), (124.0, 42.0), (0.0, 0.0), (104.0, 30.0), (105.0, 25.0), (114.0, 37.0), (0.0, 0.0), (0.0, 0.0), (122.0, 39.0), (0.0, 0.0), (114.0, 35.0), (115.0, 29.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (110.0, 25.0), (113.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (122.0, 37.0), (114.0, 23.0), (0.0, 0.0), (118.0, 24.0), (121.0, 31.0), (121.0, 38.0), (104.0, 23.0), (119.0, 32.0), (107.0, 30.0), (0.0, 0.0), (119.0, 26.0), (117.0, 32.0), (116.0, 40.0), (117.0, 32.0), (121.0, 28.0), (121.0, 28.0), (119.0, 25.0), (0.0, 0.0), (114.0, 38.0), (118.0, 36.0), (111.0, 36.0), (0.0, 0.0), (0.0, 0.0), (116.0, 36.0), (121.0, 30.0), (117.0, 23.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (114.0, 35.0), (121.0, 31.0), (103.0, 25.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (114.0, 27.0), (124.0, 47.0), (104.0, 36.0), (119.0, 26.0), (117.0, 37.0), (105.0, 23.0), (107.0, 28.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (120.0, 30.0), (116.0, 36.0), (121.0, 31.0), (117.0, 39.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (106.0, 30.0), (114.0, 23.0), (0.0, 0.0), (108.0, 23.0), (111.0, 32.0), (0.0, 0.0), (114.0, 31.0), (127.0, 46.0), (0.0, 0.0), (122.0, 30.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (118.0, 39.0), (113.0, 23.0), (0.0, 0.0), (118.0, 37.0), (113.0, 38.0), (1.0, 1.0), (116.0, 35.0), (117.0, 40.0), (109.0, 34.0), (109.0, 22.0), (0.0, 0.0), (107.0, 27.0), (0.0, 0.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (114.0, 36.0), (108.0, 35.0), (0.0, 0.0), (117.0, 37.0), (122.0, 40.0), (110.0, 19.0), (1.0, 1.0), (0.0, 0.0), (105.0, 23.0), (118.0, 35.0), (0.0, 0.0), (121.0, 37.0), (1.0, 1.0), (117.0, 23.0), (114.0, 23.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (114.0, 32.0), (116.0, 37.0), (0.0, 0.0), (116.0, 29.0), (110.0, 25.0), (122.0, 31.0), (121.0, 31.0), (0.0, 0.0), (121.0, 29.0), (119.0, 32.0), (111.0, 25.0), (102.0, 25.0), (102.0, 25.0), (0.0, 0.0), (118.0, 31.0), (110.0, 21.0), (110.0, 25.0), (119.0, 32.0), (120.0, 30.0), (120.0, 30.0), (120.0, 30.0), (121.0, 31.0), (114.0, 23.0), (108.0, 23.0), (114.0, 23.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (113.0, 36.0), (122.0, 30.0), (108.0, 32.0), (0.0, 0.0), (104.0, 30.0), (104.0, 30.0), (113.0, 23.0), (1.0, 1.0), (123.0, 41.0), (120.0, 30.0), (112.0, 38.0), (112.0, 38.0), (113.0, 28.0), (0.0, 0.0), (116.0, 40.0), (119.0, 32.0), (102.0, 28.0), (122.0, 40.0), (113.0, 23.0), (0.0, 0.0), (114.0, 24.0), (114.0, 24.0), (119.0, 32.0), (100.0, 9.0), (121.0, 31.0), (106.0, 30.0), (104.0, 31.0), (0.0, 0.0), (118.0, 36.0), (120.0, 36.0), (122.0, 31.0), (120.0, 29.0), (116.0, 33.0), (114.0, 23.0), (113.0, 23.0), (119.0, 26.0), (113.0, 23.0), (113.0, 23.0), (121.0, 31.0), (120.0, 29.0), (108.0, 26.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (1.0, 1.0), (121.0, 31.0), (118.0, 25.0), (114.0, 23.0), (108.0, 25.0), (0.0, 0.0), (114.0, 35.0), (114.0, 23.0), (119.0, 26.0), (0.0, 0.0), (114.0, 23.0), (113.0, 28.0), (104.0, 31.0), (117.0, 32.0), (116.0, 40.0), (103.0, 25.0), (106.0, 30.0), (113.0, 34.0), (0.0, 0.0), (0.0, 0.0), (118.0, 38.0), (125.0, 45.0), (114.0, 31.0), (119.0, 37.0), (0.0, 0.0), (121.0, 31.0), (116.0, 40.0), (104.0, 30.0), (118.0, 38.0), (102.0, 39.0), (119.0, 34.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (114.0, 39.0), (119.0, 32.0), (120.0, 36.0), (116.0, 24.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (100.0, 27.0), (107.0, 30.0), (121.0, 31.0), (120.0, 32.0), (120.0, 32.0), (114.0, 31.0), (113.0, 32.0), (0.0, 0.0), (116.0, 35.0), (115.0, 27.0), (113.0, 23.0), (113.0, 23.0), (0.0, 0.0), (122.0, 40.0), (120.0, 31.0), (0.0, 0.0), (121.0, 38.0), (106.0, 38.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (110.0, 25.0), (104.0, 23.0), (114.0, 23.0), (114.0, 23.0), (120.0, 29.0), (0.0, 0.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (104.0, 31.0), (123.0, 42.0), (115.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (110.0, 20.0), (113.0, 35.0), (117.0, 40.0), (1.0, 1.0), (116.0, 27.0), (112.0, 30.0), (113.0, 28.0), (116.0, 40.0), (110.0, 27.0), (110.0, 23.0), (119.0, 32.0), (114.0, 23.0), (119.0, 25.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (119.0, 26.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (113.0, 23.0), (0.0, 0.0), (104.0, 31.0), (1.0, 1.0), (122.0, 30.0), (122.0, 40.0), (104.0, 30.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (117.0, 23.0), (113.0, 28.0), (122.0, 40.0), (120.0, 32.0), (1.0, 1.0), (108.0, 23.0), (1.0, 1.0), (0.0, 0.0), (108.0, 23.0), (120.0, 30.0), (114.0, 31.0), (0.0, 0.0), (121.0, 31.0), (105.0, 32.0), (117.0, 36.0), (113.0, 36.0), (113.0, 36.0), (122.0, 30.0), (110.0, 41.0), (121.0, 28.0), (106.0, 30.0), (114.0, 23.0), (106.0, 27.0), (106.0, 27.0), (104.0, 36.0), (109.0, 18.0), (118.0, 28.0), (116.0, 36.0), (125.0, 50.0), (121.0, 31.0), (119.0, 25.0), (0.0, 0.0), (120.0, 31.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (103.0, 30.0), (119.0, 32.0), (120.0, 30.0), (119.0, 34.0), (114.0, 25.0), (118.0, 30.0), (0.0, 0.0), (121.0, 31.0), (113.0, 36.0), (104.0, 30.0), (126.0, 43.0), (0.0, 0.0), (114.0, 31.0), (113.0, 36.0), (121.0, 31.0), (117.0, 38.0), (113.0, 23.0), (114.0, 35.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (112.0, 38.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (115.0, 37.0), (0.0, 0.0), (120.0, 36.0), (1.0, 1.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 31.0), (113.0, 23.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (116.0, 24.0), (0.0, 0.0), (106.0, 38.0), (113.0, 36.0), (0.0, 0.0), (120.0, 37.0), (121.0, 31.0), (113.0, 23.0), (88.0, 44.0), (116.0, 24.0), (109.0, 34.0), (120.0, 31.0), (121.0, 28.0), (114.0, 37.0), (113.0, 34.0), (116.0, 40.0), (106.0, 37.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 29.0), (114.0, 23.0), (123.0, 42.0), (0.0, 0.0), (113.0, 23.0), (116.0, 40.0), (116.0, 23.0), (0.0, 0.0), (124.0, 42.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (113.0, 36.0), (110.0, 20.0), (118.0, 37.0), (106.0, 38.0), (113.0, 23.0), (112.0, 38.0), (120.0, 30.0), (114.0, 23.0), (116.0, 40.0), (116.0, 40.0), (114.0, 25.0), (0.0, 0.0), (109.0, 34.0), (114.0, 35.0), (124.0, 42.0), (114.0, 35.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (119.0, 34.0), (121.0, 38.0), (120.0, 27.0), (118.0, 36.0), (0.0, 0.0), (114.0, 23.0), (118.0, 38.0), (118.0, 39.0), (1.0, 1.0), (114.0, 38.0), (121.0, 29.0), (116.0, 40.0), (116.0, 36.0), (110.0, 20.0), (0.0, 0.0), (121.0, 31.0), (114.0, 37.0), (121.0, 31.0), (114.0, 35.0), (118.0, 35.0), (113.0, 23.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 31.0), (115.0, 27.0), (105.0, 38.0), (0.0, 0.0), (116.0, 40.0), (114.0, 23.0), (124.0, 47.0))", "rowcount": 959, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((114.0, 24.0), (88.0, 44.0), (120.0, 32.0), (114.0, 31.0), (106.0, 27.0), (113.0, 23.0), (113.0, 23.0), (104.0, 36.0), (114.0, 37.0), (116.0, 40.0), (113.0, 23.0), (120.0, 37.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (122.0, 30.0), (113.0, 23.0), (114.0, 38.0), (116.0, 40.0), (114.0, 39.0), (0.0, 0.0), (1.0, 1.0), (116.0, 40.0), (105.0, 32.0), (113.0, 23.0), (104.0, 30.0), (107.0, 30.0), (119.0, 32.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (114.0, 23.0), (114.0, 23.0), (118.0, 24.0), (119.0, 32.0), (121.0, 29.0), (114.0, 23.0), (121.0, 29.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (102.0, 25.0), (116.0, 29.0), (104.0, 31.0), (109.0, 34.0), (116.0, 24.0), (122.0, 40.0), (118.0, 39.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (1.0, 1.0), (0.0, 0.0), (114.0, 35.0), (122.0, 42.0), (121.0, 30.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (118.0, 39.0), (1.0, 1.0), (104.0, 30.0), (118.0, 32.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (113.0, 36.0), (108.0, 23.0), (114.0, 23.0), (117.0, 32.0), (113.0, 23.0), (1.0, 1.0), (1.0, 1.0), (120.0, 30.0), (121.0, 31.0), (108.0, 23.0), (0.0, 0.0), (114.0, 23.0), (114.0, 25.0), (120.0, 36.0), (113.0, 36.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (120.0, 32.0), (120.0, 37.0), (118.0, 38.0), (0.0, 0.0), (118.0, 24.0), (0.0, 0.0), (0.0, 0.0), (114.0, 37.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (114.0, 38.0), (126.0, 42.0), (113.0, 23.0), (0.0, 0.0), (108.0, 23.0), (117.0, 34.0), (114.0, 31.0), (116.0, 29.0), (121.0, 31.0), (0.0, 0.0), (106.0, 27.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (0.0, 0.0), (114.0, 23.0), (104.0, 30.0), (104.0, 31.0), (114.0, 35.0), (115.0, 33.0), (116.0, 40.0), (116.0, 40.0), (120.0, 30.0), (0.0, 0.0), (114.0, 23.0), (105.0, 23.0), (0.0, 0.0), (0.0, 0.0), (116.0, 40.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (120.0, 36.0), (115.0, 37.0), (104.0, 36.0), (114.0, 31.0), (119.0, 32.0), (0.0, 0.0), (124.0, 42.0), (116.0, 40.0), (106.0, 30.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (120.0, 36.0), (112.0, 23.0), (0.0, 0.0), (114.0, 37.0), (116.0, 40.0), (110.0, 25.0), (118.0, 24.0), (104.0, 30.0), (108.0, 23.0), (107.0, 29.0), (121.0, 31.0), (0.0, 0.0), (113.0, 34.0), (0.0, 0.0), (120.0, 29.0), (104.0, 30.0), (0.0, 0.0), (117.0, 28.0), (108.0, 23.0), (0.0, 0.0), (104.0, 31.0), (114.0, 36.0), (116.0, 40.0), (117.0, 31.0), (0.0, 0.0), (114.0, 38.0), (120.0, 30.0), (104.0, 30.0), (108.0, 23.0), (112.0, 22.0), (114.0, 23.0), (116.0, 23.0), (116.0, 23.0), (117.0, 38.0), (114.0, 31.0), (113.0, 36.0), (122.0, 40.0), (112.0, 36.0), (109.0, 34.0), (122.0, 30.0), (115.0, 26.0), (115.0, 26.0), (121.0, 28.0), (0.0, 0.0), (119.0, 32.0), (119.0, 32.0), (113.0, 23.0), (120.0, 29.0), (119.0, 26.0), (0.0, 0.0), (0.0, 0.0), (115.0, 23.0), (0.0, 0.0), (119.0, 32.0), (120.0, 33.0), (121.0, 30.0), (111.0, 27.0), (120.0, 29.0), (117.0, 39.0), (1.0, 1.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (124.0, 42.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (122.0, 40.0), (105.0, 23.0), (122.0, 40.0), (122.0, 31.0), (112.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (106.0, 37.0), (106.0, 27.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 36.0), (106.0, 38.0), (120.0, 42.0), (0.0, 0.0), (121.0, 31.0), (114.0, 31.0), (110.0, 21.0), (0.0, 0.0), (110.0, 20.0), (120.0, 36.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (1.0, 1.0), (118.0, 35.0), (122.0, 30.0), (120.0, 30.0), (113.0, 23.0), (113.0, 28.0), (0.0, 0.0), (114.0, 31.0), (126.0, 42.0), (0.0, 0.0), (114.0, 23.0), (120.0, 37.0), (112.0, 38.0), (113.0, 28.0), (103.0, 30.0), (113.0, 28.0), (119.0, 32.0), (115.0, 30.0), (110.0, 20.0), (121.0, 31.0), (113.0, 36.0), (1.0, 1.0), (103.0, 25.0), (108.0, 26.0), (123.0, 41.0), (114.0, 23.0), (118.0, 26.0), (116.0, 40.0), (120.0, 27.0), (0.0, 0.0), (121.0, 31.0), (109.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 35.0), (117.0, 37.0), (118.0, 38.0), (0.0, 0.0), (119.0, 26.0), (0.0, 0.0), (114.0, 36.0), (0.0, 0.0), (121.0, 31.0), (104.0, 30.0), (123.0, 41.0), (123.0, 41.0), (109.0, 30.0), (0.0, 0.0), (122.0, 30.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (0.0, 0.0), (117.0, 32.0), (118.0, 39.0), (121.0, 28.0), (121.0, 31.0), (121.0, 38.0), (113.0, 34.0), (121.0, 28.0), (121.0, 31.0), (113.0, 29.0), (114.0, 23.0), (114.0, 23.0), (112.0, 36.0), (113.0, 23.0), (118.0, 40.0), (0.0, 0.0), (111.0, 21.0), (116.0, 40.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (120.0, 37.0), (120.0, 30.0), (114.0, 31.0), (113.0, 38.0), (119.0, 32.0), (115.0, 38.0), (112.0, 32.0), (109.0, 35.0), (0.0, 0.0), (117.0, 36.0), (120.0, 36.0), (119.0, 26.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (102.0, 25.0), (0.0, 0.0), (120.0, 30.0), (115.0, 30.0), (121.0, 30.0), (116.0, 23.0), (117.0, 28.0), (127.0, 46.0), (121.0, 31.0), (114.0, 23.0), (114.0, 35.0), (120.0, 32.0), (114.0, 23.0), (105.0, 29.0), (114.0, 35.0), (102.0, 25.0), (116.0, 40.0), (121.0, 31.0), (112.0, 30.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (1.0, 1.0), (0.0, 0.0), (88.0, 44.0), (118.0, 34.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (119.0, 26.0), (114.0, 23.0), (114.0, 23.0), (106.0, 38.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (88.0, 44.0), (0.0, 0.0), (114.0, 23.0), (106.0, 27.0), (113.0, 23.0), (121.0, 28.0), (118.0, 36.0), (109.0, 18.0), (109.0, 18.0), (118.0, 28.0), (118.0, 28.0), (108.0, 23.0), (0.0, 0.0), (123.0, 42.0), (114.0, 23.0), (0.0, 0.0), (106.0, 27.0), (119.0, 34.0), (0.0, 0.0), (0.0, 0.0), (120.0, 29.0), (119.0, 25.0), (119.0, 25.0), (0.0, 0.0), (114.0, 27.0), (121.0, 31.0), (116.0, 40.0), (109.0, 34.0), (109.0, 34.0), (100.0, 27.0), (0.0, 0.0), (122.0, 40.0), (0.0, 0.0), (0.0, 0.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (112.0, 22.0), (114.0, 35.0), (1.0, 1.0), (114.0, 23.0), (104.0, 31.0), (0.0, 0.0), (110.0, 25.0), (104.0, 30.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (121.0, 29.0), (120.0, 30.0), (114.0, 23.0), (110.0, 20.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (113.0, 23.0), (113.0, 34.0), (113.0, 23.0), (0.0, 0.0), (113.0, 38.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (115.0, 30.0), (114.0, 30.0), (118.0, 35.0), (118.0, 35.0), (121.0, 30.0), (0.0, 0.0), (117.0, 39.0), (0.0, 0.0), (120.0, 33.0), (0.0, 0.0), (116.0, 40.0), (114.0, 31.0), (113.0, 35.0), (0.0, 0.0), (119.0, 40.0), (114.0, 23.0), (106.0, 38.0), (116.0, 40.0), (119.0, 26.0), (114.0, 28.0), (117.0, 37.0), (124.0, 42.0), (0.0, 0.0), (104.0, 30.0), (105.0, 25.0), (114.0, 37.0), (0.0, 0.0), (0.0, 0.0), (122.0, 39.0), (0.0, 0.0), (114.0, 35.0), (115.0, 29.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (110.0, 25.0), (113.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (122.0, 37.0), (114.0, 23.0), (0.0, 0.0), (118.0, 24.0), (121.0, 31.0), (121.0, 38.0), (104.0, 23.0), (119.0, 32.0), (107.0, 30.0), (0.0, 0.0), (119.0, 26.0), (117.0, 32.0), (116.0, 40.0), (117.0, 32.0), (121.0, 28.0), (121.0, 28.0), (119.0, 25.0), (0.0, 0.0), (114.0, 38.0), (118.0, 36.0), (111.0, 36.0), (0.0, 0.0), (0.0, 0.0), (116.0, 36.0), (121.0, 30.0), (117.0, 23.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (114.0, 35.0), (121.0, 31.0), (103.0, 25.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (114.0, 27.0), (124.0, 47.0), (104.0, 36.0), (119.0, 26.0), (117.0, 37.0), (105.0, 23.0), (107.0, 28.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (120.0, 30.0), (116.0, 36.0), (121.0, 31.0), (117.0, 39.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (106.0, 30.0), (114.0, 23.0), (0.0, 0.0), (108.0, 23.0), (111.0, 32.0), (0.0, 0.0), (114.0, 31.0), (127.0, 46.0), (0.0, 0.0), (122.0, 30.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (118.0, 39.0), (113.0, 23.0), (0.0, 0.0), (118.0, 37.0), (113.0, 38.0), (1.0, 1.0), (116.0, 35.0), (117.0, 40.0), (109.0, 34.0), (109.0, 22.0), (0.0, 0.0), (107.0, 27.0), (0.0, 0.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (114.0, 36.0), (108.0, 35.0), (0.0, 0.0), (117.0, 37.0), (122.0, 40.0), (110.0, 19.0), (1.0, 1.0), (0.0, 0.0), (105.0, 23.0), (118.0, 35.0), (0.0, 0.0), (121.0, 37.0), (1.0, 1.0), (117.0, 23.0), (114.0, 23.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (114.0, 32.0), (116.0, 37.0), (0.0, 0.0), (116.0, 29.0), (110.0, 25.0), (122.0, 31.0), (121.0, 31.0), (0.0, 0.0), (121.0, 29.0), (119.0, 32.0), (111.0, 25.0), (102.0, 25.0), (102.0, 25.0), (0.0, 0.0), (118.0, 31.0), (110.0, 21.0), (110.0, 25.0), (119.0, 32.0), (120.0, 30.0), (120.0, 30.0), (120.0, 30.0), (121.0, 31.0), (114.0, 23.0), (108.0, 23.0), (114.0, 23.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (113.0, 36.0), (122.0, 30.0), (108.0, 32.0), (0.0, 0.0), (104.0, 30.0), (104.0, 30.0), (113.0, 23.0), (1.0, 1.0), (123.0, 41.0), (120.0, 30.0), (112.0, 38.0), (112.0, 38.0), (113.0, 28.0), (0.0, 0.0), (116.0, 40.0), (119.0, 32.0), (102.0, 28.0), (122.0, 40.0), (113.0, 23.0), (0.0, 0.0), (114.0, 24.0), (114.0, 24.0), (119.0, 32.0), (100.0, 9.0), (121.0, 31.0), (106.0, 30.0), (104.0, 31.0), (0.0, 0.0), (118.0, 36.0), (120.0, 36.0), (122.0, 31.0), (120.0, 29.0), (116.0, 33.0), (114.0, 23.0), (113.0, 23.0), (119.0, 26.0), (113.0, 23.0), (113.0, 23.0), (121.0, 31.0), (120.0, 29.0), (108.0, 26.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (1.0, 1.0), (121.0, 31.0), (118.0, 25.0), (114.0, 23.0), (108.0, 25.0), (0.0, 0.0), (114.0, 35.0), (114.0, 23.0), (119.0, 26.0), (0.0, 0.0), (114.0, 23.0), (113.0, 28.0), (104.0, 31.0), (117.0, 32.0), (116.0, 40.0), (103.0, 25.0), (106.0, 30.0), (113.0, 34.0), (0.0, 0.0), (0.0, 0.0), (118.0, 38.0), (125.0, 45.0), (114.0, 31.0), (119.0, 37.0), (0.0, 0.0), (121.0, 31.0), (116.0, 40.0), (104.0, 30.0), (118.0, 38.0), (102.0, 39.0), (119.0, 34.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (114.0, 39.0), (119.0, 32.0), (120.0, 36.0), (116.0, 24.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (100.0, 27.0), (107.0, 30.0), (121.0, 31.0), (120.0, 32.0), (120.0, 32.0), (114.0, 31.0), (113.0, 32.0), (0.0, 0.0), (116.0, 35.0), (115.0, 27.0), (113.0, 23.0), (113.0, 23.0), (0.0, 0.0), (122.0, 40.0), (120.0, 31.0), (0.0, 0.0), (121.0, 38.0), (106.0, 38.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (110.0, 25.0), (104.0, 23.0), (114.0, 23.0), (114.0, 23.0), (120.0, 29.0), (0.0, 0.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (104.0, 31.0), (123.0, 42.0), (115.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (110.0, 20.0), (113.0, 35.0), (117.0, 40.0), (1.0, 1.0), (116.0, 27.0), (112.0, 30.0), (113.0, 28.0), (116.0, 40.0), (110.0, 27.0), (110.0, 23.0), (119.0, 32.0), (114.0, 23.0), (119.0, 25.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (119.0, 26.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (113.0, 23.0), (0.0, 0.0), (104.0, 31.0), (1.0, 1.0), (122.0, 30.0), (122.0, 40.0), (104.0, 30.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (117.0, 23.0), (113.0, 28.0), (122.0, 40.0), (120.0, 32.0), (1.0, 1.0), (108.0, 23.0), (1.0, 1.0), (0.0, 0.0), (108.0, 23.0), (120.0, 30.0), (114.0, 31.0), (0.0, 0.0), (121.0, 31.0), (105.0, 32.0), (117.0, 36.0), (113.0, 36.0), (113.0, 36.0), (122.0, 30.0), (110.0, 41.0), (121.0, 28.0), (106.0, 30.0), (114.0, 23.0), (106.0, 27.0), (106.0, 27.0), (104.0, 36.0), (109.0, 18.0), (118.0, 28.0), (116.0, 36.0), (125.0, 50.0), (121.0, 31.0), (119.0, 25.0), (0.0, 0.0), (120.0, 31.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (103.0, 30.0), (119.0, 32.0), (120.0, 30.0), (119.0, 34.0), (114.0, 25.0), (118.0, 30.0), (0.0, 0.0), (121.0, 31.0), (113.0, 36.0), (104.0, 30.0), (126.0, 43.0), (0.0, 0.0), (114.0, 31.0), (113.0, 36.0), (121.0, 31.0), (117.0, 38.0), (113.0, 23.0), (114.0, 35.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (112.0, 38.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (115.0, 37.0), (0.0, 0.0), (120.0, 36.0), (1.0, 1.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 31.0), (113.0, 23.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (116.0, 24.0), (0.0, 0.0), (106.0, 38.0), (113.0, 36.0), (0.0, 0.0), (120.0, 37.0), (121.0, 31.0), (113.0, 23.0), (88.0, 44.0), (116.0, 24.0), (109.0, 34.0), (120.0, 31.0), (121.0, 28.0), (114.0, 37.0), (113.0, 34.0), (116.0, 40.0), (106.0, 37.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 29.0), (114.0, 23.0), (123.0, 42.0), (0.0, 0.0), (113.0, 23.0), (116.0, 40.0), (116.0, 23.0), (0.0, 0.0), (124.0, 42.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (113.0, 36.0), (110.0, 20.0), (118.0, 37.0), (106.0, 38.0), (113.0, 23.0), (112.0, 38.0), (120.0, 30.0), (114.0, 23.0), (116.0, 40.0), (116.0, 40.0), (114.0, 25.0), (0.0, 0.0), (109.0, 34.0), (114.0, 35.0), (124.0, 42.0), (114.0, 35.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (119.0, 34.0), (121.0, 38.0), (120.0, 27.0), (118.0, 36.0), (0.0, 0.0), (114.0, 23.0), (118.0, 38.0), (118.0, 39.0), (1.0, 1.0), (114.0, 38.0), (121.0, 29.0), (116.0, 40.0), (116.0, 36.0), (110.0, 20.0), (0.0, 0.0), (121.0, 31.0), (114.0, 37.0), (121.0, 31.0), (114.0, 35.0), (118.0, 35.0), (113.0, 23.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 31.0), (115.0, 27.0), (105.0, 38.0), (0.0, 0.0), (116.0, 40.0), (114.0, 23.0), (124.0, 47.0))", "rowcount": 959, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 88, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 92, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('F',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 42\n Code: 42. DB::Exception: Aggregate function sum requires single argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 55, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19.6, 22.9))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('Here') (line 1, col 1): Here is the SQL statement translated from SQLite to ClickHouse. Note that in ClickHouse there's no equivalent of SQLite's IIF function (it uses the ternary oper. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 68, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 3, "FN": 0}
{"sql_id": 93, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 72 (')') (line 1, col 72): ) / COUNT(T2.app_id) AS per FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id\n\n FORMAT Native. Expected one of: token, DoubleColon, END, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, identifier. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 248, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('DS Yamamura Misa Suspense: Maiko Kogiku - Kisha Katherine - Sougiya Isa Akashi - Koto ni Maru Hana Sanrin: Kyoto Satujin Jinken File',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The SQL statement in ClickHouse would be:\n\n```sql\nSELECT T.game_name FROM game AS T ORDER BY length(T.game_name) DESC LIMIT 1\n```\n\n FORMAT Native. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 508, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((60.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 46\n Code: 46. DB::Exception: Function with name `JULIANDAY` does not exist. In scope SELECT toDateTime(JULIANDAY(EndDate) - JULIANDAY(StartDate)) FROM BillOfMaterials ORDER BY EndDate - StartDate DESC LIMIT 1. (UNKNOWN_FUNCTION) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 511, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 512, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((77.994,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 60 (''s dialect. Here it is for reference:\n\n```sql\nSELECT toFloat64(sumIf(T3.OrderQty, T1.ShipMethodID = 5)) / count(DISTINCT T3.ProductID) \nFROM ShipMethod AS T1 \nINNER JOIN PurchaseOrderHeader AS T2 ON T1.ShipMethodID = T2.ShipMethodID \nINNER JOIN PurchaseOrderDetail AS T3 ON T2.PurchaseOrderID = T3.PurchaseOrderID\n```\n\nThe `toFloat64()` function is used to cast the result of summing if a condition is met (IIF equivalent in ClickHouse) as a Float64 data type, which corresponds to REAL in SQLite. The `count(DISTINCT T3.ProductID)` will return the count of distinct products across all records in PurchaseOrderDetail table which matches with your original query.\n\n FORMAT Native') (line 1, col 60): 's dialect. Here it is for reference:\n\n```sql\nSELECT toFloat64(sumIf(T3.OrderQty, T1.ShipMethodID = 5)) / count(DISTINCT T3.ProductID) \nFROM ShipMethod AS T1 \nI. Single quoted string is not closed: ''s dialect. Here it is for reference:\n\n```sql\nSELECT toFloat64(sumIf(T3.OrderQty, T1.ShipMethodID = 5)) / count(DISTINCT T3.ProductID) \nFROM ShipMethod AS T1 \nINNER JOIN PurchaseOrderHeader AS T2 ON T1.ShipMethodID = T2.ShipMethodID \nINNER JOIN PurchaseOrderDetail AS T3 ON T2.PurchaseOrderID = T3.PurchaseOrderID\n```\n\nThe `toFloat64()` function is used to cast the result of summing if a condition is met (IIF equivalent in ClickHouse) as a Float64 data type, which corresponds to REAL in SQLite. The `count(DISTINCT T3.ProductID)` will return the count of distinct products across all records in PurchaseOrderDetail table which matches with your original query.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 513, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0, 'VIC'), (0, 'TX'), (0, 'ID'), (0, '78'), (0, 'WI'), (0, 'ENG'), (0, 'CT'), (0, 'NV'), (0, 'TAS'), (0, 'SA'), (0, 'BC'), (0, '92'), (0, 'SD'), (0, 'MI'), (0, '45'), (0, 'MB'), (0, 'PA'), (0, 'NSW'), (0, 'IL'), (0, 'WA'), (0, 'BY'), (0, 'MS'), (0, 'NB'), (0, 'RI'), (0, '75'), (0, 'SL'), (0, 'VA'), (0, 'MA'), (0, '94'), (0, '33'), (0, '91'), (0, 'MO'), (0, 'MD'), (0, 'AZ'), (0, '57'), (0, 'AB'), (0, 'NM'), (0, 'CO'), (0, '59'), (0, 'NH'), (0, 'AL'), (0, '80'), (0, 'CA'), (0, 'FL'), (0, 'NC'), (0, '95'), (0, 'OH'), (0, 'WY'), (0, 'QLD'), (0, 'KY'), (0, 'ME'), (0, 'UT'), (0, 'HH'), (0, 'SC'), (0, '32'), (0, 'MN'), (0, '77'), (0, 'IN'), (0, 'OR'), (0, 'MT'), (0, 'NE'), (0, '31'), (0, 'BB'), (0, '93'), (0, '41'), (0, 'NW'), (0, '17'), (0, '62'), (0, 'ON'), (0, 'GA'), (0, 'QC'), (0, 'TN'), (0, 'NY'), (0, 'HE'))", "rowcount": 74, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0, 'VIC'), (0, 'TX'), (0, 'ID'), (0, '78'), (0, 'WI'), (0, 'ENG'), (0, 'CT'), (0, 'NV'), (0, 'TAS'), (0, 'SA'), (0, 'BC'), (0, '92'), (0, 'SD'), (0, 'MI'), (0, '45'), (0, 'MB'), (0, 'PA'), (0, 'NSW'), (0, 'IL'), (0, 'WA'), (0, 'BY'), (0, 'MS'), (0, 'NB'), (0, 'RI'), (0, '75'), (0, 'SL'), (0, 'VA'), (0, 'MA'), (0, '94'), (0, '33'), (0, '91'), (0, 'MO'), (0, 'MD'), (0, 'AZ'), (0, '57'), (0, 'AB'), (0, 'NM'), (0, 'CO'), (0, '59'), (0, 'NH'), (0, 'AL'), (0, '80'), (0, 'CA'), (0, 'FL'), (0, 'NC'), (0, '95'), (0, 'OH'), (0, 'WY'), (0, 'QLD'), (0, 'KY'), (0, 'ME'), (0, 'UT'), (0, 'HH'), (0, 'SC'), (0, '32'), (0, 'MN'), (0, '77'), (0, 'IN'), (0, 'OR'), (0, 'MT'), (0, 'NE'), (0, '31'), (0, 'BB'), (0, '93'), (0, '41'), (0, 'NW'), (0, '17'), (0, '62'), (0, 'ON'), (0, 'GA'), (0, 'QC'), (0, 'TN'), (0, 'NY'), (0, 'HE'))", "rowcount": 74, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 514, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1431.5,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (1364.5,), (1364.5,), (1349.6,), (1349.6,), (1349.6,), (1364.5,), (2319.99,), (2319.99,), (2319.99,), (2294.99,), (2294.99,), (2294.99,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (44.54,), (61.92,), (120.27,), (44.54,), (61.92,), (120.27,), (594.83,), (594.83,), (594.83,), (594.83,), (594.83,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (63.5,), (63.5,), (63.5,), (69.99,), (69.99,), (69.99,), (120.0,), (159.0,), (54.99,), (1003.91,), (333.42,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (121.46,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (364.09,), (364.09,), (364.09,), (106.5,), (52.64,), (52.64,), (52.64,), (264.05,), (264.05,), (264.05,), (264.05,), (249.79,), (249.79,), (249.79,), (249.79,), (35.0,), (40.49,), (62.09,), (80.99,), (40.49,), (62.09,), (80.99,), (80.99,), (364.09,), (249.79,), (264.05,), (91.49,), (46.09,), (91.57,), (106.5,), (175.49,), (256.49,), (404.99,), (1214.85,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (1214.85,), (1214.85,), (1214.85,), (1700.99,), (1700.99,), (1700.99,), (1700.99,), (539.99,), (742.35,), (742.35,), (769.49,), (769.49,), (769.49,), (769.49,), (564.99,), (564.99,), (564.99,), (564.99,), (564.99,), (539.99,), (539.99,), (539.99,), (539.99,), (539.99,), (53.99,), (101.24,), (121.49,), (539.99,), (539.99,), (539.99,))", "rowcount": 156, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1431.5,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (1364.5,), (1364.5,), (1349.6,), (1349.6,), (1349.6,), (1364.5,), (2319.99,), (2319.99,), (2319.99,), (2294.99,), (2294.99,), (2294.99,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (44.54,), (61.92,), (120.27,), (44.54,), (61.92,), (120.27,), (594.83,), (594.83,), (594.83,), (594.83,), (594.83,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (63.5,), (63.5,), (63.5,), (69.99,), (69.99,), (69.99,), (120.0,), (159.0,), (54.99,), (1003.91,), (333.42,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (121.46,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (364.09,), (364.09,), (364.09,), (106.5,), (52.64,), (52.64,), (52.64,), (264.05,), (264.05,), (264.05,), (264.05,), (249.79,), (249.79,), (249.79,), (249.79,), (35.0,), (40.49,), (62.09,), (80.99,), (40.49,), (62.09,), (80.99,), (80.99,), (364.09,), (249.79,), (264.05,), (91.49,), (46.09,), (91.57,), (106.5,), (175.49,), (256.49,), (404.99,), (1214.85,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (1214.85,), (1214.85,), (1214.85,), (1700.99,), (1700.99,), (1700.99,), (1700.99,), (539.99,), (742.35,), (742.35,), (769.49,), (769.49,), (769.49,), (769.49,), (564.99,), (564.99,), (564.99,), (564.99,), (564.99,), (539.99,), (539.99,), (539.99,), (539.99,), (539.99,), (53.99,), (101.24,), (121.49,), (539.99,), (539.99,), (539.99,))", "rowcount": 156, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 515, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((44,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((44,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 516, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('W',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 468 (''\n```\n\nPlease note that datetime data types are different in SQLite and ClickHouse. In ClickHouse the date format is YYYY-MM-DD HH:MI:SS, while in SQLite it could be any of several formats depending on the system locale settings. If your application requires strict parsing according to a specific format, you need to adjust this part of the translation.\n\n FORMAT Native') (line 7, col 94): '\n```\n\nPlease note that datetime data types are different in SQLite and ClickHouse. In ClickHouse the date format is YYYY-MM-DD HH:MI:SS, while in SQLite it cou. Single quoted string is not closed: ''\n```\n\nPlease note that datetime data types are different in SQLite and ClickHouse. In ClickHouse the date format is YYYY-MM-DD HH:MI:SS, while in SQLite it could be any of several formats depending on the system locale settings. If your application requires strict parsing according to a specific format, you need to adjust this part of the translation.\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 517, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('W',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('W',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 518, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((290,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 206\n Code: 206. DB::Exception: JOIN  INNER JOIN ... ON SalesPerson.BusinessEntityID = SalesPersonQuotaHistory.BusinessEntityID no alias for subquery or table function SELECT toInt64(BusinessEntityID) AS BusinessEntityID FROM SalesPersonQuotaHistory WHERE toYear(QuotaDate) = 2013. In scope SELECT BusinessEntityID FROM SalesPerson INNER JOIN (SELECT toInt64(BusinessEntityID) AS BusinessEntityID FROM SalesPersonQuotaHistory WHERE toYear(QuotaDate) = 2013) ON SalesPerson.BusinessEntityID = SalesPersonQuotaHistory.BusinessEntityID ORDER BY CAST(SalesLastYear, 'Float64') / SalesQuota DESC LIMIT 1 (set joined_subquery_requires_alias = 0 to disable restriction). (ALIAS_REQUIRED) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 519, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 520, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((276, 750000.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((276, 12754105.649100002))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 521, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((280,), (283,), (284,))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((280,), (283,), (284,))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 522, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1200000.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 523, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((275,), (276,), (277,), (278,), (279,), (280,), (281,), (282,), (283,), (286,), (288,), (289,), (290,))", "rowcount": 13, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((275,), (276,), (277,), (278,), (279,), (280,), (281,), (282,), (283,), (286,), (288,), (289,), (290,))", "rowcount": 13, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 524, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((188715.0, 1.3384042553191489))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((188715.0, 0.4611803519061584))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 526, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((9,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((9,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 528, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 529, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((38.76470588235293,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1767.6470588235295,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 530, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((53, 14.4231))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 616 ('' argument indicates what part of date we are interested in (years).\n\n FORMAT Native') (line 11, col 203): ' argument indicates what part of date we are interested in (years).\n\n FORMAT Native. Single quoted string is not closed: '' argument indicates what part of date we are interested in (years).\n\n FORMAT Native'. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 533, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Frank', 'S', 'Pellow'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Frank', 'S', 'Pellow'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 534, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Ken', 'S\u00e1nchez'), ('Terri', 'Duffy'), ('Roberto', 'Tamburello'), ('Gail', 'Erickson'), ('Jossef', 'Goldberg'), ('Dylan', 'Miller'), ('Diane', 'Margheim'), ('Gigi', 'Matthew'), ('Michael', 'Raheem'), ('Michael', 'Sullivan'), ('Sharon', 'Salavaria'), ('David', 'Bradley'), ('James', 'Hamilton'), ('Peter', 'Krebs'), ('Pilar', 'Ackerman'), ('Hazem', 'Abolrous'), ('Peng', 'Wu'), ('Gary', 'Altman'), ('Christian', 'Kleinerman'), ('Laura', 'Norman'), ('Paula', 'Barreto de Mattos'), ('David', 'Liu'), ('Barbara', 'Moreland'), ('Mike', 'Seamans'), ('Wendy', 'Kahn'), ('Sheela', 'Word'), ('Jean', 'Trenary'), ('Stephanie', 'Conroy'), ('Karen', 'Berg'), ('Ramesh', 'Meyyappan'), ('Dan', 'Bacon'), ('Fran\u00e7ois', 'Ajenstat'), ('Dan', 'Wilson'), ('Janaina', 'Bueno'), ('Brian', 'Welcker'), ('Stephen', 'Jiang'), ('Michael', 'Blythe'), ('Linda', 'Mitchell'), ('Jillian', 'Carson'), ('Garrett', 'Vargas'), ('Tsvi', 'Reiter'), ('Pamela', 'Ansman-Wolfe'), ('Shu', 'Ito'), ('Jos\u00e9', 'Saraiva'), ('David', 'Campbell'), ('Tete', 'Mensa-Annan'), ('Syed', 'Abbas'), ('Lynn', 'Tsoflias'), ('Amy', 'Alberts'), ('Rachel', 'Valdez'), ('Jae', 'Pak'), ('Ranjit', 'Varkey Chudukatil'))", "rowcount": 52, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Ken', 'S\u00e1nchez'), ('Terri', 'Duffy'), ('Roberto', 'Tamburello'), ('Gail', 'Erickson'), ('Jossef', 'Goldberg'), ('Dylan', 'Miller'), ('Diane', 'Margheim'), ('Gigi', 'Matthew'), ('Michael', 'Raheem'), ('Michael', 'Sullivan'), ('Sharon', 'Salavaria'), ('David', 'Bradley'), ('James', 'Hamilton'), ('Peter', 'Krebs'), ('Pilar', 'Ackerman'), ('Hazem', 'Abolrous'), ('Peng', 'Wu'), ('Gary', 'Altman'), ('Christian', 'Kleinerman'), ('Laura', 'Norman'), ('Paula', 'Barreto de Mattos'), ('David', 'Liu'), ('Barbara', 'Moreland'), ('Mike', 'Seamans'), ('Wendy', 'Kahn'), ('Sheela', 'Word'), ('Jean', 'Trenary'), ('Stephanie', 'Conroy'), ('Karen', 'Berg'), ('Ramesh', 'Meyyappan'), ('Dan', 'Bacon'), ('Fran\u00e7ois', 'Ajenstat'), ('Dan', 'Wilson'), ('Janaina', 'Bueno'), ('Brian', 'Welcker'), ('Stephen', 'Jiang'), ('Michael', 'Blythe'), ('Linda', 'Mitchell'), ('Jillian', 'Carson'), ('Garrett', 'Vargas'), ('Tsvi', 'Reiter'), ('Pamela', 'Ansman-Wolfe'), ('Shu', 'Ito'), ('Jos\u00e9', 'Saraiva'), ('David', 'Campbell'), ('Tete', 'Mensa-Annan'), ('Syed', 'Abbas'), ('Lynn', 'Tsoflias'), ('Amy', 'Alberts'), ('Rachel', 'Valdez'), ('Jae', 'Pak'), ('Ranjit', 'Varkey Chudukatil'))", "rowcount": 52, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 536, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pilar', 'Ackerman'), ('Matthias', 'Berndt'), ('Jimmy', 'Bischoff'))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 386\n Code: 386. DB::Exception: There is no supertype for types Int64, String because some of them are String/FixedString/Enum and some of them are not: JOIN  INNER JOIN ... ON T1.BusinessEntityID = CAST(T2.BusinessEntityID, 'String') cannot infer common type in ON section for keys. Left key __table1.BusinessEntityID type Int64. Right key CAST(__table2.BusinessEntityID, 'String'_String) type String. (NO_COMMON_TYPE) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 539, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Classic Vest, S', 'Team Athletic Co.'), ('Classic Vest, M', 'Team Athletic Co.'), ('Classic Vest, L', 'Team Athletic Co.'), (\"Women's Mountain Shorts, S\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, M\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, L\", 'Team Athletic Co.'), ('Water Bottle - 30 oz.', 'Green Lake Bike Company'), ('Mountain Bottle Cage', 'Green Lake Bike Company'), ('Road Bottle Cage', 'Green Lake Bike Company'), ('Patch Kit/8 Patches', 'Green Lake Bike Company'), ('Racing Socks, M', \"Jeff's Sporting Goods\"), ('Racing Socks, L', \"Jeff's Sporting Goods\"), ('Hitch Rack - 4-Bike', 'Green Lake Bike Company'), ('Bike Wash - Dissolver', 'Green Lake Bike Company'), ('Fender Set - Mountain', 'Green Lake Bike Company'), ('All-Purpose Bike Stand', 'Green Lake Bike Company'), ('Hydration Pack - 70 oz.', 'Green Lake Bike Company'), ('Short-Sleeve Classic Jersey, S', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, M', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, L', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, XL', 'Integrated Sport Products'), ('Rear Brakes', 'Superior Bicycles'), ('LL Mountain Seat/Saddle', 'First Rate Bicycles'), ('LL Mountain Seat/Saddle', 'Chicago City Saddles'), ('ML Mountain Seat/Saddle', 'First Rate Bicycles'), ('ML Mountain Seat/Saddle', 'Chicago City Saddles'), ('HL Mountain Seat/Saddle', 'Hybrid Bicycle Center'), ('HL Mountain Seat/Saddle', 'Chicago City Saddles'), ('LL Road Seat/Saddle', \"Hill's Bicycle Service\"), ('LL Road Seat/Saddle', 'Chicago City Saddles'), ('ML Road Seat/Saddle', \"Hill's Bicycle Service\"), ('ML Road Seat/Saddle', 'Chicago City Saddles'), ('HL Road Seat/Saddle', 'First Rate Bicycles'), ('HL Road Seat/Saddle', 'Chicago City Saddles'), ('LL Touring Seat/Saddle', 'Expert Bike Co'), ('LL Touring Seat/Saddle', 'Chicago City Saddles'), ('ML Touring Seat/Saddle', 'Expert Bike Co'), ('ML Touring Seat/Saddle', 'Chicago City Saddles'), ('HL Touring Seat/Saddle', 'Expert Bike Co'), ('HL Touring Seat/Saddle', 'Chicago City Saddles'), ('Mountain Tire Tube', 'Trikes, Inc.'), ('Road Tire Tube', 'Victory Bikes'), ('Touring Tire Tube', 'Victory Bikes'), ('LL Mountain Tire', 'Vista Road Bikes'), ('LL Mountain Tire', 'Sport Fan Co.'), ('ML Mountain Tire', 'Vista Road Bikes'), ('ML Mountain Tire', 'Sport Fan Co.'), ('HL Mountain Tire', 'Trikes, Inc.'), ('HL Mountain Tire', 'Sport Fan Co.'), ('LL Road Tire', 'Signature Cycles'), ('LL Road Tire', 'Professional Athletic Consultants'), ('ML Road Tire', 'Signature Cycles'), ('ML Road Tire', 'Professional Athletic Consultants'), ('HL Road Tire', 'Victory Bikes'), ('HL Road Tire', 'Professional Athletic Consultants'), ('Touring Tire', 'Victory Bikes'), ('Touring Tire', 'Professional Athletic Consultants'), ('LL Mountain Pedal', 'Greenwood Athletic Company'), ('LL Mountain Pedal', 'Crowley Sport'), ('ML Mountain Pedal', 'Greenwood Athletic Company'), ('ML Mountain Pedal', 'Crowley Sport'), ('HL Mountain Pedal', 'Inline Accessories'), ('LL Road Pedal', 'Mitchell Sports'), ('LL Road Pedal', 'Jackson Authority'), ('ML Road Pedal', 'Mitchell Sports'), ('ML Road Pedal', 'Jackson Authority'), ('HL Road Pedal', 'Compete Enterprises, Inc'), ('Touring Pedal', 'Bicycle Specialists'), ('Front Brakes', 'Superior Bicycles'), ('Chain', 'Varsity Sport Co.'))", "rowcount": 70, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Classic Vest, S', 'Team Athletic Co.'), ('Classic Vest, M', 'Team Athletic Co.'), ('Classic Vest, L', 'Team Athletic Co.'), (\"Women's Mountain Shorts, S\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, M\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, L\", 'Team Athletic Co.'), ('Water Bottle - 30 oz.', 'Green Lake Bike Company'), ('Mountain Bottle Cage', 'Green Lake Bike Company'), ('Road Bottle Cage', 'Green Lake Bike Company'), ('Patch Kit/8 Patches', 'Green Lake Bike Company'), ('Racing Socks, M', \"Jeff's Sporting Goods\"), ('Racing Socks, L', \"Jeff's Sporting Goods\"), ('Hitch Rack - 4-Bike', 'Green Lake Bike Company'), ('Bike Wash - Dissolver', 'Green Lake Bike Company'), ('Fender Set - Mountain', 'Green Lake Bike Company'), ('All-Purpose Bike Stand', 'Green Lake Bike Company'), ('Hydration Pack - 70 oz.', 'Green Lake Bike Company'), ('Short-Sleeve Classic Jersey, S', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, M', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, L', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, XL', 'Integrated Sport Products'), ('Rear Brakes', 'Superior Bicycles'), ('LL Mountain Seat/Saddle', 'First Rate Bicycles'), ('LL Mountain Seat/Saddle', 'Chicago City Saddles'), ('ML Mountain Seat/Saddle', 'First Rate Bicycles'), ('ML Mountain Seat/Saddle', 'Chicago City Saddles'), ('HL Mountain Seat/Saddle', 'Hybrid Bicycle Center'), ('HL Mountain Seat/Saddle', 'Chicago City Saddles'), ('LL Road Seat/Saddle', \"Hill's Bicycle Service\"), ('LL Road Seat/Saddle', 'Chicago City Saddles'), ('ML Road Seat/Saddle', \"Hill's Bicycle Service\"), ('ML Road Seat/Saddle', 'Chicago City Saddles'), ('HL Road Seat/Saddle', 'First Rate Bicycles'), ('HL Road Seat/Saddle', 'Chicago City Saddles'), ('LL Touring Seat/Saddle', 'Expert Bike Co'), ('LL Touring Seat/Saddle', 'Chicago City Saddles'), ('ML Touring Seat/Saddle', 'Expert Bike Co'), ('ML Touring Seat/Saddle', 'Chicago City Saddles'), ('HL Touring Seat/Saddle', 'Expert Bike Co'), ('HL Touring Seat/Saddle', 'Chicago City Saddles'), ('Mountain Tire Tube', 'Trikes, Inc.'), ('Road Tire Tube', 'Victory Bikes'), ('Touring Tire Tube', 'Victory Bikes'), ('LL Mountain Tire', 'Vista Road Bikes'), ('LL Mountain Tire', 'Sport Fan Co.'), ('ML Mountain Tire', 'Vista Road Bikes'), ('ML Mountain Tire', 'Sport Fan Co.'), ('HL Mountain Tire', 'Trikes, Inc.'), ('HL Mountain Tire', 'Sport Fan Co.'), ('LL Road Tire', 'Signature Cycles'), ('LL Road Tire', 'Professional Athletic Consultants'), ('ML Road Tire', 'Signature Cycles'), ('ML Road Tire', 'Professional Athletic Consultants'), ('HL Road Tire', 'Victory Bikes'), ('HL Road Tire', 'Professional Athletic Consultants'), ('Touring Tire', 'Victory Bikes'), ('Touring Tire', 'Professional Athletic Consultants'), ('LL Mountain Pedal', 'Greenwood Athletic Company'), ('LL Mountain Pedal', 'Crowley Sport'), ('ML Mountain Pedal', 'Greenwood Athletic Company'), ('ML Mountain Pedal', 'Crowley Sport'), ('HL Mountain Pedal', 'Inline Accessories'), ('LL Road Pedal', 'Mitchell Sports'), ('LL Road Pedal', 'Jackson Authority'), ('ML Road Pedal', 'Mitchell Sports'), ('ML Road Pedal', 'Jackson Authority'), ('HL Road Pedal', 'Compete Enterprises, Inc'), ('Touring Pedal', 'Bicycle Specialists'), ('Front Brakes', 'Superior Bicycles'), ('Chain', 'Varsity Sport Co.'))", "rowcount": 70, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 540, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Terri', 'Duffy'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Terri', 'Duffy'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 543, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('23:00:00', '07:00:00'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 47\n Code: 47. DB::Exception: Identifier 'T2.ShiftId' cannot be resolved from table with name T2. In scope SELECT T3.StartTime, T3.EndTime FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Shift AS T3 ON T2.ShiftId = T3.ShiftId WHERE toYear(T1.BirthDate) < 1969 ORDER BY T1.BirthDate ASC LIMIT 5, 1. Maybe you meant: ['T2.ShiftID']. (UNKNOWN_IDENTIFIER) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 544, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((datetime.date(2010, 5, 30),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((datetime.date(2010, 5, 30),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 546, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('EM',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('EM',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 547, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 549, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 550, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((910.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 156 (')') (line 1, col 156): ) / count(distinct T1.BusinessEntityID)\nFROM EmployeeDepartmentHistory AS T1\nINNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID\nWHERE T2.Name = 'E. Unmatched parentheses: ). (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 6}
{"sql_id": 551, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 552, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "HTTPDriver for http://127.0.0.1:8123 received ClickHouse error code 62\n Code: 62. DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The translated SQL statement would be: \n\n```sql\nSELECT (365 * DATEDIFF(YEAR, ActualStartDate, ActualEndDate)) + (30 * DATEDIFF(MONTH, ActualStartDate, ActualEnd. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, SHOW [FULL] [TEMPORARY] TABLES|DATABASES|CLUSTERS|CLUSTER|MERGES 'name' [[NOT] [I]LIKE 'str'] [LIMIT expr], SHOW, SHOW COLUMNS query, SHOW ENGINES query, SHOW ENGINES, SHOW FUNCTIONS query, SHOW FUNCTIONS, SHOW INDEXES query, SHOW SETTING query, SHOW SETTING, EXISTS or SHOW CREATE query, EXISTS, DESCRIBE FILESYSTEM CACHE query, DESCRIBE, DESC, DESCRIBE query, SHOW PROCESSLIST query, SHOW PROCESSLIST, CREATE TABLE or ATTACH TABLE query, CREATE, ATTACH, REPLACE, CREATE DATABASE query, CREATE VIEW query, CREATE DICTIONARY, CREATE LIVE VIEW query, CREATE WINDOW VIEW query, ALTER query, ALTER TABLE, ALTER TEMPORARY TABLE, ALTER DATABASE, RENAME query, RENAME DATABASE, RENAME TABLE, EXCHANGE TABLES, RENAME DICTIONARY, EXCHANGE DICTIONARIES, RENAME, DROP query, DROP, DETACH, TRUNCATE, UNDROP query, UNDROP, CHECK ALL TABLES, CHECK TABLE, KILL QUERY query, KILL, OPTIMIZE query, OPTIMIZE TABLE, WATCH query, WATCH, SHOW ACCESS query, SHOW ACCESS, ShowAccessEntitiesQuery, SHOW GRANTS query, SHOW GRANTS, SHOW PRIVILEGES query, SHOW PRIVILEGES, BACKUP or RESTORE query, BACKUP, RESTORE, INSERT query, INSERT INTO, USE query, USE, SET ROLE or SET DEFAULT ROLE query, SET ROLE DEFAULT, SET ROLE, SET DEFAULT ROLE, SET query, SET, SYSTEM query, SYSTEM, CREATE USER or ALTER USER query, ALTER USER, CREATE USER, CREATE ROLE or ALTER ROLE query, ALTER ROLE, CREATE ROLE, CREATE QUOTA or ALTER QUOTA query, ALTER QUOTA, CREATE QUOTA, CREATE ROW POLICY or ALTER ROW POLICY query, ALTER POLICY, ALTER ROW POLICY, CREATE POLICY, CREATE ROW POLICY, CREATE SETTINGS PROFILE or ALTER SETTINGS PROFILE query, ALTER SETTINGS PROFILE, ALTER PROFILE, CREATE SETTINGS PROFILE, CREATE PROFILE, CREATE FUNCTION query, DROP FUNCTION query, CREATE NAMED COLLECTION, DROP NAMED COLLECTION query, Alter NAMED COLLECTION query, ALTER, CREATE INDEX query, DROP INDEX query, DROP access entity query, MOVE access entity query, MOVE, GRANT or REVOKE query, REVOKE, GRANT, EXTERNAL DDL query, EXTERNAL DDL FROM, TCL query, BEGIN TRANSACTION, START TRANSACTION, COMMIT, ROLLBACK, SET TRANSACTION SNAPSHOT, Delete query, DELETE. (SYNTAX_ERROR) (version 24.9.2.42 (official build))\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 6}
{"sql_id": 559, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.097560975609756,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((25.751072961373392,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 560, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3.120936280884265,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3.120936280884265,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 561, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.8452181419627407,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.8452181419627407,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}

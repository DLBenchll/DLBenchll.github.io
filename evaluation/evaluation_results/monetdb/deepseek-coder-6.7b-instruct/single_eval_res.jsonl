{"sql_id": 1, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('A Clockwork Orange', 1971))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('A Clockwork Orange', 1971))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 2, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 3, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((761725,), (19221797,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (:)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 4, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((312,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!types tinyint(4,0) and timestamptz(7,0) are not equal\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 5, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('las mejores peliculas que vi en el 2016',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 9, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"title\" from sales inner join titles on sales.\"title_id\" = titles.\"title_\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 10, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean', 'Profusely illustrated in color, this makes a wonderful gift book for a cuisine-oriented friend.', 'Binnet & Hardley'), (\"The Busy Executive's Database Guide\", 'An overview of available database systems with emphasis on common business applications. Illustrated.', 'Algodata Infosystems'), ('Cooking with Computers: Surreptitious Balance Sheets', 'Helpful hints on how to use your electronic resources to the best advantage.', 'Algodata Infosystems'), ('You Can Combat Computer Stress!', 'The latest medical and psychological techniques for living with the electronic office. Easy-to-understand explanations.', 'New Moon Books'), ('Straight Talk About Computers', 'Annotated analysis of what computers can do for you: a no-hype guide for the critical user.', 'Algodata Infosystems'), ('Silicon Valley Gastronomic Treats', 'Favorite recipes for quick, easy, and elegant meals.', 'Binnet & Hardley'), ('The Gourmet Microwave', 'Traditional French gourmet recipes adapted for modern microwave cooking.', 'Binnet & Hardley'), ('But Is It User Friendly?', \"A survey of software for the naive user, focusing on the 'friendliness' of each.\", 'Algodata Infosystems'), ('Computer Phobic AND Non-Phobic Individuals: Behavior Variations', \"A must for the specialist, this book examines the difference between those who hate and fear computers and those who don't.\", 'Binnet & Hardley'), ('Is Anger the Enemy?', 'Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.', 'New Moon Books'), ('Life Without Fear', 'New exercise, meditation, and nutritional techniques that can reduce the shock of daily interactions. Popular audience. Sample menus included, exercise video available separately.', 'New Moon Books'), ('Prolonged Data Deprivation: Four Case Studies', 'What happens when the data runs dry?  Searching evaluations of information-shortage effects.', 'New Moon Books'), ('Emotional Security: A New Algorithm', 'Protecting yourself and your loved ones from undue emotional stress in the modern world. Use of computer and nutritional aids emphasized.', 'New Moon Books'), ('Fifty Years in Buckingham Palace Kitchens', \"More anecdotes from the Queen's favorite cook describing life among English royalty. Recipes, techniques, tender vignettes.\", 'Binnet & Hardley'), ('Sushi, Anyone?', 'Detailed instructions on how to make authentic Japanese sushi in your spare time.', 'Binnet & Hardley'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_part(char,timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 11, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 12, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"hire_date\", '%Y') from \"employee\" group by sys.time\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected EXTRACT in: \"select extract(year from hire_date) from employee group by extract\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 13, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Binnet & Hardley',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 14, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'date(timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 15, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('psychology',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22001!value too long for type (var)char(19)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 16, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.333333,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 17, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Francisco', '', 'Chang'), ('Matti', 'G', 'Karttunen'), ('Ann', 'M', 'Devon'), ('Rita', 'B', 'Muller'), ('Palle', 'D', 'Ibsen'), ('Diego', 'W', 'Roel'), ('Mary', 'M', 'Saveley'), ('Laurence', 'A', 'Lebihan'), ('Janine', 'Y', 'Labrune'), ('Karla', 'J', 'Jablonski'), ('Martin', 'F', 'Sommer'), ('Paul', 'X', 'Henriot'), ('Annette', '', 'Roulet'), ('Sven', 'K', 'Ottlieb'), ('Roland', '', 'Mendel'), ('Victoria', 'P', 'Ashworth'), ('Maria', '', 'Larsson'), ('Paula', 'S', 'Parente'), ('Lesley', '', 'Brown'), ('Helvetius', 'A', 'Nagy'), ('Miguel', 'A', 'Paolino'), ('Karin', 'F', 'Josephs'), ('Anabela', 'R', 'Domingues'), ('Pedro', 'S', 'Afonso'), ('Aria', '', 'Cruz'), ('Pirkko', 'O', 'Koskitalo'), ('Peter', 'H', 'Franken'), ('Martine', '', 'Rance'), ('Daniel', 'B', 'Tonini'), ('Carine', 'G', 'Schmitt'), ('Paolo', 'M', 'Accorti'), ('Elizabeth', 'N', 'Lincoln'))", "rowcount": 32, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 18, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 6}
{"sql_id": 19, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.client_id'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 20, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select cast(count(\"events\".\"Complaint ID\") as float) / 3.0 as average from \"clie\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 21, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'Date received' unknown\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 3}
{"sql_id": 22, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 6}
{"sql_id": 24, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 25, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((723,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((723,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 26, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((15.777778, 15.301775, 15.085714))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 9}
{"sql_id": 28, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Billing disputes',), ('Customer service / Customer relations',), ('Billing statement',), ('Balance transfer',), ('Credit line increase/decrease',), ('Customer service / Customer relations',), ('Closing/Cancelling account',), ('Other',), ('Billing disputes',), ('Closing/Cancelling account',), ('Identity theft / Fraud / Embezzlement',), ('APR or interest rate',), ('Unsolicited issuance of credit card',), ('Closing/Cancelling account',), ('Bankruptcy',), ('Closing/Cancelling account',), ('Identity theft / Fraud / Embezzlement',), ('Other',))", "rowcount": 18, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.Complaint ID'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 29, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "(('CR1026897', 35730, '978-277-2764'), ('CR0678444', 36017, '915-818-1976'), ('CR0775199', 40342, '978-527-8432'))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 30, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.353982300884958,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected FROM, expecting ')' or ',' in: \"select avg(cast(substr(\"ser_time\" from\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 31, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"Date_received\", '%Y'), count(\"Date_received\") from \"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected EXTRACT in: \"select extract(year from \"Date_received\"), count(\"Date_received\") from events wh\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 33, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select cast(sum((case when t1.\"priority\" = 2 then 1 else 0 end)) as float) * 100\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 34, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.product'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 35, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(t1.\"client_id\") \n!from \"client\" as t1 \n!inner join \"events\" as t2 on \"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 36, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select cast((sum(case when extract(doy\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 37, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 38, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'Date_received' ambiguous\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 39, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 40, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 41, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((82677500.47867298,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((82677500.47867298,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 42, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select avg(case when t3.\"country_name\" = 'United States of America' then t1.\"rev\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 43, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "(('Four Rooms',), ('Star Wars',), ('Forrest Gump',), ('American Beauty',), ('The Fifth Element',))", "rowcount": 5, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 44, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((1307,), (1308,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 45, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 46, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((26,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 47, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t3.\"title\" \n!from \"production_company\" as t1 \n!inner join \"movie_company\" a\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 48, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Filtering',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 3}
{"sql_id": 49, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',' in: \"select substring(substring(name from position('.' in name) + 1), 0, position('.'\"\n", "exec_able": false}}, "TP": 6, "FP": 1, "FN": 0}
{"sql_id": 50, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 3}
{"sql_id": 51, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('MainForm',), ('ObjectReader',), ('UO',), ('Program',), ('protocol',), ('net',), ('Problem75',), ('util',), ('DAL',), ('Archiever',), ('OscarLib',), ('Numerics',), ('Data',), ('CodeLib',), ('Filters',), ('Analyse',), ('Caesar',), ('Cipher',), ('Combinatorics',), ('Structures',), ('DictionaryAttack',), ('LettersMatrix',), ('Storage',), ('Monoalphabetic',), ('TextAnalysis',), ('Transposition',), ('WordsFilter',), ('UniqueWords',), ('Vigenere',), ('WordsCompleter',), ('Window',), ('ArrayExt',), ('ListExt',), ('Parallel',), ('StringExt',), ('TextDownloader',), ('MatchCount',), ('BoardPosition',), ('CompoundMove',), ('Canvas',), ('LineTool',), ('Menu',), ('PenTool',), ('DBUtility',), ('BLL',), ('Util',), ('Graphics',), ('Web',), ('Common',), ('Controlers',), ('Servers',), ('Matrix',), ('arCADia',), ('ArcGisPublic',), ('KIDSFansChannel',), ('Game',), ('FormDataManage',), ('ServiceRegistryExtensions',), ('Subject',), ('Controls',), ('Class',), ('Camera',), ('CzechRepublicPublicHoliday',), ('Check',), ('DGP',), ('Imap4',), ('Math',), ('Library',), ('Server',), ('Client',), ('FastSocket',), ('Core',), ('User',), ('Utility',), ('MasterTaskList',), ('Comm',), ('Framework',), ('Wcf',), ('View',), ('Plugin',), ('DataAccess',), ('CSPrivateProfile',), ('Aa',), ('IO',), ('KatjuBoardTable',), ('ThreadIndexer',), ('TypeCreator',), ('Bbs',), ('Cache',), ('LinkInfoCollection',), ('NGWords',), ('Tools',), ('HtmlSkin',), ('StandardHtmlSkin',), ('ThreadControl',), ('Brazil',), ('OracleDAL',), ('NicoNico',), ('DesignViewFiles',), ('Security',), ('Entity<TEntity>',), ('MiniProfiler',), ('Xml',), ('Insightly',), ('UtilityTool',), ('UDP_protocol',), ('Radio',), ('Form1',), ('',), ('Utilities',), ('frmMain',), ('uctlCancelCompare',), ('uctlAddNode',), ('uctlDoExport',), ('WMS',), ('DBHelper',), ('Net',), ('MySQL',), ('OleDb',), ('Oracle',), ('SQL2000',), ('SQL2005',), ('SQLite',), ('InWDetail',), ('Supply',), ('SupplyDetail',), ('Model',), ('Logic',), ('GUI',), ('ucCar',), ('TestConsole',), ('Collections',), ('MService',), ('Kernel',), ('DB',), ('Win32Kernel',), ('DBTools',), ('TipText',), ('MemDataSerialize',), ('MemTypeManager',), ('WebKernel',), ('ShareInfoCollection',), ('FrmMain',), ('Dto',), ('ByteSocket',), ('ProbufSerialize',), ('Extend',), ('cvt',), ('DataPage<T>',), ('Json',), ('model',), ('ControlEx',), ('Models',), ('Mailer',), ('GridSource',), ('Players',), ('FeedManager',), ('MainWindow',), ('MeasureDistance',), ('frmSplash',), ('Marc',), ('Global',), ('LogWindow',), ('Transform',), ('Tool',), ('CData',), ('KyDataOperation',), ('TreeHandler',), ('MyConvert',), ('Services',), ('ArrayHelper',), ('JsonTokenizer',), ('Kf_account',), ('DbUtility',), ('FrmUpdate',), ('IdentifyEncoding',), ('JsonUtil',), ('TcpCli',), ('TcpSvr',), ('NPP',), ('Support',), ('WPF',), ('CxSampleGrabberCB',), ('SocketListener',), ('SocketServer',), ('UdpServer',), ('Dialog',), ('frmAbout',), ('MainFrame',), ('frmReg',), ('RegexValidate',), ('Extends',), ('NtSymbolicLink',), ('VBAEngineBase',), ('Interface',), ('Service',))", "rowcount": 196, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 3}
{"sql_id": 52, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 3}
{"sql_id": 53, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 54, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 55, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19, 22))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 56, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((113.0, 22.0), (120.0, 32.0))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((113.0, 22.0), (120.0, 32.0))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 57, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-6689096779184407258, 'YES'), (-6590029937880196169, 'YES'), (-5305692228635096563, 'YES'), (-2917998150844653076, 'YES'), (-1633968677373322472, 'YES'), (-450723994850216235, 'YES'), (-324761265507882224, 'YES'), (528590055286269542, 'YES'), (4296637564570566271, 'YES'), (5354621554047170232, 'YES'), (5497109940653330488, 'YES'), (5611317768433566721, 'YES'), (5927333115845830913, 'YES'), (6607018907660377991, 'YES'), (6666573787717908158, 'YES'), (8693964245073640147, 'YES'), (9112463114311278255, 'YES'))", "rowcount": 17, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 58, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((959,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((959,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 59, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 60, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.timestamp'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 61, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((19,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((19,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 62, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 0}
{"sql_id": 63, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1001,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 64, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 65, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'datepart(char,timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 66, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 67, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 68, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 70, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 71, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 72, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 73, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 74, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 75, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 76, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t1.\"device_id\") from \"gender_age\" as t1 inner join \"events\" as t2 o\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 77, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Finance',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 78, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 79, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 80, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 81, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 82, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'date(timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 83, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 84, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 85, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select sum(case when t1.age < 50 then 1 else 0)\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 86, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 87, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((114.0, 24.0), (88.0, 44.0), (120.0, 32.0), (114.0, 31.0), (106.0, 27.0), (113.0, 23.0), (113.0, 23.0), (104.0, 36.0), (114.0, 37.0), (116.0, 40.0), (113.0, 23.0), (120.0, 37.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (122.0, 30.0), (113.0, 23.0), (114.0, 38.0), (116.0, 40.0), (114.0, 39.0), (0.0, 0.0), (1.0, 1.0), (116.0, 40.0), (105.0, 32.0), (113.0, 23.0), (104.0, 30.0), (107.0, 30.0), (119.0, 32.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (114.0, 23.0), (114.0, 23.0), (118.0, 24.0), (119.0, 32.0), (121.0, 29.0), (114.0, 23.0), (121.0, 29.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (102.0, 25.0), (116.0, 29.0), (104.0, 31.0), (109.0, 34.0), (116.0, 24.0), (122.0, 40.0), (118.0, 39.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (1.0, 1.0), (0.0, 0.0), (114.0, 35.0), (122.0, 42.0), (121.0, 30.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (118.0, 39.0), (1.0, 1.0), (104.0, 30.0), (118.0, 32.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (113.0, 36.0), (108.0, 23.0), (114.0, 23.0), (117.0, 32.0), (113.0, 23.0), (1.0, 1.0), (1.0, 1.0), (120.0, 30.0), (121.0, 31.0), (108.0, 23.0), (0.0, 0.0), (114.0, 23.0), (114.0, 25.0), (120.0, 36.0), (113.0, 36.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (120.0, 32.0), (120.0, 37.0), (118.0, 38.0), (0.0, 0.0), (118.0, 24.0), (0.0, 0.0), (0.0, 0.0), (114.0, 37.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (114.0, 38.0), (126.0, 42.0), (113.0, 23.0), (0.0, 0.0), (108.0, 23.0), (117.0, 34.0), (114.0, 31.0), (116.0, 29.0), (121.0, 31.0), (0.0, 0.0), (106.0, 27.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (0.0, 0.0), (114.0, 23.0), (104.0, 30.0), (104.0, 31.0), (114.0, 35.0), (115.0, 33.0), (116.0, 40.0), (116.0, 40.0), (120.0, 30.0), (0.0, 0.0), (114.0, 23.0), (105.0, 23.0), (0.0, 0.0), (0.0, 0.0), (116.0, 40.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (120.0, 36.0), (115.0, 37.0), (104.0, 36.0), (114.0, 31.0), (119.0, 32.0), (0.0, 0.0), (124.0, 42.0), (116.0, 40.0), (106.0, 30.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (120.0, 36.0), (112.0, 23.0), (0.0, 0.0), (114.0, 37.0), (116.0, 40.0), (110.0, 25.0), (118.0, 24.0), (104.0, 30.0), (108.0, 23.0), (107.0, 29.0), (121.0, 31.0), (0.0, 0.0), (113.0, 34.0), (0.0, 0.0), (120.0, 29.0), (104.0, 30.0), (0.0, 0.0), (117.0, 28.0), (108.0, 23.0), (0.0, 0.0), (104.0, 31.0), (114.0, 36.0), (116.0, 40.0), (117.0, 31.0), (0.0, 0.0), (114.0, 38.0), (120.0, 30.0), (104.0, 30.0), (108.0, 23.0), (112.0, 22.0), (114.0, 23.0), (116.0, 23.0), (116.0, 23.0), (117.0, 38.0), (114.0, 31.0), (113.0, 36.0), (122.0, 40.0), (112.0, 36.0), (109.0, 34.0), (122.0, 30.0), (115.0, 26.0), (115.0, 26.0), (121.0, 28.0), (0.0, 0.0), (119.0, 32.0), (119.0, 32.0), (113.0, 23.0), (120.0, 29.0), (119.0, 26.0), (0.0, 0.0), (0.0, 0.0), (115.0, 23.0), (0.0, 0.0), (119.0, 32.0), (120.0, 33.0), (121.0, 30.0), (111.0, 27.0), (120.0, 29.0), (117.0, 39.0), (1.0, 1.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (124.0, 42.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (122.0, 40.0), (105.0, 23.0), (122.0, 40.0), (122.0, 31.0), (112.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (106.0, 37.0), (106.0, 27.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 36.0), (106.0, 38.0), (120.0, 42.0), (0.0, 0.0), (121.0, 31.0), (114.0, 31.0), (110.0, 21.0), (0.0, 0.0), (110.0, 20.0), (120.0, 36.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (1.0, 1.0), (118.0, 35.0), (122.0, 30.0), (120.0, 30.0), (113.0, 23.0), (113.0, 28.0), (0.0, 0.0), (114.0, 31.0), (126.0, 42.0), (0.0, 0.0), (114.0, 23.0), (120.0, 37.0), (112.0, 38.0), (113.0, 28.0), (103.0, 30.0), (113.0, 28.0), (119.0, 32.0), (115.0, 30.0), (110.0, 20.0), (121.0, 31.0), (113.0, 36.0), (1.0, 1.0), (103.0, 25.0), (108.0, 26.0), (123.0, 41.0), (114.0, 23.0), (118.0, 26.0), (116.0, 40.0), (120.0, 27.0), (0.0, 0.0), (121.0, 31.0), (109.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 35.0), (117.0, 37.0), (118.0, 38.0), (0.0, 0.0), (119.0, 26.0), (0.0, 0.0), (114.0, 36.0), (0.0, 0.0), (121.0, 31.0), (104.0, 30.0), (123.0, 41.0), (123.0, 41.0), (109.0, 30.0), (0.0, 0.0), (122.0, 30.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (0.0, 0.0), (117.0, 32.0), (118.0, 39.0), (121.0, 28.0), (121.0, 31.0), (121.0, 38.0), (113.0, 34.0), (121.0, 28.0), (121.0, 31.0), (113.0, 29.0), (114.0, 23.0), (114.0, 23.0), (112.0, 36.0), (113.0, 23.0), (118.0, 40.0), (0.0, 0.0), (111.0, 21.0), (116.0, 40.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (120.0, 37.0), (120.0, 30.0), (114.0, 31.0), (113.0, 38.0), (119.0, 32.0), (115.0, 38.0), (112.0, 32.0), (109.0, 35.0), (0.0, 0.0), (117.0, 36.0), (120.0, 36.0), (119.0, 26.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (102.0, 25.0), (0.0, 0.0), (120.0, 30.0), (115.0, 30.0), (121.0, 30.0), (116.0, 23.0), (117.0, 28.0), (127.0, 46.0), (121.0, 31.0), (114.0, 23.0), (114.0, 35.0), (120.0, 32.0), (114.0, 23.0), (105.0, 29.0), (114.0, 35.0), (102.0, 25.0), (116.0, 40.0), (121.0, 31.0), (112.0, 30.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (1.0, 1.0), (0.0, 0.0), (88.0, 44.0), (118.0, 34.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (119.0, 26.0), (114.0, 23.0), (114.0, 23.0), (106.0, 38.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (88.0, 44.0), (0.0, 0.0), (114.0, 23.0), (106.0, 27.0), (113.0, 23.0), (121.0, 28.0), (118.0, 36.0), (109.0, 18.0), (109.0, 18.0), (118.0, 28.0), (118.0, 28.0), (108.0, 23.0), (0.0, 0.0), (123.0, 42.0), (114.0, 23.0), (0.0, 0.0), (106.0, 27.0), (119.0, 34.0), (0.0, 0.0), (0.0, 0.0), (120.0, 29.0), (119.0, 25.0), (119.0, 25.0), (0.0, 0.0), (114.0, 27.0), (121.0, 31.0), (116.0, 40.0), (109.0, 34.0), (109.0, 34.0), (100.0, 27.0), (0.0, 0.0), (122.0, 40.0), (0.0, 0.0), (0.0, 0.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (112.0, 22.0), (114.0, 35.0), (1.0, 1.0), (114.0, 23.0), (104.0, 31.0), (0.0, 0.0), (110.0, 25.0), (104.0, 30.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (121.0, 29.0), (120.0, 30.0), (114.0, 23.0), (110.0, 20.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (113.0, 23.0), (113.0, 34.0), (113.0, 23.0), (0.0, 0.0), (113.0, 38.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (115.0, 30.0), (114.0, 30.0), (118.0, 35.0), (118.0, 35.0), (121.0, 30.0), (0.0, 0.0), (117.0, 39.0), (0.0, 0.0), (120.0, 33.0), (0.0, 0.0), (116.0, 40.0), (114.0, 31.0), (113.0, 35.0), (0.0, 0.0), (119.0, 40.0), (114.0, 23.0), (106.0, 38.0), (116.0, 40.0), (119.0, 26.0), (114.0, 28.0), (117.0, 37.0), (124.0, 42.0), (0.0, 0.0), (104.0, 30.0), (105.0, 25.0), (114.0, 37.0), (0.0, 0.0), (0.0, 0.0), (122.0, 39.0), (0.0, 0.0), (114.0, 35.0), (115.0, 29.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (110.0, 25.0), (113.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (122.0, 37.0), (114.0, 23.0), (0.0, 0.0), (118.0, 24.0), (121.0, 31.0), (121.0, 38.0), (104.0, 23.0), (119.0, 32.0), (107.0, 30.0), (0.0, 0.0), (119.0, 26.0), (117.0, 32.0), (116.0, 40.0), (117.0, 32.0), (121.0, 28.0), (121.0, 28.0), (119.0, 25.0), (0.0, 0.0), (114.0, 38.0), (118.0, 36.0), (111.0, 36.0), (0.0, 0.0), (0.0, 0.0), (116.0, 36.0), (121.0, 30.0), (117.0, 23.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (114.0, 35.0), (121.0, 31.0), (103.0, 25.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (114.0, 27.0), (124.0, 47.0), (104.0, 36.0), (119.0, 26.0), (117.0, 37.0), (105.0, 23.0), (107.0, 28.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (120.0, 30.0), (116.0, 36.0), (121.0, 31.0), (117.0, 39.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (106.0, 30.0), (114.0, 23.0), (0.0, 0.0), (108.0, 23.0), (111.0, 32.0), (0.0, 0.0), (114.0, 31.0), (127.0, 46.0), (0.0, 0.0), (122.0, 30.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (118.0, 39.0), (113.0, 23.0), (0.0, 0.0), (118.0, 37.0), (113.0, 38.0), (1.0, 1.0), (116.0, 35.0), (117.0, 40.0), (109.0, 34.0), (109.0, 22.0), (0.0, 0.0), (107.0, 27.0), (0.0, 0.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (114.0, 36.0), (108.0, 35.0), (0.0, 0.0), (117.0, 37.0), (122.0, 40.0), (110.0, 19.0), (1.0, 1.0), (0.0, 0.0), (105.0, 23.0), (118.0, 35.0), (0.0, 0.0), (121.0, 37.0), (1.0, 1.0), (117.0, 23.0), (114.0, 23.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (114.0, 32.0), (116.0, 37.0), (0.0, 0.0), (116.0, 29.0), (110.0, 25.0), (122.0, 31.0), (121.0, 31.0), (0.0, 0.0), (121.0, 29.0), (119.0, 32.0), (111.0, 25.0), (102.0, 25.0), (102.0, 25.0), (0.0, 0.0), (118.0, 31.0), (110.0, 21.0), (110.0, 25.0), (119.0, 32.0), (120.0, 30.0), (120.0, 30.0), (120.0, 30.0), (121.0, 31.0), (114.0, 23.0), (108.0, 23.0), (114.0, 23.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (113.0, 36.0), (122.0, 30.0), (108.0, 32.0), (0.0, 0.0), (104.0, 30.0), (104.0, 30.0), (113.0, 23.0), (1.0, 1.0), (123.0, 41.0), (120.0, 30.0), (112.0, 38.0), (112.0, 38.0), (113.0, 28.0), (0.0, 0.0), (116.0, 40.0), (119.0, 32.0), (102.0, 28.0), (122.0, 40.0), (113.0, 23.0), (0.0, 0.0), (114.0, 24.0), (114.0, 24.0), (119.0, 32.0), (100.0, 9.0), (121.0, 31.0), (106.0, 30.0), (104.0, 31.0), (0.0, 0.0), (118.0, 36.0), (120.0, 36.0), (122.0, 31.0), (120.0, 29.0), (116.0, 33.0), (114.0, 23.0), (113.0, 23.0), (119.0, 26.0), (113.0, 23.0), (113.0, 23.0), (121.0, 31.0), (120.0, 29.0), (108.0, 26.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (1.0, 1.0), (121.0, 31.0), (118.0, 25.0), (114.0, 23.0), (108.0, 25.0), (0.0, 0.0), (114.0, 35.0), (114.0, 23.0), (119.0, 26.0), (0.0, 0.0), (114.0, 23.0), (113.0, 28.0), (104.0, 31.0), (117.0, 32.0), (116.0, 40.0), (103.0, 25.0), (106.0, 30.0), (113.0, 34.0), (0.0, 0.0), (0.0, 0.0), (118.0, 38.0), (125.0, 45.0), (114.0, 31.0), (119.0, 37.0), (0.0, 0.0), (121.0, 31.0), (116.0, 40.0), (104.0, 30.0), (118.0, 38.0), (102.0, 39.0), (119.0, 34.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (114.0, 39.0), (119.0, 32.0), (120.0, 36.0), (116.0, 24.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (100.0, 27.0), (107.0, 30.0), (121.0, 31.0), (120.0, 32.0), (120.0, 32.0), (114.0, 31.0), (113.0, 32.0), (0.0, 0.0), (116.0, 35.0), (115.0, 27.0), (113.0, 23.0), (113.0, 23.0), (0.0, 0.0), (122.0, 40.0), (120.0, 31.0), (0.0, 0.0), (121.0, 38.0), (106.0, 38.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (110.0, 25.0), (104.0, 23.0), (114.0, 23.0), (114.0, 23.0), (120.0, 29.0), (0.0, 0.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (104.0, 31.0), (123.0, 42.0), (115.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (110.0, 20.0), (113.0, 35.0), (117.0, 40.0), (1.0, 1.0), (116.0, 27.0), (112.0, 30.0), (113.0, 28.0), (116.0, 40.0), (110.0, 27.0), (110.0, 23.0), (119.0, 32.0), (114.0, 23.0), (119.0, 25.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (119.0, 26.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (113.0, 23.0), (0.0, 0.0), (104.0, 31.0), (1.0, 1.0), (122.0, 30.0), (122.0, 40.0), (104.0, 30.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (117.0, 23.0), (113.0, 28.0), (122.0, 40.0), (120.0, 32.0), (1.0, 1.0), (108.0, 23.0), (1.0, 1.0), (0.0, 0.0), (108.0, 23.0), (120.0, 30.0), (114.0, 31.0), (0.0, 0.0), (121.0, 31.0), (105.0, 32.0), (117.0, 36.0), (113.0, 36.0), (113.0, 36.0), (122.0, 30.0), (110.0, 41.0), (121.0, 28.0), (106.0, 30.0), (114.0, 23.0), (106.0, 27.0), (106.0, 27.0), (104.0, 36.0), (109.0, 18.0), (118.0, 28.0), (116.0, 36.0), (125.0, 50.0), (121.0, 31.0), (119.0, 25.0), (0.0, 0.0), (120.0, 31.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (103.0, 30.0), (119.0, 32.0), (120.0, 30.0), (119.0, 34.0), (114.0, 25.0), (118.0, 30.0), (0.0, 0.0), (121.0, 31.0), (113.0, 36.0), (104.0, 30.0), (126.0, 43.0), (0.0, 0.0), (114.0, 31.0), (113.0, 36.0), (121.0, 31.0), (117.0, 38.0), (113.0, 23.0), (114.0, 35.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (112.0, 38.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (115.0, 37.0), (0.0, 0.0), (120.0, 36.0), (1.0, 1.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 31.0), (113.0, 23.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (116.0, 24.0), (0.0, 0.0), (106.0, 38.0), (113.0, 36.0), (0.0, 0.0), (120.0, 37.0), (121.0, 31.0), (113.0, 23.0), (88.0, 44.0), (116.0, 24.0), (109.0, 34.0), (120.0, 31.0), (121.0, 28.0), (114.0, 37.0), (113.0, 34.0), (116.0, 40.0), (106.0, 37.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 29.0), (114.0, 23.0), (123.0, 42.0), (0.0, 0.0), (113.0, 23.0), (116.0, 40.0), (116.0, 23.0), (0.0, 0.0), (124.0, 42.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (113.0, 36.0), (110.0, 20.0), (118.0, 37.0), (106.0, 38.0), (113.0, 23.0), (112.0, 38.0), (120.0, 30.0), (114.0, 23.0), (116.0, 40.0), (116.0, 40.0), (114.0, 25.0), (0.0, 0.0), (109.0, 34.0), (114.0, 35.0), (124.0, 42.0), (114.0, 35.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (119.0, 34.0), (121.0, 38.0), (120.0, 27.0), (118.0, 36.0), (0.0, 0.0), (114.0, 23.0), (118.0, 38.0), (118.0, 39.0), (1.0, 1.0), (114.0, 38.0), (121.0, 29.0), (116.0, 40.0), (116.0, 36.0), (110.0, 20.0), (0.0, 0.0), (121.0, 31.0), (114.0, 37.0), (121.0, 31.0), (114.0, 35.0), (118.0, 35.0), (113.0, 23.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 31.0), (115.0, 27.0), (105.0, 38.0), (0.0, 0.0), (116.0, 40.0), (114.0, 23.0), (124.0, 47.0))", "rowcount": 959, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting SCOLON in: \"select longitude, latitude from events where cast(_timestamp as date) = '2016-04\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 88, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'date(timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 89, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 90, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (!)\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 91, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 92, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('F',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('F',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 93, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((Decimal('0.000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('0.000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 94, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 95, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 96, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t1.\"episode_id\") \n!from \"Episode\" as t1 \n!inner join \"Award\" as t2 on\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 97, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2000, 'tt0629291'), (1999, 'tt0629228'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 98, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Rene Balcer',), ('Constantine Makris',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.year'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 99, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such aggregate 'sql_sub'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.DATE'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 100, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 101, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 102, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected AS, expecting ')' in: \"select cast(sum((strftime('%j', t2.stop) - strftime('%j', t2.start)) as\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 105, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'description' unknown\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 106, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 107, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 108, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 109, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 110, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((82,), (82,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((82,), (82,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 111, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_char(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 113, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t2.\"_first\", t2.\"_last\" , case when t2.\"deathdate\" is null then year\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 5}
{"sql_id": 114, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.DATE'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 115, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select cast(sum(case when t1.\"deathdate\" is null then year\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 4}
{"sql_id": 117, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 119, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_part(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 120, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Escherichia coli urinary tract infection', 'NITROFURANTOIN  MACROCRYSTALS 50 MG [Macrodantin]', 7, 'alive'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 121, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Delbert', 'Effertz'), ('Oswaldo', 'Abernathy'), ('Kendrick', 'Watsica'), ('Lakeshia', 'Schuster'), ('Victoria', 'Towne'), ('Thurman', 'Stroman'), ('Julius', 'Moen'), ('Xavier', 'Krajcik'))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 123, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 126, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 127, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, 'Diabetes self management plan'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'datediff(date,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 128, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_char(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 129, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 130, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'encounters.DATE'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 131, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t1.\"patient\") \n!     , cast((sum(case when t2.\"DESCRIPTION\" = 'Prena\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 132, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 133, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 134, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 135, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 136, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 139, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "(('Hernandez', 'Gerard'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 140, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.customernumber'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 141, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t1.checknumber) from payments as t1 inner join customers as t2 on t\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 142, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.customernumber'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 143, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(distinct t1.\"orderNumber\") \n!from \"orderdetails\" as t1 inner join \"o\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 144, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((4972.794666666667,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 145, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'paymentdate' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 146, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 147, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't3.addressline1'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 148, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((datetime.date(2005, 4, 8),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 149, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(case when 2440587.5 + extract(epoch\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.shippeddate'\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 150, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"customers\".\"customerName\" from \"payments\" inner join \"customers\" on \"pay\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 151, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 152, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select sum(t2.\"quantityOrdered\") from \"orders\" as t1 inner join \"orderdetails\" a\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 153, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"t1\".\"paymentDate\", '%Y'), count(\"t1\".\"customerNumbe\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 154, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "(('1992 Ferrari 360 Spider red', 624), ('1964 Mercedes Tour Bus', 384), ('1936 Mercedes-Benz 500K Special Roadster', 381))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 155, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((12.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 156, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 157, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 158, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.21344717,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.21344717182497333,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 159, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast((sum(iif(t1.\"region\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 160, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 161, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 163, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((40,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 164, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((335987,), (335988,), (335989,), (335990,), (335991,), (335992,), (335993,), (335994,), (335995,), (335996,), (335997,), (335998,), (335999,), (336000,), (336001,), (336002,), (336003,), (336004,), (336005,), (336006,), (336007,), (336008,), (336009,), (336010,), (336011,), (336012,), (336013,), (336014,), (336015,), (336016,), (336017,), (336018,), (336019,), (336020,), (336021,), (336022,), (336023,), (336024,), (336025,), (336026,), (336027,), (336028,), (336029,), (336030,), (336031,), (336032,), (336033,), (336034,), (336036,), (336037,), (336038,), (336039,), (336040,), (336041,), (336042,), (336043,), (336044,), (336045,))", "rowcount": 58, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((335987,), (335988,), (335989,), (335990,), (335991,), (335992,), (335993,), (335994,), (335995,), (335996,), (335997,), (335998,), (335999,), (336000,), (336001,), (336002,), (336003,), (336004,), (336005,), (336006,), (336007,), (336008,), (336009,), (336010,), (336011,), (336012,), (336013,), (336014,), (336015,), (336016,), (336017,), (336018,), (336019,), (336020,), (336021,), (336022,), (336023,), (336024,), (336025,), (336026,), (336027,), (336028,), (336029,), (336030,), (336031,), (336032,), (336033,), (336034,), (336036,), (336037,), (336038,), (336039,), (336040,), (336041,), (336042,), (336043,), (336044,), (336045,))", "rowcount": 58, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 167, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((40,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((40,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 168, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'match_date' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 169, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.00016902285,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.00016902285,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 171, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 172, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19.183674,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((19.183673469387756,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 173, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.111111,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 174, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Sohail Tanvir',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Sohail Tanvir',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 175, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'player'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 176, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('YK Pathan',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 177, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Kings XI Punjab',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Kings XI Punjab',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 178, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'player'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 179, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select cast(sum(case when \"T2\".\"Country_Name\" = 'India' then 1 else 0 end) as fl\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 180, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'player'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 181, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((24.2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 183, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((98.4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 184, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.871838,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((31.871838111298484,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 185, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 186, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.257329,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 187, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum((iif(t2.\"cast_num\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 188, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 189, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 190, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-35.632183,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.isenglish'\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 191, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None, None, None, None, 273045, 'Documentary'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None, None, None, None, 273045, 'Documentary'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 1, "FN": 0}
{"sql_id": 192, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 193, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.Customer ID'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 194, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.Product ID'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 195, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_format(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 196, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.Customer ID'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 197, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((739.0306,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 198, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'datepart(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 199, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.Customer ID'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 200, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 201, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select \"Customer Name\" from people inner join east_superstore on people.\"Custome\"\n!42000!syntax error, unexpected ',' in: \",\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 202, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_part(char,int)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 203, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 204, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_char(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 205, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select cast(sum(case  when t1.\"Ship Mode\" = 'First Class' then 1 else 0 end) as \"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 206, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.Product ID'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 207, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((56.52174,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((56.52173913043478,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 209, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(_date, '%Y') from \"incidents\" where \"subject_weapon\"\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 210, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"translation\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 211, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 212, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.3422294,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 213, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((84.61539,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 216, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 217, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from ( select case when \"Customer_Names\" like '%Group%' then \"Customer_\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 218, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Elorac, Corp',), ('O.E. Ltd',), ('Dharma Ltd',), ('Linde ',), ('Prasco Group',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlINT, expecting UNION or EXCEPT or INTERSECT or ')' in: \"select distinct t1.\"Customer Names\" from customers as t1 inner join \"Sales Order\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 219, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'orderdate' unknown\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 220, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SO - 000106',), ('SO - 000136',), ('SO - 000163',), ('SO - 000165',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select distinct t from ( select case when deliverydate = '6/13/18' then ordernum\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 221, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((396,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'Order Quantity' unknown\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 222, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Georgia',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 223, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Stemware',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 224, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from ( select distinct case when t2.\"Product_Name\" = 'Cookware' then t1\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select t from ( select distinct iif(t2.\"Product Name\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 225, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from ( select distinct case when t1.\"Discount_Applied\" = 0.1 then t2.\"P\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from ( select distinct case when \"Sales Orders\".\"Discount Applied\" = 0.\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 226, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(t1.\"OrderDate\" from char_length(t1.\"OrderDate\") - 1 for 2) from\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(orderdate, -2, 2) from \"Sales_Orders\" inner join \"Sales_Team\" o\"\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 227, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select distinct t from ( select case when \"OrderNumber\" = 'SO - 000103' then \"Un\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select distinct t from ( select case when ordernumber = 'SO-000103' then \"Unit C\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 228, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Wuxi Group',), ('U.S. Ltd',), ('Dharma Ltd',), ('Fenwal, Corp',), ('Victory Ltd',), ('Ohio ',), ('Ascend Ltd',), ('Apotheca, Ltd',), ('E. Ltd',), ('Elorac, Corp',), ('Rochester Ltd',), ('WakeFern ',), ('Qualitest ',), (\"OHTA'S Corp\",), ('Ei ',), ('Capweld ',), ('Medsep Group',), ('Bare ',), ('Linde ',), ('Pacific Ltd',), ('Weimei Corp',), ('O.E. Ltd',), ('Ole Group',), ('Select ',), ('Winthrop ',), ('Sundial ',), (\"Burt's Corp\",), ('3LAB, Ltd',), ('Niconovum Corp',), ('Mylan Corp',), ('Nipro ',), ('AuroMedics Corp',), ('OUR Ltd',), ('Llorens Ltd',), ('ETUDE Ltd',), ('Medline ',), ('Eminence Corp',), ('Apollo Ltd',), ('New Ltd',), ('Uriel Group',), ('S.S.S. Group',), ('Exact-Rx, Corp',), ('Procter Corp',), ('Trigen ',), ('PEDIFIX, Corp',), ('Prasco Group',), ('Pure Group',), ('Amylin Group',), ('Avon Corp',), ('21st Ltd',))", "rowcount": 50, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected COMPARISON, expecting ')' or ',' in: \"select distinct iif(count(t2.\"CustomerID\") >\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 229, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'customers'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 230, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((30,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'warehousecode' unknown\n", "exec_able": false}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 232, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select distinct t from ( select case when \"_CustomerID\" = 11 then \"ProcuredDate\"\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 233, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((28,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 234, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.playerid'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 235, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Chauncey', 'Ray', 'Billups', 27))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.firstname'\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 237, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.11245,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IS, expecting ')' or ',' in: \"select cast(sum((iif(t2.steals is\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 238, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 239, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((44.827587,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum((iif(t2.\"GenreType\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 240, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0, 0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0, 0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 1, "FN": 0}
{"sql_id": 241, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 242, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'date' unknown\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 243, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((21.428572,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.act'\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 244, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Pericles, Prince of Tyre',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Pericles, Prince of Tyre',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 245, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Venus and Adonis.',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 0}
{"sql_id": 246, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t4.\"CharName\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 247, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('f',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected END, expecting SCOLON in: \"select \"teacher_ny_teaching_fellow\" end\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 248, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('DS Yamamura Misa Suspense: Maiko Kogiku - Kisha Katherine - Sougiya Isa Akashi - Koto ni Maru Hana Sanrin: Kyoto Satujin Jinken File',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 249, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Proceedings of the International IFIP-IEEE Conference on Broadband Communications, Global Infrastructure for the Information Age',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 250, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female White students',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \n!    case\n!        when sum(case when t2.gender = 'F' then t2.grad_150 els\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 251, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((128, 16))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected CURRENT in: \"select count(t1.\"business_id\") as \"COUNT(T1.\\\"business_id\\\")\", extract(year from\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 253, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 254, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Decimal (6A) doesn't have format (18.0)\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Decimal (6A) doesn't have format (18.0)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 255, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 256, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 257, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 259, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select \"T2\".\"title\" from \"Award\" as \"T1\" inner join \"Episode\" as \"T2\" on \"T1\".\"e\"\n!42000!syntax error, unexpected FROM in: \"from\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.year'\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 260, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Richard Gasparian',), ('Tom Mazzocco',), ('Derek Casari',), ('Bill Higley',), ('Michael Miller',), ('Eric Loudon',), ('Heliodoro Salvatierra',), ('Martin Alvarez',), ('Jason Bikowski',), ('Esther H. Lee',), ('William Bemiller',), ('Richard K. Chung',), ('Kent Rice',), ('Michael Wolf',), ('Scott D. Greenberg',), ('Tom Klein',), ('Amanda Byrnes',), ('Ashley Brooke Cooper',), ('Michael G. Mahan',), ('Laurie Biernacki',), ('Rick Polizzi',), ('Ray Miceli',), ('Will Anderson',), ('Angela Wixtrom',), ('Brooks Stonestreet',), ('Nikki Isordia',), ('Desiree E. Craig',), ('Deanna Asato',), ('Stephenie Moffatt',), ('Elizabeth Ableson',), ('Trista H. Navarro',), ('Larry Smith',), ('Lisa S. Cervantes',), ('Mike Battle',), ('Sergio Guerra',), ('Colin Contreary',), ('Lisa Walder',), ('N. Vyolet Diaz',), ('Alexander Duke',), ('Felicia Nalivansky-Caplan',), ('Dean Scammahorn',), ('Debbie Peterson',), ('Peter Gomez',), ('Kurtis Kunsak',), ('Jesse D. Miller',), ('Andrea Schell',), ('Karolina Waclawiak',), ('Lauren Biller',), ('Matt Marshall',), ('Michael D. Mitchell',), ('Michael Nobori',), ('Mindi Lee',), ('Lance Wilder',), ('Lynna Blankenship',), ('T.J. Kim',), ('John Liu',), ('John Pattison',), ('Larry Miravalles',), ('Sam Ho',), ('Eric S. Keyes',), ('Kevin M. Newman',), ('Kevin N. Moore',), ('Matt Groening',), ('Sam Simon',), ('Caroline Cruikshank',), ('Christianna Lang Daley',), ('David Salvador',), ('Debbie Mahan',), ('Eric Koenig',), ('Erick T. Tran',), ('Greg Checketts',), ('Jeff Johnson',), ('Liz Climo',), ('Maeve McGrath',), ('Mark Ervin',), ('Mary Orario-Natale',), ('Matthew Herbert',), ('Sooan Kim',), ('Viorel Voronca',), ('Ed Ghertner',), ('Bill Odenkirk',), ('J. Stewart Burns',), ('Joel H. Cohen',), ('John Frink',), ('Kevin Curran',), ('Marc Wilmore',), ('Michael Price',), ('Rob LaZebnik',), ('Ron Hauge',), ('Karen Bauer',), ('Anne Legge',), ('Chris Bolden',), ('Eli Balser',), ('Alf Clausen',), ('Danny Elfman',), ('Dell Hake',), ('Brian Kelley',), ('Carolyn Omine',), ('David Silverman',), ('Don Payne',), ('James L. Brooks',), ('Bobby Mackston',), ('Norm MacLeod',), ('Terry Greene',), ('Steve Mills',), ('Steven Dean Moore',), ('Rosanna Lyons',), ('Charles McCaskill',), ('Al Jean',), ('Robyn Anderson',), ('Sally Stevens',), ('Chris Ledesma',), ('Joe Zimmerman',), ('Rick Riccio',), ('Steven L. Smith',), ('Victor Pesavento',), ('Tom Boyd',), ('Scott Clausen',), ('Ian Maxtone-Graham',), ('Matt Selman',), ('Tim Long',), ('Michael Bridge',), ('Don Barrozo',), ('Heejin Kim',), ('Mike Scully',), ('Richard Raynis',), ('Richard Sakai',), ('Tom Gammill',), ('Ronny Cox',), ('Jefferson R. Weekley',), ('John Krause',), ('Richard Hinds Jr.',), ('Alan Decker',), ('Bonita Pietila',), ('Utit Choomuang',), ('Nelson Shin',), ('Brian J. Kaufman',), ('Joe Saunders',), ('Dominique Braud',), ('Dan Greaney',), ('Daniel Chun',), ('David Mirkin',), ('Denise Sirkot',), ('Max Pross',), ('Mike Reiss',), ('Glen Wuthrich',), ('John Mathot',), ('Scott Alberts',), ('Jim Reardon',), ('Rudi Berden',), ('Mike B. Anderson',), ('Jeff Westbrook',), ('Larina Jean Adamson',), ('Matt Warburton',), ('Mark Linden',), ('Drew McPhail',), ('Louise Jaffe',), ('Robert Nichols II',), ('Tim Lauber',), ('Valentina Garza',), ('Dan Castellaneta',), ('Pamela Hayden',), ('Nancy Cartwright',), ('Harry Shearer',), ('Yeardley Smith',), ('Tress MacNeille',), ('Julie Kavner',), ('Felix Sanchez',), ('Larry Field',), ('Laurie Wetzler',), ('Denise Donatelli',), ('Hank Azaria',), ('Shohreh Aghdashloo',), ('Russi Taylor',), ('Karl Wiedergott',), ('Adam Kuhlman',), ('Jack Dyer',), ('Ray Claffey',), ('Robert Ingram',), ('Sam Im',), ('Billy Theriot',), ('John W. Hyde',), ('Carlton Batten',), ('Patrick Buchanan',), ('Scott Brutz',), ('Chris Clements',), ('Matthew Schofield',), ('Oscar Cervantes',), ('Charles Ragins',), ('Paul Wee',), (\"Shannon O'Connor\",), ('Gabriel DeFrancesco',), ('Alfred Cruz',), ('Daniel Chiu',), ('Ian Wilcox',), ('Jabu Henderson',), ('Mike Pettengill',), ('Rene Vega',), ('Steve Pilapil',), ('Adam Klein',), ('William L. Arance',), ('Joe Wack',), ('Alex Que',), ('Alex Ruiz',), ('Ben Lane',), ('Chance Raspberry',), ('Cynthia Jill French',), ('Dane Romley',), ('Dante Fabiero',), ('Eddie Rosas',), ('Edwin E. Aguilar',), ('Eric Lara',), ('Ernie Elicanal',), ('Fill Marc Sagadraca',), ('Grant Lee',), ('Istvan Majoros',), ('J.C. Wegman',), ('Jason D. Warnesky',), ('Jay Robinson',), ('Jeanne Erickson',), ('Jennie Hoffer',), ('Jennifer Moeller',), ('John Achenbach',), ('Jonathan Gebhart',), ('Josh Taback',), ('Julia Fitzmaurice',), ('Jung A. Yoo',), ('Lena Podesta',), ('Luis Escobar',), ('Manny DeGuzman',), ('Mike Morris',), ('Norman P. Auble',), ('Orlando Baeza',), ('Oscar Pangestu',), ('Richard Manginsay',), ('Rick Salonga',), ('Ryan Rivette',), ('Silvia Pompei',), ('Tom Madrid Jr.',), ('Tricia Benson',), ('Victor E. Almaguer',), ('Yelena Geodakyan',), ('Young Yoo',), ('Paul Newman',), ('Bob Anderson',), ('Matthew Faughnan',), ('Michael Polcino',), ('Nancy Kruse',), ('Raymond S. Persi',), ('Jennifer Dolce',), ('Cameron Porter',), ('Jarod Daetwiler',), ('Javier Pineda',), ('John Berman',), ('Leasa Epps-Eisele',), ('Merl Reagle',), ('Myung Nam Chang',))", "rowcount": 257, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected BIGINT in: \"select distinct t2.\"person\" from \"Episode\" as t1 inner join \"Credit\" as t2 on t1\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 261, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((52,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.year'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 262, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 263, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Outstanding Voice-Over Performance', 'Dan Castellaneta'), ('Best Animated Series', None), ('Best Voice-Over Performance', 'Hank Azaria'), ('Favorite Animated Comedy', None))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 264, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"sql\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 265, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Treehouse of Horror XIX', 'https://m.media-amazon.com/images/M/MV5BMTgzOTYyNTc2OF5BMl5BanBnXkFtZTgwNjc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Best Directing in an Animated Television Production or Short Form', 'Bob Anderson'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Outstanding Writing in a Comedy Series', 'Marc Wilmore'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('Homer and Lisa Exchange Cross Words', 'https://m.media-amazon.com/images/M/MV5BMTQ2MzcyOTMyMl5BMl5BanBnXkFtZTgwNDc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Animation', 'Tim Long'))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Treehouse of Horror XIX', 'https://m.media-amazon.com/images/M/MV5BMTgzOTYyNTc2OF5BMl5BanBnXkFtZTgwNjc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Best Directing in an Animated Television Production or Short Form', 'Bob Anderson'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Outstanding Writing in a Comedy Series', 'Marc Wilmore'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('Homer and Lisa Exchange Cross Words', 'https://m.media-amazon.com/images/M/MV5BMTQ2MzcyOTMyMl5BMl5BanBnXkFtZTgwNDc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Animation', 'Tim Long'))", "rowcount": 6, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 266, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Paul Newman', 'Shaker Heights', 'dedicated to the memory of', 97))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 268, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'award'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 269, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Dan Castellaneta',), ('Paul Newman',), ('Marc Wilmore',), ('J. Stewart Burns',), ('Stephanie Gillis',), ('James L. Brooks',), ('Matt Groening',), ('Ian Maxtone-Graham',), ('Kevin Curran',), ('Hank Azaria',), ('Michael Price',), ('Harry Shearer',), ('John Frink',), ('Don Payne',), ('Al Jean',), ('Tim Long',), ('Alf Clausen',), ('Billy Kimball',), ('Bobby Mackston',), ('Colm Meaney',), ('Larina Jean Adamson',), ('Nancy Kruse',), ('Eric S. Keyes',), ('Lance Kramer',), ('Richard Sakai',), ('Chuck Sheetz',), ('Karl Wiedergott',), ('Pamela Hayden',), ('Max Pross',), ('Jefferson R. Weekley',), ('Patty Shinagawa',), ('Lynna Blankenship',), ('Mike Reiss',), ('Jeff Topping',), ('Carolyn Omine',), ('Sooan Kim',), ('Michael Polcino',), ('Joe Montana',), ('Jodie Foster',), ('Sam Simon',), ('Robert Forster',), ('Russi Taylor',), ('Brian Grazer',), ('Mike Scully',), ('Maurice LaMarche',), ('Marv Albert',), ('Maggie Roswell',), ('Ed Begley Jr.',), ('Nancy Cartwright',), ('Tress MacNeille',), ('Robert Nichols II',), ('Tom Mazzocco',), ('Kelsey Grammer',), ('Danny Elfman',), ('Joe Mantegna',), ('Julie Kavner',), ('Jeff Bezos',), ('Marcia Wallace',), ('Denis Leary',), ('Mark Cuban',), ('Dell Hake',), ('Mark Kirkland',), ('David Silverman',), ('Chris Ledesma',), ('Julia Louis-Dreyfus',), ('William Bemiller',), ('Richard Raynis',), ('Dean Scammahorn',), ('Glen Wuthrich',), ('Merl Reagle',), ('Kipp Lennon',), ('Don Vanderbeek',), ('John Mathot',), ('Denise Sirkot',), ('Bill Odenkirk',), ('Dan Greaney',), ('Matthew Nastuk',), ('Orlando Gumatay',), ('David Mirkin',), ('Karen Bauer',), ('John Achenbach',), ('Anna Pagan',), ('Sally Stevens',), ('Alex Dilts',), ('Scott Thompson',), ('Rob LaZebnik',), ('John Berman',), ('Yeardley Smith',), ('Shohreh Aghdashloo',), ('Tom Gammill',), ('Bonita Pietila',), ('Will Shortz',), ('Grant Lee',))", "rowcount": 93, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 270, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 271, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Billy Kimball',), ('Ian Maxtone-Graham',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Billy Kimball',), ('Ian Maxtone-Graham',))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 272, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E13',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 273, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Jodie Foster',), ('Rob LaZebnik',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 274, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('S20-E1',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('S20-E1',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 275, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Wedding for Disaster',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Wedding for Disaster',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 276, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.878788,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'person'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 277, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_part(char,clob)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 278, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('MyPods and Boomsticks',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.year'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 279, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((61,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 280, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 281, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('1930s to 2020s',), ('erotic bakery',), ('cake',), ('bullet',), (\"st. patrick's day\",), ('riot',), ('bounty hunter',), ('bail bondsman',), ('2d animation',), ('twin',), ('slow motion scene',), ('punched in the face',), ('cigar smoking',), ('phallus shaped cake',), ('reference to the fantastic four',), ('taser',), ('female slaps male',), ('wet cement',), ('wanted poster',), ('twin sister',), ('suffocation',), ('shot in the arm',), ('shillelagh',), ('secret from husband',), ('school principal',), ('ricochet',), ('prison',), ('prayer',), ('police arrest',), ('plastic bag',), ('partnership',), ('parade float',), ('montage with pop song',), (\"man in woman's clothes\",), ('man in drag',), ('male in female clothes',), ('male in drag',), ('male bonding',), ('leprechaun',), ('irish joke',), ('gun',), ('gratitude',), ('flashback',), ('fistfight',), ('fantastic four spoof',), ('face slap',), ('construction site',), ('concrete',), ('coffee',), ('catholic priest',), ('catholic joke',), ('buddy cop spoof',), ('bleeding arm',), ('biblical reference',), ('biblical quote',), ('bulletproof glass',), ('1930s to 2020s',), ('cell phone',), ('machu picchu',), ('2d animation',), ('tracking device',), ('peru',), ('overprotective mother',), ('pun in title',), ('lottery',), ('lottery ticket',), ('1930s to 2020s',), ('bad behavior',), ('party',), ('identity swap',), ('2d animation',), ('rich kid',), ('lottery winner',), ('halloween episode',), ('reference to the great pumpkin',), ('reference to barack obama',), ('reference to john mccain',), ('reference to dwight d. eisenhower',), ('year 2008',), ('reference to john wayne',), ('reference to jimmy stewart',), ('reference to prince',), ('reference to golda meir',), ('reference to george clooney',), ('reference to kate winslet',), ('reference to edward g. robinson',), ('reference to rip taylor',), ('reference to charlton heston',), ('reference to george washington',), ('reference to abraham lincoln',), ('reference to pontius pilate',), ('1930s to 2020s',), ('transformer',), ('christmas',), ('halloween',), ('alien',), ('halloween party',), ('princess costume',), ('skeleton costume',), ('frankenstein costume',), ('ghost costume',), ('pumpkin patch',), ('witch costume',), ('halloween costume',), ('reference to charlie brown',), ('dead celebrity',), ('celebrity death',), ('reference to mad men',), ('transformer toy',), ('toy car',), ('voting booth',), ('halloween spoof',), ('giant pumpkin',), ('2d animation',), ('roman numeral in title',), ('turkey the bird',), ('body in chipper',), ('advertising campaign',), (\"jack o'lantern\",), ('premarital sex',), ('body in a trunk',), ('1930s to 2020s',), ('steamer trunk',), ('limbo dancing',), ('bear trap',), ('1930s to 2020s',), ('crossword puzzle',), ('2d animation',), ('lemonade stand',), ('getting dumped',), ('gay bar',), ('disco',), ('1930s to 2020s',), ('time machine',), ('2d animation',), ('ipod',), ('arab stereotype',), ('arab culture',), ('1930s to 2020s',), ('stadium',), ('poker game',), ('greenhouse',), ('town meeting',), ('demolition',), ('construction site',), ('secret handshake',), ('bagpipes',), ('dare',), ('prank',), ('2d animation',), ('surrealism',), ('skinny dipping',), ('wetting pants',), ('male bonding',), ('eskimo indian',), ('colony collapse disorder',), ('billionaire',), ('beekeeper',), ('beehive',), ('killer bee',), ('boston celtics',))", "rowcount": 161, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('1930s to 2020s',), ('erotic bakery',), ('cake',), ('bullet',), (\"st. patrick's day\",), ('riot',), ('bounty hunter',), ('bail bondsman',), ('2d animation',), ('twin',), ('slow motion scene',), ('punched in the face',), ('cigar smoking',), ('phallus shaped cake',), ('reference to the fantastic four',), ('taser',), ('female slaps male',), ('wet cement',), ('wanted poster',), ('twin sister',), ('suffocation',), ('shot in the arm',), ('shillelagh',), ('secret from husband',), ('school principal',), ('ricochet',), ('prison',), ('prayer',), ('police arrest',), ('plastic bag',), ('partnership',), ('parade float',), ('montage with pop song',), (\"man in woman's clothes\",), ('man in drag',), ('male in female clothes',), ('male in drag',), ('male bonding',), ('leprechaun',), ('irish joke',), ('gun',), ('gratitude',), ('flashback',), ('fistfight',), ('fantastic four spoof',), ('face slap',), ('construction site',), ('concrete',), ('coffee',), ('catholic priest',), ('catholic joke',), ('buddy cop spoof',), ('bleeding arm',), ('biblical reference',), ('biblical quote',), ('bulletproof glass',), ('1930s to 2020s',), ('cell phone',), ('machu picchu',), ('2d animation',), ('tracking device',), ('peru',), ('overprotective mother',), ('pun in title',), ('lottery',), ('lottery ticket',), ('1930s to 2020s',), ('bad behavior',), ('party',), ('identity swap',), ('2d animation',), ('rich kid',), ('lottery winner',), ('halloween episode',), ('reference to the great pumpkin',), ('reference to barack obama',), ('reference to john mccain',), ('reference to dwight d. eisenhower',), ('year 2008',), ('reference to john wayne',), ('reference to jimmy stewart',), ('reference to prince',), ('reference to golda meir',), ('reference to george clooney',), ('reference to kate winslet',), ('reference to edward g. robinson',), ('reference to rip taylor',), ('reference to charlton heston',), ('reference to george washington',), ('reference to abraham lincoln',), ('reference to pontius pilate',), ('1930s to 2020s',), ('transformer',), ('christmas',), ('halloween',), ('alien',), ('halloween party',), ('princess costume',), ('skeleton costume',), ('frankenstein costume',), ('ghost costume',), ('pumpkin patch',), ('witch costume',), ('halloween costume',), ('reference to charlie brown',), ('dead celebrity',), ('celebrity death',), ('reference to mad men',), ('transformer toy',), ('toy car',), ('voting booth',), ('halloween spoof',), ('giant pumpkin',), ('2d animation',), ('roman numeral in title',), ('turkey the bird',), ('body in chipper',), ('advertising campaign',), (\"jack o'lantern\",), ('premarital sex',), ('body in a trunk',), ('1930s to 2020s',), ('steamer trunk',), ('limbo dancing',), ('bear trap',), ('1930s to 2020s',), ('crossword puzzle',), ('2d animation',), ('lemonade stand',), ('getting dumped',), ('gay bar',), ('disco',), ('1930s to 2020s',), ('time machine',), ('2d animation',), ('ipod',), ('arab stereotype',), ('arab culture',), ('1930s to 2020s',), ('stadium',), ('poker game',), ('greenhouse',), ('town meeting',), ('demolition',), ('construction site',), ('secret handshake',), ('bagpipes',), ('dare',), ('prank',), ('2d animation',), ('surrealism',), ('skinny dipping',), ('wetting pants',), ('male bonding',), ('eskimo indian',), ('colony collapse disorder',), ('billionaire',), ('beekeeper',), ('beehive',), ('killer bee',), ('boston celtics',))", "rowcount": 161, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 282, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 283, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select count(\"award_id\") from \"Award\" where substring(cast(\"_year\" as varchar)\"\n!42000!syntax error, unexpected FROM in: \"from\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'award'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 284, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('S20-E1',), ('S20-E1',), ('S20-E1',), ('S20-E1',), ('S20-E2',), ('S20-E2',), ('S20-E2',), ('S20-E2',), ('S20-E3',), ('S20-E3',), ('S20-E3',), ('S20-E3',), ('S20-E4',), ('S20-E4',), ('S20-E4',), ('S20-E4',), ('S20-E5',), ('S20-E5',), ('S20-E5',), ('S20-E5',), ('S20-E6',), ('S20-E6',), ('S20-E6',), ('S20-E6',), ('S20-E7',), ('S20-E7',), ('S20-E7',), ('S20-E7',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E5',), ('S20-E3',), ('S20-E8',))", "rowcount": 36, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('S20-E1',), ('S20-E1',), ('S20-E1',), ('S20-E1',), ('S20-E2',), ('S20-E2',), ('S20-E2',), ('S20-E2',), ('S20-E3',), ('S20-E3',), ('S20-E3',), ('S20-E3',), ('S20-E4',), ('S20-E4',), ('S20-E4',), ('S20-E4',), ('S20-E5',), ('S20-E5',), ('S20-E5',), ('S20-E5',), ('S20-E6',), ('S20-E6',), ('S20-E6',), ('S20-E6',), ('S20-E7',), ('S20-E7',), ('S20-E7',), ('S20-E7',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E5',), ('S20-E3',), ('S20-E8',))", "rowcount": 36, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 285, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5.9,), (11.6,), (13.5,), (22.0,), (23.2,), (6.9,), (15.1,), (15.4,), (17.4,), (29.0,), (5.2,), (11.6,), (14.4,), (19.1,), (24.7,), (2.1,), (2.6,), (3.7,), (6.5,), (0.7,), (2.2,), (2.6,), (4.6,), (2.4,), (2.9,), (4.4,), (6.0,), (8.9,), (6.1,), (9.2,), (15.4,), (15.4,), (2.9,), (2.6,), (5.9,), (6.0,))", "rowcount": 36, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5.9,), (11.6,), (13.5,), (22.0,), (23.2,), (6.9,), (15.1,), (15.4,), (17.4,), (29.0,), (5.2,), (11.6,), (14.4,), (19.1,), (24.7,), (2.1,), (2.6,), (3.7,), (6.5,), (0.7,), (2.2,), (2.6,), (4.6,), (2.4,), (2.9,), (4.4,), (6.0,), (8.9,), (6.1,), (9.2,), (15.4,), (15.4,), (2.9,), (2.6,), (5.9,), (6.0,))", "rowcount": 36, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 286, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((9,), (6,), (8,), (10,), (7,), (9,), (8,), (10,), (6,), (7,), (9,), (10,), (6,), (8,), (7,), (9,), (6,), (8,), (10,), (7,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (5,), (5,), (5,), (5,), (10,), (6,), (6,), (6,), (2,), (9,))", "rowcount": 46, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((9,), (6,), (8,), (10,), (7,), (9,), (8,), (10,), (6,), (7,), (9,), (10,), (6,), (8,), (7,), (9,), (6,), (8,), (10,), (7,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (5,), (5,), (5,), (5,), (10,), (6,), (6,), (6,), (2,), (9,))", "rowcount": 46, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 287, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 288, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((54.166668,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 289, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16.363636,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (:)\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 290, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IS, expecting ')' or ',' in: \"select iif(t2.\"name\" is\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 291, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((102.12766,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((102.12765957446808,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 292, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((37.7551,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((37.755102040816325,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 293, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 294, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 295, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((52.666668, 47.333332))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((52.666668, 47.333332))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 296, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"here\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 297, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1.8011204,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1.8011204481792717,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 298, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female', 'uci'), ('female', 'ucsd'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IS, expecting ')' or ',' in: \"select iif(t2.\"name\" is\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 299, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((50.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IS, expecting ')' or ',' in: \"select cast(sum(iif(t2.\"name\" is\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 300, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('female',), ('female',), ('female',), ('female',), ('female',), ('female',), ('female',))", "rowcount": 125, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IS, expecting ')' or ',' in: \"select iif(t2.\"name\" is\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 301, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 0}
{"sql_id": 302, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 303, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-7.0, 'NO'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 5, "FP": 5, "FN": 0}
{"sql_id": 304, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((12.244898,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12.244898,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 305, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1500,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.month'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 306, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('ucla', 'female'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 308, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 309, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 1}
{"sql_id": 311, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"Ev'rybody Wants to Be a Cat\",))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected FROM, expecting ')' or ',' in: \"select t2.\"song\" from \"movies_total_gross\" as t1 inner join \"characters\" as t2 o\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 2}
{"sql_id": 312, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('101 Dalmatians',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('101 Dalmatians',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 313, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'movie_title' ambiguous\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 314, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'mpaa_rating' unknown\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 315, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 316, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Barry Cook',), ('Chris Buck',), ('Gary Trousdale',), ('Mark Dindal',), ('Mike Gabriel',), ('Ralph Zondag',), ('Roger Allers',), ('Ron Clements',), ('Wolfgang Reitherman',))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'instr(clob,char)'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 317, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 318, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('The Lion King',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('The Lion King',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 319, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 321, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Moana', 'Adventure'), ('A Beautiful Planet', 'Documentary'), ('Alice Through the Looking Glass', 'Adventure'), ('Captain America: Civil War', 'Action'), ('Doctor Strange', 'Adventure'), ('Finding Dory', 'Adventure'), ('Pete\u2019s Dragon', 'Adventure'), ('Queen of Katwe', 'Drama'), ('Rogue One: A Star Wars Story', 'Adventure'), ('The BFG', 'Adventure'), ('The Finest Hours', 'Thriller/Suspense'), ('The Jungle Book', 'Adventure'), ('The Light Between Oceans', 'Drama'), ('Zootopia', 'Adventure'))", "rowcount": 14, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Moana', 'Adventure'), ('A Beautiful Planet', 'Documentary'), ('Alice Through the Looking Glass', 'Adventure'), ('Captain America: Civil War', 'Action'), ('Doctor Strange', 'Adventure'), ('Finding Dory', 'Adventure'), ('Pete\u2019s Dragon', 'Adventure'), ('Queen of Katwe', 'Drama'), ('Rogue One: A Star Wars Story', 'Adventure'), ('The BFG', 'Adventure'), ('The Finest Hours', 'Thriller/Suspense'), ('The Jungle Book', 'Adventure'), ('The Light Between Oceans', 'Drama'), ('Zootopia', 'Adventure'))", "rowcount": 14, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 1}
{"sql_id": 323, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('The Many Adventures of Winnie the Pooh', 'Winnie the Pooh', 'Winnie the Pooh'), ('The Rescuers', 'Bernard and Miss Bianca', 'The Journey'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('The Many Adventures of Winnie the Pooh', 'Winnie the Pooh', 'Winnie the Pooh'), ('The Rescuers', 'Bernard and Miss Bianca', 'The Journey'))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 324, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "22012!division by zero.\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'voice-actors'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 325, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Roger Allers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Roger Allers',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 326, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 328, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 4, "FN": 4}
{"sql_id": 329, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 1}
{"sql_id": 330, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Saludos Amigos',), ('Make Mine Music',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Saludos Amigos',), ('Make Mine Music',))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 1}
{"sql_id": 331, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Ron Clements',), ('Barry Cook',), ('Chris Buck',), ('Gary Trousdale',), ('Mike Gabriel',), ('Ralph Zondag',), ('Roger Allers',), ('Wolfgang Reitherman',), ('David Hand',), ('Chris Sanders',), ('Mark Dindal',), ('Chris Williams',), ('Clyde Geronimi',), ('Nathan Greno',), ('Rich Moore',), ('Don Hall',), ('Wilfred Jackson',), ('Byron Howard',))", "rowcount": 18, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Ron Clements',), ('Barry Cook',), ('Chris Buck',), ('Gary Trousdale',), ('Mike Gabriel',), ('Ralph Zondag',), ('Roger Allers',), ('Wolfgang Reitherman',), ('David Hand',), ('Chris Sanders',), ('Mark Dindal',), ('Chris Williams',), ('Clyde Geronimi',), ('Nathan Greno',), ('Rich Moore',), ('Don Hall',), ('Wilfred Jackson',), ('Byron Howard',))", "rowcount": 18, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 332, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Circle of Life',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Circle of Life',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 333, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('David Hand',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('David Hand',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 4, "FN": 2}
{"sql_id": 334, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((66.666664,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22018!conversion of string '22,182,353' to type dbl failed.\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 335, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 1}
{"sql_id": 336, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 1}
{"sql_id": 337, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Clayton',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 0}
{"sql_id": 338, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('The Avengers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('The Avengers',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 339, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Pinocchio',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Pinocchio',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 340, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Wolfgang Reitherman',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Wolfgang Reitherman',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 342, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select sum(cast(replace(trim(\"inflation_adjusted_gross\", '$'), ',', '') as real)\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(' in: \"select sum(cast((replace(trim(inflation_adjusted_gross, '$'), ',', '')) as float\"\n", "exec_able": false}}, "TP": 6, "FP": 4, "FN": 2}
{"sql_id": 344, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((15.949078,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected SOME in: \"some\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 345, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((66.666664,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((66.66666666666667,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 346, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 348, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-95,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-95,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 349, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select cast(sum(case when t2.\"party\" = 'Independent' then 1 else 0 end) as real)\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 350, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 351, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((92.03057,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'current-terms'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 352, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 353, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Sanford D. Bishop, Jr.',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Sanford D. Bishop, Jr.',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 354, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 355, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Sherrod Brown',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected END in: \"select case when sum(cast(extract(year from t2.end\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 356, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 357, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected TRANSACTION in: \"select count(t1.customerid) from customers as t1 inner join transaction\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 358, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_format(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 359, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_format(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 360, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.customerid'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 361, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_part(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 363, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.salespersonid'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 364, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((134,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((134,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 365, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('YES',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 366, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((19073,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((19073,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 367, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Black',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.productid'\n", "exec_able": false}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 368, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 369, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.278838,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 370, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 371, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 372, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Strawberries',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), ('Cream of Cauliflower Soup',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Raw Oysters',), ('Stewed tomatoes',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('Rockaways oysters',), ('Hafergrutze',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Grape fruit',), ('Oranges',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('Rissoles a la Merrill',), ('Lammkoteletten nach Villeroi',), ('SALTED ALMONDS',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Vegetable Soup',), ('Baked fish, wine sauce',), ('Pur\u00e9e of split peas aux croutons',), ('Consomm\u00e9 in cup',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Hot ribs of beef',), ('Doucette salad',), ('Stewed tomatoes',), ('New beets',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Old fashioned rice pudding',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Oranges',), ('Strawberries',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Grape fruit',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Stewed prunes',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges',), ('Oranges sliced',), ('Large pot of coffee',), ('Cup of coffee (served in small pot)',), ('Large pot of Oolong tea',), ('Pot of chocolate',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Sliced Bananas and Cream',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('French rolls',), ('Milk rolls',), ('Celery',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Mohren Suppe mit Sago',), ('Oranges',), ('Food',), ('Shreaded Wheat',), ('Clam cocktail',), ('Oyster cocktail',), ('Sardines',), ('Little Neck clams',), ('Stuffed olives',), ('Lalla Rookh Sorbet',), ('Celery',), ('Malaga grapes',), ('Pears',), ('Martineaus',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('Strawberry',), ('Oyster Bay asparagus',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Fruit',), ('Plain Omelette',), ('Canape, Martha',), ('Fruit',), ('Quaker Oats',), ('Cracked Wheat',), ('Puree of beans',), ('Fruits in Season',), ('Fried Flounders',), ('Oatmeal Porridge',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Bouillon in cup',), ('Queen olives',), ('Radishes',), ('Chow chow',), ('Panfish, Meuniere, German fried potatoes',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Philadelphia Cream Cheese',), ('Assorted cakes',), ('Scollops en caisse, Supreme',), ('Irish stew',), ('Marrow on toast, Bordelaise',), ('Lobster salad',), ('Potato salad',), ('Chicken salad',), ('Mashed potatoes',), ('Coffee',), ('Spinach with egg',), ('Boiled potatoes',), ('Baba au rhum',), ('Hot buns',), ('Tongue',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Stewed prunes',), ('Boiled rice',), ('Roast beef',), ('Sliced Bananas',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Sardines',), ('Chicken',), ('Apple Sauce',), ('Tea',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Coffee',), ('Milk',), ('Rolls',), ('Griddle cakes',), ('Baked Potatoes',), ('Porterhouse Steak',), ('Pommes de Terre a la Creme',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Onions plain or fried',), ('Sandwiches of all Kinds',), ('Small Steak',), ('Hamburger Steak',), ('Veal Chops',), ('Mutton Chops',), ('Pork Chops',), ('Ham & Eggs',), ('Bacon & Eggs',), ('Fried Liver',), ('German Pancake',), ('Omelettes',), ('Oysters & Clams',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters stewed',), ('Oysters box stew',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Fruit',), ('Oat Meal',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Fish cakes',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Griddle cakes',), ('Hominy',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Fish cakes',), ('Sirloin Steak',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Lyonnaise Potatoes',), ('Griddle cakes',), ('Marmalade',), ('Coffee',), ('Tomato Soup',), ('Baked Weakfish',), ('Oysters, Raw on the shell',), ('Half and Half Scallops & Oysters',), ('Oranges',), ('Rolled Oats',), ('Broiled Mullet',), ('Sirloin Steak with Mushrooms',), ('Pork Chops Piquante Sauce',), ('Broiled Chicken on Toast',), ('Calfs Liver and Onions',), ('Broiled Kidney with Bacon',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Waffles',), ('Split Rolls',), ('Hot Cakes',), ('Tea',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Oranges',), ('Oatmeal Porridge',), ('Smelts Meuniere',), ('Findon Haddock',), ('Oatmeal Porridge',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Cold Half Chicken and Ham ',), ('Cold Veal and Ham Pie',), ('Cold Roast Lamb',), ('Oranges',), ('Fried Flounder',), ('Grillirte Kuken',), ('Hoot Mon Mush',), ('Fillet Steaks aux Champignon',), ('Fruit',), ('Strawberries',), ('broiled shad',), ('Oysters, Milk Stew',), ('Oysters, Boston stew',), ('Oysters, Box Stew',), ('Oysters, Raw on the Half Shell',), ('Coffee',), ('Quaker Oats',), ('Boiled rice',), ('Smelts, Tartare sauce',), ('Findon Haddock',), ('Beef Steak, Saratoga chips',), ('Calves Liver & Bacon',), ('Sausage',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Sliced Pineapples',), ('Oatmeal Porridge',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Broiled Ham',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Cold Steak Pie',), ('Cold Mutton',), ('Cold Roast Beef',), ('Cold German Sausage',), ('Oysters, Boston Box Stew',), ('Oysters, Fry',), ('Oysters, Fry with Bacon',), ('Oatmeal',), ('Oyster Omelette',), ('Stewed Tripe',), ('Pork Sausage and Lyonnaise Potatoes',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Mock turtle soup',), ('Consomme Benoiton',), ('Filet Steaks aux Champignon',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Consomme San Remo',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Clear green turtle soup',), ('Corned Beef Hash',), ('Consomme Maceo',), ('Boiled rice',), ('Puree Mongol',), ('Broiled Rashers of Ham',), ('Consomme Printanier',), ('French fried potatoes',), ('Chicken Mulligatawny',), ('Split Rolls',), ('Oysters, Blue Point Stew',), ('French bread',), ('Corn bread',), ('Oysters, Crumb Fry',), ('English Beef soup',), ('Beef Stew',), ('Oysters, Blue Point Fry',), ('Filet of sole a la Horly',), ('broiled shad',), ('Diamond back terrapin',), ('Fruit',), ('Oat Meal',), ('Boiled rice',), ('Plain Omelette',), ('Fried Eggs',), ('Fried Plaice - Meuniere',), ('Kippered Herring',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Sausage & Mashed Potatoes',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fruits in Season',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Boiled potatoes',), ('Fried fish',), ('Egg, to order',), ('Diamond stew',), ('Jam',), ('Marmalade',), ('Tea',), ('Stewed prunes',), ('Clam Fritters',), ('Boiled Salt Mackerel',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Pork Chops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('English Mutton Chops',), ('Broiled Spring Chicken',), ('Sirloin Steak',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Plain Omelet',), ('Fried Indian Mush',), ('Baked Potatoes',), ('Saratoga Chips',), ('French fried potatoes',), ('Lyonnaise Potatoes',), ('Potatoes stewed in Cream',), ('Saute Potatoes',), ('Rye Bread',), ('French rolls',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn muffins',), ('Wheat Cakes, with Maple Syrup',), ('Coffee',), ('Tea',), ('Chocolate',), ('Cocoa',), ('Oatmeal Porridge',), ('Fruits in Season',), ('Corn Meal Mush',), ('Boiled',), ('Rolled Oats',), ('Scotch grouse en casserole',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Fruit',), ('Quaker Oats',), ('Scrambled Eggs',), ('Eggs au Beurre Noir',), ('Broiled Blue Fish',), ('Fish cakes',), ('Sirloin Steak, Fried French Chips',), ('Chicken Liver on Toast with Bacon',), ('Pork Chops, Sage & Onions',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Marmalade',), ('Coffee',), ('Salt Codfish, Spanish Style',), ('Marmalade',), ('Mashed potatoes',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Apples',), ('Passion Fruit',), ('Kippered Herrings',), ('Curried Pork and Rice',), ('Stewed Tripe with Cream sauce',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Chicken broth',), ('Consomme Macaroni',), ('Oat Meal',), ('Buckwheat Cakes',), ('Hard Boiled Egg',), ('Fruit',), ('Cream Cheese',), ('Plain Omelette',), ('Fried Eggs',), ('Hominy',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Kippered Herring',), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Fish cakes',), ('Apfelsinen',), ('Apfel',), ('Maisgries',), ('Hafergrutze',), ('Snowflakes',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Salt Codfish, Spanish Style',), ('Fruit',), ('Fillet Steads with Mushrooms',), ('Poached Eggs on Toast',), ('Curried Prawns and Rice, Bombay Duck',), ('Eggs au Beurre Noir',), ('Lamb Chops, Broiled Plain',), ('Whiting - Meuniere',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Fish cakes',), ('Sirloin Steak - Fried Onions',), ('Broiled Ham',), ('Grape fruit',), (\"Lambs' Liver Saute\",), ('Breakfast',), ('Chicken Liver on Toast with Bacon',), ('Tripe Fritters',), ('Jambon Grille',), ('Minced Veal a la Zingari',), ('Eggs to order',), ('Dried Hash',), ('Corned Beef Hash',), ('Mutton Chops - Saute Potatoes',), ('Calfs Liver + Bacon',), ('Boiled rice',), ('Cold Smoked Tongue and Ham',), ('Buckwheat Cakes',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Marmalade',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Coffee',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Broiled Fresh Mackerel',), ('English Muffins',), ('Salt Cod, Egg Sauce',), ('Cracked Wheat with Fresh Milk',), ('Rice Cakes',), ('Shad roe and bacon',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Marmalade',), ('Jam',), ('Smoked Schnapper Butter Sce',), ('Yarmouth Bloaters',), ('Tea',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Coffee',), ('Cocoa',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Fruits in Season',), ('Frizzled Breakfast Bacon (to order)',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Saute of Kidney',), ('Corned Beef Hash',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('Coffee',), ('Scrambled Eggs and bacon',), ('liver and bacon',), ('Oranges',), ('Apples',), ('Oatmeal',), ('Fillet de Boeuf a la Parisienne',), ('Fried Chicken a la Maryland',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Kippered Herrings',), ('Broiled Ham',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Strawberries',), ('Hominy',), ('Jam',), ('Boiled potatoes',), ('Pork Sausage and Lyonnaise Potatoes',), ('Baked Apple Dumpling, Hard Sauce',), (\"Potato a la Maitre d'Hotel\",), ('Tea',), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Oysters, Roast in Shell',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Asparagus Omelette ',), ('rice pudding',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Swiss Rolls',), ('Fruit in Season',), ('Charlotte Russe',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Jam',), ('Lettuce',), ('Cum-quats',), ('Raisin cake',), ('Tea',), ('Apples',), ('Orange',), ('Fillet Steak ',), ('Oranges',), ('Grape fruit',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Ham omelette',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('China Teas',), ('Coffee',), ('Broiled Salt Mackerel',), ('Corned Beef Hash',), ('Apples',), ('Stewed Tripe Spanish',), ('Germea',), ('Eggs to order',), ('Eggs to order',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Butter Cakes with Maple Syrup',), ('Marmalade',), ('Eggs to order',), ('Bananas',), ('Hot Rolls',), ('Coffee ',), ('Kraftsuppe, Prinzessin Art',), ('Cracked Wheat',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Boiled rice',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Liver & Bacon',), ('Blumenkohl, hollandische Sauce',), ('Stewed Tripe Spanish',), ('Beef Steak, fried onions',), ('Cotelettes de Veau, Sauce Tomate',), ('Gratinierter Eierkuchen nach Mornay',), ('Boiled eggs',), ('Split Rolls',), ('Veal Cuttlets Lyonnaise',), ('Entenbraten, Bordeaux Sauce',), ('Fried Potatoes',), ('Pork Sausages, Snowflake Potatoes',), ('Mutton Chops & Potato Chips',), ('Hot Rolls',), (\"Lambs' Liver with Bacon\",), ('Mirabellen',), ('Coffee',), ('Tripe, Spanish Style',), ('Citronen-Auflauf',), ('Boiled rice',), ('Liver & Bacon',), ('Cape Horn Hash',), ('Broiled Rashers of Ham',), ('Fruit in Season',), ('Breakfast Rolls',), ('Corn Meal Fritters',), ('Corn bread',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Dry Toast',), ('Boiled Potatos',), ('Pikelets',), ('Rolled Oats',), ('Fried Whiting',), ('Hot Rolls',), ('Flannel Cakes',), ('Marmalade',), ('Tea',), ('Jam',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Tea',), ('Coffee',), ('Fillet Steak Fried Potatoes',), ('Cocoa',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Bacon to order',), ('Breakfast Rolls',), ('Wheat Cakes',), ('Marmalade',), ('Coffee',), ('Beef Steak & onions',), ('Fried Bananas',), ('Egg to Order',), ('Beef Steak and Champignons',), ('Boiled potato',), ('Currant Buns',), ('Cold Ham',), ('Boiled Cod',), ('Waffle',), ('Marmalade',), ('Broiled Spring Chicken',), ('Fruit',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Tea',), ('Oatmeal Porridge',), ('Buckwheat Cakes',), ('Yarmouth Bloaters',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Broiled Ham',), ('Curried Chicken with Rice',), ('Two Eggs Boiled',), ('Eggs to order',), ('Tea',), ('Tea',), ('Mutton Chops',), ('Potato Chips',), (\"Lambs' Liver Saute\",), ('Tea',), ('Curried Veal and Rice',), ('Broiled Rashers of Bacon',), ('Cold: Ox Tongue',), ('French bread',), ('Marmalade',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Bananas',), ('Coffee Cake',), ('Cold Ham',), ('Fried Sausages, Mashed Potatoes',), ('Corned Beef Hash',), ('Split Rolls',), ('Eggs to order',), ('Eggs to order',), ('Tea',), ('Waffles',), ('Coffee',), ('Cocoa',), ('Quaker Oats',), ('Devilled Kidney',), ('Marmalade',), ('Fried Potatoes',), ('Pettijohn',), ('Hot Rolls',), ('Coffee',), ('Corn bread',), ('Fried Ham & Eggs',), ('French bread',), ('Pork Sausage and Mashed Potatoes',), ('Boiled Cracked Wheat',), ('Dry Toast',), ('Spanish Omelettes',), ('Rice Cakes',), ('Fried smelts',), ('English Muffins',), ('Calves Liver and Onions',), ('Marmalade',), ('Mutton Chops (to order)',), ('Jam',), ('Porterhouse Steak and Lamb Chops',), ('Honey in the Comb',), ('Jacket Potatoes',), ('Chocolate',), ('Curried Shrimps and Rice',), ('Corn bread',), ('Boiled Corn Meal with Cream',), ('Yarmouth Bloaters',), ('Maple Syrup',), ('Fried Fresh Fish',), ('Corned Beef Hash',), ('Honey',), ('Jam',), ('Fillet Steaks with Mushrooms',), ('Marmalade',), ('Tea',), ('Cocoa',), ('Tea',), ('Tongues and Sounds',), ('Hot Rolls',), ('Stewed Tripe',), ('Cornmeal Mush',), ('Coffee',), ('Cocoa',), ('Rice Cakes',), ('Breakfast Delight',), ('Diamond stew',), ('Fresh Comb Honey',), ('Flaked Rice',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fricassee of Turkey Wings Celery Sauce',), ('Fried Country Sausages and Lima Beans',), ('Rolled Oats',), ('Oxtail Ragout and Vegetables',), ('Yarmouth Bloaters',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Broiled Ham',), ('Lynnhavens oysters',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Frankfurter Sausages and Sauerkraut',), ('Cape Cods oysters',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Mashed Turnips',), ('Fried Liver & Bacon',), ('Stewed tomatoes',), ('Corned Beef Hash',), ('Oyster cocktail',), ('Boiled potatoes',), ('Potatoes',), ('Potatoes Saute',), ('Cherrystones clams',), ('Fried Ham',), ('Eclairs',), ('Boiled potatoes',), ('Pies',), ('Clam cocktail',), ('Potatoes Boiled',), ('Baked Shad Wine Sauce',), ('Corn bread',), ('Hot Biscuits',), (\"Calf's Liver and Bacon\",), ('Boiled Fish',), ('Broiled Lamb Kidneys and Bacon',), ('Corn bread',), ('Roast Leg of English Mutton',), ('Toast',), (\"Frogs' legs in every style\",), ('French bread',), (\"Roast Phil'a Chicken\",), ('Flannel Cakes',), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), (\"Roast Phil'a Chicken\",), (\"Lambs' Liver Saute\",), ('York Ham, Grilled',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sauterne 1ere',), ('St. Julien Sup\u00e8rieur',), ('Tripe Fritters',), ('Pontet Canet',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Niersteiner',), ('Hochheimer',), ('Corned Beef Hash',), ('Perrier Jou\u00ebt Special and Brut',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Eggs to order',), ('Clicquot Sec',), ('Mo\u00ebt & Chandon, White Seal',), ('Mo\u00ebt & Chandon, Brut',), ('Irroy Brut',), ('Fried New Potatoes',), ('Apollinaris',), ('Johannis',), ('Hot Rolls',), ('Corn bread',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Dry Toast',), ('Bisque of Crawfish',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('English Muffins',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('French bread',), ('New Asparagus, Cream Sauce',), ('Sherbert Roman',), ('Red Head Duck',), ('Rice Cakes',), ('Celery Salad',), ('Fancy Ice Cream',), ('Honey in the Comb',), (\"Broiled Shad Maitre d'Hotel\",), ('Fruit',), ('Cakes',), ('Marmalade',), ('Cheese',), ('Coffee',), ('Jam',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Oranges',), ('Bananas',), ('Apples',), ('Passion Fruit',), ('Fried Whiting',), ('Rolled Oats',), ('Oranges',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Bananas',), ('Curried Lamb and Rice',), ('Broiled Chicken on Toast',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Fried Bananas',), ('Boiled Mackerel',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Veal Cutlets Breaded',), ('Obst',), ('Hamburg Steak with Onions',), ('Nachtisch',), ('Pork Sausages',), ('Corned Beef Hash',), ('Fried Gar fish',), ('Fried Ham',), ('liver and bacon',), ('Eggs to order',), ('Potatoes Boiled',), ('Corn bread',), ('Hot Rolls',), ('Smoked Snapper',), ('English Muffins',), ('Toast',), ('Batter Cakes',), ('Tea',), ('Gemischtes Rahmeis',), ('Oat Meal Porridge',), ('Pork Cutlets',))", "rowcount": 1001, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Strawberries',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), ('Cream of Cauliflower Soup',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Raw Oysters',), ('Stewed tomatoes',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('Rockaways oysters',), ('Hafergrutze',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Grape fruit',), ('Oranges',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('Rissoles a la Merrill',), ('Lammkoteletten nach Villeroi',), ('SALTED ALMONDS',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Vegetable Soup',), ('Baked fish, wine sauce',), ('Pur\u00e9e of split peas aux croutons',), ('Consomm\u00e9 in cup',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Hot ribs of beef',), ('Doucette salad',), ('Stewed tomatoes',), ('New beets',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Old fashioned rice pudding',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Oranges',), ('Strawberries',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Grape fruit',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Stewed prunes',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges',), ('Oranges sliced',), ('Large pot of coffee',), ('Cup of coffee (served in small pot)',), ('Large pot of Oolong tea',), ('Pot of chocolate',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Sliced Bananas and Cream',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('French rolls',), ('Milk rolls',), ('Celery',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Mohren Suppe mit Sago',), ('Oranges',), ('Food',), ('Shreaded Wheat',), ('Clam cocktail',), ('Oyster cocktail',), ('Sardines',), ('Little Neck clams',), ('Stuffed olives',), ('Lalla Rookh Sorbet',), ('Celery',), ('Malaga grapes',), ('Pears',), ('Martineaus',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('Strawberry',), ('Oyster Bay asparagus',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Fruit',), ('Plain Omelette',), ('Canape, Martha',), ('Fruit',), ('Quaker Oats',), ('Cracked Wheat',), ('Puree of beans',), ('Fruits in Season',), ('Fried Flounders',), ('Oatmeal Porridge',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Bouillon in cup',), ('Queen olives',), ('Radishes',), ('Chow chow',), ('Panfish, Meuniere, German fried potatoes',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Philadelphia Cream Cheese',), ('Assorted cakes',), ('Scollops en caisse, Supreme',), ('Irish stew',), ('Marrow on toast, Bordelaise',), ('Lobster salad',), ('Potato salad',), ('Chicken salad',), ('Mashed potatoes',), ('Coffee',), ('Spinach with egg',), ('Boiled potatoes',), ('Baba au rhum',), ('Hot buns',), ('Tongue',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Stewed prunes',), ('Boiled rice',), ('Roast beef',), ('Sliced Bananas',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Sardines',), ('Chicken',), ('Apple Sauce',), ('Tea',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Coffee',), ('Milk',), ('Rolls',), ('Griddle cakes',), ('Baked Potatoes',), ('Porterhouse Steak',), ('Pommes de Terre a la Creme',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Onions plain or fried',), ('Sandwiches of all Kinds',), ('Small Steak',), ('Hamburger Steak',), ('Veal Chops',), ('Mutton Chops',), ('Pork Chops',), ('Ham & Eggs',), ('Bacon & Eggs',), ('Fried Liver',), ('German Pancake',), ('Omelettes',), ('Oysters & Clams',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters stewed',), ('Oysters box stew',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Fruit',), ('Oat Meal',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Fish cakes',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Griddle cakes',), ('Hominy',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Fish cakes',), ('Sirloin Steak',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Lyonnaise Potatoes',), ('Griddle cakes',), ('Marmalade',), ('Coffee',), ('Tomato Soup',), ('Baked Weakfish',), ('Oysters, Raw on the shell',), ('Half and Half Scallops & Oysters',), ('Oranges',), ('Rolled Oats',), ('Broiled Mullet',), ('Sirloin Steak with Mushrooms',), ('Pork Chops Piquante Sauce',), ('Broiled Chicken on Toast',), ('Calfs Liver and Onions',), ('Broiled Kidney with Bacon',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Waffles',), ('Split Rolls',), ('Hot Cakes',), ('Tea',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Oranges',), ('Oatmeal Porridge',), ('Smelts Meuniere',), ('Findon Haddock',), ('Oatmeal Porridge',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Cold Half Chicken and Ham ',), ('Cold Veal and Ham Pie',), ('Cold Roast Lamb',), ('Oranges',), ('Fried Flounder',), ('Grillirte Kuken',), ('Hoot Mon Mush',), ('Fillet Steaks aux Champignon',), ('Fruit',), ('Strawberries',), ('broiled shad',), ('Oysters, Milk Stew',), ('Oysters, Boston stew',), ('Oysters, Box Stew',), ('Oysters, Raw on the Half Shell',), ('Coffee',), ('Quaker Oats',), ('Boiled rice',), ('Smelts, Tartare sauce',), ('Findon Haddock',), ('Beef Steak, Saratoga chips',), ('Calves Liver & Bacon',), ('Sausage',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Sliced Pineapples',), ('Oatmeal Porridge',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Broiled Ham',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Cold Steak Pie',), ('Cold Mutton',), ('Cold Roast Beef',), ('Cold German Sausage',), ('Oysters, Boston Box Stew',), ('Oysters, Fry',), ('Oysters, Fry with Bacon',), ('Oatmeal',), ('Oyster Omelette',), ('Stewed Tripe',), ('Pork Sausage and Lyonnaise Potatoes',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Mock turtle soup',), ('Consomme Benoiton',), ('Filet Steaks aux Champignon',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Consomme San Remo',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Clear green turtle soup',), ('Corned Beef Hash',), ('Consomme Maceo',), ('Boiled rice',), ('Puree Mongol',), ('Broiled Rashers of Ham',), ('Consomme Printanier',), ('French fried potatoes',), ('Chicken Mulligatawny',), ('Split Rolls',), ('Oysters, Blue Point Stew',), ('French bread',), ('Corn bread',), ('Oysters, Crumb Fry',), ('English Beef soup',), ('Beef Stew',), ('Oysters, Blue Point Fry',), ('Filet of sole a la Horly',), ('broiled shad',), ('Diamond back terrapin',), ('Fruit',), ('Oat Meal',), ('Boiled rice',), ('Plain Omelette',), ('Fried Eggs',), ('Fried Plaice - Meuniere',), ('Kippered Herring',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Sausage & Mashed Potatoes',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fruits in Season',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Boiled potatoes',), ('Fried fish',), ('Egg, to order',), ('Diamond stew',), ('Jam',), ('Marmalade',), ('Tea',), ('Stewed prunes',), ('Clam Fritters',), ('Boiled Salt Mackerel',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Pork Chops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('English Mutton Chops',), ('Broiled Spring Chicken',), ('Sirloin Steak',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Plain Omelet',), ('Fried Indian Mush',), ('Baked Potatoes',), ('Saratoga Chips',), ('French fried potatoes',), ('Lyonnaise Potatoes',), ('Potatoes stewed in Cream',), ('Saute Potatoes',), ('Rye Bread',), ('French rolls',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn muffins',), ('Wheat Cakes, with Maple Syrup',), ('Coffee',), ('Tea',), ('Chocolate',), ('Cocoa',), ('Oatmeal Porridge',), ('Fruits in Season',), ('Corn Meal Mush',), ('Boiled',), ('Rolled Oats',), ('Scotch grouse en casserole',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Fruit',), ('Quaker Oats',), ('Scrambled Eggs',), ('Eggs au Beurre Noir',), ('Broiled Blue Fish',), ('Fish cakes',), ('Sirloin Steak, Fried French Chips',), ('Chicken Liver on Toast with Bacon',), ('Pork Chops, Sage & Onions',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Marmalade',), ('Coffee',), ('Salt Codfish, Spanish Style',), ('Marmalade',), ('Mashed potatoes',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Apples',), ('Passion Fruit',), ('Kippered Herrings',), ('Curried Pork and Rice',), ('Stewed Tripe with Cream sauce',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Chicken broth',), ('Consomme Macaroni',), ('Oat Meal',), ('Buckwheat Cakes',), ('Hard Boiled Egg',), ('Fruit',), ('Cream Cheese',), ('Plain Omelette',), ('Fried Eggs',), ('Hominy',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Kippered Herring',), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Fish cakes',), ('Apfelsinen',), ('Apfel',), ('Maisgries',), ('Hafergrutze',), ('Snowflakes',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Salt Codfish, Spanish Style',), ('Fruit',), ('Fillet Steads with Mushrooms',), ('Poached Eggs on Toast',), ('Curried Prawns and Rice, Bombay Duck',), ('Eggs au Beurre Noir',), ('Lamb Chops, Broiled Plain',), ('Whiting - Meuniere',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Fish cakes',), ('Sirloin Steak - Fried Onions',), ('Broiled Ham',), ('Grape fruit',), (\"Lambs' Liver Saute\",), ('Breakfast',), ('Chicken Liver on Toast with Bacon',), ('Tripe Fritters',), ('Jambon Grille',), ('Minced Veal a la Zingari',), ('Eggs to order',), ('Dried Hash',), ('Corned Beef Hash',), ('Mutton Chops - Saute Potatoes',), ('Calfs Liver + Bacon',), ('Boiled rice',), ('Cold Smoked Tongue and Ham',), ('Buckwheat Cakes',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Marmalade',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Coffee',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Broiled Fresh Mackerel',), ('English Muffins',), ('Salt Cod, Egg Sauce',), ('Cracked Wheat with Fresh Milk',), ('Rice Cakes',), ('Shad roe and bacon',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Marmalade',), ('Jam',), ('Smoked Schnapper Butter Sce',), ('Yarmouth Bloaters',), ('Tea',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Coffee',), ('Cocoa',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Fruits in Season',), ('Frizzled Breakfast Bacon (to order)',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Saute of Kidney',), ('Corned Beef Hash',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('Coffee',), ('Scrambled Eggs and bacon',), ('liver and bacon',), ('Oranges',), ('Apples',), ('Oatmeal',), ('Fillet de Boeuf a la Parisienne',), ('Fried Chicken a la Maryland',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Kippered Herrings',), ('Broiled Ham',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Strawberries',), ('Hominy',), ('Jam',), ('Boiled potatoes',), ('Pork Sausage and Lyonnaise Potatoes',), ('Baked Apple Dumpling, Hard Sauce',), (\"Potato a la Maitre d'Hotel\",), ('Tea',), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Oysters, Roast in Shell',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Asparagus Omelette ',), ('rice pudding',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Swiss Rolls',), ('Fruit in Season',), ('Charlotte Russe',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Jam',), ('Lettuce',), ('Cum-quats',), ('Raisin cake',), ('Tea',), ('Apples',), ('Orange',), ('Fillet Steak ',), ('Oranges',), ('Grape fruit',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Ham omelette',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('China Teas',), ('Coffee',), ('Broiled Salt Mackerel',), ('Corned Beef Hash',), ('Apples',), ('Stewed Tripe Spanish',), ('Germea',), ('Eggs to order',), ('Eggs to order',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Butter Cakes with Maple Syrup',), ('Marmalade',), ('Eggs to order',), ('Bananas',), ('Hot Rolls',), ('Coffee ',), ('Kraftsuppe, Prinzessin Art',), ('Cracked Wheat',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Boiled rice',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Liver & Bacon',), ('Blumenkohl, hollandische Sauce',), ('Stewed Tripe Spanish',), ('Beef Steak, fried onions',), ('Cotelettes de Veau, Sauce Tomate',), ('Gratinierter Eierkuchen nach Mornay',), ('Boiled eggs',), ('Split Rolls',), ('Veal Cuttlets Lyonnaise',), ('Entenbraten, Bordeaux Sauce',), ('Fried Potatoes',), ('Pork Sausages, Snowflake Potatoes',), ('Mutton Chops & Potato Chips',), ('Hot Rolls',), (\"Lambs' Liver with Bacon\",), ('Mirabellen',), ('Coffee',), ('Tripe, Spanish Style',), ('Citronen-Auflauf',), ('Boiled rice',), ('Liver & Bacon',), ('Cape Horn Hash',), ('Broiled Rashers of Ham',), ('Fruit in Season',), ('Breakfast Rolls',), ('Corn Meal Fritters',), ('Corn bread',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Dry Toast',), ('Boiled Potatos',), ('Pikelets',), ('Rolled Oats',), ('Fried Whiting',), ('Hot Rolls',), ('Flannel Cakes',), ('Marmalade',), ('Tea',), ('Jam',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Tea',), ('Coffee',), ('Fillet Steak Fried Potatoes',), ('Cocoa',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Bacon to order',), ('Breakfast Rolls',), ('Wheat Cakes',), ('Marmalade',), ('Coffee',), ('Beef Steak & onions',), ('Fried Bananas',), ('Egg to Order',), ('Beef Steak and Champignons',), ('Boiled potato',), ('Currant Buns',), ('Cold Ham',), ('Boiled Cod',), ('Waffle',), ('Marmalade',), ('Broiled Spring Chicken',), ('Fruit',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Tea',), ('Oatmeal Porridge',), ('Buckwheat Cakes',), ('Yarmouth Bloaters',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Broiled Ham',), ('Curried Chicken with Rice',), ('Two Eggs Boiled',), ('Eggs to order',), ('Tea',), ('Tea',), ('Mutton Chops',), ('Potato Chips',), (\"Lambs' Liver Saute\",), ('Tea',), ('Curried Veal and Rice',), ('Broiled Rashers of Bacon',), ('Cold: Ox Tongue',), ('French bread',), ('Marmalade',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Bananas',), ('Coffee Cake',), ('Cold Ham',), ('Fried Sausages, Mashed Potatoes',), ('Corned Beef Hash',), ('Split Rolls',), ('Eggs to order',), ('Eggs to order',), ('Tea',), ('Waffles',), ('Coffee',), ('Cocoa',), ('Quaker Oats',), ('Devilled Kidney',), ('Marmalade',), ('Fried Potatoes',), ('Pettijohn',), ('Hot Rolls',), ('Coffee',), ('Corn bread',), ('Fried Ham & Eggs',), ('French bread',), ('Pork Sausage and Mashed Potatoes',), ('Boiled Cracked Wheat',), ('Dry Toast',), ('Spanish Omelettes',), ('Rice Cakes',), ('Fried smelts',), ('English Muffins',), ('Calves Liver and Onions',), ('Marmalade',), ('Mutton Chops (to order)',), ('Jam',), ('Porterhouse Steak and Lamb Chops',), ('Honey in the Comb',), ('Jacket Potatoes',), ('Chocolate',), ('Curried Shrimps and Rice',), ('Corn bread',), ('Boiled Corn Meal with Cream',), ('Yarmouth Bloaters',), ('Maple Syrup',), ('Fried Fresh Fish',), ('Corned Beef Hash',), ('Honey',), ('Jam',), ('Fillet Steaks with Mushrooms',), ('Marmalade',), ('Tea',), ('Cocoa',), ('Tea',), ('Tongues and Sounds',), ('Hot Rolls',), ('Stewed Tripe',), ('Cornmeal Mush',), ('Coffee',), ('Cocoa',), ('Rice Cakes',), ('Breakfast Delight',), ('Diamond stew',), ('Fresh Comb Honey',), ('Flaked Rice',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fricassee of Turkey Wings Celery Sauce',), ('Fried Country Sausages and Lima Beans',), ('Rolled Oats',), ('Oxtail Ragout and Vegetables',), ('Yarmouth Bloaters',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Broiled Ham',), ('Lynnhavens oysters',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Frankfurter Sausages and Sauerkraut',), ('Cape Cods oysters',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Mashed Turnips',), ('Fried Liver & Bacon',), ('Stewed tomatoes',), ('Corned Beef Hash',), ('Oyster cocktail',), ('Boiled potatoes',), ('Potatoes',), ('Potatoes Saute',), ('Cherrystones clams',), ('Fried Ham',), ('Eclairs',), ('Boiled potatoes',), ('Pies',), ('Clam cocktail',), ('Potatoes Boiled',), ('Baked Shad Wine Sauce',), ('Corn bread',), ('Hot Biscuits',), (\"Calf's Liver and Bacon\",), ('Boiled Fish',), ('Broiled Lamb Kidneys and Bacon',), ('Corn bread',), ('Roast Leg of English Mutton',), ('Toast',), (\"Frogs' legs in every style\",), ('French bread',), (\"Roast Phil'a Chicken\",), ('Flannel Cakes',), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), (\"Roast Phil'a Chicken\",), (\"Lambs' Liver Saute\",), ('York Ham, Grilled',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sauterne 1ere',), ('St. Julien Sup\u00e8rieur',), ('Tripe Fritters',), ('Pontet Canet',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Niersteiner',), ('Hochheimer',), ('Corned Beef Hash',), ('Perrier Jou\u00ebt Special and Brut',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Eggs to order',), ('Clicquot Sec',), ('Mo\u00ebt & Chandon, White Seal',), ('Mo\u00ebt & Chandon, Brut',), ('Irroy Brut',), ('Fried New Potatoes',), ('Apollinaris',), ('Johannis',), ('Hot Rolls',), ('Corn bread',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Dry Toast',), ('Bisque of Crawfish',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('English Muffins',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('French bread',), ('New Asparagus, Cream Sauce',), ('Sherbert Roman',), ('Red Head Duck',), ('Rice Cakes',), ('Celery Salad',), ('Fancy Ice Cream',), ('Honey in the Comb',), (\"Broiled Shad Maitre d'Hotel\",), ('Fruit',), ('Cakes',), ('Marmalade',), ('Cheese',), ('Coffee',), ('Jam',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Oranges',), ('Bananas',), ('Apples',), ('Passion Fruit',), ('Fried Whiting',), ('Rolled Oats',), ('Oranges',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Bananas',), ('Curried Lamb and Rice',), ('Broiled Chicken on Toast',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Fried Bananas',), ('Boiled Mackerel',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Veal Cutlets Breaded',), ('Obst',), ('Hamburg Steak with Onions',), ('Nachtisch',), ('Pork Sausages',), ('Corned Beef Hash',), ('Fried Gar fish',), ('Fried Ham',), ('liver and bacon',), ('Eggs to order',), ('Potatoes Boiled',), ('Corn bread',), ('Hot Rolls',), ('Smoked Snapper',), ('English Muffins',), ('Toast',), ('Batter Cakes',), ('Tea',), ('Gemischtes Rahmeis',), ('Oat Meal Porridge',), ('Pork Cutlets',))", "rowcount": 1001, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 373, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Hafergrutze',), ('Apfelsinen',), ('Milchreis',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Hot ribs of beef',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Grilled Mutton Chops',), ('Cold Steak Pie',), ('Eggs to order',), ('Grilled Mutton Chops',), ('Eggs as Ordered',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Apfelsinen',), ('Hafergrutze',), ('Eggs to order',), ('Fried & Boiled Potatoes',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Scrambled Eggs and bacon',), ('Fillet de Boeuf a la Parisienne',), ('Bouchees aux Macaroni',), ('Roast Goose & Apple Sauce',), ('Mashed Pumpkins',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Swiss Rolls',), ('Cum-quats',), ('Fillet Steak ',), ('MacLaren Cheese',), ('China Teas',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Cotelettes de Veau, Sauce Tomate',), ('A. A. Oats with Fresh Milk',), ('Egg to Order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Pork Sausage and Mashed Potatoes',), ('Eggs to order',), (\"Broiled Shad Maitre d'Hotel\",), ('Obst',), ('Nachtisch',), ('Eggs to order',), ('Batter Cakes',), ('Gemischtes Rahmeis',), ('Pork Cutlets',))", "rowcount": 60, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'dish'\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 374, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 375, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,clob)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 376, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 377, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((48,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((48,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 379, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 380, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 381, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26190.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 383, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,clob)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 384, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_date(clob,char)'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 385, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((538,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((538,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 386, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((59,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 387, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 389, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.666545970248333,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (:)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 390, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((50,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((50,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 391, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57.251907,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 392, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Habitatge al carrer de Sant Antoni, 29-33 (Sant Feliu de Gu\u00edxols)', 85))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 393, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1206408,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 394, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 395, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 396, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(*) \n!from \"order_status\" as t1 \n!inner join \"order_history\" as t2 on \"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 397, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 398, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((25.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 399, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "(('The Illuminati', 'Thomas Nelson'), ('The Season: A Candid Look at Broadway', 'Limelight'), ('Working Effectively with Legacy Code', 'Prentice Hall'), ('Programming in C', 'Sams'), (\"PHP and MySQL Web Development (Developer's Library)\", 'Sams'), (\"The Bonesetter's Daughter\", 'Harper Perennial'), ('Naked Empire (Sword of Truth  #8)', 'Voyager'), ('The Real Trial of Oscar Wilde', 'Harper Perennial'), ('The Opposite of Fate', 'Harper Perennial'), ('Wild Swans: Three Daughters of China', 'Harper Perennial'), ('Reading Lolita in Tehran', 'Fourth Estate'), ('Where Rainbows End', 'HarperCollins'), ('The Known World', 'Harper Perennial'), ('Going Postal (Discworld  #33)', 'Harper'), ('After', 'HarperTeen'), ('Barracuda 945 (Admiral Arnold Morgan  #6)', 'HarperTorch'), ('Behaving Like Adults', 'William Morrow Paperbacks'), ('Letters from the Earth: Uncensored Writings', 'Harper Perennial Modern Classics'), ('Murder Unleashed (Jack and Jamie #2)', 'Avon Books'), ('To Collar a Killer (Jack and Jamie #3)', 'Avon'), ('A Faint Cold Fear (Grant County  #3)', 'Harper'), ('City of the Beasts (Eagle and Jaguar  #1)', 'Rayo'), ('Brave New World and Brave New World Revisited', 'HarperCollins'), ('How to Make Love Like a Porn Star: A Cautionary Tale', 'It Books'), ('1421: The Year China Discovered America', 'Harper Perennial (NYC)'), ('Nimitz Class (Admiral Arnold Morgan  #1)', 'Harper Paperbacks'), ('Built to Last: Successful Habits of Visionary Companies', 'Harper Business'), ('Fluke: Or  I Know Why the Winged Whale Sings', 'Harper'), ('The Perennial Philosophy', 'Harper Perennial Modern Classics'), ('Dead Witch Walking (The Hollows  #1)', 'HarperTorch'), ('Sabriel (Abhorsen  #1)', 'Eos'), ('Slider', 'It Books'), ('The Way the Crow Flies', 'Harper Perennial'), ('Great Short Works of Herman Melville', 'Harper Perennial Modern Classics'), ('El reino del drag\u00f3n de oro', 'HarperCollins Espanol'), ('Quicksilver (The Baroque Cycle  #1)', 'HarperCollins Perennial'), ('Beautiful Boys (Weetzie Bat  #4-5)', 'HarperTeen'), (\"Since You're Leaving Anyway  Take Out the Trash (Domestic Equalizers #1)\", 'Avon'), ('Outposts: Journeys to the Surviving Relics of the British Empire', 'Harper Perennial'), ('Darkest Hour (The Mediator  #4)', 'HarperCollins'), ('Great Short Works of Fyodor Dostoevsky', 'Harper Perennial Modern Classics'), ('The Collected Letters of C.S. Lewis  Volume 1: Family Letters  1905-1931', 'HarperOne'), ('Bloodsucking Fiends (A Love Story  #1)', 'HarperCollins'), ('Island of the Sequined Love Nun', 'Harper Perennial'), ('The Lust Lizard of Melancholy Cove (Pine Cove  #2)', 'William Morrow Paperbacks'), ('One Hundred Years of Solitude', 'Harper Perennial'), ('Wicked: The Life and Times of the Wicked Witch of the West', 'William Morrow Paperbacks'), ('This Rough Magic', 'HarperTorch'), ('Airs Above the Ground', 'HarperTorch'), ('The Known World', 'Harper'), ('One Hundred Years of Solitude', 'Harper'), ('Journey Into the Void (Sovereign Stone  #3)', 'Harper Voyager'), (\"Harrison's Principles of Internal Medicine\", 'McGraw-Hill Medical Publishing'), ('Advanced Statistics Demystified', 'McGraw-Hill Education'), ('Slim to None: A Journey Through the Wasteland of Anorexia Treatment', 'McGraw-Hill Education'), ('The Last Dance: Encountering Death and Dying', 'McGraw-Hill Humanities/Social Sciences/Languages'), ('The Toy Maker: The Life and Times of Inventor Frank Hornby', 'Ebury Press'), ('The Confessions of Nat Turner', 'Vintage Classics'), ('The Time of Our Singing', 'Vintage'), ('Blood Canticle (The Vampire Chronicles #10)', 'Arrow'), ('Like a Charm', 'Arrow'), ('Bringing Down The House', 'Arrow'), ('Earthly Powers', 'Vintage Classics'), ('The Witching Hour (Lives of the Mayfair Witches  #1)', 'Arrow'), ('Lasher (Lives of the Mayfair Witches  #2)', 'Arrow Books'), ('Women Who Love Too Much', 'Arrow'), ('Physics: for Scientists and Engineers with Modern Physics', 'Benjamin-Cummings Publishing Company'), ('Introduction to the Philosophies of Research and Criticism in Education and the Social Sciences', 'Pearson'), ('Criminal Investigation: The Art and the Science', 'Prentice Hall'), ('Java: An Introduction to Problem Solving and Programming', 'Prentice Hall'), ('The Normans in Sicily: The Normans in the South 1016-1130 and the Kingdom in the Sun 1130-1194', 'Penguin Global'), ('The Nibelungenlied', 'Penguin Classics'), ('Germinal', 'Penguin Classics'), ('Metamorphoses', 'Penguin'), ('Sentimental Education', 'Penguin Classics'), ('Dead Souls', 'Penguin Classics'), ('The Nicomachean Ethics', 'Penguin Classics'), ('The Teeth of the Tiger (Jack Ryan Universe  #12)', 'Penguin Books Ltd.'), ('Stiff: The Curious Lives of Human Cadavers', 'Penguin'), ('You Shall Know Our Velocity', 'Penguin'), ('Citizens: A Chronicle of the French Revolution', 'Penguin'), ('Drop City', 'Penguin Books'), ('Freedom Evolves', 'Penguin'), ('Lost in a Good Book (Thursday Next  #2)', 'Penguin Books'), ('River of Shadows: Eadweard Muybridge and the Technological Wild West', 'Penguin Books'), ('The Life of Graham Greene  Vol. 1: 1904-1939', 'Penguin Books'), ('Outcast of Redwall (Redwall  #8)', 'Firebird'), ('Triss (Redwall  #15)', 'Firebird'), ('In the Land of Time: And Other Fantasy Tales', 'Penguin Classics'), ('The Portable John Adams', 'Penguin Books'), ('Paris: After the Liberation 1944-1949', 'Penguin Books'), (\"Swann's Way (In Search of Lost Time  #1)\", 'Penguin Classics'), ('This Lullaby', 'Speak'), ('The Well of Lost Plots (Thursday Next #3)', 'Penguin Books'), ('Anna Karenina', 'Penguin Classics'), ('The Flanders Panel', 'Mariner Books'), ('The Seville Communion', 'Mariner Books'), ('The Liberated Bride', 'Mariner Books'), ('Life of Pi', 'Mariner Books / Harvest Books'), ('Pride and Prejudice', 'Oxford University Press'), ('Sense and Sensibility', 'Oxford University Press'), ('Purgatorio (La Divina Commedia #2)', 'Oxford University Press USA'), ('The Oresteia', 'Oxford University Press USA'), ('American Legal History: Cases and Materials', 'Oxford University Press USA'), ('Modern Latin America', 'Oxford University Press USA'), ('The Selected Journals Of L.M. Montgomery  Vol. 5: 1935-1942', 'Oxford University Press USA'), ('Infants  Children  and Adolescents (MyDevelopmentLab Series)', 'Allyn & Bacon'), ('The Plot Against America', 'Jonathan Cape'), ('Lost Prophet: The Life and Times of Bayard Rustin', 'University of Chicago Press'), ('Directing the Documentary', 'Focal Press'), ('Desde mi cielo', 'Debolsillo'), ('Breach of Promise', 'Zondervan'), (\"Moloka'i (Moloka'i #1)\", \"St. Martin's Griffin\"), ('The New York Times Guide to Essential Knowledge', \"St. Martin's Press\"), ('Something Borrowed (Darcy & Rachel  #1)', \"St. Martin's Press\"), (\"Marching Powder: A True Story of Friendship  Cocaine  and South America's Strangest Jail\", \"St. Martin's Griffin\"), ('All Things Wise and Wonderful', \"St. Martin's Griffin\"), ('Sideways', \"St. Martin's Griffin\"), ('Rereading America: Cultural Contexts for Critical Thinking and Writing', 'Bedford Books'), ('The Interpreter', 'St. Martins Press'), ('Galatea 2.2', 'Picador'), ('Mason & Dixon', 'Picador USA'), ('The River at the Center of the World: A Journey Up the Yangtze & Back in Chinese Time', 'Picador'), ('Primo Levi: A Life', 'Picador'), ('Dry', 'Picador USA'), ('A Home at the End of the World', 'Picador'), ('Faking It (Dempseys  #2)', \"St. Martin's Paperbacks\"), ('Welcome to Temptation (Dempseys  #1)', \"St. Martin's Paperbacks\"), ('Crazy For You', \"St. Martin's Paperbacks\"), ('Full Blast (Full #4)', \"St. Martin's Paperbacks\"), ('The Awakening (Vampire Huntress  #2)', \"St. Martin's Paperbacks\"), ('The Tristan Betrayal', \"St. Martin's Paperbacks\"), ('The Firefly', \"St. Martin's Paperbacks\"), ('As the Crow Flies', \"St. Martin's Paperbacks\"), ('The Lovely Bones', 'Back Bay Books'), ('An Unfinished Life: John F. Kennedy  1917-1963', 'Back Bay Books'), ('The Necessary Shakespeare', 'Longman Publishing Group'), ('Marching Powder', 'Pan MacMillan'), ('The Battle Of Corrin (Legends of Dune  #3)', 'Hodder & Stoughton Ltd'), ('The Dark Tower (The Dark Tower #7)', 'Hodder & Stoughton'), ('Girl Meets Ape', 'Coronet'), ('Rise to Rebellion', 'Ballantine Books'), ('Standing in the Rainbow (Elmwood Springs  #2)', 'Ballantine Books'), ('The Probable Future', 'Ballantine Books'), ('The Bloody Crown of Conan (Conan the Cimmerian  #2)', 'Del Rey Ballantine Random House'), (\"Dragon's Kin (Pern  #17)\", 'Del Rey'), ('Yoda: Dark Rendezvous', 'Del Rey'), ('The Hunchback of Notre-Dame', 'Modern Library'), ('We Were Soldiers Once... and Young: Ia Drang - The Battle that Changed the War in Vietnam', 'Presidio Press'), ('The Star Wars Trilogy', 'Del Rey'), ('The Guns of August', 'Ballantine Books'), ('The Fortunate Pilgrim', 'Ballantine Books'), ('Interview with the Vampire (The Vampire Chronicles  #1)', 'Ballantine Books'), ('The Vampire Lestat (The Vampire Chronicles  #2)', 'Ballantine Books'), ('Back When We Were Grownups', 'Ballantine Books'), ('Narrative of the Life of Frederick Douglass  an American Slave / Incidents in the Life of a Slave Girl', 'Modern Library'), ('Trump: The Art of the Deal', 'Ballantine Books'), ('Jennifer Government', 'Abacus'), ('Slightly Settled (Slightly  #2)', 'Red Dress Ink'), ('Monkey Business', 'Red Dress Ink'), (\"Girls' Night In\", 'Red Dress Ink'), ('Double-Cross (Athena Force #4)', 'Silhouette Bombshell'), (\"Elphame's Choice (Partholon  #4)\", 'Luna Books'), ('The Fairy Godmother (Five Hundred Kingdoms  #1)', 'Luna Books'), ('Sylvester', 'Harlequin'), ('Selected Verse', 'Farrar Straus and Giroux'), ('The Iliad', 'Farrar Straus and Giroux'), ('The Fixer', 'Farrar Straus and Giroux'), ('My Life', 'Knopf Publishing Group'), ('Sons of Mississippi: A Story of Race and Its Legacy', 'Vintage'), ('The Elegant Universe: Superstrings  Hidden Dimensions  and the Quest for the Ultimate Theory', 'Vintage Books USA'), ('The Adolescent', 'Vintage'), ('The Life and Opinions of Tristram Shandy  Gentleman', 'Modern Library'), ('Shutter Island', 'HarperTorch'), (\"Lamb: The Gospel According to Biff  Christ's Childhood Pal\", 'William Morrow / HarperCollins / Harper Perennial'), ('The Body in the Lighthouse', 'Avon'), ('The Cloud Atlas', 'Dial Press'), ('Coming of Age in Mississippi: The Classic Autobiography of a Young Black Girl in the Rural South', 'Delta'), ('A Painted House', 'Bantam'), ('Sailing the Wine-Dark Sea: Why the Greeks Matter', 'Anchor'), ('Good Faith', 'Anchor Books'), ('Will in the World: How Shakespeare Became Shakespeare', 'W.W. Norton & Company (NY/London)'), ('The Annotated Brothers Grimm', 'W. W. Norton Company'), ('The New Annotated Sherlock Holmes: The Complete Short Stories', 'W. W. Norton & Company'), ('The Complete Aubrey/Maturin Novels (5 Volumes)', 'W. W. Norton Company'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('Moneyball: The Art of Winning an Unfair Game', 'W. W. Norton Company'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('Paradise Lost', 'W. W. Norton & Company'), (\"Anton Chekhov's Selected Plays\", 'W. W. Norton & Company'), ('A History of Modern Europe  Volume 2: From the French Revolution to the Present', 'W. W. Norton & Company'), ('Madame Bovary (Critical Editions)', 'W.W. Norton & Company'), ('Raise the Titanic! (Dirk Pitt  #4)', \"G.P. Putnam's Sons\"), ('For Kicks', \"G.P. Putnam's Sons\"), ('Field of Thirteen', \"G.P. Putnam's Sons\"), ('The Bad Place', 'Berkley'), ('Wild Horses', \"G.P. Putnam's Sons\"), (\"Jane's Warlord (Warlord #1)\", 'Berkley Sensation'), ('Iceberg (Dirk Pitt  #3)', 'Berkley Books'), ('The Mediterranean Caper (Dirk Pitt  #2)', \"G.P. Putnam's Sons\"), ('10 lb Penalty', \"G.P. Putnam's Sons\"), ('Goddess of Spring (Goddess Summoning  #2)', 'Berkley Sensation'), ('Guilty Pleasures (Anita Blake  Vampire Hunter  #1)', 'Berkley'), (\"Death's Acre: Inside the Legendary Forensic Lab the Body Farm Where the Dead Do Tell Tales\", 'Berkley'), ('Blow Fly (Kay Scarpetta  #12)', 'Berkley'), ('Master of the Night (Mageverse #1)', 'Berkley Sensation'), (\"Wild Card (Tom Clancy's Power Plays  #8)\", 'Berkley'), ('Trojan Odyssey (Dirk Pitt  #17)', \"G.P. Putnam's Sons\"), ('Disordered Minds', 'Berkley'), ('Decider', \"G.P. Putnam's Sons\"), ('Murder on the Orient Express (Hercule Poirot  #10)', 'Berkley'), ('The Body Farm (Kay Scarpetta  #5)', 'Berkley'), (\"Splinter Cell (Tom Clancy's Splinter Cell  #1)\", 'Berkley'), ('Atlantis Found (Dirk Pitt  #15)', 'Berkley Trade'), ('Birds Without Wings', 'Secker'), ('Harry Potter and the Order of the Phoenix (Harry Potter  #5)', 'Scholastic Inc.'), ('Harry Potter and the Prisoner of Azkaban (Harry Potter  #3)', 'Scholastic Inc.'), ('Harry Potter Boxed Set  Books 1-5 (Harry Potter  #1-5)', 'Scholastic'), (\"Trickster's Choice (Daughter of the Lioness  #1)\", 'Scholastic Press'), ('Shopaholic Takes Manhattan (Shopaholic  #2)', 'Dell Publishing Company'), ('Shopaholic Ties the Knot (Shopaholic  #3)', 'Dell Publishing Company'), ('Masterpieces: The Best Science Fiction of the Twentieth Century', 'Ace Books'), ('Neuromancer', 'Ace'), ('The Big Bad Wolf  (Alex Cross  #9)', 'Grand Central Publishing'), ('Still Life With Crows (Pendergast  #4)', 'Grand Central Publishing'), ('Gloriana', 'Aspect'), ('Lost Boy Lost Girl', 'Ballantine Books'), ('No Second Chance', 'Dutton Books'), ('A Whole Lotta Love', 'Signet'), ('Night Over Water', 'NAL'), ('Monkeewrench (Monkeewrench  #1)', \"G.P. Putnam's Sons\"), (\"Mayada  Daughter of Iraq: One Woman's Survival Under Saddam Hussein\", 'Berkley Books'), ('The Agony and the Ecstasy: A Biographical Novel of Michelangelo', 'NAL'), ('Four Past Midnight', 'Signet'), ('The Anodyne Necklace (Richard Jury  #3)', 'Onyx'), ('The Dirty Duck (Richard Jury  #4)', 'Onyx'), ('Jerusalem Inn (Richard Jury  #5)', 'Onyx'), ('Wuthering Heights', 'Signet Classics'), ('Little Women', 'Signet Classics'), ('The Sea-Wolf and Selected Stories', 'Signet Classics'), ('Travels of Marco Polo', 'Signet'), ('Lies & the Lying Liars Who Tell Them: A Fair & Balanced Look at the Right', 'Plume Books'), ('Stolen (Women of the Otherworld  #2)', 'Plume'), ('Bitten (Otherworld  #1)', 'Plume Books'), ('Atlas Shrugged', 'NAL'), ('Astronomy: A Self-Teaching Guide', 'John Wiley & Sons'), ('The Philosophy of History', 'Dover Publications'), ('Anna Karenina', 'Dover Publications'), ('Love Bites (Argeneau #2)', 'Love Spell'), (\"Aphrodite's Flame (Superhero Central #4)\", 'Love Spell'), ('Cerulean Sins (Anita Blake  Vampire Hunter  #11)', 'Berkley Books'), ('After Glow (Ghost Hunters  #2)', 'Jove Books'), ('Cravings (Undead #1.5; Moon #3.5)', 'Berkley Books'), ('Sunshine', 'Jove'), ('Bite (Anita Blake  Vampire Hunter  #8.5; Sookie Stackhouse  #5.1; Undead  #2.5; Mageverse  #1.5)', 'Jove'), ('The Shell Seekers', 'Gramercy Books'), ('A History of God: The 4 000-Year Quest of Judaism  Christianity  and Islam', 'Gramercy Books'), ('Pathologies of Power: Health  Human Rights and the New War on the Poor', 'University of California Press'), ('A First Course in String Theory', 'Cambridge University Press'), ('Data Structures and Algorithms in C++', 'Course Technology'), ('Deception Point', 'Corgi Books'), ('Not Without My Daughter', 'Transworld Publishers Ltd'), ('Inferno', 'Bantam Books'), ('Purgatorio (The Divine Comedy  #2)', 'Bantam Books'), ('Light (Kefahuchi Tract  #1)', 'Spectra'), ('The Face', 'Bantam'), ('The Murder Stone', 'Bantam'), ('Dime Store Magic (Women of the Otherworld  #3)', 'Bantam Spectra'), ('Industrial Magic (Women of the Otherworld #4)', 'Bantam Spectra'), ('Beach Girls', 'Bantam'), ('Foundation and Earth (Foundation #5)', 'Spectra'), ('The Devil in the White City: Murder  Magic and Madness at the Fair that Changed America', 'Bantam Press'), ('The Kid Stays in the Picture', 'Faber & Faber'), ('The Avignon Quintet: Monsieur  Livia  Constance  Sebastian and Quinx', 'Faber & Faber'), ('High Performance MySQL: Optimization  Backups  Replication & Load Balancing', \"O'Reilly Media\"), ('BSD Hacks', \"O'Reilly Media\"), ('iMovie 4 & iDVD: The Missing Manual: The Missing Manual', 'Pogue Press'), ('Rising Sun', 'Turtleback Books'), (\"Charlie Wilson's War: The Extraordinary Story of the Largest Cover Operation in History\", 'Turtleback Books'), ('Queen of Scots: The True Life of Mary Stuart', 'Houghton Mifflin'), ('The Best American Mystery Stories 2004', 'Mariner Books'), ('The Best American Nonrequired Reading 2004', 'Houghton Mifflin'), ('The Silmarillion', 'Houghton Mifflin Company'), ('The Earth and Its Peoples: A Global History  Volume C: Since 1750', 'Cengage Learning'), ('Fabulous Small Jews', 'Mariner Books'), ('Reefer Madness: Sex  Drugs  and Cheap Labor in the American Black Market', 'Mariner Books'), ('Dark Star Safari: Overland from Cairo to Cape Town', 'Mariner Books'), ('Natural Health  Natural Medicine', 'Mariner Books'), ('The Lord of the Rings (The Lord of the Rings  #1-3)', 'Houghton Mifflin Harcourt'), ('The Fellowship of the Ring (The Lord of the Rings  #1)', 'Houghton Mifflin Company'), ('In the Shadow of Young Girls in Flower (In Search of Lost Time  #2)', 'Viking Adult'), ('How to Stop Worrying and Start Living', 'Gallery Books'), ('Sharp Edges', 'Pocket Star Books'), ('Four & Twenty Blackbirds (Bardic Voices  #4)', 'Baen Books'), ('Sonnets', 'Simon Schuster'), ('The Color Purple', 'Pocket'), ('What Is Ancient Philosophy?', 'Belknap Press'), ('Magic Circles: The Beatles in Dream and History', 'Harvard University Press'), ('The Killer Angels: A Novel of the Civil War (The Civil War Trilogy  #2)', 'Modern Library'), ('The Collected Autobiographies of Maya Angelou', 'Modern Library'), ('Mortals', 'Vintage'), (\"Mary Stewart's Merlin Trilogy (Arthurian Saga  #1-3)\", 'Harper Voyager'), ('Nancy Drew: Girl Detective: #1-4', 'Aladdin'), ('Walden', 'Princeton University Press'), ('Shamanism: Archaic Techniques of Ecstasy', 'Princeton University Press'), ('Mary Queen of Scots and the Murder of Lord Darnley', 'Pimlico'), ('Robbins and Cotran Review of Pathology', 'Saunders'), ('Hell House', 'Severn House Publishers'), ('Code Complete', 'Microsoft Press'), (\"Zolar's Encyclopedia and Dictionary of Dreams: Fully Revised and Updated for the 21st Century\", 'Atria Books'), ('Authentic Happiness: Using the New Positive Psychology to Realize Your Potential for Lasting Fulfillment', 'Atria Books'), ('Brick Lane', 'Scribner'), (\"Will You Miss Me When I'm Gone? The Carter Family and Their Legacy in American Music\", 'Simon Schuster'), ('Wrapped in Rainbows: The Life of Zora Neale Hurston', 'Scribner'), ('Plan of Attack', 'Simon & Schuster'), ('Frankenstein', 'Kaplan Publishing'), ('The Path Between the Seas: The Creation of the Panama Canal  1870-1914', 'Simon Schuster'), ('The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change', 'Free Press'), ('The Other Boleyn Girl', 'Atria Books'), ('The Good Earth (House of Earth  #1)', 'Washington Square Press'), ('Plain Truth', 'Atria Books'), ('The Coffin Dancer (Lincoln Rhyme  #2)', 'Simon & Schuster'), ('The Second Time Around', 'Pocket Books'), ('Nighttime Is My Time', 'Simon & Schuster Adult Publishing Group'), ('Black Cat (Gemini  #2)', 'Pocket Books'), ('The Vanished Man (Lincoln Rhyme  #5)', 'Pocket Books'), ('The Footprints of God', 'Pocket Star Books'), ('The Price of Pleasure (Sutherland Brothers  #2)', 'Pocket Books'), ('Dead I Well May Be (Dead Trilogy #1)', 'Pocket Books'), ('Romeo and Juliet', 'Simon Schuster'), ('Othello', 'Simon Schuster'), ('Underworld: Blood Enemy (Underworld  #2)', 'Pocket Star'), ('King Lear', 'Simon Schuster'), ('Othello', 'Simon Schuster'), ('Richard III', 'Simon Schuster'), ('Easy Prey (Lucas Davenport  #11)', 'Simon & Schuster'), ('Certain Prey (Lucas Davenport  #10)', 'Simon & Schuster'), ('Henry V', 'Washington Square Press'), ('The Count of Monte Cristo', 'Simon Schuster'), ('The Scarlet Letter', 'Simon & Schuster'), ('Frankenstein  or the Modern Prometheus', 'Pocket Books'), ('A Tale of Two Cities', 'Simon Schuster'), ('The Awakening and Selected Stories', 'Simon Schuster'), ('The Scarlet Pimpernel', 'Simon Schuster'), ('Twisted: The Collected Short Stories', 'Pocket Books'), ('Dracula', 'Walker Books Ltd'), ('To the Nines (Stephanie Plum  #9)', \"St. Martin's Press\"), ('The Dream Kingdom (The Morland Dynasty  #26)', 'Little Brown Book Group'), ('The Bourne Ultimatum (Jason Bourne  #3)', 'Orion'), ('The Icarus Agenda', 'Orion Books'), ('Trevayne', 'Orion'), ('The Shadow of the Wind', 'Phoenix'), ('The Jester', 'Headline'), ('Falling for You', 'Headline Review'), ('Joust (Dragon Jousters  #1)', 'DAW'), ('The War of the Flowers', 'DAW'), (\"Exile's Valor (Heralds of Valdemar  #7)\", 'DAW'), ('The DC Comics Encyclopedia', 'DK Publishing'), ('Lemon Meringue Pie Murder (Hannah Swensen  #4)', 'Kensington'), ('Corvette: Fifty Years', 'Motorbooks'), ('PHP and MySQL for Dummies', 'For Dummies'), ('ebay Timesaving Techniques for Dummies', 'Wiley'), ('Starting an eBay Business for Dummies', 'Wiley'), ('Dreamer of Dune: The Biography of Frank Herbert', 'Tor Books'), ('Maps in a Mirror: The Short Fiction of Orson Scott Card', 'Orb Books'), ('Sleeping in Flame (Answered Prayers  #2)', 'Orb Books'), ('Wasteland of Flint', 'Tor Books'), ('Naked Empire (Sword of Truth  #8)', 'Tor Books'), ('Wolfskin (Saga of the Light Isles  #1)', 'Tor Books'), ('New Threads in the Pattern: The Great Hunt  Part 2 (Wheel of Time  #2-2)', 'Starscape'), ('A Short History of Nearly Everything', 'Broadway Books'), ('Babyville', 'Broadway Books'), ('The Full Matilda', 'Broadway Books'), ('Holy Cow: An Indian Adventure', 'Broadway Books'), ('The Prize (deWarenne Dynasty  #4)', 'Mira Books'), ('Marvels', 'Marvel Comics Group'), ('Essential Monster of Frankenstein  Vol. 1', 'Marvel Comics'), ('The Origin of Species', 'Castle Books'), ('Island Of Bones (Louis Kincaid  #5)', 'Pinnacle'), ('The Mammoth Book of Storms  Shipwrecks and Sea Disasters', 'Running Press'), ('Summerland', 'Miramax'), ('The Legend of Huma (Dragonlance: Heroes  #1)', 'Wizards of the Coast'), ('Time of the Twins (Dragonlance: Legends  #1)', 'Wizards of the Coast'), ('The Search for Power (Dragonlance: Tales from the War of Souls  #3)', 'Wizards of the Coast'), ('Night of Blood (Dragonlance: The Minotaur Wars  #1)', 'Wizards of the Coast'), ('Dragons in the Archives: The Best of Weis & Hickman (Dragonlance Anthology)', 'Wizards of the Coast'), ('In Focus: National Geographic Greatest Portraits', 'National Geographic Society'), ('Cruelest Journey: Six Hundred Miles To Timbuktu', 'National Geographic Society'), ('The Odyssey (New Translations from Antiquity)', 'Johns Hopkins University Press'), (\"Charlie Wilson's War: The Extraordinary Story of How the Wildest Man in Congress and a Rogue CIA Agent Changed the History of our Times\", 'Grove Press'), ('Monster: The Autobiography of an L.A. Gang Member', 'Grove Press'), ('Layer Cake', 'Grove Press Black Cat'), ('The Second World War: A Complete History', 'Holt McDougal'), (\"Hegemony or Survival: America's Quest for Global Dominance\", 'Holt McDougal'), ('The Origins of Totalitarianism', 'Schocken Books'), ('Once Upon a Gulf Coast Summer', 'B Fiction'), ('Anna Karenina', 'Wildside Press'), ('Drum Into Silence (Drums of Chaos  #3)', 'Tor Fantasy'), ('The Scientists: A History of Science Told Through the Lives of Its Greatest Inventors', 'Random House Trade Paperbacks'), ('The Birth of Venus', 'Random House'), ('The Knight of Maison-Rouge', 'Modern Library'), ('Selected Stories', 'Modern Library'), ('Kim', 'Modern Library'), ('The Red and the Black', 'Modern Library'), ('The Mysterious Island (Extraordinary Voyages  #12)', 'Modern Library'), ('Mountains Beyond Mountains: The Quest of Dr. Paul Farmer  a Man Who Would Cure the World', 'Random House Trade'), ('Filth: Dirt  Disgust  and Modern Life', 'Univ Of Minnesota Press'), ('Weekend Warriors (Sisterhood  #1)', 'Kensington'), ('See How She Dies', 'Zebra Books'), ('Courageous Faith Through the Year', 'IVP Books'), ('Rejoice (Redemption  #4)', 'Tyndale House Publishers'), ('Reunion (Redemption  #5)', 'Tyndale House Publishers'), ('Sweet Revenge', 'Leisure Books'), ('The Deed (Deed  #1)', 'Leisure Books'), ('Nightmare House (Harrow House  #1)', 'Leisure Books'), ('The Chase (Deed  #3)', 'Leisure Books'), ('Blood Moon Over Bengal', 'Leisure Books'), ('History of Beauty', 'Rizzoli'), ('Blink', 'Thomas Nelson'), ('Tuscan Countess: The Life and Extraordinary Times of Matilda of Canossa', 'Vendome Press'), ('Republic', 'Hackett Publishing Company Inc.'), ('The St. Paul Stories of F. Scott Fitzgerald', 'Minnesota Historical Society Press'), (\"A Gateway to Sindarin: A Grammar of an Elvish Language from J.R.R. Tolkien's Lord of the Rings\", 'University of Utah Press'), ('Harpo Speaks!', 'Limelight Editions'), ('Bioinformatics: Sequence and Genome Analysis', 'Cold Spring Harbor Laboratory Press'), ('The Elements of Typographic Style', 'Hartley & Marks Publishers'), ('The Complete I Ching: The Definitive Translation', 'Inner Traditions International'), ('The Criss Cross', 'Melodrama Publishing'), (\"Programming Ruby: The Pragmatic Programmers' Guide\", 'Pragmatic Bookshelf'), ('Plants and Landscapes for Summer-Dry Climates of the San Francisco Bay Region', 'East Bay Municipal Utility District'), ('Natural Cures \\\\\"They\\\\\" Don\\'t Want You to Know about', 'Alliance Publishing'), ('The Dogs of Riga (Kurt Wallander  #2)', 'Vintage Crime/Black Lizard'), ('The Secret History', 'Vintage'), ('Beloved', 'Vintage'), ('Song of Solomon', 'Vintage'), ('Tar Baby', 'Vintage'), ('Providence of a Sparrow: Lessons from a Life Gone to the Birds', 'Anchor'), ('Living to Tell the Tale', 'Vintage'), (\"Lidia's Family Table\", 'Knopf Publishing Group'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", \"Everyman's Library\"), ('The Plague  The Fall  Exile and the Kingdom  and Selected Essays', \"Everyman's Library\"), ('Runaway', 'Alfred A. Knopf'), ('Dead Souls', \"Everyman's Library\"), (\"The Last Hours of Ancient Sunlight: The Fate of the World and What We Can Do Before It's Too Late\", 'Broadway Books'), (\"FDR's Folly: How Roosevelt and His New Deal Prolonged the Great Depression\", 'Crown Forum'), ('Titan: The Life of John D. Rockefeller  Sr.', 'Vintage'), ('The Filth', 'Vertigo'), ('On the Road to Perdition \u2014 Oasis  Sanctuary  and Detour \u2014 (Road to Perdition  #2)', 'DC Comics'), ('Pledged: The Secret Life of Sororities', 'Hyperion'), ('Scar Tissue', 'Hachette Books'), ('Feast: Food to Celebrate Life', 'Hachette Books'), (\"Jamie's Dinners: The Essential Family Cookbook\", 'Hachette Books'), ('Illustrated Guide to the NEC: Based on the 2005 National Electric Code', 'Cengage Learning'), ('Little Women (Little Women  #1)', 'Sterling'), (\"Kushiel's Avatar (Ph\u00e8dre's Trilogy  #3)\", 'Tor'), ('The English Novel: An Introduction', 'Wiley-Blackwell'), ('The Radical Right & the Murder of John F. Kennedy: Stunning Evidence in the Assassination of the President', 'Trafford Publishing'), ('The Best Short Stories of Edith Wharton', 'Kessinger Publishing'), ('Katherine', 'Chicago Review Press'), (\"Not Your Mother's Slow Cooker Cookbook\", 'Harvard Common Press'), ('The Mother', 'Moyer Bell and its subsidiaries'), ('Kinfolk', 'Moyer Bell and its subsidiaries'), ('Expelled from Eden: A William T. Vollmann Reader', 'Da Capo Press'), ('Enslaved by Ducks', 'Algonquin Books'), ('On Genesis/A Refutation of the Manichees/The Unfinished Literal Meaning of Genesis (Works of St Augustine 1)', 'New City Press'), ('Selected Poems of Herman Melville', 'David R. Godine Publisher'), ('Africa South of the Sahara: A Geographical Interpretation (Texts In Regional Geography)', 'The Guilford Press'), ('The Story of Philosophy', 'AudioGO'), ('The Letters of Vita Sackville-West and Virginia Woolf', 'Cleis Press'), ('1000 Rings: Inspiring Adornments for the Hand', 'Lark Books'), ('Prophet', 'Crossway Books'), ('Chop Shop (Bug Man  #2)', 'Howard Books'), ('The Stones of Summer', 'Overlook Press'), ('Cocktail Time', 'Harry N. Abrams'), ('Piccadilly Jim', 'Harry N. Abrams'), ('The Big Book of Boy Stuff', 'Gibbs Smith Publishers'), (\"Heart & Hands: A Midwife's Guide to Pregnancy & Birth\", 'Celestial Arts'), (\"The Music of the Republic: Essays on Socrates' Conversations and Plato's Writings\", 'Paul Dry Books'), ('Open Secrets / Inward Prospects: Reflections on World and Soul', 'Paul Dry Books'), ('The Ivory Tower', 'NYRB Classics'), ('The Wave in the Mind: Talks and Essays on the Writer  the Reader and the Imagination', 'Shambhala'), ('A Guide to the Words of My Perfect Teacher', 'Shambhala'), ('Joel on Software', 'Apress'), ('Tuf Voyaging', 'Meisha Merlin Publishing'), ('The Brothers Karamazov', 'Barnes Noble Classics'), ('The Idiot', 'Barnes Noble Classics'), ('Essential Tales and Poems', 'Barnes Noble Classics'), ('The Portrait of a Lady', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('A Tale of Two Cities', 'Barnes & Noble Classics'), ('The Three Musketeers', 'Barnes Noble Classics'), ('The House of Mirth', 'Barnes Noble Classics'), ('Anna Karenina', 'Barnes & Noble'), ('Oliver Twist', 'Barnes Noble Classics'), ('Pride and Prejudice', 'Barnes Noble Classics'), ('A Tale of Two Cities', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('Write Great Code: Volume 1: Understanding the Machine', 'No Starch Press'), ('The Nature of Play: Great Apes and Humans', 'The Guilford Press'), ('The Lovely Bones', 'Large Print Press'), ('The Zanzibar Chest', 'Riverhead Books'), (\"The Magicians' Guild (Black Magician Trilogy  #1)\", 'Orbit'), ('The Novice (Black Magician Trilogy  #2)', 'Orbit'), ('The High Lord (Black Magician Trilogy  #3)', 'Orbit'), ('Desiring God: Meditations of a Christian Hedonist', 'Inter-Varsity Press'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", 'Random House'), ('Architecture and Tourism: Perception  Performance and Place', 'Bloomsbury Academic'), ('Watchfiends and Rack Screams: Works from the Final Period', 'Exact Change'), (\"Harrington on Hold 'em: Expert Strategy for No-Limit Tournaments  Volume I: Strategic Play\", 'Two Plus Two Publishing LLC'), ('Her Smoke Rose Up Forever', 'Tachyon Publications'), (\"The Devil's in the Details (A Camilla MacPhee Mystery  #4)\", 'Napoleon and Co'), ('Judas Pig', 'Do-Not Press'), ('Little Women', \"Collector's Library\"), ('Collected Stories I: Gimpel the Fool to The Letter Writer', 'Library of America'), ('Collected Stories III: One Night in Brazil to The Death of Methuselah', 'Library of America'), (\"McSweeney's #14\", \"McSweeney's\"), ('Think and Grow Rich', 'High Roads Media'), ('Under the Influence: The Disinformation Guide to Drugs', 'The Disinformation Company (NYC)'), ('\u041c\u0430\u0441\u0442\u0435\u0440 \u0438 \u041c\u0430\u0440\u0433\u0430\u0440\u0438\u0442\u0430', '\u042d\u043a\u0441\u043c\u043e'), ('El club Dante', 'Seix Barral'), ('Ahora sabr\u00e9is lo que es correr', 'Mondadori'), ('El hombre duplicado', 'Punto de Lectura'), ('El azul de la virgen', 'Punto de Lectura'), ('Harry Potter y la Orden del F\u00e9nix (Harry Potter  #5)', 'Emece Editores'), ('El umbral de la noche', 'Debolsillo'), ('O Xar\u00e1', 'Companhia das Letras'), ('Narraciones Extraordinarias', 'Panamericana Editorial'), ('Zaat', 'American University in Cairo Press'))", "rowcount": 528, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 400, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "(('Saints',), ('Lovelock (Mayflower Trilogy  #1)',), ('Legends',), ('Sarah (Women of Genesis  #1)',), ('Shadow of the Hegemon (The Shadow Series  #2)',), ('How to Write Science Fiction & Fantasy',), (\"X\u00e9nocide (Ender's Saga  #3)\",))", "rowcount": 7, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 401, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(*) from \"cust_order\" as t1 inner join \"customer\" as t2 on t1.custom\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 402, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 403, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((25.260960334029228,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 404, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"order_date\", '%Y') from \"cust_order\" group by sys.t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected EXTRACT in: \"select extract(year from order_date) from cust_order group by extract\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 3}
{"sql_id": 405, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 406, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(\"email\" from position('@' in \"email\") + 1 for length(\"email\") -\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 8, "FP": 3, "FN": 0}
{"sql_id": 407, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(*) from \"order_status\" as t1 inner join \"order_history\" as t2 on t1\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 408, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 409, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 410, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(*) \n!from \"order_status\" as t1 \n!inner join \"order_history\" as t2 on \"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 411, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 412, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select cast(sum(case when t1.\"status_value\" = 'Returned' then 1 else 0 end) as f\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 413, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"title\" from book as t1 inner join publisher as t2 on t1.\"publisher_id\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 414, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((3.84,), (4.82,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 415, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 416, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 417, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 418, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_format(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 419, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(t2.\"inspection_id\") \n!from \"employee\" as t1 inner join \"inspection\" \"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 420, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(distinct t1.\"license_no\") from \"inspection\" as t1 inner join \"estab\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 421, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 422, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((\"TONY'S BURRITO MEX, INC\",), (\"PIZZARO'S\",), ('ORANGE GARDEN RESTAURANT LLC',), ('COALFIRE',), ('FOREVER YOGURT',), ('DUKS RED HOTS',), ('Southern Grill',), ('EL SALVADOR RESTAURANT',), ('LA HACIENDITA TAQUERIA INC',), ('COMPUTER AND NETWORK SOLUTIONS',), ('TAQUERIA JAMAY',), ('JALISCO RESTAURANT',), ('EL CONCORDIA',), ('LAS ISLAS MARIAS',), ('McDonalds',), ('STARFRUIT CAFE',), ('SMOTHER BROTHERS',), ('GOLDEN CRUST PIZZERIA',), ('THE PARTHENON RESTAURANT INC',), ('THE WORM HOLE',), (\"CHICAGO'S HOME OF CHICKEN & WAFFLES\",), ('SAN JOSE RESTAURANT, INC.',), ('EL MEZQUITE GRILL',), ('PR CAFETERIA INCORPORATED',), ('ROCKIN  TACO',))", "rowcount": 25, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 423, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'datepart(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 424, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_char(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 425, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 426, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_char(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 427, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 428, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 429, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_part(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 430, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 431, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 433, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select cast(count(case when t1.\"first_name\" = 'Jessica' and t1.\"last_name\" = 'An\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 434, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 435, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 436, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 437, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'date_format(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 438, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "(('COALFIRE', 'Fail'), (\"TONY'S SUB\", 'Pass'), (\"MARY'S SNACK SHOP\", 'Pass w/ Conditions'), (\"MCDONALD'S CORPORATION\", 'Pass'), ('AL BAR B QUE', 'Pass'), ('RIB PLACE INC.', 'Pass'), ('MR CAJAKES SANDWICH SHOP', 'Pass w/ Conditions'), ('AMEER KABOB', 'Pass'), ('LOS CANDILES', 'Pass'), (\"BANANA JOE'S\", 'Pass'))", "rowcount": 10, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 439, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 440, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 441, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 442, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.date'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 443, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.date'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 444, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((102415334.30652,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((102415334.30652,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 445, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'datepart(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 446, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 448, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Novacoin',), ('Mincoin',), ('Freicoin',), ('BitBar',), ('WorldCoin',), ('Digitalcoin',), ('Goldcoin',), ('Argentum',), ('Fastcoin',), ('Megacoin',), ('Infinitecoin',), ('Primecoin',), ('Anoncoin',), ('CasinoCoin',), ('Bullion',), ('Emerald Crypto',), ('Quark',), ('Zetacoin',), ('SecureCoin',), ('Sexcoin',), ('TagCoin',), ('I0Coin',), ('FLO',), ('Joulecoin',), ('Datacoin',), ('BetaCoin',), ('GrandCoin',), ('Deutsche eMark',), ('NetCoin',), ('HoboNickels',), ('Tigercoin',), ('Orbitcoin',), ('Catcoin',), ('RonPaulCoin',), ('Mooncoin',), ('Dimecoin',), ('RedCoin',), ('TeslaCoin',), ('NobleCoin',), ('Nyancoin',), ('UltraCoin',), ('PotCoin',), ('Blakecoin',), ('HunterCoin',), ('CacheCoin',), ('Aricoin',), ('Auroracoin',), ('Pesetacoin',), ('Marscoin',), ('Cashcoin',), ('Pandacoin',), ('MAZA',), ('Uniform Fiscal Object',), ('LiteBar',), ('Photon',), ('Myriad',), ('DNotes',), ('Skeincoin',), ('Einsteinium',), ('Bitcoin Scrypt',), ('Coin(O)',), ('FlutterCoin',), ('OctoCoin',), ('e-Gulden',), ('PLNcoin',), ('AsiaCoin',), ('PopularCoin',), ('CannaCoin',), ('BlueCoin',), ('Canada eCoin',), ('Guncoin',), ('Pinkcoin',), ('Energycoin',), ('VeriCoin',), ('TEKcoin',), ('Litecoin Plus',), ('UnbreakableCoin',), ('CryptCoin',), ('SuperCoin',), ('BoostCoin',), ('Hyper',), ('BitQuark',), ('CloakCoin',), ('Fantomcoin',), ('ArtByte',), ('Donationcoin',), ('Piggycoin',), ('Startcoin',), ('Boolberry',), ('SHACoin',), ('BritCoin',), ('Quatloo',), ('Viacoin',), ('Triangles',), ('I/O Coin',), ('Cryptonite',), ('Carboncoin',), ('Titcoin',), ('Virtacoin',), ('Joincoin',), ('Bitmark',), ('Halcyon',), ('Donu',), ('Emercoin',), ('NativeCoin',), ('BunnyCoin',), ('Acoin',), ('FoldingCoin',), ('bitCNY',), ('Sterlingcoin',), ('Magi',), ('ExclusiveCoin',), ('Trollcoin',), ('GlobalBoost-Y',), ('Prime-XI',), ('Dashcoin',), ('Sativacoin',), ('SpreadCoin',), ('Blocknet',), ('Gapcoin',), ('GCN Coin',), ('Bitcoin Fast',), ('PayCoin',), ('Unitus',), ('IncaKoin',), ('SmileyCoin',), ('Bean Cash',), ('Wild Beast Block',), ('Gridcoin',), ('Sharkcoin',), ('SongCoin',), ('Crave',), ('Pura',), ('Neutron',), ('Xaurum',), ('Californium',), ('Advanced Internet Blocks',), ('Universal Currency',), ('Bata',), ('FujiCoin',), ('EuropeCoin',), ('The Cypherfunks',), ('GravityCoin',), ('IrishCoin',), ('Bitzeny',), ('BowsCoin',), ('AnarchistsPrime',), ('CompuCoin',), ('Hellenic Coin',), ('TransferCoin',), ('AmsterdamCoin',), ('Eurocoin',), ('VectorAI',), ('SpaceCoin',), ('Pakcoin',), ('Influxcoin',), ('Expanse',), ('Swing',), ('ParallelCoin',), ('Save and Gain',), ('Elite',), ('SOILcoin',), ('Adzcoin',), ('RussiaCoin',), ('EverGreenCoin',), ('Creditbit',), ('Litecred',), ('Yocoin',), ('Francs',), ('Evil Coin',), ('Asiadigicoin',), ('TrumpCoin',), ('C-Bit',), ('Independent Money System',), ('HOdlcoin',), ('BERNcash',), ('DigixDAO',), ('Fantasy Cash',), ('FuzzBalls',), ('HiCoin',), ('Zurcoin',), ('SixEleven',), ('2GIVE',), ('PlatinumBAR',), ('MarteXcoin',), ('Nullex',), ('Citadel',), ('RevolverCoin',), ('GoldBlocks',), ('Breakout',), ('Debitcoin',), ('Comet',), ('Rise',), ('LBRY Credits',), ('PutinCoin',), ('Syndicate',), ('Cryptojacks',), ('Steem Dollars',), ('Ardor',), ('808Coin',), ('VapersCoin',), ('TajCoin',), ('Experience Points',), ('B3Coin',), ('Neo',), ('Bitcloud',), ('Zayedcoin',), ('Tao',), ('Tellurion',), ('Dollarcoin',), ('MustangCoin',), ('PROUD Money',), ('Sequence',), ('Atomic Coin',), ('JobsCoin',), ('Sakuracoin',), ('Cubits',), ('BipCoin',), ('Zoin',), ('Lykke',), ('Golem',), ('Internet of People',), ('Nexium',), ('Vault Coin',), ('Pabyosi Coin (Special)',), ('Alias',), ('BenjiRolls',), ('iBank',), ('FirstCoin',), ('Solarflarecoin',), ('Eryllium',), ('Elysium',), ('Centurion',), ('Marijuanacoin',), ('PRCoin',), ('Argus',), ('MarxCoin',), ('Pascal Lite',), ('MiloCoin',), ('Musicoin',), ('ZSEcoin',), ('Impact',), ('DubaiCoin',), ('Darsek',), ('Matchpool',), ('Ultimate Secure Cash',), ('BlazerCoin',), ('HappyPay',), ('Coinonat',), ('Lunyr',), ('Qtum',), ('Aeternity',), ('Metaverse ETP',), ('MobileGo',), ('Neuro',), ('More Coin',), ('TenX',), ('Ecobit',), ('Gas',), ('Santiment Network Token',), ('CVCoin',), ('SkinCoin',), ('OracleChain',), ('Shadow Token',), ('BlockCAT',), ('Nebulas',), ('Achain',), ('Loopring',), ('Monetha',), ('Agrello',), ('Elixir',), ('VIBE',), ('Voise',), ('RChain',), ('FLiK',), ('BridgeCoin',), ('ALIS',), ('HelloGold',), ('Enigma',), ('Change',), ('Bitcoin Gold',), ('KuCoin Token',), ('EXRNchain',), ('LATOKEN',), ('NULS',), ('JavaScript Token',), ('Etherparty',), ('Revain',), ('Electroneum',), ('Raiden Network Token',), ('Ties.DB',), ('Upfiring',), ('bitJob',), ('Viuly',), ('EncrypGen',), ('Bodhi',), ('Quantstamp',), ('QASH',), ('Bitcoin Diamond',), ('Divi Exchange Token',), ('Flixxo',), ('Presearch',), ('CyberMiles',), ('IoT Chain',), ('Wabi',), ('Verify',), ('Uquid Coin',), ('ProChain',), ('Ignis',), ('Playkey',), ('Datum',), ('LockTrip',), ('Genaro Network',), ('aelf',), ('Bibox Token',), ('Single Collateral DAI ',), ('SophiaTX',), ('HTMLCOIN',), ('Utrust',), ('AppCoins',), ('Mixin',), ('GameChain System',), ('Coinlancer',), ('AI Doctor',), ('Show',), ('United Traders Token',), ('Spectre.ai Dividend Token',), ('Vezt',), ('ugChain',), ('Bottos',), ('Selfkey',), ('MOAC',), ('IOST',), ('Nitro',), ('Aurora DAO',), ('SingularityNET',), ('Scry.info',), ('Mobius',), ('Hydro Protocol',), ('Maggie',), ('Trinity Network Credit',), ('DATA',), ('Matrix AI Network',), ('CoinFi',), ('Zeepin',), ('CPChain',), ('Zilla',), ('EtherSportz',), ('LOCIcoin',), ('Dether',), ('Fusion',), ('Neurotoken',), ('Concensum',), ('Insights Network',), ('Ravencoin',), ('Sharpe Platform Token',), ('Loom Network',), ('Noah Coin',), ('Mithril',), ('PolySwarm',), ('Stakenet',), ('U Network',), ('AdHive',), ('DeviantCoin',), ('Auctus',), ('Zebi Token',), ('Nexo',), ('Hydro',), ('Sharder',), ('Digitex',), ('Plian',), ('XMax',), ('Project Pai',), ('Karatgold Coin',), ('BitZ Token',), ('Everipedia',), ('Blue Whale EXchange',), ('NIX',), ('Apollo Currency',), ('Vexanium',), ('Maximine Coin',), ('Birake',), ('Gemini Dollar',), ('Paxos Standard',), ('FREE Coin',), ('USD Coin',), ('MMOCoin',), ('Italian Lira',), ('SINOVATE',), ('CWV Chain',), ('MXC',), ('Aergo',), ('HedgeTrade',), ('RSK Infrastructure Framework',), ('v.systems',), ('Grin',), ('Stably USD',), ('SOLVE',), ('PlayChip',), ('Constant',), ('Fetch.ai',), ('BORA',), ('Flexacoin',), ('Theta Fuel',), ('Japan Content Token',), ('Nash',), ('OTOCASH',), ('Locus Chain',), ('Newton',), ('ThoreNext',), ('Diamond Platform Token',), ('Artfinity',), ('Origo',), ('StakeCubeCoin',), ('Bitsdaq',), ('EOSDT',), ('Contentos',), ('MovieBloc',), ('MX Token',), ('USDK',), ('Silverway',), ('Dusk Network',), ('ChainX',), ('Oasis City',), ('GateToken',), ('Cocos-BCX',), ('BHEX Token',), ('BitForex Token',), ('Ladder Network Token',), ('Netbox Coin',), ('VideoCoin',), ('Streamit Coin',), ('MineBee',), ('Lightyears',), ('NuCypher',), ('1irstGold',), ('Ultragate',), ('Beyondcoin',), ('Waves Enterprise',), ('Bitcoin Vault',), ('Jarvis Network',), ('Ghost',), ('Xaya',), ('DXdao',), ('Secret',), ('Simple Software Solutions',), ('MATH',), ('Orion Protocol',), ('Kadena',), ('Sylo',), ('renBTC',), ('Sora',), ('sDEFI',), ('MCDEX',), ('Blocery',), ('ECOMI',), ('Kulupu',), ('Hakka.Finance',), ('UniLayer',), ('NFT',), ('YAMv2',), ('Lien',), ('Falconswap',), ('Polkaswap',), ('DataHighway',), ('BUILD Finance',), ('REVV',), ('Empty Set Dollar',), ('Wing',), ('Percent',), ('Defi Shopping Stake',), ('Rotten',), ('yAxis',), ('DeFiner',), ('DerivaDAO',), ('Nsure.Network',), ('Celo Dollar',), ('cVault.finance',), ('Persistence',), ('Polyient Games Governance Token',), ('Wrapped Origin Axie',), ('CoFiX',), ('Atari Token',), ('Value Liquidity',), ('UniLend',), ('DAOFi',), ('Akash Network',), ('Pepemon Pepeballs',), ('ETG Finance',), ('UnFederalReserve',), ('CryptoFrog.Finance',), ('Gameswap',), ('Unifi Protocol DAO',), ('88mph',), ('Vanilla Network',), ('Pancake Bunny',), ('Bifrost (BFC)',), ('Zoracles',), ('Plasma Finance',), ('Honey',), ('Unit Protocol Duck',), ('AnRKey X',), ('SafePal',), ('MAPS',), ('COVER Protocol',), ('Shabu Shabu Finance',), ('BSCEX',), ('NFTX',), ('ZKSwap',), ('CheeseSwap',), ('Poolz Finance',), ('Paralink Network',), ('Mdex',), ('Onooks',), ('Umbrella Network',), ('Lotto',), ('APYSwap',), ('Goose Finance',), ('Premia',), ('DAOventures',), ('Midas Dollar',), ('Vesper',), ('AC Milan Fan Token',), ('RamenSwap',), ('Polkacity',), ('PRCY Coin',), ('SOTA Finance',), ('Wault Finance (OLD)',), ('FileStar',), ('xToken',), ('Bounce Token',), ('BSCPAD',), ('Vortex Defi',), ('Konomi Network',), ('Playcent',), ('Space Cow Boy',), ('Illuvium',), ('Inverse Finance',), ('Belt',), ('LABS Group',), ('Splyt',), ('Oracle Top 5 Tokens Index',), ('StakerDAO',), ('Ellipsis',), ('Uhive',), ('Scaleswap',), ('WHEAT Token',), ('UniFarm',), ('Refinable',), ('Chainswap',), ('DAIN',), ('Vulcan Forged PYR',), ('Crowny',), ('Phuture',), ('Synthetify',), ('Wault [New]',), ('Smaugs NFT',), ('ETHERLAND',), ('Cubiex Power',), ('MemePad',), ('CrossFi',), ('Coldstack',), ('JaguarSwap',), ('DinoExchange',), ('SingularityDAO',), ('Don-key',), ('My DeFi Pet',), ('Frenchie Network',), ('Sleepy Sloth Finance',), ('Bakery Tools',), ('xxxNifty',), ('Oviex',), ('YooShi',), ('HODL',), ('Netvrk',), ('Dotmoovs',), ('Lean',), ('Elk Finance',), ('Rabbit Finance',), ('Vega Protocol',), ('Convex CRV',), ('EthereumPay',), ('Alpha Impact',), ('Dina',), ('Waivlength',), ('Whale Fall',), ('Pornstar',), ('AirNFTs',), ('PureFi Protocol',))", "rowcount": 589, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"here\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 449, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t1.\"name\" from coins as t1 inner join historical as t2 on t1.id = t2.coin\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 450, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'date' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 453, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t1.\"CustomerID\") from \"Customers\" as t1 inner join \"Orders\" as t2 o\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 455, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((5,), (14,), (14,), (2,), (3,), (8,), (8,), (9,), (24,), (6,), (22,), (3,), (6,), (10,), (5,), (4,), (4,), (3,), (1,), (1,))", "rowcount": 20, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 463, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_char(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 471, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.5964036,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t2.\"n_name\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 473, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 474, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4.7149124,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4.7149124,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 475, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((995,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 476, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(l_linenumber) from lineitem where l_returnflag = 'R' and l_shipmode\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 477, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(\"T2\".\"o_orderkey\") from \"lineitem\" as \"T1\" inner join \"orders\" as \"\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 478, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((9.490509,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((9.49050949050949,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 479, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 480, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 481, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.495614,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast((sum(iif(t2.n_name =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 482, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 483, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 484, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((48.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((48.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 485, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26.829268,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 486, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((23.350254,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((23.3502538071066,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 487, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-21.988263888888923,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-21.988263888888923,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 3, "FN": 0}
{"sql_id": 488, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((67.39927,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected COMPARISON, expecting ')' or ',' in: \"select cast(sum(iif(t3.\"s_acctbal\"  <\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 489, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 2}
{"sql_id": 490, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((6.0913706,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6.0913706,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 491, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('RAIL',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('RAIL',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 492, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 493, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-229,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-229,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 494, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select (2440587.5 + extract(epoch\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'julianday(date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 495, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18.481518,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((18.48151848151848,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 496, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 497, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'date_year(date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 498, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 499, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 500, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((25.641026,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((25.641026,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 501, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'date_year(date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 502, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 503, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(o_orderkey) from orders where year\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 504, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select \"T3\".\"c_name\" from \"orders\" as \"T1\" inner join \"lineitem\" as \"T2\" on \"T1\"\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected character (U+FF5C)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 505, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((150,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((150,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 506, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 507, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: function 'count' not found\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'playerinfo'\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 508, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select cast((2440587.5 + extract(epoch\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'startdate' unknown\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 510, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((45.37037,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select cast(count(case when \"MaritalStatus\" = 'M' then 1 else null end) as real)\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 511, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_char(timestamp,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 512, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((77.994,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 513, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, 'OR'), (0, 'AB'), (0, '33'), (0, 'MA'), (0, 'WA'), (0, 'CA'), (0, 'MT'), (0, 'AZ'), (0, 'NE'), (0, 'NY'), (0, 'PA'), (0, 'NSW'), (0, 'SA'), (0, 'ON'), (0, 'QC'), (0, 'MB'), (0, 'NB'), (0, 'BC'), (0, 'TX'), (0, 'SD'), (0, 'IL'), (0, 'MO'), (0, 'WI'), (0, 'ENG'), (0, '59'), (0, '75'), (0, '32'), (0, '91'), (0, 'BB'), (0, 'HE'), (0, 'RI'), (0, 'CT'), (0, 'NH'), (0, 'ME'), (0, 'OH'), (0, 'MI'), (0, 'IN'), (0, 'ID'), (0, 'WY'), (0, 'FL'), (0, 'TN'), (0, 'AL'), (0, 'NC'), (0, 'KY'), (0, 'MS'), (0, 'SC'), (0, 'UT'), (0, 'NM'), (0, 'NV'), (0, 'CO'), (0, 'MD'), (0, 'MN'), (0, 'VIC'), (0, '93'), (0, '62'), (0, 'QLD'), (0, '57'), (0, '78'), (0, 'TAS'), (0, 'SL'), (0, 'NW'), (0, 'HH'), (0, 'BY'), (0, '94'), (0, '41'), (0, '77'), (0, '92'), (0, '17'), (0, 'GA'), (0, '45'), (0, '95'), (0, 'VA'), (0, '80'), (0, '31'))", "rowcount": 74, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'address'\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 514, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1431.5,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (1364.5,), (1364.5,), (1349.6,), (1349.6,), (1349.6,), (1364.5,), (2319.99,), (2319.99,), (2319.99,), (2294.99,), (2294.99,), (2294.99,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (44.54,), (61.92,), (120.27,), (44.54,), (61.92,), (120.27,), (594.83,), (594.83,), (594.83,), (594.83,), (594.83,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (63.5,), (63.5,), (63.5,), (69.99,), (69.99,), (69.99,), (120.0,), (159.0,), (54.99,), (1003.91,), (333.42,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (121.46,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (364.09,), (364.09,), (364.09,), (106.5,), (52.64,), (52.64,), (52.64,), (264.05,), (264.05,), (264.05,), (264.05,), (249.79,), (249.79,), (249.79,), (249.79,), (35.0,), (40.49,), (62.09,), (80.99,), (40.49,), (62.09,), (80.99,), (80.99,), (364.09,), (249.79,), (264.05,), (91.49,), (46.09,), (91.57,), (106.5,), (175.49,), (256.49,), (404.99,), (1214.85,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (1214.85,), (1214.85,), (1214.85,), (1700.99,), (1700.99,), (1700.99,), (1700.99,), (539.99,), (742.35,), (742.35,), (769.49,), (769.49,), (769.49,), (769.49,), (564.99,), (564.99,), (564.99,), (564.99,), (564.99,), (539.99,), (539.99,), (539.99,), (539.99,), (539.99,), (53.99,), (101.24,), (121.49,), (539.99,), (539.99,), (539.99,))", "rowcount": 156, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1431.5,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (1364.5,), (1364.5,), (1349.6,), (1349.6,), (1349.6,), (1364.5,), (2319.99,), (2319.99,), (2319.99,), (2294.99,), (2294.99,), (2294.99,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (44.54,), (61.92,), (120.27,), (44.54,), (61.92,), (120.27,), (594.83,), (594.83,), (594.83,), (594.83,), (594.83,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (63.5,), (63.5,), (63.5,), (69.99,), (69.99,), (69.99,), (120.0,), (159.0,), (54.99,), (1003.91,), (333.42,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (121.46,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (364.09,), (364.09,), (364.09,), (106.5,), (52.64,), (52.64,), (52.64,), (264.05,), (264.05,), (264.05,), (264.05,), (249.79,), (249.79,), (249.79,), (249.79,), (35.0,), (40.49,), (62.09,), (80.99,), (40.49,), (62.09,), (80.99,), (80.99,), (364.09,), (249.79,), (264.05,), (91.49,), (46.09,), (91.57,), (106.5,), (175.49,), (256.49,), (404.99,), (1214.85,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (1214.85,), (1214.85,), (1214.85,), (1700.99,), (1700.99,), (1700.99,), (1700.99,), (539.99,), (742.35,), (742.35,), (769.49,), (769.49,), (769.49,), (769.49,), (564.99,), (564.99,), (564.99,), (564.99,), (564.99,), (539.99,), (539.99,), (539.99,), (539.99,), (539.99,), (53.99,), (101.24,), (121.49,), (539.99,), (539.99,), (539.99,))", "rowcount": 156, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 515, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((44,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((44,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 516, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('W',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'transactionhistory'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 517, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('W',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'date(timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 518, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((290,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((290,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 519, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 520, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((276, 750000.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((276, 750000.0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 521, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((280,), (280,), (280,), (280,), (283,), (283,), (283,), (283,), (284,), (284,), (284,), (284,))", "rowcount": 12, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'BusinessEntityID' ambiguous\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 522, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1200000.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1200000.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 523, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((290,), (280,), (280,), (280,), (280,), (283,), (283,), (283,), (283,), (275,), (275,), (275,), (275,), (276,), (276,), (276,), (276,), (277,), (277,), (277,), (277,), (278,), (278,), (278,), (278,), (279,), (279,), (279,), (279,), (281,), (281,), (281,), (281,), (282,), (282,), (282,), (282,), (286,), (286,), (286,), (288,), (288,), (288,), (289,), (289,), (289,), (289,), (290,), (290,), (290,))", "rowcount": 50, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'SalesQuota' ambiguous\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 524, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((188715.0, 1.3384042553191489))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select sum(t1.\"Bonus\") as \"total_bonus\" , cast(sum(t1.\"Bonus\") as double precisi\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 525, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'employee'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 526, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((9,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 528, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t3.\"Name\") \n!from \"Person\" as t1 \n!inner join \"EmployeeDepartmentHist\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 529, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((38.76470588235294,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 530, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 531, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting SCOLON in: \"select \"T2\".\"BusinessEntityID\", extract(year from \"T2\".\"HireDate\") - extract(yea\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"BusinessEntityID\", year\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 532, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select 2011 - year\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 533, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Frank', 'S', 'Pellow'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.firstname'\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 534, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select person.firstname, person.lastname \n!from person inner join employee on per\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 535, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Jo', 'Berry', 71))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"FirstName\",\"LastName\" , year\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 536, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t1.firstname, t1.lastname \n!from person as t1 \n!inner join employee as t2 o\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 537, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 538, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 539, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Classic Vest, S', 'Team Athletic Co.'), ('Classic Vest, M', 'Team Athletic Co.'), ('Classic Vest, L', 'Team Athletic Co.'), (\"Women's Mountain Shorts, S\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, M\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, L\", 'Team Athletic Co.'), ('Water Bottle - 30 oz.', 'Green Lake Bike Company'), ('Mountain Bottle Cage', 'Green Lake Bike Company'), ('Road Bottle Cage', 'Green Lake Bike Company'), ('Patch Kit/8 Patches', 'Green Lake Bike Company'), ('Racing Socks, M', \"Jeff's Sporting Goods\"), ('Racing Socks, L', \"Jeff's Sporting Goods\"), ('Hitch Rack - 4-Bike', 'Green Lake Bike Company'), ('Bike Wash - Dissolver', 'Green Lake Bike Company'), ('Fender Set - Mountain', 'Green Lake Bike Company'), ('All-Purpose Bike Stand', 'Green Lake Bike Company'), ('Hydration Pack - 70 oz.', 'Green Lake Bike Company'), ('Short-Sleeve Classic Jersey, S', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, M', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, L', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, XL', 'Integrated Sport Products'), ('Rear Brakes', 'Superior Bicycles'), ('LL Mountain Seat/Saddle', 'First Rate Bicycles'), ('LL Mountain Seat/Saddle', 'Chicago City Saddles'), ('ML Mountain Seat/Saddle', 'First Rate Bicycles'), ('ML Mountain Seat/Saddle', 'Chicago City Saddles'), ('HL Mountain Seat/Saddle', 'Hybrid Bicycle Center'), ('HL Mountain Seat/Saddle', 'Chicago City Saddles'), ('LL Road Seat/Saddle', \"Hill's Bicycle Service\"), ('LL Road Seat/Saddle', 'Chicago City Saddles'), ('ML Road Seat/Saddle', \"Hill's Bicycle Service\"), ('ML Road Seat/Saddle', 'Chicago City Saddles'), ('HL Road Seat/Saddle', 'First Rate Bicycles'), ('HL Road Seat/Saddle', 'Chicago City Saddles'), ('LL Touring Seat/Saddle', 'Expert Bike Co'), ('LL Touring Seat/Saddle', 'Chicago City Saddles'), ('ML Touring Seat/Saddle', 'Expert Bike Co'), ('ML Touring Seat/Saddle', 'Chicago City Saddles'), ('HL Touring Seat/Saddle', 'Expert Bike Co'), ('HL Touring Seat/Saddle', 'Chicago City Saddles'), ('Mountain Tire Tube', 'Trikes, Inc.'), ('Road Tire Tube', 'Victory Bikes'), ('Touring Tire Tube', 'Victory Bikes'), ('LL Mountain Tire', 'Vista Road Bikes'), ('LL Mountain Tire', 'Sport Fan Co.'), ('ML Mountain Tire', 'Vista Road Bikes'), ('ML Mountain Tire', 'Sport Fan Co.'), ('HL Mountain Tire', 'Trikes, Inc.'), ('HL Mountain Tire', 'Sport Fan Co.'), ('LL Road Tire', 'Signature Cycles'), ('LL Road Tire', 'Professional Athletic Consultants'), ('ML Road Tire', 'Signature Cycles'), ('ML Road Tire', 'Professional Athletic Consultants'), ('HL Road Tire', 'Victory Bikes'), ('HL Road Tire', 'Professional Athletic Consultants'), ('Touring Tire', 'Victory Bikes'), ('Touring Tire', 'Professional Athletic Consultants'), ('LL Mountain Pedal', 'Greenwood Athletic Company'), ('LL Mountain Pedal', 'Crowley Sport'), ('ML Mountain Pedal', 'Greenwood Athletic Company'), ('ML Mountain Pedal', 'Crowley Sport'), ('HL Mountain Pedal', 'Inline Accessories'), ('LL Road Pedal', 'Mitchell Sports'), ('LL Road Pedal', 'Jackson Authority'), ('ML Road Pedal', 'Mitchell Sports'), ('ML Road Pedal', 'Jackson Authority'), ('HL Road Pedal', 'Compete Enterprises, Inc'), ('Touring Pedal', 'Bicycle Specialists'), ('Front Brakes', 'Superior Bicycles'), ('Chain', 'Varsity Sport Co.'))", "rowcount": 70, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t1.\"Name\", t3.\"Name\" from \"Product\" as t1 inner join \"ProductVendor\" as t\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 540, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"FirstName\", \"LastName\" from employee inner join person on \"Employee\".\"Bu\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 541, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 543, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('23:00:00', '07:00:00'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"T3\".\"StartTime\", \"T3\".\"EndTime\" from \"Employee\" as \"T1\" inner join \"Empl\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 544, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((datetime.date(2010, 5, 30),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 545, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57, 'Prasanna', 'E', 'Samarawickrama'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select year\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 546, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"PersonType\" from employee inner join person on \"BusinessEntityID\" = \"Bus\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 547, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t1.\"BusinessEntityID\") from \"Person\" as t1 \n!inner join \"EmployeeDep\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 548, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 549, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 550, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 6}
{"sql_id": 551, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 552, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select 365 * (year\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 6}
{"sql_id": 553, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((27, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 554, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, '73', '185', 47), (None, '74', '180', 44), (None, '73', '200', 43), (None, '75', '186', 40), (None, '74', '198', 46), ('Andrew Joseph Ernest', '72', '185', 45), ('Patrick', '74', '185', 60), ('Tomas Mikael', '71', '182', 54), (None, '72', '188', 45), ('Jose', '71', '182', 49), (None, '71', '180', 41))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 555, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-0.6024811218985775,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'master'\n", "exec_able": false}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 556, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('NO',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 557, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 558, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, 50))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.playerid'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 559, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.097561,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('6.097'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 560, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.1209364,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum((iif(t2.language =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 561, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.845218038920128,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 562, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Omg please the heck fix it',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"sql\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 563, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Classical Minutes: Musical Skills and Motivation | Tips and Insights | Instrumental Coaching | Onlin...',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 564, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1169,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select sum(units) from sales_in_weather where extract('month'\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 565, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 566, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((214,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.date'\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 567, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.date'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 568, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((12444,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12444,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 569, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 570, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((datetime.date(2013, 7, 19),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 571, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ORDER, expecting UNION or EXCEPT or INTERSECT or ')' in: \"select \"station_nbr\" from weather where substr(_date, 1, 4) = '2014' and substr(\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 572, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.date'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 573, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 574, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.date'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 575, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((43.333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select cast(sum(case when government = 'republic' then 1 else 0 end) as float) *\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 576, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t1.\"Country\", count(t1.\"Country\") \n!from \"economy\" as t1 inner join \"organ\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 577, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"Country\" from \"politics\" inner join \"population\" on \"politics\".\"Country\"\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 578, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Akagera', 'Mwanza,Rwanda'), ('Amazonas', 'Amapa,Amazonas,Amazonas,Cuzco,Ucayali,Loreto,Para'), ('Amudarja', 'Afghanistan,Khatlon,Dashhowuz,Samarqand,Leban,Qaraqalpoghiston'), ('Amur', 'Amurskaya oblast,Yevreyskaya avt. oblast,Heilongjiang,Khabarovskiy kray,Chitinskaya oblast'), ('Argun', 'Chitinskaya oblast,Heilongjiang'), ('Atbara', 'ash Shamaliyah,Ethiopia,ash Sharqiyah'), ('Bahr el-Djebel/Albert-Nil', 'Aali an Nil,Bahr al Ghazal,al Istiwaiyah,Uganda'), ('Bani', 'Cote dIvoire,Mali'), ('Benue', 'Nigeria,Nord'), ('Black Drin', 'Albania,Macedonia'), ('Blue Nile', 'al Khartum,Nil al Asraq,Ethiopia'), ('Bomu', 'Central African Republic,Haut Zaire'), ('Brahmaputra', 'Arunachal Pradesh,Assam,Bangladesh,Tibet'), ('Chire', 'Malawi,Tete,Zambezia'), ('Colorado', 'Arizona,Utah,Colorado,Baja California,Nevada,California,Sonora'), ('Columbia River', 'British Columbia,Oregon,Washington'), ('Cuango', 'Bandundu,Uige,Malanje,Bas Zaire,Lunda Norte,Lunda Sul'), ('Cuilo', 'Bandundu,Cuando Cubango,Bie,Moxico'), ('Detroit River', 'Michigan,Ontario'), ('Dnepr', 'Belarus,Kirovohradska,Chernihivska,Khersonska,Poltavska,Zaporizka,Dnipropetrovska,Cherkaska,Smolenskaya oblast,Kyyivska'), ('Dnjestr', 'Chernivetska,Lvivska,Ivano Frankivska,Odeska,Moldova,Khmelnytska,Ternopilska,Vinnytska'), ('Donau', 'Bacs Kiskun,Slovakia,Mehedinti,Odeska,Baden Wurttemberg,Upper Austria,Teleorman,Croatia,Baranya,Bulgaria,Pest,Olt,Tolna,Caras Severin,Bayern,Ialomita,Fejer,Galati,Vienna,Calarasi,Serbia,Moldova,Lower Austria,Dolj,Tulcea,Giurgiu,Komarom Esztergom,Braila,Constanta,Budapest (munic.)'), ('Doubs', 'Bourgogne,Franche Comte,JU'), ('Douro', 'Aveiro,Guarda,Porto,Viseu,Castile and Leon,Vila Real,Braganca'), ('Drau', 'Baranya,Slovenia,Trentino Alto Adige,Somogy,Carinthia,Croatia,Zala'), ('Elbe', 'Brandenburg,Niedersachsen,Mecklenburg Vorpommern,Hamburg,Sachsen Anhalt,Severocesky,Vychodocesky,Praha,Schleswig Holstein,Sachsen'), ('Euphrat', 'Adiyaman,Al Muthanna,Al Anbar,Gaziantep,Al Qadisiyah,An Najaf,Dhi Qar,Babil,Karbala,Syria,Malatya,Sanliurfa,Al Basrah,Ninawa'), ('Gambia', 'Gambia,Tambacounda,Guinea,Kolda'), ('Ganges', 'Bangladesh,Bihar,Uttar Pradesh,West Bengal'), ('Garonne', 'Aquitaine,Midi Pyrenees,Catalonia,Languedoc Roussillon'), ('Guadiana', 'Algarve,Castile La Mancha,Evora,Estremadura,Beja,Portalegre,Andalusia'), ('Iller', 'Baden Wurttemberg,Vorarlberg,Bayern'), ('Indus', 'Jammu and Kashmir,Pakistan,Tibet'), ('Inn', 'Bayern,Tyrol,GR'), ('Irawaddy', 'Ayeyarwady,Tibet,Sagaing,Yunnan,Magway,Yangon,Mandalay,Bago,Kachin'), ('Irtysch', 'Omskaya oblast,Semey,Shyghys Qazaqstan,Tyumenskaya oblast,Xinjiang Uygur,Pavlodar'), ('Isar', 'Bayern,Tyrol'), ('Ischim', 'Omskaya oblast,Tyumenskaya oblast,Qaraghandy,Soltustik Qazaqstan'), ('Jordan', 'Jordan,West Bank,North,Lebanon,Syria'), ('Jubba', 'Ethiopia,Somalia'), ('Kasai', 'Bandundu,Shaba/Katanga,Lunda Norte,Kasai Occidental,Lunda Sul,Moxico'), ('Klaraelv', 'Hedmark,Varmland'), ('Kura', 'Azerbaijan,Georgia,Kars'), ('Lech', 'Bayern,Tyrol,Vorarlberg'), ('Limpopo', 'Botswana,Gaza,Limpopo,Zimbabwe,Gauteng'), ('Luapula', 'Luapula,Shaba/Katanga'), ('Maas', 'Champagne Ardenne,Lorraine,Limburg,Noord Brabant,Limburg,Zuid Holland,Liege,Namur,Gelderland'), ('March', 'Jihomoravsky,Severomoravsky,Lower Austria,Slovakia'), ('Mekong', 'Cambodia,Yunnan,Thailand,Tibet,Vietnam,Laos'), ('Mosel', 'Lorraine,Saarland,Luxembourg,Rheinland Pfalz'), ('Mur', 'Croatia,Styria,Slovenia,Zala,Salzburg'), ('Narva', 'Estonia,Pskovskaya oblast'), ('Naryn', 'Kyrgyzstan,Toshkent'), ('Niagara River', 'New York,Ontario'), ('Niger', 'Guinea,Mali,Niger,Nigeria'), ('Nile', 'al Khartum,Kafr el Sheikh,Dumyat,El Daqahliya,Asyut,El Buhayra,El Minya,Beni Suef,El Qalubiya,Sohag,El Qahira,Sharqiya,El Minufiya,El Gharbiya,ash Shamaliyah,Aswan,El Giza,Qena'), ('Oder', 'Brandenburg,Severomoravsky,Wroclawskie,Gorzowskie,Zielonogorskie,Opolskie,Mecklenburg Vorpommern,Legnickie,Sachsen,Szczecinskie'), ('Oranje', 'Free State,Lesotho,Namibia,Northern Cape'), ('Orinoco', 'Amazonas,Delta Amacuro,Anzoategui,Apure,Bolivar,Guarico,Guainia,Monagas,Vichada'), ('Paatsjoki', 'Finnmark,Murmanskaya oblast,Lappia'), ('Paraguay', 'Bolivia,Mato Grosso,Paraguay,Chaco,Formosa,Mato Grosso do Sul'), ('Parana', 'Buenos Aires,Mato Grosso do Sul,Goias,Sao Paulo,Santa Fe,Corrientes,Entre Rios,Paraguay,Minas Gerais,Misiones,Distrito Federal,Parana,Chaco'), ('Pjandsh', 'Afghanistan,Kulob,Khatlon,Badakhshoni Kuni'), ('Pruth', 'Botosani,Ivano Frankivska,Chernivetska,Moldova,Iasi,Vaslui,Galati'), ('Raab', 'Burgenland,Gyor Sopron,Vas,Veszprem,Gyor (munic.),Styria'), ('Rhein', 'AG,TG,Baden Wurttemberg,SH,BL,Vorarlberg,Liechtenstein,ZH,Nordrhein Westfalen,Hessen,Rheinland Pfalz,Gelderland,Alsace,Zuid Holland,SG,BS,GR'), ('Rhone', 'GE,Languedoc Roussillon,VD,Provence Cote dAzur,Rhone Alpes,VS'), ('Rio Grande', 'Chihuahua,Tamaulipas,Texas,New Mexico,Colorado,Nuevo Leon,Coahuila'), ('Rio Madeira', 'Amazonas,Rondonia,Bolivia'), ('Rio Negro', 'Amazonas,Guainia,Roraima'), ('Rio San Juan', 'Alajuela,Heredia,Nicaragua,Limon'), ('Ruzizi', 'Burundi,Kivu,Rwanda'), ('Saar', 'Alsace,Saarland,Lorraine,Rheinland Pfalz'), ('Saint Lawrence River', 'New York,Quebec'), ('Saluen', 'Kayah,Mon,Shan,Yunnan,Kayin,Tibet'), ('Salzach', 'Bayern,Salzburg'), ('Sanga', 'Central African Republic,Congo,Est'), ('Save', 'Bosnia and Herzegovina,Croatia,Slovenia,Serbia'), ('Schari', 'Central African Republic,Nord extreme,Chad'), ('Schatt al Arab', 'Al Basrah,Khuzestan'), ('Semliki', 'Haut Zaire,Kivu,Uganda'), ('Senegal', 'Guinea,Mauritania,Mali,Saint Louis,Tambacounda'), ('Shabelle', 'Ethiopia,Somalia'), ('Sobat', 'Aali an Nil,Ethiopia'), ('Southern Morava', 'Kosovo,Macedonia,Serbia'), ('Syrdarja', 'Khujand,Toshkent,Ongtustik Qazaqstan,Namangan,Qyzylorda'), ('Tajo', 'Castelo Branco,Estremadura,Santarem,Castile La Mancha,Lisbon,Portalegre'), ('Theiss', 'Borsod Abauj Zemplen,Hajdu Bihar,Csongrad,Heves,Ivano Frankivska,Szabolcs Szatmar,Szolnok,Zakarpatska,Serbia,Chernivetska,Szeged (munic.)'), ('Ticino', 'Lombardia,Piemonte,TI'), ('Tigris', 'Ad Tamim,Babil,Salah ad Din,Syria,Baghdad,Ninawa,Arbil,Wasit,Al Basrah,Maysan,Batman,Siirt,Mardin,Sirnak,Dahuk,Diyarbakir'), ('Tobol', 'Kurganskaya oblast,Orenburgskaya oblast,Qostanay,Tyumenskaya oblast'), ('Ubangi', 'Central African Republic,Equateur,Congo'), ('Ural', 'Atyrau,Batys Qazaqstan,Orenburgskaya oblast,Chelyabinskaya oblast,Rep. of Bashkortostan'), ('Uruguay', 'Corrientes,Uruguay,Rio Grande do Sul,Misiones,Entre Rios'), ('Volta', 'Burkina Faso,Ghana'), ('Vuoksi', 'Kuopio,Rep. of Karelia,Kymi'), ('Western Dwina', 'Belarus,Smolenskaya oblast,Latvia'), ('White Drin', 'Albania,Kosovo'), ('Yukon River', 'Alaska,Yukon Territory'), ('Zaire', 'Bandundu,Haut Zaire,Congo,Bas Zaire,Kinshasa,Equateur'), ('Zambezi', 'Central,Tete,Northwestern,Zimbabwe,Lusaka,Western,Moxico,Southern,Manica,Zambezia'))", "rowcount": 101, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting ')' or ',' in: \"select river, group_concat(distinct province\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 579, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((174.54734802615644,), (174.54734802615644,), (174.54734802615644,), (114.49680350194552,), (11.932633788037775,))", "rowcount": 5, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 582, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"note\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 583, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((5, 62.5))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 5, "FN": 1}
{"sql_id": 584, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected TO in: \"to\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 585, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"T4\".\"Established\", '%Y') from \"continent\" as \"T1\" i\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select strftime('%Y', t4.\"Established\") \n!from \"continent\" as t1 \n!inner join \"enc\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 586, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"sql\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 587, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 588, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 589, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((42, 'Brendan', 'Reilly', None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: cannot use non GROUP BY column 't1.alderman_first_name' in query results without an aggregate function\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 590, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pat', 'Dowell', 31), ('Sophia', 'King', 23))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'ward'\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 591, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((493,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'fbi_code'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 592, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((53,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((53,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 593, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Robert A. Rubio',), ('Glenn White',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 594, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 595, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(distinct \"business_id\") \n!from inspections as t1 inner join business\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 596, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 597, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "((374,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 598, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 599, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.date'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 600, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t2.city \n!from violations as t1 \n!inner join businesses as t2 on t1.busines\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 601, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 602, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(distinct t2.\"business_id\") \n!from \"violations\" as t1 \n!join \"business\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 604, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 606, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(distinct \"business_id\") from inspections where extract('YEAR'\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 607, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(risk_category) from violations where year\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 608, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t2.\"business_id\") \n!from \"violations\" as t1 \n!inner join \"inspections\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 609, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.818182,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((31,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 610, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.7037036,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3.7037037037037037,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 611, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('222-23-2222',), ('444-45-4444',), ('500-50-0505',), ('925-45-7116',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 612, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.positionid'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 613, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.positionid'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 614, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 617, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 618, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('David', 'Whitehead'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 619, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 620, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table '_employee'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 621, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((55250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table '_employee'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 624, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 1}
{"sql_id": 625, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((29613, 463), (118078, 334), (171382, 74947), (176836, 99993), (204767, 687), (207078, 66570), (256927, 90213), (261543, 620), (261544, 617))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 626, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((72411.06315789474, 291.67400318979264))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (unsigned) unknown in: \"select avg(t1.duration), avg(t2.wind_dir_degrees) \n!from trip as t1 inner join we\"\n!42000!syntax error, unexpected '=' in: \"=\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 3}
{"sql_id": 628, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(\"_date\" from char_length(\"_date\") - 3 for 4) from \"weather\" gro\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select substr(to_char(_date), -4) from weather group by substr(\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 630, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select t2.\"max_gust_speed_mph\", t2.\"cloud_cover\" from \"trip\" as t1 inner join \"w\"\n!42000!syntax error, unexpected ',' in: \",\"\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 1}
{"sql_id": 631, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 632, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('12/2/2013', 477), ('12/2/2013', 348), ('12/2/2013', 576), ('12/2/2013', 562), ('12/2/2013', 616), ('12/2/2013', 462), ('12/2/2013', 585), ('12/2/2013', 553), ('12/2/2013', 355), ('12/2/2013', 319), ('12/2/2013', 628), ('12/2/2013', 514), ('12/2/2013', 488), ('12/2/2013', 567), ('12/2/2013', 483), ('12/2/2013', 532), ('12/2/2013', 335), ('12/2/2013', 394), ('12/2/2013', 573), ('12/2/2013', 580), ('12/2/2013', 482), ('12/2/2013', 270), ('12/2/2013', 522), ('12/2/2013', 379), ('12/2/2013', 351), ('12/2/2013', 530), ('12/2/2013', 326), ('12/2/2013', 592), ('12/2/2013', 370), ('12/2/2013', 584), ('12/2/2013', 501), ('12/2/2013', 584), ('12/2/2013', 474), ('12/2/2013', 503), ('12/2/2013', 432), ('12/2/2013', 593), ('12/2/2013', 613), ('12/2/2013', 407), ('12/2/2013', 317), ('12/2/2013', 561), ('12/2/2013', 444), ('12/2/2013', 630), ('12/2/2013', 503), ('12/2/2013', 320), ('12/2/2013', 623), ('12/2/2013', 482), ('12/2/2013', 137), ('12/2/2013', 394), ('12/2/2013', 630), ('12/2/2013', 436), ('12/2/2013', 296), ('12/2/2013', 444), ('12/2/2013', 456))", "rowcount": 53, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 633, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select t1.start_date \n!from \"trip\" as t1 \n!inner join \"weather\" as t2 on t2.\"zip_c\"\n!42000!syntax error, unexpected ',' in: \",\"\n", "exec_able": false}}, "TP": 2, "FP": 4, "FN": 2}
{"sql_id": 634, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 636, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((327,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 637, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((58.736,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select avg(t2.\"mean_temperature_f\") from \"trip\" as t1 inner join \"weather\" as t2\"\n!42000!syntax error, unexpected ',' in: \",\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 638, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select cast(sum(case when t2.\"events\" = 'Rain' then 1 else 0 end) as real) * 100\"\n!42000!syntax error, unexpected ',' in: \",\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 639, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 640, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select sum(iif(zip_code =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 641, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 642, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Powell at Post (Union Square)',), ('Temporary Transbay Terminal (Howard at Beale)',), ('5th at Howard',), ('Embarcadero at Folsom',), ('Market at 4th',), ('2nd at Folsom',), ('Townsend at 7th',), ('Market at Sansome',), ('Powell Street BART',), ('Civic Center BART (7th at Market)',), ('Grant Avenue at Columbus Avenue',), ('San Francisco Caltrain 2 (330 Townsend)',), ('San Francisco Caltrain (Townsend at 4th)',), ('Harry Bridges Plaza (Ferry Building)',), ('Howard at 2nd',), ('Spear at Folsom',), ('Commercial at Montgomery',), ('Embarcadero at Bryant',), ('Embarcadero at Vallejo',), ('Clay at Battery',), ('2nd at South Park',), ('2nd at Townsend',), ('Castro Street and El Camino Real',))", "rowcount": 23, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.date'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 643, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select sum(iif(cast(zip_code as integer) =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 644, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 646, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 647, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'to_char(timestamp,char)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 648, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 649, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.703747619741456,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 0}
{"sql_id": 650, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.571428,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 651, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected AND, expecting ')' or ',' in: \"select cast(sum(iif((t2.first_name = 'GINA') and\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 652, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((351,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 654, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((421,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'date(timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 655, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.5041735,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"this\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 656, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1481.49,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1481.49,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 657, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('BLANKET BEVERLY',), ('LOVE SUICIDES',), ('MYSTIC TRUMAN',), ('LAWLESS VISION',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('BLANKET BEVERLY',), ('LOVE SUICIDES',), ('MYSTIC TRUMAN',), ('LAWLESS VISION',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 658, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 659, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 660, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.016694,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10.01669449081803,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 661, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"monetdb\"\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 0}
{"sql_id": 662, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t3.\"rating\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 663, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SANDRA', 'MARTIN', 'SANDRA.MARTIN@sakilacustomer.org'), ('JUDITH', 'COX', 'JUDITH.COX@sakilacustomer.org'), ('SHEILA', 'WELLS', 'SHEILA.WELLS@sakilacustomer.org'), ('ERICA', 'MATTHEWS', 'ERICA.MATTHEWS@sakilacustomer.org'), ('HEIDI', 'LARSON', 'HEIDI.LARSON@sakilacustomer.org'), ('PENNY', 'NEAL', 'PENNY.NEAL@sakilacustomer.org'), ('KENNETH', 'GOODEN', 'KENNETH.GOODEN@sakilacustomer.org'), ('HARRY', 'ARCE', 'HARRY.ARCE@sakilacustomer.org'), ('NATHAN', 'RUNYON', 'NATHAN.RUNYON@sakilacustomer.org'), ('THEODORE', 'CULP', 'THEODORE.CULP@sakilacustomer.org'), ('MAURICE', 'CRAWLEY', 'MAURICE.CRAWLEY@sakilacustomer.org'), ('BEN', 'EASTER', 'BEN.EASTER@sakilacustomer.org'), ('CHRISTIAN', 'JUNG', 'CHRISTIAN.JUNG@sakilacustomer.org'), ('JIMMIE', 'EGGLESTON', 'JIMMIE.EGGLESTON@sakilacustomer.org'), ('TERRANCE', 'ROUSH', 'TERRANCE.ROUSH@sakilacustomer.org'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"first_name\", \"last_name\", \"email\" from customer where year\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 664, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlIN in: \"in\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"here\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 665, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 666, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-0.008347245409015025,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"the\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected IDENT in: \"please\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 667, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t4.\"name\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 670, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (:)\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 671, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 672, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 673, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'film.length'\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 674, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 675, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('6.800'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 676, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"here\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 677, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.1715098488385314,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum((iif(t2.first_name =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 678, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t3.\"name\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 679, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum((iif(t3.\"name\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 680, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 681, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select count(t2.\"rental_id\") , cast((sum(iif(extract(month from \"T2\".\"rental_dat\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 682, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 683, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}

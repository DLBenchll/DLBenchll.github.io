{"sql_id": 1, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('A Clockwork Orange', 1971))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('A Clockwork Orange', 1971))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 2, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '2020' unknown\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 3, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((761725,), (19221797,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (:)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 4, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((312,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!types tinyint(4,0) and timestamptz(7,0) are not equal\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 5, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('las mejores peliculas que vi en el 2016',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,clob)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 9, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 10, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean', 'Profusely illustrated in color, this makes a wonderful gift book for a cuisine-oriented friend.', 'Binnet & Hardley'), (\"The Busy Executive's Database Guide\", 'An overview of available database systems with emphasis on common business applications. Illustrated.', 'Algodata Infosystems'), ('Cooking with Computers: Surreptitious Balance Sheets', 'Helpful hints on how to use your electronic resources to the best advantage.', 'Algodata Infosystems'), ('You Can Combat Computer Stress!', 'The latest medical and psychological techniques for living with the electronic office. Easy-to-understand explanations.', 'New Moon Books'), ('Straight Talk About Computers', 'Annotated analysis of what computers can do for you: a no-hype guide for the critical user.', 'Algodata Infosystems'), ('Silicon Valley Gastronomic Treats', 'Favorite recipes for quick, easy, and elegant meals.', 'Binnet & Hardley'), ('The Gourmet Microwave', 'Traditional French gourmet recipes adapted for modern microwave cooking.', 'Binnet & Hardley'), ('But Is It User Friendly?', \"A survey of software for the naive user, focusing on the 'friendliness' of each.\", 'Algodata Infosystems'), ('Computer Phobic AND Non-Phobic Individuals: Behavior Variations', \"A must for the specialist, this book examines the difference between those who hate and fear computers and those who don't.\", 'Binnet & Hardley'), ('Is Anger the Enemy?', 'Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.', 'New Moon Books'), ('Life Without Fear', 'New exercise, meditation, and nutritional techniques that can reduce the shock of daily interactions. Popular audience. Sample menus included, exercise video available separately.', 'New Moon Books'), ('Prolonged Data Deprivation: Four Case Studies', 'What happens when the data runs dry?  Searching evaluations of information-shortage effects.', 'New Moon Books'), ('Emotional Security: A New Algorithm', 'Protecting yourself and your loved ones from undue emotional stress in the modern world. Use of computer and nutritional aids emphasized.', 'New Moon Books'), ('Fifty Years in Buckingham Palace Kitchens', \"More anecdotes from the Queen's favorite cook describing life among English royalty. Recipes, techniques, tender vignettes.\", 'Binnet & Hardley'), ('Sushi, Anyone?', 'Detailed instructions on how to make authentic Japanese sushi in your spare time.', 'Binnet & Hardley'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean', 'Profusely illustrated in color, this makes a wonderful gift book for a cuisine-oriented friend.', 'Binnet & Hardley'), (\"The Busy Executive's Database Guide\", 'An overview of available database systems with emphasis on common business applications. Illustrated.', 'Algodata Infosystems'), ('Cooking with Computers: Surreptitious Balance Sheets', 'Helpful hints on how to use your electronic resources to the best advantage.', 'Algodata Infosystems'), ('You Can Combat Computer Stress!', 'The latest medical and psychological techniques for living with the electronic office. Easy-to-understand explanations.', 'New Moon Books'), ('Straight Talk About Computers', 'Annotated analysis of what computers can do for you: a no-hype guide for the critical user.', 'Algodata Infosystems'), ('Silicon Valley Gastronomic Treats', 'Favorite recipes for quick, easy, and elegant meals.', 'Binnet & Hardley'), ('The Gourmet Microwave', 'Traditional French gourmet recipes adapted for modern microwave cooking.', 'Binnet & Hardley'), ('But Is It User Friendly?', \"A survey of software for the naive user, focusing on the 'friendliness' of each.\", 'Algodata Infosystems'), ('Computer Phobic AND Non-Phobic Individuals: Behavior Variations', \"A must for the specialist, this book examines the difference between those who hate and fear computers and those who don't.\", 'Binnet & Hardley'), ('Is Anger the Enemy?', 'Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.', 'New Moon Books'), ('Life Without Fear', 'New exercise, meditation, and nutritional techniques that can reduce the shock of daily interactions. Popular audience. Sample menus included, exercise video available separately.', 'New Moon Books'), ('Prolonged Data Deprivation: Four Case Studies', 'What happens when the data runs dry?  Searching evaluations of information-shortage effects.', 'New Moon Books'), ('Emotional Security: A New Algorithm', 'Protecting yourself and your loved ones from undue emotional stress in the modern world. Use of computer and nutritional aids emphasized.', 'New Moon Books'), ('Fifty Years in Buckingham Palace Kitchens', \"More anecdotes from the Queen's favorite cook describing life among English royalty. Recipes, techniques, tender vignettes.\", 'Binnet & Hardley'), ('Sushi, Anyone?', 'Detailed instructions on how to make authentic Japanese sushi in your spare time.', 'Binnet & Hardley'))", "rowcount": 15, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 11, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 12, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"hire_date\", '%Y') from \"employee\" group by sys.time\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select strftime('%Y', hire_date) from employee group by strftime(\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 13, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Binnet & Hardley',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select t2.pub_name from titles as t1 inner join publishers as t2 on t1.pub_id = \"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 14, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 15, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('psychology',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 16, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.333333,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 17, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Francisco', '', 'Chang'), ('Matti', 'G', 'Karttunen'), ('Ann', 'M', 'Devon'), ('Rita', 'B', 'Muller'), ('Palle', 'D', 'Ibsen'), ('Diego', 'W', 'Roel'), ('Mary', 'M', 'Saveley'), ('Laurence', 'A', 'Lebihan'), ('Janine', 'Y', 'Labrune'), ('Karla', 'J', 'Jablonski'), ('Martin', 'F', 'Sommer'), ('Paul', 'X', 'Henriot'), ('Annette', '', 'Roulet'), ('Sven', 'K', 'Ottlieb'), ('Roland', '', 'Mendel'), ('Victoria', 'P', 'Ashworth'), ('Maria', '', 'Larsson'), ('Paula', 'S', 'Parente'), ('Lesley', '', 'Brown'), ('Helvetius', 'A', 'Nagy'), ('Miguel', 'A', 'Paolino'), ('Karin', 'F', 'Josephs'), ('Anabela', 'R', 'Domingues'), ('Pedro', 'S', 'Afonso'), ('Aria', '', 'Cruz'), ('Pirkko', 'O', 'Koskitalo'), ('Peter', 'H', 'Franken'), ('Martine', '', 'Rance'), ('Daniel', 'B', 'Tonini'), ('Carine', 'G', 'Schmitt'), ('Paolo', 'M', 'Accorti'), ('Elizabeth', 'N', 'Lincoln'))", "rowcount": 32, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlINT in: \"select fname, minit, lname from employee where extract(year from hire_date) betw\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 18, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 6}
{"sql_id": 19, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 20, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 21, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select 100.0 * (sum(case when extract('Year'\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 3}
{"sql_id": 22, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 6}
{"sql_id": 24, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting SCOLON in: \"select \"Complaint ID\" from events where (fn.strftime('%J', \"Date_sent_to_company\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 4}
{"sql_id": 25, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((723,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(ser_time) from callcenterlogs where extract('M'\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 26, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((15.777778, 15.301775, 15.085714))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 9}
{"sql_id": 28, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Billing disputes',), ('Customer service / Customer relations',), ('Billing statement',), ('Balance transfer',), ('Credit line increase/decrease',), ('Customer service / Customer relations',), ('Closing/Cancelling account',), ('Other',), ('Billing disputes',), ('Closing/Cancelling account',), ('Identity theft / Fraud / Embezzlement',), ('APR or interest rate',), ('Unsolicited issuance of credit card',), ('Closing/Cancelling account',), ('Bankruptcy',), ('Closing/Cancelling account',), ('Identity theft / Fraud / Embezzlement',), ('Other',))", "rowcount": 18, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 29, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"Complaint_ID\", call_id, phonefinal from callcenterlogs where year\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 30, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.353982300884958,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (number) unknown in: \"select avg(cast(substr(ser_time, 4, 2) as number)\"\n!42000!syntax error, unexpected ')' in: \")\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 31, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"Date_received\", '%Y'), count(\"Date_received\") from \"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 33, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 34, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 35, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 36, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 37, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 38, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 39, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 40, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 41, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((82677500.47867298,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select avg(\"movie\".revenue) from \"movie\" as t1 inner join \"production_country\" a\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 42, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 43, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select title from movie where extract('%Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 44, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting AS in: \"select \"movie_company\".company_id from movie as t1 inner join movie_company as t\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 45, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 46, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(movie.movie_id) from movie as t1 inner join movie_genres as t2 on t\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 47, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'movie.release_date'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 48, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Filtering',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected COMPARISON in: \"<\"\n!42000!syntax error, unexpected IDENT in: \"subtracting\"\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 3}
{"sql_id": 49, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 6}
{"sql_id": 50, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '.', expecting ')' or ',' in: \"select substr(substr(name, instr(name, '.\\\") + 1), 1, INSTR(SUBSTR(Name, INSTR(N\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 6}
{"sql_id": 51, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('MainForm',), ('ObjectReader',), ('UO',), ('Program',), ('protocol',), ('net',), ('Problem75',), ('util',), ('DAL',), ('Archiever',), ('OscarLib',), ('Numerics',), ('Data',), ('CodeLib',), ('Filters',), ('Analyse',), ('Caesar',), ('Cipher',), ('Combinatorics',), ('Structures',), ('DictionaryAttack',), ('LettersMatrix',), ('Storage',), ('Monoalphabetic',), ('TextAnalysis',), ('Transposition',), ('WordsFilter',), ('UniqueWords',), ('Vigenere',), ('WordsCompleter',), ('Window',), ('ArrayExt',), ('ListExt',), ('Parallel',), ('StringExt',), ('TextDownloader',), ('MatchCount',), ('BoardPosition',), ('CompoundMove',), ('Canvas',), ('LineTool',), ('Menu',), ('PenTool',), ('DBUtility',), ('BLL',), ('Util',), ('Graphics',), ('Web',), ('Common',), ('Controlers',), ('Servers',), ('Matrix',), ('arCADia',), ('ArcGisPublic',), ('KIDSFansChannel',), ('Game',), ('FormDataManage',), ('ServiceRegistryExtensions',), ('Subject',), ('Controls',), ('Class',), ('Camera',), ('CzechRepublicPublicHoliday',), ('Check',), ('DGP',), ('Imap4',), ('Math',), ('Library',), ('Server',), ('Client',), ('FastSocket',), ('Core',), ('User',), ('Utility',), ('MasterTaskList',), ('Comm',), ('Framework',), ('Wcf',), ('View',), ('Plugin',), ('DataAccess',), ('CSPrivateProfile',), ('Aa',), ('IO',), ('KatjuBoardTable',), ('ThreadIndexer',), ('TypeCreator',), ('Bbs',), ('Cache',), ('LinkInfoCollection',), ('NGWords',), ('Tools',), ('HtmlSkin',), ('StandardHtmlSkin',), ('ThreadControl',), ('Brazil',), ('OracleDAL',), ('NicoNico',), ('DesignViewFiles',), ('Security',), ('Entity<TEntity>',), ('MiniProfiler',), ('Xml',), ('Insightly',), ('UtilityTool',), ('UDP_protocol',), ('Radio',), ('Form1',), ('',), ('Utilities',), ('frmMain',), ('uctlCancelCompare',), ('uctlAddNode',), ('uctlDoExport',), ('WMS',), ('DBHelper',), ('Net',), ('MySQL',), ('OleDb',), ('Oracle',), ('SQL2000',), ('SQL2005',), ('SQLite',), ('InWDetail',), ('Supply',), ('SupplyDetail',), ('Model',), ('Logic',), ('GUI',), ('ucCar',), ('TestConsole',), ('Collections',), ('MService',), ('Kernel',), ('DB',), ('Win32Kernel',), ('DBTools',), ('TipText',), ('MemDataSerialize',), ('MemTypeManager',), ('WebKernel',), ('ShareInfoCollection',), ('FrmMain',), ('Dto',), ('ByteSocket',), ('ProbufSerialize',), ('Extend',), ('cvt',), ('DataPage<T>',), ('Json',), ('model',), ('ControlEx',), ('Models',), ('Mailer',), ('GridSource',), ('Players',), ('FeedManager',), ('MainWindow',), ('MeasureDistance',), ('frmSplash',), ('Marc',), ('Global',), ('LogWindow',), ('Transform',), ('Tool',), ('CData',), ('KyDataOperation',), ('TreeHandler',), ('MyConvert',), ('Services',), ('ArrayHelper',), ('JsonTokenizer',), ('Kf_account',), ('DbUtility',), ('FrmUpdate',), ('IdentifyEncoding',), ('JsonUtil',), ('TcpCli',), ('TcpSvr',), ('NPP',), ('Support',), ('WPF',), ('CxSampleGrabberCB',), ('SocketListener',), ('SocketServer',), ('UdpServer',), ('Dialog',), ('frmAbout',), ('MainFrame',), ('frmReg',), ('RegexValidate',), ('Extends',), ('NtSymbolicLink',), ('VBAEngineBase',), ('Interface',), ('Service',))", "rowcount": 196, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '.', expecting ')' or ',' in: \"select distinct substr(substr(name, (instr(name, '.\\\" ) + 1), 1), (instr(substr(\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 6}
{"sql_id": 52, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 6}
{"sql_id": 53, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (double_precision) unknown in: \"select ((max(cast(substr(\"characters\".screentime, 3, 2) as double_precision)\"\n!42000!syntax error, unexpected ')' in: \")\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 3}
{"sql_id": 54, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 55, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19, 22))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 56, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((113.0, 22.0), (120.0, 32.0))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 57, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-6689096779184407258, 'YES'), (-6590029937880196169, 'YES'), (-5305692228635096563, 'YES'), (-2917998150844653076, 'YES'), (-1633968677373322472, 'YES'), (-450723994850216235, 'YES'), (-324761265507882224, 'YES'), (528590055286269542, 'YES'), (4296637564570566271, 'YES'), (5354621554047170232, 'YES'), (5497109940653330488, 'YES'), (5611317768433566721, 'YES'), (5927333115845830913, 'YES'), (6607018907660377991, 'YES'), (6666573787717908158, 'YES'), (8693964245073640147, 'YES'), (9112463114311278255, 'YES'))", "rowcount": 17, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select app_id , iif(is_installed =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 58, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((959,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 59, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 60, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 61, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'Industry tag' unknown\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 62, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 0}
{"sql_id": 63, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1001,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 64, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(event_id) from \"events\" where extract('year'\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 65, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(\"event_id\") from events as t1 inner join phone_brand_device_model2 \"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 66, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlGROUP in: \"select (sum(case when t1.group\"\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 67, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' in: \"select count(t2.phone_brand =\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 68, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 70, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlINT, expecting SCOLON in: \"select count(event_id) from events where substring(\"_timestamp\", 1, 10) = ''2016\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 71, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 72, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '2016-05-06' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 73, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlGROUP in: \"select count(\"app_events\".app_id) from app_events as t1 inner join events as t2 \"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 74, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'timestamp' unknown\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 75, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'vivo' unknown\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 76, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 77, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Finance',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select count(iif(t2.category =\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 3}
{"sql_id": 78, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'vivo' unknown\n", "exec_able": false}}, "TP": 2, "FP": 3, "FN": 0}
{"sql_id": 79, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select sum(iif(t2.category =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 80, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (sum(iif(is_active=\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 81, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select (sum(case when gender = 'M' then 1 else 0)\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 82, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(t1.device_id) from events as t1 inner join phone_brand_device_model\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 83, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'vivo' unknown\n", "exec_able": false}}, "TP": 2, "FP": 4, "FN": 0}
{"sql_id": 84, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select sum(case when t1.gender = 'F' and t1.age > 80 then 1 else 0)\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 85, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select (sum(case when t1.age < 50 then 1 else 0)\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 86, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting SCOLON in: \"select (sum(case when t1.age > 20 then 1 else 0 end)) / count(t1.device_id) as p\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 87, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((114.0, 24.0), (88.0, 44.0), (120.0, 32.0), (114.0, 31.0), (106.0, 27.0), (113.0, 23.0), (113.0, 23.0), (104.0, 36.0), (114.0, 37.0), (116.0, 40.0), (113.0, 23.0), (120.0, 37.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (122.0, 30.0), (113.0, 23.0), (114.0, 38.0), (116.0, 40.0), (114.0, 39.0), (0.0, 0.0), (1.0, 1.0), (116.0, 40.0), (105.0, 32.0), (113.0, 23.0), (104.0, 30.0), (107.0, 30.0), (119.0, 32.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (114.0, 23.0), (114.0, 23.0), (118.0, 24.0), (119.0, 32.0), (121.0, 29.0), (114.0, 23.0), (121.0, 29.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (102.0, 25.0), (116.0, 29.0), (104.0, 31.0), (109.0, 34.0), (116.0, 24.0), (122.0, 40.0), (118.0, 39.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (1.0, 1.0), (0.0, 0.0), (114.0, 35.0), (122.0, 42.0), (121.0, 30.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (118.0, 39.0), (1.0, 1.0), (104.0, 30.0), (118.0, 32.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (113.0, 36.0), (108.0, 23.0), (114.0, 23.0), (117.0, 32.0), (113.0, 23.0), (1.0, 1.0), (1.0, 1.0), (120.0, 30.0), (121.0, 31.0), (108.0, 23.0), (0.0, 0.0), (114.0, 23.0), (114.0, 25.0), (120.0, 36.0), (113.0, 36.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (120.0, 32.0), (120.0, 37.0), (118.0, 38.0), (0.0, 0.0), (118.0, 24.0), (0.0, 0.0), (0.0, 0.0), (114.0, 37.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (114.0, 38.0), (126.0, 42.0), (113.0, 23.0), (0.0, 0.0), (108.0, 23.0), (117.0, 34.0), (114.0, 31.0), (116.0, 29.0), (121.0, 31.0), (0.0, 0.0), (106.0, 27.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (0.0, 0.0), (114.0, 23.0), (104.0, 30.0), (104.0, 31.0), (114.0, 35.0), (115.0, 33.0), (116.0, 40.0), (116.0, 40.0), (120.0, 30.0), (0.0, 0.0), (114.0, 23.0), (105.0, 23.0), (0.0, 0.0), (0.0, 0.0), (116.0, 40.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (120.0, 36.0), (115.0, 37.0), (104.0, 36.0), (114.0, 31.0), (119.0, 32.0), (0.0, 0.0), (124.0, 42.0), (116.0, 40.0), (106.0, 30.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (120.0, 36.0), (112.0, 23.0), (0.0, 0.0), (114.0, 37.0), (116.0, 40.0), (110.0, 25.0), (118.0, 24.0), (104.0, 30.0), (108.0, 23.0), (107.0, 29.0), (121.0, 31.0), (0.0, 0.0), (113.0, 34.0), (0.0, 0.0), (120.0, 29.0), (104.0, 30.0), (0.0, 0.0), (117.0, 28.0), (108.0, 23.0), (0.0, 0.0), (104.0, 31.0), (114.0, 36.0), (116.0, 40.0), (117.0, 31.0), (0.0, 0.0), (114.0, 38.0), (120.0, 30.0), (104.0, 30.0), (108.0, 23.0), (112.0, 22.0), (114.0, 23.0), (116.0, 23.0), (116.0, 23.0), (117.0, 38.0), (114.0, 31.0), (113.0, 36.0), (122.0, 40.0), (112.0, 36.0), (109.0, 34.0), (122.0, 30.0), (115.0, 26.0), (115.0, 26.0), (121.0, 28.0), (0.0, 0.0), (119.0, 32.0), (119.0, 32.0), (113.0, 23.0), (120.0, 29.0), (119.0, 26.0), (0.0, 0.0), (0.0, 0.0), (115.0, 23.0), (0.0, 0.0), (119.0, 32.0), (120.0, 33.0), (121.0, 30.0), (111.0, 27.0), (120.0, 29.0), (117.0, 39.0), (1.0, 1.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (124.0, 42.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (122.0, 40.0), (105.0, 23.0), (122.0, 40.0), (122.0, 31.0), (112.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (106.0, 37.0), (106.0, 27.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 36.0), (106.0, 38.0), (120.0, 42.0), (0.0, 0.0), (121.0, 31.0), (114.0, 31.0), (110.0, 21.0), (0.0, 0.0), (110.0, 20.0), (120.0, 36.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (1.0, 1.0), (118.0, 35.0), (122.0, 30.0), (120.0, 30.0), (113.0, 23.0), (113.0, 28.0), (0.0, 0.0), (114.0, 31.0), (126.0, 42.0), (0.0, 0.0), (114.0, 23.0), (120.0, 37.0), (112.0, 38.0), (113.0, 28.0), (103.0, 30.0), (113.0, 28.0), (119.0, 32.0), (115.0, 30.0), (110.0, 20.0), (121.0, 31.0), (113.0, 36.0), (1.0, 1.0), (103.0, 25.0), (108.0, 26.0), (123.0, 41.0), (114.0, 23.0), (118.0, 26.0), (116.0, 40.0), (120.0, 27.0), (0.0, 0.0), (121.0, 31.0), (109.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 35.0), (117.0, 37.0), (118.0, 38.0), (0.0, 0.0), (119.0, 26.0), (0.0, 0.0), (114.0, 36.0), (0.0, 0.0), (121.0, 31.0), (104.0, 30.0), (123.0, 41.0), (123.0, 41.0), (109.0, 30.0), (0.0, 0.0), (122.0, 30.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (0.0, 0.0), (117.0, 32.0), (118.0, 39.0), (121.0, 28.0), (121.0, 31.0), (121.0, 38.0), (113.0, 34.0), (121.0, 28.0), (121.0, 31.0), (113.0, 29.0), (114.0, 23.0), (114.0, 23.0), (112.0, 36.0), (113.0, 23.0), (118.0, 40.0), (0.0, 0.0), (111.0, 21.0), (116.0, 40.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (120.0, 37.0), (120.0, 30.0), (114.0, 31.0), (113.0, 38.0), (119.0, 32.0), (115.0, 38.0), (112.0, 32.0), (109.0, 35.0), (0.0, 0.0), (117.0, 36.0), (120.0, 36.0), (119.0, 26.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (102.0, 25.0), (0.0, 0.0), (120.0, 30.0), (115.0, 30.0), (121.0, 30.0), (116.0, 23.0), (117.0, 28.0), (127.0, 46.0), (121.0, 31.0), (114.0, 23.0), (114.0, 35.0), (120.0, 32.0), (114.0, 23.0), (105.0, 29.0), (114.0, 35.0), (102.0, 25.0), (116.0, 40.0), (121.0, 31.0), (112.0, 30.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (1.0, 1.0), (0.0, 0.0), (88.0, 44.0), (118.0, 34.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (119.0, 26.0), (114.0, 23.0), (114.0, 23.0), (106.0, 38.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (88.0, 44.0), (0.0, 0.0), (114.0, 23.0), (106.0, 27.0), (113.0, 23.0), (121.0, 28.0), (118.0, 36.0), (109.0, 18.0), (109.0, 18.0), (118.0, 28.0), (118.0, 28.0), (108.0, 23.0), (0.0, 0.0), (123.0, 42.0), (114.0, 23.0), (0.0, 0.0), (106.0, 27.0), (119.0, 34.0), (0.0, 0.0), (0.0, 0.0), (120.0, 29.0), (119.0, 25.0), (119.0, 25.0), (0.0, 0.0), (114.0, 27.0), (121.0, 31.0), (116.0, 40.0), (109.0, 34.0), (109.0, 34.0), (100.0, 27.0), (0.0, 0.0), (122.0, 40.0), (0.0, 0.0), (0.0, 0.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (112.0, 22.0), (114.0, 35.0), (1.0, 1.0), (114.0, 23.0), (104.0, 31.0), (0.0, 0.0), (110.0, 25.0), (104.0, 30.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (121.0, 29.0), (120.0, 30.0), (114.0, 23.0), (110.0, 20.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (113.0, 23.0), (113.0, 34.0), (113.0, 23.0), (0.0, 0.0), (113.0, 38.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (115.0, 30.0), (114.0, 30.0), (118.0, 35.0), (118.0, 35.0), (121.0, 30.0), (0.0, 0.0), (117.0, 39.0), (0.0, 0.0), (120.0, 33.0), (0.0, 0.0), (116.0, 40.0), (114.0, 31.0), (113.0, 35.0), (0.0, 0.0), (119.0, 40.0), (114.0, 23.0), (106.0, 38.0), (116.0, 40.0), (119.0, 26.0), (114.0, 28.0), (117.0, 37.0), (124.0, 42.0), (0.0, 0.0), (104.0, 30.0), (105.0, 25.0), (114.0, 37.0), (0.0, 0.0), (0.0, 0.0), (122.0, 39.0), (0.0, 0.0), (114.0, 35.0), (115.0, 29.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (110.0, 25.0), (113.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (122.0, 37.0), (114.0, 23.0), (0.0, 0.0), (118.0, 24.0), (121.0, 31.0), (121.0, 38.0), (104.0, 23.0), (119.0, 32.0), (107.0, 30.0), (0.0, 0.0), (119.0, 26.0), (117.0, 32.0), (116.0, 40.0), (117.0, 32.0), (121.0, 28.0), (121.0, 28.0), (119.0, 25.0), (0.0, 0.0), (114.0, 38.0), (118.0, 36.0), (111.0, 36.0), (0.0, 0.0), (0.0, 0.0), (116.0, 36.0), (121.0, 30.0), (117.0, 23.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (114.0, 35.0), (121.0, 31.0), (103.0, 25.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (114.0, 27.0), (124.0, 47.0), (104.0, 36.0), (119.0, 26.0), (117.0, 37.0), (105.0, 23.0), (107.0, 28.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (120.0, 30.0), (116.0, 36.0), (121.0, 31.0), (117.0, 39.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (106.0, 30.0), (114.0, 23.0), (0.0, 0.0), (108.0, 23.0), (111.0, 32.0), (0.0, 0.0), (114.0, 31.0), (127.0, 46.0), (0.0, 0.0), (122.0, 30.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (118.0, 39.0), (113.0, 23.0), (0.0, 0.0), (118.0, 37.0), (113.0, 38.0), (1.0, 1.0), (116.0, 35.0), (117.0, 40.0), (109.0, 34.0), (109.0, 22.0), (0.0, 0.0), (107.0, 27.0), (0.0, 0.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (114.0, 36.0), (108.0, 35.0), (0.0, 0.0), (117.0, 37.0), (122.0, 40.0), (110.0, 19.0), (1.0, 1.0), (0.0, 0.0), (105.0, 23.0), (118.0, 35.0), (0.0, 0.0), (121.0, 37.0), (1.0, 1.0), (117.0, 23.0), (114.0, 23.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (114.0, 32.0), (116.0, 37.0), (0.0, 0.0), (116.0, 29.0), (110.0, 25.0), (122.0, 31.0), (121.0, 31.0), (0.0, 0.0), (121.0, 29.0), (119.0, 32.0), (111.0, 25.0), (102.0, 25.0), (102.0, 25.0), (0.0, 0.0), (118.0, 31.0), (110.0, 21.0), (110.0, 25.0), (119.0, 32.0), (120.0, 30.0), (120.0, 30.0), (120.0, 30.0), (121.0, 31.0), (114.0, 23.0), (108.0, 23.0), (114.0, 23.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (113.0, 36.0), (122.0, 30.0), (108.0, 32.0), (0.0, 0.0), (104.0, 30.0), (104.0, 30.0), (113.0, 23.0), (1.0, 1.0), (123.0, 41.0), (120.0, 30.0), (112.0, 38.0), (112.0, 38.0), (113.0, 28.0), (0.0, 0.0), (116.0, 40.0), (119.0, 32.0), (102.0, 28.0), (122.0, 40.0), (113.0, 23.0), (0.0, 0.0), (114.0, 24.0), (114.0, 24.0), (119.0, 32.0), (100.0, 9.0), (121.0, 31.0), (106.0, 30.0), (104.0, 31.0), (0.0, 0.0), (118.0, 36.0), (120.0, 36.0), (122.0, 31.0), (120.0, 29.0), (116.0, 33.0), (114.0, 23.0), (113.0, 23.0), (119.0, 26.0), (113.0, 23.0), (113.0, 23.0), (121.0, 31.0), (120.0, 29.0), (108.0, 26.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (1.0, 1.0), (121.0, 31.0), (118.0, 25.0), (114.0, 23.0), (108.0, 25.0), (0.0, 0.0), (114.0, 35.0), (114.0, 23.0), (119.0, 26.0), (0.0, 0.0), (114.0, 23.0), (113.0, 28.0), (104.0, 31.0), (117.0, 32.0), (116.0, 40.0), (103.0, 25.0), (106.0, 30.0), (113.0, 34.0), (0.0, 0.0), (0.0, 0.0), (118.0, 38.0), (125.0, 45.0), (114.0, 31.0), (119.0, 37.0), (0.0, 0.0), (121.0, 31.0), (116.0, 40.0), (104.0, 30.0), (118.0, 38.0), (102.0, 39.0), (119.0, 34.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (114.0, 39.0), (119.0, 32.0), (120.0, 36.0), (116.0, 24.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (100.0, 27.0), (107.0, 30.0), (121.0, 31.0), (120.0, 32.0), (120.0, 32.0), (114.0, 31.0), (113.0, 32.0), (0.0, 0.0), (116.0, 35.0), (115.0, 27.0), (113.0, 23.0), (113.0, 23.0), (0.0, 0.0), (122.0, 40.0), (120.0, 31.0), (0.0, 0.0), (121.0, 38.0), (106.0, 38.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (110.0, 25.0), (104.0, 23.0), (114.0, 23.0), (114.0, 23.0), (120.0, 29.0), (0.0, 0.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (104.0, 31.0), (123.0, 42.0), (115.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (110.0, 20.0), (113.0, 35.0), (117.0, 40.0), (1.0, 1.0), (116.0, 27.0), (112.0, 30.0), (113.0, 28.0), (116.0, 40.0), (110.0, 27.0), (110.0, 23.0), (119.0, 32.0), (114.0, 23.0), (119.0, 25.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (119.0, 26.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (113.0, 23.0), (0.0, 0.0), (104.0, 31.0), (1.0, 1.0), (122.0, 30.0), (122.0, 40.0), (104.0, 30.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (117.0, 23.0), (113.0, 28.0), (122.0, 40.0), (120.0, 32.0), (1.0, 1.0), (108.0, 23.0), (1.0, 1.0), (0.0, 0.0), (108.0, 23.0), (120.0, 30.0), (114.0, 31.0), (0.0, 0.0), (121.0, 31.0), (105.0, 32.0), (117.0, 36.0), (113.0, 36.0), (113.0, 36.0), (122.0, 30.0), (110.0, 41.0), (121.0, 28.0), (106.0, 30.0), (114.0, 23.0), (106.0, 27.0), (106.0, 27.0), (104.0, 36.0), (109.0, 18.0), (118.0, 28.0), (116.0, 36.0), (125.0, 50.0), (121.0, 31.0), (119.0, 25.0), (0.0, 0.0), (120.0, 31.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (103.0, 30.0), (119.0, 32.0), (120.0, 30.0), (119.0, 34.0), (114.0, 25.0), (118.0, 30.0), (0.0, 0.0), (121.0, 31.0), (113.0, 36.0), (104.0, 30.0), (126.0, 43.0), (0.0, 0.0), (114.0, 31.0), (113.0, 36.0), (121.0, 31.0), (117.0, 38.0), (113.0, 23.0), (114.0, 35.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (112.0, 38.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (115.0, 37.0), (0.0, 0.0), (120.0, 36.0), (1.0, 1.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 31.0), (113.0, 23.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (116.0, 24.0), (0.0, 0.0), (106.0, 38.0), (113.0, 36.0), (0.0, 0.0), (120.0, 37.0), (121.0, 31.0), (113.0, 23.0), (88.0, 44.0), (116.0, 24.0), (109.0, 34.0), (120.0, 31.0), (121.0, 28.0), (114.0, 37.0), (113.0, 34.0), (116.0, 40.0), (106.0, 37.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 29.0), (114.0, 23.0), (123.0, 42.0), (0.0, 0.0), (113.0, 23.0), (116.0, 40.0), (116.0, 23.0), (0.0, 0.0), (124.0, 42.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (113.0, 36.0), (110.0, 20.0), (118.0, 37.0), (106.0, 38.0), (113.0, 23.0), (112.0, 38.0), (120.0, 30.0), (114.0, 23.0), (116.0, 40.0), (116.0, 40.0), (114.0, 25.0), (0.0, 0.0), (109.0, 34.0), (114.0, 35.0), (124.0, 42.0), (114.0, 35.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (119.0, 34.0), (121.0, 38.0), (120.0, 27.0), (118.0, 36.0), (0.0, 0.0), (114.0, 23.0), (118.0, 38.0), (118.0, 39.0), (1.0, 1.0), (114.0, 38.0), (121.0, 29.0), (116.0, 40.0), (116.0, 36.0), (110.0, 20.0), (0.0, 0.0), (121.0, 31.0), (114.0, 37.0), (121.0, 31.0), (114.0, 35.0), (118.0, 35.0), (113.0, 23.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 31.0), (115.0, 27.0), (105.0, 38.0), (0.0, 0.0), (116.0, 40.0), (114.0, 23.0), (124.0, 47.0))", "rowcount": 959, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlDATE in: \"select longitude, latitude from events where extract(date\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 88, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlINT in: \"select \"T\".gender from (select t1.gender, count(t1.device_id) as num from \"gende\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 89, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' in: \"select (sum(t1.gender =\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 90, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (!)\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (!)\n", "exec_able": false}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 91, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 92, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('F',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select if\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 3}
{"sql_id": 93, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'Academic Information' unknown\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 94, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlGROUP in: \"select sum(case when t1.group\"\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 1}
{"sql_id": 95, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlGROUP in: \"select sum(case when t1.gender is null and t1.age is null and t1.group\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 96, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 97, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2000, 'tt0629291'), (1999, 'tt0629228'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t3.years, t3.episode_id from ( select distinct t2.year\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 98, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Rene Balcer',), ('Constantine Makris',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 99, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such aggregate 'sql_sub'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'patients.patient'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 100, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 101, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 102, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (double_precision) unknown in: \"select cast(sum(strftime('%J', careplans.stop) - strftime('%J', careplans.start)\"\n!42000!syntax error, unexpected '/' in: \"/\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 105, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 106, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'patients.patient'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 107, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 108, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting SCOLON in: \"select distinct t1._first, t1._last, t1.suffix from patients as t1 inner join me\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 109, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 110, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((82,), (82,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select extract('Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 111, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.patient'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 113, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 5}
{"sql_id": 114, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected AS in: \"select case sum(case when \"immunizations\".description = 'Influenza seasonal inje\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 115, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 4}
{"sql_id": 117, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 119, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 120, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Escherichia coli urinary tract infection', 'NITROFURANTOIN  MACROCRYSTALS 50 MG [Macrodantin]', 7, 'alive'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 121, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Delbert', 'Effertz'), ('Oswaldo', 'Abernathy'), ('Kendrick', 'Watsica'), ('Lakeshia', 'Schuster'), ('Victoria', 'Towne'), ('Thurman', 'Stroman'), ('Julius', 'Moen'), ('Xavier', 'Krajcik'))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 123, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 126, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 127, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, 'Diabetes self management plan'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 128, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't2.patient'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 129, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 130, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.patient'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 131, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 132, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 133, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 134, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 135, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 136, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(distinct patients.patient) from patients as t1 inner join condition\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 139, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 140, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 141, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(t1.checknumber) from payments as t1 inner join customers as t2 on t\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 142, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 143, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 144, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select sum(orderdetails.quantityordered * orderdetails.priceeach) / count(orders\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 145, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select sum(amount) from payments where extract('%Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 146, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'paymentdate' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 147, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.ordernumber'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 148, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.ordernumber'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 149, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(case when 2440587.5 + extract(epoch\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'o.ordernumber'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 150, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.customernumber'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 151, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting FROM in: \"select (case when t1.customername = 'Atelier graphique' then t2.amount else 0 en\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 152, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 153, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"t1\".\"paymentDate\", '%Y'), count(\"t1\".\"customerNumbe\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select extract(\"Y\"\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 154, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlINT, expecting SCOLON in: \"select t3.productname, sum(t2.quantityordered) from orders as t1 inner join orde\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 155, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'monterey county' unknown\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 156, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'alameda county' unknown\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 157, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'dublin' unknown\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 158, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.21344717,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'bay area' unknown\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 159, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting UNION or EXCEPT or INTERSECT or ')' in: \"select (case when t1.region = \"bay area\" then 1 else 0 end) * 100 / (select coun\"\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 160, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select (sum(if\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 161, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting OR or THEN in: \"select (sum(case when t2.food_type = ''afghani\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 163, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((40,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 164, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((335987,), (335988,), (335989,), (335990,), (335991,), (335992,), (335993,), (335994,), (335995,), (335996,), (335997,), (335998,), (335999,), (336000,), (336001,), (336002,), (336003,), (336004,), (336005,), (336006,), (336007,), (336008,), (336009,), (336010,), (336011,), (336012,), (336013,), (336014,), (336015,), (336016,), (336017,), (336018,), (336019,), (336020,), (336021,), (336022,), (336023,), (336024,), (336025,), (336026,), (336027,), (336028,), (336029,), (336030,), (336031,), (336032,), (336033,), (336034,), (336036,), (336037,), (336038,), (336039,), (336040,), (336041,), (336042,), (336043,), (336044,), (336045,))", "rowcount": 58, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 167, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((40,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlINT, expecting OR or THEN in: \"select sum(case when substr(match_date,7,1) = ''5\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 168, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 169, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.00016902285,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select (cast(count(case when win_margin > 100 then 1 else 0)\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 171, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.bowling_skill'\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 172, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19.183674,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting SCOLON in: \"select cast(count(case when t1.team_1 = t1.match_winner = t1.toss_winner then 1 \"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 173, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.111111,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'venue'\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 174, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Sohail Tanvir',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.player_id'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 175, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 176, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('YK Pathan',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'player'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 177, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Kings XI Punjab',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected COMPARISON in: \"<\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected '-' in: \"### Explanation\n!-\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 178, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select 2008 - year\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 179, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 180, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 181, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((24.2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select sum(case when t2.u_gender = 'F' then 1 else 0)\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 183, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((98.4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'UK' unknown\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 184, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.871838,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'Action' unknown\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 185, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting AS in: \"select (cast(sum(cast(coalesce(u2base.rating, \"0\") as numeric) * 100) / count(u2\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 186, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.257329,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t3.a_gender =\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 187, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: cannot use non GROUP BY column 't2.cast_num' in query results without an aggregate function\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 188, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(\"a_gender\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 189, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 190, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-35.632183,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (sum(iif(t1.isenglish =\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 191, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, None, None, None, 273045, 'Documentary'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select sum(iif(a_gender =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 4}
{"sql_id": 192, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 193, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 194, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 195, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 196, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 197, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 198, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.product_id'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 199, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.customer_id'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 200, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 201, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select t2.\"Customer Name\" from east_superstore as t1 inner join people as t2 on \"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 202, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%J'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 203, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 204, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 205, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 206, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.Product ID'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 207, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((56.52174,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting SCOLON in: \"select (sum(case when race = 'W' then 1 else 0 end) * 100) / count(rowid) from o\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 209, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(_date, '%Y') from \"incidents\" where \"subject_weapon\"\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR, expecting SCOLON in: \"select strftime('%Y', _date) as year\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 210, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select sum(case when extract('%Y'\"\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 2}
{"sql_id": 211, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 212, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.3422294,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'genes'\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 213, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((84.61539,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'genes'\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 216, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 217, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from ( select case when \"Customer_Names\" like '%Group%' then \"Customer_\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 218, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Elorac, Corp',), ('O.E. Ltd',), ('Dharma Ltd',), ('Linde ',), ('Prasco Group',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ORDER, expecting UNION or EXCEPT or INTERSECT or ')' in: \"select distinct t1.\"Customer_Names\" from customers as t1 inner join sales_orders\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 219, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 220, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SO - 000106',), ('SO - 000136',), ('SO - 000163',), ('SO - 000165',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 221, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((396,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((396,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 222, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Georgia',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select t from (select if\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 223, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Stemware',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 224, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from ( select distinct case when t2.\"Product_Name\" = 'Cookware' then t1\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from (select distinct case when t2.\"Product_Name\" = 'Cookware' then t1.\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 225, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from ( select distinct case when t1.\"Discount_Applied\" = 0.1 then t2.\"P\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select t from ( select distinct case when t1.\"Discount_Applied\" = 0.1 then t2.\"P\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 226, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(t1.\"OrderDate\" from char_length(t1.\"OrderDate\") - 1 for 2) from\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select substr(t1.orderdate, -2, 2) from \"Sales_Orders\" as t1 inner join \"Sales_T\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 227, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select distinct t from ( select case when \"OrderNumber\" = 'SO - 000103' then \"Un\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select distinct t from ( select case when ordernumber = 'SO - 000103' then unit_\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 228, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Wuxi Group',), ('U.S. Ltd',), ('Dharma Ltd',), ('Fenwal, Corp',), ('Victory Ltd',), ('Ohio ',), ('Ascend Ltd',), ('Apotheca, Ltd',), ('E. Ltd',), ('Elorac, Corp',), ('Rochester Ltd',), ('WakeFern ',), ('Qualitest ',), (\"OHTA'S Corp\",), ('Ei ',), ('Capweld ',), ('Medsep Group',), ('Bare ',), ('Linde ',), ('Pacific Ltd',), ('Weimei Corp',), ('O.E. Ltd',), ('Ole Group',), ('Select ',), ('Winthrop ',), ('Sundial ',), (\"Burt's Corp\",), ('3LAB, Ltd',), ('Niconovum Corp',), ('Mylan Corp',), ('Nipro ',), ('AuroMedics Corp',), ('OUR Ltd',), ('Llorens Ltd',), ('ETUDE Ltd',), ('Medline ',), ('Eminence Corp',), ('Apollo Ltd',), ('New Ltd',), ('Uriel Group',), ('S.S.S. Group',), ('Exact-Rx, Corp',), ('Procter Corp',), ('Trigen ',), ('PEDIFIX, Corp',), ('Prasco Group',), ('Pure Group',), ('Amylin Group',), ('Avon Corp',), ('21st Ltd',))", "rowcount": 50, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'sales_orders'\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 229, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'sales_orders'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 230, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((30,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' in: \"select sum(\"WarehouseCode\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 232, "EM": 1, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select distinct t from ( select case when \"_CustomerID\" = 11 then \"ProcuredDate\"\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!subquery table reference needs alias, use AS xxx in: \"select distinct t from ( select case when \"_CustomerID\" = 11 then \"ProcuredDate\"\"\n!42000!syntax error, unexpected IDENT in: \"t\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 233, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((28,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected LIKE, expecting ')' or ',' in: \"select sum(iif(ship_date like\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 234, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 235, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Chauncey', 'Ray', 'Billups', 27))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select \"players\".firstname, \"players\".middlename, \"players\".lastname, 2003 -strf\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 237, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.11245,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select cast(sum(case when t2.steals is not null and t1._tmid = 'LAL' then 1 else\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 238, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select count(case when t2.act = 1 then 1 else 0)\"\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 239, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((44.827587,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 240, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, 0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't4.charname'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 4, "FP": 0, "FN": 0}
{"sql_id": 241, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' in: \"select count(t1.title =\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 242, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select sum(case when genretype = \"Comedy\" then 1 else 0)\"\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 243, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((21.428572,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.title'\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 244, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pericles, Prince of Tyre',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 0}
{"sql_id": 245, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Venus and Adonis.',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.title'\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 246, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.genretype'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 247, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('f',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 0}
{"sql_id": 248, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('DS Yamamura Misa Suspense: Maiko Kogiku - Kisha Katherine - Sougiya Isa Akashi - Koto ni Maru Hana Sanrin: Kyoto Satujin Jinken File',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('DS Yamamura Misa Suspense: Maiko Kogiku - Kisha Katherine - Sougiya Isa Akashi - Koto ni Maru Hana Sanrin: Kyoto Satujin Jinken File',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 249, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Proceedings of the International IFIP-IEEE Conference on Broadband Communications, Global Infrastructure for the Information Age',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Proceedings of the International IFIP-IEEE Conference on Broadband Communications, Global Infrastructure for the Information Age',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 250, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female White students',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select if\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 251, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((128, 16))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'reviews'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 253, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'Business_Hours.closing_time'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 254, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Decimal (6A) doesn't have format (18.0)\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 255, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 256, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 257, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 259, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select \"T2\".\"title\" from \"Award\" as \"T1\" inner join \"Episode\" as \"T2\" on \"T1\".\"e\"\n!42000!syntax error, unexpected FROM in: \"from\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t2.title from award as t1 inner join episode as t2 on t1.episode_id = t2.\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 260, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Richard Gasparian',), ('Tom Mazzocco',), ('Derek Casari',), ('Bill Higley',), ('Michael Miller',), ('Eric Loudon',), ('Heliodoro Salvatierra',), ('Martin Alvarez',), ('Jason Bikowski',), ('Esther H. Lee',), ('William Bemiller',), ('Richard K. Chung',), ('Kent Rice',), ('Michael Wolf',), ('Scott D. Greenberg',), ('Tom Klein',), ('Amanda Byrnes',), ('Ashley Brooke Cooper',), ('Michael G. Mahan',), ('Laurie Biernacki',), ('Rick Polizzi',), ('Ray Miceli',), ('Will Anderson',), ('Angela Wixtrom',), ('Brooks Stonestreet',), ('Nikki Isordia',), ('Desiree E. Craig',), ('Deanna Asato',), ('Stephenie Moffatt',), ('Elizabeth Ableson',), ('Trista H. Navarro',), ('Larry Smith',), ('Lisa S. Cervantes',), ('Mike Battle',), ('Sergio Guerra',), ('Colin Contreary',), ('Lisa Walder',), ('N. Vyolet Diaz',), ('Alexander Duke',), ('Felicia Nalivansky-Caplan',), ('Dean Scammahorn',), ('Debbie Peterson',), ('Peter Gomez',), ('Kurtis Kunsak',), ('Jesse D. Miller',), ('Andrea Schell',), ('Karolina Waclawiak',), ('Lauren Biller',), ('Matt Marshall',), ('Michael D. Mitchell',), ('Michael Nobori',), ('Mindi Lee',), ('Lance Wilder',), ('Lynna Blankenship',), ('T.J. Kim',), ('John Liu',), ('John Pattison',), ('Larry Miravalles',), ('Sam Ho',), ('Eric S. Keyes',), ('Kevin M. Newman',), ('Kevin N. Moore',), ('Matt Groening',), ('Sam Simon',), ('Caroline Cruikshank',), ('Christianna Lang Daley',), ('David Salvador',), ('Debbie Mahan',), ('Eric Koenig',), ('Erick T. Tran',), ('Greg Checketts',), ('Jeff Johnson',), ('Liz Climo',), ('Maeve McGrath',), ('Mark Ervin',), ('Mary Orario-Natale',), ('Matthew Herbert',), ('Sooan Kim',), ('Viorel Voronca',), ('Ed Ghertner',), ('Bill Odenkirk',), ('J. Stewart Burns',), ('Joel H. Cohen',), ('John Frink',), ('Kevin Curran',), ('Marc Wilmore',), ('Michael Price',), ('Rob LaZebnik',), ('Ron Hauge',), ('Karen Bauer',), ('Anne Legge',), ('Chris Bolden',), ('Eli Balser',), ('Alf Clausen',), ('Danny Elfman',), ('Dell Hake',), ('Brian Kelley',), ('Carolyn Omine',), ('David Silverman',), ('Don Payne',), ('James L. Brooks',), ('Bobby Mackston',), ('Norm MacLeod',), ('Terry Greene',), ('Steve Mills',), ('Steven Dean Moore',), ('Rosanna Lyons',), ('Charles McCaskill',), ('Al Jean',), ('Robyn Anderson',), ('Sally Stevens',), ('Chris Ledesma',), ('Joe Zimmerman',), ('Rick Riccio',), ('Steven L. Smith',), ('Victor Pesavento',), ('Tom Boyd',), ('Scott Clausen',), ('Ian Maxtone-Graham',), ('Matt Selman',), ('Tim Long',), ('Michael Bridge',), ('Don Barrozo',), ('Heejin Kim',), ('Mike Scully',), ('Richard Raynis',), ('Richard Sakai',), ('Tom Gammill',), ('Ronny Cox',), ('Jefferson R. Weekley',), ('John Krause',), ('Richard Hinds Jr.',), ('Alan Decker',), ('Bonita Pietila',), ('Utit Choomuang',), ('Nelson Shin',), ('Brian J. Kaufman',), ('Joe Saunders',), ('Dominique Braud',), ('Dan Greaney',), ('Daniel Chun',), ('David Mirkin',), ('Denise Sirkot',), ('Max Pross',), ('Mike Reiss',), ('Glen Wuthrich',), ('John Mathot',), ('Scott Alberts',), ('Jim Reardon',), ('Rudi Berden',), ('Mike B. Anderson',), ('Jeff Westbrook',), ('Larina Jean Adamson',), ('Matt Warburton',), ('Mark Linden',), ('Drew McPhail',), ('Louise Jaffe',), ('Robert Nichols II',), ('Tim Lauber',), ('Valentina Garza',), ('Dan Castellaneta',), ('Pamela Hayden',), ('Nancy Cartwright',), ('Harry Shearer',), ('Yeardley Smith',), ('Tress MacNeille',), ('Julie Kavner',), ('Felix Sanchez',), ('Larry Field',), ('Laurie Wetzler',), ('Denise Donatelli',), ('Hank Azaria',), ('Shohreh Aghdashloo',), ('Russi Taylor',), ('Karl Wiedergott',), ('Adam Kuhlman',), ('Jack Dyer',), ('Ray Claffey',), ('Robert Ingram',), ('Sam Im',), ('Billy Theriot',), ('John W. Hyde',), ('Carlton Batten',), ('Patrick Buchanan',), ('Scott Brutz',), ('Chris Clements',), ('Matthew Schofield',), ('Oscar Cervantes',), ('Charles Ragins',), ('Paul Wee',), (\"Shannon O'Connor\",), ('Gabriel DeFrancesco',), ('Alfred Cruz',), ('Daniel Chiu',), ('Ian Wilcox',), ('Jabu Henderson',), ('Mike Pettengill',), ('Rene Vega',), ('Steve Pilapil',), ('Adam Klein',), ('William L. Arance',), ('Joe Wack',), ('Alex Que',), ('Alex Ruiz',), ('Ben Lane',), ('Chance Raspberry',), ('Cynthia Jill French',), ('Dane Romley',), ('Dante Fabiero',), ('Eddie Rosas',), ('Edwin E. Aguilar',), ('Eric Lara',), ('Ernie Elicanal',), ('Fill Marc Sagadraca',), ('Grant Lee',), ('Istvan Majoros',), ('J.C. Wegman',), ('Jason D. Warnesky',), ('Jay Robinson',), ('Jeanne Erickson',), ('Jennie Hoffer',), ('Jennifer Moeller',), ('John Achenbach',), ('Jonathan Gebhart',), ('Josh Taback',), ('Julia Fitzmaurice',), ('Jung A. Yoo',), ('Lena Podesta',), ('Luis Escobar',), ('Manny DeGuzman',), ('Mike Morris',), ('Norman P. Auble',), ('Orlando Baeza',), ('Oscar Pangestu',), ('Richard Manginsay',), ('Rick Salonga',), ('Ryan Rivette',), ('Silvia Pompei',), ('Tom Madrid Jr.',), ('Tricia Benson',), ('Victor E. Almaguer',), ('Yelena Geodakyan',), ('Young Yoo',), ('Paul Newman',), ('Bob Anderson',), ('Matthew Faughnan',), ('Michael Polcino',), ('Nancy Kruse',), ('Raymond S. Persi',), ('Jennifer Dolce',), ('Cameron Porter',), ('Jarod Daetwiler',), ('Javier Pineda',), ('John Berman',), ('Leasa Epps-Eisele',), ('Merl Reagle',), ('Myung Nam Chang',))", "rowcount": 257, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Richard Gasparian',), ('Tom Mazzocco',), ('Derek Casari',), ('Bill Higley',), ('Michael Miller',), ('Eric Loudon',), ('Heliodoro Salvatierra',), ('Martin Alvarez',), ('Jason Bikowski',), ('Esther H. Lee',), ('William Bemiller',), ('Richard K. Chung',), ('Kent Rice',), ('Michael Wolf',), ('Scott D. Greenberg',), ('Tom Klein',), ('Amanda Byrnes',), ('Ashley Brooke Cooper',), ('Michael G. Mahan',), ('Laurie Biernacki',), ('Rick Polizzi',), ('Ray Miceli',), ('Will Anderson',), ('Angela Wixtrom',), ('Brooks Stonestreet',), ('Nikki Isordia',), ('Desiree E. Craig',), ('Deanna Asato',), ('Stephenie Moffatt',), ('Elizabeth Ableson',), ('Trista H. Navarro',), ('Larry Smith',), ('Lisa S. Cervantes',), ('Mike Battle',), ('Sergio Guerra',), ('Colin Contreary',), ('Lisa Walder',), ('N. Vyolet Diaz',), ('Alexander Duke',), ('Felicia Nalivansky-Caplan',), ('Dean Scammahorn',), ('Debbie Peterson',), ('Peter Gomez',), ('Kurtis Kunsak',), ('Jesse D. Miller',), ('Andrea Schell',), ('Karolina Waclawiak',), ('Lauren Biller',), ('Matt Marshall',), ('Michael D. Mitchell',), ('Michael Nobori',), ('Mindi Lee',), ('Lance Wilder',), ('Lynna Blankenship',), ('T.J. Kim',), ('John Liu',), ('John Pattison',), ('Larry Miravalles',), ('Sam Ho',), ('Eric S. Keyes',), ('Kevin M. Newman',), ('Kevin N. Moore',), ('Matt Groening',), ('Sam Simon',), ('Caroline Cruikshank',), ('Christianna Lang Daley',), ('David Salvador',), ('Debbie Mahan',), ('Eric Koenig',), ('Erick T. Tran',), ('Greg Checketts',), ('Jeff Johnson',), ('Liz Climo',), ('Maeve McGrath',), ('Mark Ervin',), ('Mary Orario-Natale',), ('Matthew Herbert',), ('Sooan Kim',), ('Viorel Voronca',), ('Ed Ghertner',), ('Bill Odenkirk',), ('J. Stewart Burns',), ('Joel H. Cohen',), ('John Frink',), ('Kevin Curran',), ('Marc Wilmore',), ('Michael Price',), ('Rob LaZebnik',), ('Ron Hauge',), ('Karen Bauer',), ('Anne Legge',), ('Chris Bolden',), ('Eli Balser',), ('Alf Clausen',), ('Danny Elfman',), ('Dell Hake',), ('Brian Kelley',), ('Carolyn Omine',), ('David Silverman',), ('Don Payne',), ('James L. Brooks',), ('Bobby Mackston',), ('Norm MacLeod',), ('Terry Greene',), ('Steve Mills',), ('Steven Dean Moore',), ('Rosanna Lyons',), ('Charles McCaskill',), ('Al Jean',), ('Robyn Anderson',), ('Sally Stevens',), ('Chris Ledesma',), ('Joe Zimmerman',), ('Rick Riccio',), ('Steven L. Smith',), ('Victor Pesavento',), ('Tom Boyd',), ('Scott Clausen',), ('Ian Maxtone-Graham',), ('Matt Selman',), ('Tim Long',), ('Michael Bridge',), ('Don Barrozo',), ('Heejin Kim',), ('Mike Scully',), ('Richard Raynis',), ('Richard Sakai',), ('Tom Gammill',), ('Ronny Cox',), ('Jefferson R. Weekley',), ('John Krause',), ('Richard Hinds Jr.',), ('Alan Decker',), ('Bonita Pietila',), ('Utit Choomuang',), ('Nelson Shin',), ('Brian J. Kaufman',), ('Joe Saunders',), ('Dominique Braud',), ('Dan Greaney',), ('Daniel Chun',), ('David Mirkin',), ('Denise Sirkot',), ('Max Pross',), ('Mike Reiss',), ('Glen Wuthrich',), ('John Mathot',), ('Scott Alberts',), ('Jim Reardon',), ('Rudi Berden',), ('Mike B. Anderson',), ('Jeff Westbrook',), ('Larina Jean Adamson',), ('Matt Warburton',), ('Mark Linden',), ('Drew McPhail',), ('Louise Jaffe',), ('Robert Nichols II',), ('Tim Lauber',), ('Valentina Garza',), ('Dan Castellaneta',), ('Pamela Hayden',), ('Nancy Cartwright',), ('Harry Shearer',), ('Yeardley Smith',), ('Tress MacNeille',), ('Julie Kavner',), ('Felix Sanchez',), ('Larry Field',), ('Laurie Wetzler',), ('Denise Donatelli',), ('Hank Azaria',), ('Shohreh Aghdashloo',), ('Russi Taylor',), ('Karl Wiedergott',), ('Adam Kuhlman',), ('Jack Dyer',), ('Ray Claffey',), ('Robert Ingram',), ('Sam Im',), ('Billy Theriot',), ('John W. Hyde',), ('Carlton Batten',), ('Patrick Buchanan',), ('Scott Brutz',), ('Chris Clements',), ('Matthew Schofield',), ('Oscar Cervantes',), ('Charles Ragins',), ('Paul Wee',), (\"Shannon O'Connor\",), ('Gabriel DeFrancesco',), ('Alfred Cruz',), ('Daniel Chiu',), ('Ian Wilcox',), ('Jabu Henderson',), ('Mike Pettengill',), ('Rene Vega',), ('Steve Pilapil',), ('Adam Klein',), ('William L. Arance',), ('Joe Wack',), ('Alex Que',), ('Alex Ruiz',), ('Ben Lane',), ('Chance Raspberry',), ('Cynthia Jill French',), ('Dane Romley',), ('Dante Fabiero',), ('Eddie Rosas',), ('Edwin E. Aguilar',), ('Eric Lara',), ('Ernie Elicanal',), ('Fill Marc Sagadraca',), ('Grant Lee',), ('Istvan Majoros',), ('J.C. Wegman',), ('Jason D. Warnesky',), ('Jay Robinson',), ('Jeanne Erickson',), ('Jennie Hoffer',), ('Jennifer Moeller',), ('John Achenbach',), ('Jonathan Gebhart',), ('Josh Taback',), ('Julia Fitzmaurice',), ('Jung A. Yoo',), ('Lena Podesta',), ('Luis Escobar',), ('Manny DeGuzman',), ('Mike Morris',), ('Norman P. Auble',), ('Orlando Baeza',), ('Oscar Pangestu',), ('Richard Manginsay',), ('Rick Salonga',), ('Ryan Rivette',), ('Silvia Pompei',), ('Tom Madrid Jr.',), ('Tricia Benson',), ('Victor E. Almaguer',), ('Yelena Geodakyan',), ('Young Yoo',), ('Paul Newman',), ('Bob Anderson',), ('Matthew Faughnan',), ('Michael Polcino',), ('Nancy Kruse',), ('Raymond S. Persi',), ('Jennifer Dolce',), ('Cameron Porter',), ('Jarod Daetwiler',), ('Javier Pineda',), ('John Berman',), ('Leasa Epps-Eisele',), ('Merl Reagle',), ('Myung Nam Chang',))", "rowcount": 257, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 261, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((52,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'person'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 262, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'award'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 263, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Outstanding Voice-Over Performance', 'Dan Castellaneta'), ('Best Animated Series', None), ('Best Voice-Over Performance', 'Hank Azaria'), ('Favorite Animated Comedy', None))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select award, person from award where result = \"Winner\" and year\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 264, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 265, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Treehouse of Horror XIX', 'https://m.media-amazon.com/images/M/MV5BMTgzOTYyNTc2OF5BMl5BanBnXkFtZTgwNjc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Best Directing in an Animated Television Production or Short Form', 'Bob Anderson'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Outstanding Writing in a Comedy Series', 'Marc Wilmore'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('Homer and Lisa Exchange Cross Words', 'https://m.media-amazon.com/images/M/MV5BMTQ2MzcyOTMyMl5BMl5BanBnXkFtZTgwNDc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Animation', 'Tim Long'))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'award'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 266, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Paul Newman', 'Shaker Heights', 'dedicated to the memory of', 97))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'person'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 268, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(award_id) from award where person = \"Billy Kimball\" and substr(year\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 269, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Dan Castellaneta',), ('Paul Newman',), ('Marc Wilmore',), ('J. Stewart Burns',), ('Stephanie Gillis',), ('James L. Brooks',), ('Matt Groening',), ('Ian Maxtone-Graham',), ('Kevin Curran',), ('Hank Azaria',), ('Michael Price',), ('Harry Shearer',), ('John Frink',), ('Don Payne',), ('Al Jean',), ('Tim Long',), ('Alf Clausen',), ('Billy Kimball',), ('Bobby Mackston',), ('Colm Meaney',), ('Larina Jean Adamson',), ('Nancy Kruse',), ('Eric S. Keyes',), ('Lance Kramer',), ('Richard Sakai',), ('Chuck Sheetz',), ('Karl Wiedergott',), ('Pamela Hayden',), ('Max Pross',), ('Jefferson R. Weekley',), ('Patty Shinagawa',), ('Lynna Blankenship',), ('Mike Reiss',), ('Jeff Topping',), ('Carolyn Omine',), ('Sooan Kim',), ('Michael Polcino',), ('Joe Montana',), ('Jodie Foster',), ('Sam Simon',), ('Robert Forster',), ('Russi Taylor',), ('Brian Grazer',), ('Mike Scully',), ('Maurice LaMarche',), ('Marv Albert',), ('Maggie Roswell',), ('Ed Begley Jr.',), ('Nancy Cartwright',), ('Tress MacNeille',), ('Robert Nichols II',), ('Tom Mazzocco',), ('Kelsey Grammer',), ('Danny Elfman',), ('Joe Mantegna',), ('Julie Kavner',), ('Jeff Bezos',), ('Marcia Wallace',), ('Denis Leary',), ('Mark Cuban',), ('Dell Hake',), ('Mark Kirkland',), ('David Silverman',), ('Chris Ledesma',), ('Julia Louis-Dreyfus',), ('William Bemiller',), ('Richard Raynis',), ('Dean Scammahorn',), ('Glen Wuthrich',), ('Merl Reagle',), ('Kipp Lennon',), ('Don Vanderbeek',), ('John Mathot',), ('Denise Sirkot',), ('Bill Odenkirk',), ('Dan Greaney',), ('Matthew Nastuk',), ('Orlando Gumatay',), ('David Mirkin',), ('Karen Bauer',), ('John Achenbach',), ('Anna Pagan',), ('Sally Stevens',), ('Alex Dilts',), ('Scott Thompson',), ('Rob LaZebnik',), ('John Berman',), ('Yeardley Smith',), ('Shohreh Aghdashloo',), ('Tom Gammill',), ('Bonita Pietila',), ('Will Shortz',), ('Grant Lee',))", "rowcount": 93, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Dan Castellaneta',), ('Paul Newman',), ('Marc Wilmore',), ('J. Stewart Burns',), ('Stephanie Gillis',), ('James L. Brooks',), ('Matt Groening',), ('Ian Maxtone-Graham',), ('Kevin Curran',), ('Hank Azaria',), ('Michael Price',), ('Harry Shearer',), ('John Frink',), ('Don Payne',), ('Al Jean',), ('Tim Long',), ('Alf Clausen',), ('Billy Kimball',), ('Bobby Mackston',), ('Colm Meaney',), ('Larina Jean Adamson',), ('Nancy Kruse',), ('Eric S. Keyes',), ('Lance Kramer',), ('Richard Sakai',), ('Chuck Sheetz',), ('Karl Wiedergott',), ('Pamela Hayden',), ('Max Pross',), ('Jefferson R. Weekley',), ('Patty Shinagawa',), ('Lynna Blankenship',), ('Mike Reiss',), ('Jeff Topping',), ('Carolyn Omine',), ('Sooan Kim',), ('Michael Polcino',), ('Joe Montana',), ('Jodie Foster',), ('Sam Simon',), ('Robert Forster',), ('Russi Taylor',), ('Brian Grazer',), ('Mike Scully',), ('Maurice LaMarche',), ('Marv Albert',), ('Maggie Roswell',), ('Ed Begley Jr.',), ('Nancy Cartwright',), ('Tress MacNeille',), ('Robert Nichols II',), ('Tom Mazzocco',), ('Kelsey Grammer',), ('Danny Elfman',), ('Joe Mantegna',), ('Julie Kavner',), ('Jeff Bezos',), ('Marcia Wallace',), ('Denis Leary',), ('Mark Cuban',), ('Dell Hake',), ('Mark Kirkland',), ('David Silverman',), ('Chris Ledesma',), ('Julia Louis-Dreyfus',), ('William Bemiller',), ('Richard Raynis',), ('Dean Scammahorn',), ('Glen Wuthrich',), ('Merl Reagle',), ('Kipp Lennon',), ('Don Vanderbeek',), ('John Mathot',), ('Denise Sirkot',), ('Bill Odenkirk',), ('Dan Greaney',), ('Matthew Nastuk',), ('Orlando Gumatay',), ('David Mirkin',), ('Karen Bauer',), ('John Achenbach',), ('Anna Pagan',), ('Sally Stevens',), ('Alex Dilts',), ('Scott Thompson',), ('Rob LaZebnik',), ('John Berman',), ('Yeardley Smith',), ('Shohreh Aghdashloo',), ('Tom Gammill',), ('Bonita Pietila',), ('Will Shortz',), ('Grant Lee',))", "rowcount": 93, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 270, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 271, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Billy Kimball',), ('Ian Maxtone-Graham',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t1.person from award as t1 inner join episode as t2 on t1.episode_id = t2\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 272, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E13',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'award'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 273, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Jodie Foster',), ('Rob LaZebnik',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'person'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 274, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E1',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'episode'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 275, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Wedding for Disaster',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Wedding for Disaster',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 276, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.878788,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'person'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 277, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 278, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('MyPods and Boomsticks',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select t2.title from award as t1 inner join episode as t2 on t1.episode_id = t2.\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 279, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((61,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((61,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 280, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 281, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1930s to 2020s',), ('erotic bakery',), ('cake',), ('bullet',), (\"st. patrick's day\",), ('riot',), ('bounty hunter',), ('bail bondsman',), ('2d animation',), ('twin',), ('slow motion scene',), ('punched in the face',), ('cigar smoking',), ('phallus shaped cake',), ('reference to the fantastic four',), ('taser',), ('female slaps male',), ('wet cement',), ('wanted poster',), ('twin sister',), ('suffocation',), ('shot in the arm',), ('shillelagh',), ('secret from husband',), ('school principal',), ('ricochet',), ('prison',), ('prayer',), ('police arrest',), ('plastic bag',), ('partnership',), ('parade float',), ('montage with pop song',), (\"man in woman's clothes\",), ('man in drag',), ('male in female clothes',), ('male in drag',), ('male bonding',), ('leprechaun',), ('irish joke',), ('gun',), ('gratitude',), ('flashback',), ('fistfight',), ('fantastic four spoof',), ('face slap',), ('construction site',), ('concrete',), ('coffee',), ('catholic priest',), ('catholic joke',), ('buddy cop spoof',), ('bleeding arm',), ('biblical reference',), ('biblical quote',), ('bulletproof glass',), ('1930s to 2020s',), ('cell phone',), ('machu picchu',), ('2d animation',), ('tracking device',), ('peru',), ('overprotective mother',), ('pun in title',), ('lottery',), ('lottery ticket',), ('1930s to 2020s',), ('bad behavior',), ('party',), ('identity swap',), ('2d animation',), ('rich kid',), ('lottery winner',), ('halloween episode',), ('reference to the great pumpkin',), ('reference to barack obama',), ('reference to john mccain',), ('reference to dwight d. eisenhower',), ('year 2008',), ('reference to john wayne',), ('reference to jimmy stewart',), ('reference to prince',), ('reference to golda meir',), ('reference to george clooney',), ('reference to kate winslet',), ('reference to edward g. robinson',), ('reference to rip taylor',), ('reference to charlton heston',), ('reference to george washington',), ('reference to abraham lincoln',), ('reference to pontius pilate',), ('1930s to 2020s',), ('transformer',), ('christmas',), ('halloween',), ('alien',), ('halloween party',), ('princess costume',), ('skeleton costume',), ('frankenstein costume',), ('ghost costume',), ('pumpkin patch',), ('witch costume',), ('halloween costume',), ('reference to charlie brown',), ('dead celebrity',), ('celebrity death',), ('reference to mad men',), ('transformer toy',), ('toy car',), ('voting booth',), ('halloween spoof',), ('giant pumpkin',), ('2d animation',), ('roman numeral in title',), ('turkey the bird',), ('body in chipper',), ('advertising campaign',), (\"jack o'lantern\",), ('premarital sex',), ('body in a trunk',), ('1930s to 2020s',), ('steamer trunk',), ('limbo dancing',), ('bear trap',), ('1930s to 2020s',), ('crossword puzzle',), ('2d animation',), ('lemonade stand',), ('getting dumped',), ('gay bar',), ('disco',), ('1930s to 2020s',), ('time machine',), ('2d animation',), ('ipod',), ('arab stereotype',), ('arab culture',), ('1930s to 2020s',), ('stadium',), ('poker game',), ('greenhouse',), ('town meeting',), ('demolition',), ('construction site',), ('secret handshake',), ('bagpipes',), ('dare',), ('prank',), ('2d animation',), ('surrealism',), ('skinny dipping',), ('wetting pants',), ('male bonding',), ('eskimo indian',), ('colony collapse disorder',), ('billionaire',), ('beekeeper',), ('beehive',), ('killer bee',), ('boston celtics',))", "rowcount": 161, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'episode'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 282, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'episode'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 283, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!CHARACTER VARYING needs a mandatory length specification in: \"select count(\"award_id\") from \"Award\" where substring(cast(\"_year\" as varchar)\"\n!42000!syntax error, unexpected FROM in: \"from\"\n", "exec_able": false}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 284, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E1',), ('S20-E1',), ('S20-E1',), ('S20-E1',), ('S20-E2',), ('S20-E2',), ('S20-E2',), ('S20-E2',), ('S20-E3',), ('S20-E3',), ('S20-E3',), ('S20-E3',), ('S20-E4',), ('S20-E4',), ('S20-E4',), ('S20-E4',), ('S20-E5',), ('S20-E5',), ('S20-E5',), ('S20-E5',), ('S20-E6',), ('S20-E6',), ('S20-E6',), ('S20-E6',), ('S20-E7',), ('S20-E7',), ('S20-E7',), ('S20-E7',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E8',), ('S20-E5',), ('S20-E3',), ('S20-E8',))", "rowcount": 36, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'episode'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 285, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.9,), (11.6,), (13.5,), (22.0,), (23.2,), (6.9,), (15.1,), (15.4,), (17.4,), (29.0,), (5.2,), (11.6,), (14.4,), (19.1,), (24.7,), (2.1,), (2.6,), (3.7,), (6.5,), (0.7,), (2.2,), (2.6,), (4.6,), (2.4,), (2.9,), (4.4,), (6.0,), (8.9,), (6.1,), (9.2,), (15.4,), (15.4,), (2.9,), (2.6,), (5.9,), (6.0,))", "rowcount": 36, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'episode'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 286, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((9,), (6,), (8,), (10,), (7,), (9,), (8,), (10,), (6,), (7,), (9,), (10,), (6,), (8,), (7,), (9,), (6,), (8,), (10,), (7,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (5,), (5,), (5,), (5,), (10,), (6,), (6,), (6,), (2,), (9,))", "rowcount": 46, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'episode'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 287, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'episode'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 288, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((54.166668,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'foreign_legion' unknown\n", "exec_able": false}}, "TP": 2, "FP": 3, "FN": 0}
{"sql_id": 289, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16.363636,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'navy' unknown\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 290, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'student124' unknown\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 291, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((102.12766,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((102.12766,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 292, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((37.7551,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select (sum(cast(if\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 293, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select if\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 294, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected AS, expecting ')' or OR in: \"select (sum(case when t3.name is null then 1 else 0 end) as\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 295, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((52.666668, 47.333332))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select (sum(case when t2.name is null then 1 else 0)\"\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 296, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('10.000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 297, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1.8011204,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(\"bool\" =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 298, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female', 'uci'), ('female', 'ucsd'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select if\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 299, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((50.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((50.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 300, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('male',), ('female',), ('female',), ('female',), ('female',), ('female',), ('female',), ('female',))", "rowcount": 125, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: cannot use non GROUP BY column 't2.name' in query results without an aggregate function\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 301, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (cast((sum(iif(_month =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 302, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select count(male.name) - sum(case when male.name is null then 1 else 0)\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 303, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-7.0, 'NO'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting SCOLON in: \"select to_real((sum(case when t2.name is not null and t1._month = 0 then 1 else \"\n", "exec_able": false}}, "TP": 5, "FP": 3, "FN": 0}
{"sql_id": 304, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.244898,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ',' in: \"select (sum(coalesce(t2._month =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 305, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1500,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected MONTH in: \"select 100 * sum(iif(t2.month\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 306, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('ucla', 'female'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 308, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 309, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 311, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"Ev'rybody Wants to Be a Cat\",))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',' in: \"select t2.song from movies_total_gross as t1 inner join characters as t2 on t1.m\"\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 2}
{"sql_id": 312, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('101 Dalmatians',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 313, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'movies_total_gross' unknown\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 314, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'mpaa_rating' unknown\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 315, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'Ron Clements' unknown\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 316, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Barry Cook',), ('Chris Buck',), ('Gary Trousdale',), ('Mark Dindal',), ('Mike Gabriel',), ('Ralph Zondag',), ('Roger Allers',), ('Ron Clements',), ('Wolfgang Reitherman',))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'instr(clob,char)'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 317, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '$' unknown\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 318, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('The Lion King',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('The Lion King',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 319, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 321, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Moana', 'Adventure'), ('A Beautiful Planet', 'Documentary'), ('Alice Through the Looking Glass', 'Adventure'), ('Captain America: Civil War', 'Action'), ('Doctor Strange', 'Adventure'), ('Finding Dory', 'Adventure'), ('Pete\u2019s Dragon', 'Adventure'), ('Queen of Katwe', 'Drama'), ('Rogue One: A Star Wars Story', 'Adventure'), ('The BFG', 'Adventure'), ('The Finest Hours', 'Thriller/Suspense'), ('The Jungle Book', 'Adventure'), ('The Light Between Oceans', 'Drama'), ('Zootopia', 'Adventure'))", "rowcount": 14, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '2016' unknown\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 1}
{"sql_id": 323, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Many Adventures of Winnie the Pooh', 'Winnie the Pooh', 'Winnie the Pooh'), ('The Rescuers', 'Bernard and Miss Bianca', 'The Journey'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 3, "FP": 3, "FN": 0}
{"sql_id": 324, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "22012!division by zero.\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 325, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Roger Allers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Wolfgang Reitherman',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 326, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 3, "FP": 1, "FN": 0}
{"sql_id": 328, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Lilo & Stitch', 'Chris Sanders'), ('Chicken Little', 'Mark Dindal'))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 3, "FN": 4}
{"sql_id": 329, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 330, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Saludos Amigos',), ('Make Mine Music',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 1}
{"sql_id": 331, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Ron Clements',), ('Barry Cook',), ('Chris Buck',), ('Gary Trousdale',), ('Mike Gabriel',), ('Ralph Zondag',), ('Roger Allers',), ('Wolfgang Reitherman',), ('David Hand',), ('Chris Sanders',), ('Mark Dindal',), ('Chris Williams',), ('Clyde Geronimi',), ('Nathan Greno',), ('Rich Moore',), ('Don Hall',), ('Wilfred Jackson',), ('Byron Howard',))", "rowcount": 18, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting AS in: \"select distinct t2.director from \"characters\" as t1 inner join \"director\" as t2 \"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 332, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Circle of Life',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '$' unknown\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 333, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('David Hand',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "42000!unexpected end of input", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 2}
{"sql_id": 334, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((66.666664,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '$' unknown\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 335, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'substr' unknown\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 336, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 1}
{"sql_id": 337, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Clayton',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Prince John',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 338, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Avengers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 339, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pinocchio',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'characters.hero'\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 340, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Wolfgang Reitherman',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '$' unknown\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 342, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select sum(cast(replace(trim(\"inflation_adjusted_gross\", '$'), ',', '') as real)\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sum(cast(replace(trim(inflation_adjusted_gross, \"$\"), \",\", \"\") as real)) \"\n", "exec_able": false}}, "TP": 4, "FP": 5, "FN": 4}
{"sql_id": 344, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((15.949078,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '$' unknown\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 3}
{"sql_id": 345, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((66.666664,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 346, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected CURRENT in: \"select \"current\".first_name, \"current\".last_name from current\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 348, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-95,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 349, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (float64) unknown in: \"select cast(sum(case when t2.party = 'Independent' then 1 else 0 end) as float64\"\n!42000!syntax error, unexpected '*' in: \"*\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 350, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected CURRENT in: \"select count(*) from current\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 351, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((92.03057,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select (sum(case when extract('%Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 352, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 353, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Sanford D. Bishop, Jr.',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such aggregate 'sql_sub'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 354, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected CURRENT in: \"select sum(t3.result) from (select case when sum(cast(strftime('%Y', t2._end) as\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 355, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Sherrod Brown',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected END in: \"select case when sum(cast(strftime('%Y', current_terms.end\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 356, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected CURRENT in: \"select count(*) from current\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 357, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 358, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 359, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 360, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.customerid'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 361, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.brandid'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 363, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'sales'\n", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 364, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((134,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'sales'\n", "exec_able": false}}, "TP": 3, "FP": 3, "FN": 0}
{"sql_id": 365, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('YES',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'sales'\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 366, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19073,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 367, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Black',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected THEN, expecting ')' or OR in: \"select case when (sum(case when t1.name = 'HL Mountain Frame - Silver, 42' then \"\n", "exec_able": false}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 368, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'products'\n", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 369, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.278838,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'products'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 370, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select sum(cast(iif(t1.name =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 371, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected AS, expecting ')' or OR in: \"select (sum(case when t2.price between 200 and 300 then 1 else 0 end) as\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 372, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Strawberries',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), ('Cream of Cauliflower Soup',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Raw Oysters',), ('Stewed tomatoes',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('Rockaways oysters',), ('Hafergrutze',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Grape fruit',), ('Oranges',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('Rissoles a la Merrill',), ('Lammkoteletten nach Villeroi',), ('SALTED ALMONDS',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Vegetable Soup',), ('Baked fish, wine sauce',), ('Pur\u00e9e of split peas aux croutons',), ('Consomm\u00e9 in cup',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Hot ribs of beef',), ('Doucette salad',), ('Stewed tomatoes',), ('New beets',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Old fashioned rice pudding',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Oranges',), ('Strawberries',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Grape fruit',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Stewed prunes',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges',), ('Oranges sliced',), ('Large pot of coffee',), ('Cup of coffee (served in small pot)',), ('Large pot of Oolong tea',), ('Pot of chocolate',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Sliced Bananas and Cream',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('French rolls',), ('Milk rolls',), ('Celery',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Mohren Suppe mit Sago',), ('Oranges',), ('Food',), ('Shreaded Wheat',), ('Clam cocktail',), ('Oyster cocktail',), ('Sardines',), ('Little Neck clams',), ('Stuffed olives',), ('Lalla Rookh Sorbet',), ('Celery',), ('Malaga grapes',), ('Pears',), ('Martineaus',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('Strawberry',), ('Oyster Bay asparagus',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Fruit',), ('Plain Omelette',), ('Canape, Martha',), ('Fruit',), ('Quaker Oats',), ('Cracked Wheat',), ('Puree of beans',), ('Fruits in Season',), ('Fried Flounders',), ('Oatmeal Porridge',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Bouillon in cup',), ('Queen olives',), ('Radishes',), ('Chow chow',), ('Panfish, Meuniere, German fried potatoes',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Philadelphia Cream Cheese',), ('Assorted cakes',), ('Scollops en caisse, Supreme',), ('Irish stew',), ('Marrow on toast, Bordelaise',), ('Lobster salad',), ('Potato salad',), ('Chicken salad',), ('Mashed potatoes',), ('Coffee',), ('Spinach with egg',), ('Boiled potatoes',), ('Baba au rhum',), ('Hot buns',), ('Tongue',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Stewed prunes',), ('Boiled rice',), ('Roast beef',), ('Sliced Bananas',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Sardines',), ('Chicken',), ('Apple Sauce',), ('Tea',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Coffee',), ('Milk',), ('Rolls',), ('Griddle cakes',), ('Baked Potatoes',), ('Porterhouse Steak',), ('Pommes de Terre a la Creme',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Onions plain or fried',), ('Sandwiches of all Kinds',), ('Small Steak',), ('Hamburger Steak',), ('Veal Chops',), ('Mutton Chops',), ('Pork Chops',), ('Ham & Eggs',), ('Bacon & Eggs',), ('Fried Liver',), ('German Pancake',), ('Omelettes',), ('Oysters & Clams',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters stewed',), ('Oysters box stew',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Fruit',), ('Oat Meal',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Fish cakes',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Griddle cakes',), ('Hominy',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Fish cakes',), ('Sirloin Steak',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Lyonnaise Potatoes',), ('Griddle cakes',), ('Marmalade',), ('Coffee',), ('Tomato Soup',), ('Baked Weakfish',), ('Oysters, Raw on the shell',), ('Half and Half Scallops & Oysters',), ('Oranges',), ('Rolled Oats',), ('Broiled Mullet',), ('Sirloin Steak with Mushrooms',), ('Pork Chops Piquante Sauce',), ('Broiled Chicken on Toast',), ('Calfs Liver and Onions',), ('Broiled Kidney with Bacon',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Waffles',), ('Split Rolls',), ('Hot Cakes',), ('Tea',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Oranges',), ('Oatmeal Porridge',), ('Smelts Meuniere',), ('Findon Haddock',), ('Oatmeal Porridge',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Cold Half Chicken and Ham ',), ('Cold Veal and Ham Pie',), ('Cold Roast Lamb',), ('Oranges',), ('Fried Flounder',), ('Grillirte Kuken',), ('Hoot Mon Mush',), ('Fillet Steaks aux Champignon',), ('Fruit',), ('Strawberries',), ('broiled shad',), ('Oysters, Milk Stew',), ('Oysters, Boston stew',), ('Oysters, Box Stew',), ('Oysters, Raw on the Half Shell',), ('Coffee',), ('Quaker Oats',), ('Boiled rice',), ('Smelts, Tartare sauce',), ('Findon Haddock',), ('Beef Steak, Saratoga chips',), ('Calves Liver & Bacon',), ('Sausage',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Sliced Pineapples',), ('Oatmeal Porridge',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Broiled Ham',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Cold Steak Pie',), ('Cold Mutton',), ('Cold Roast Beef',), ('Cold German Sausage',), ('Oysters, Boston Box Stew',), ('Oysters, Fry',), ('Oysters, Fry with Bacon',), ('Oatmeal',), ('Oyster Omelette',), ('Stewed Tripe',), ('Pork Sausage and Lyonnaise Potatoes',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Mock turtle soup',), ('Consomme Benoiton',), ('Filet Steaks aux Champignon',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Consomme San Remo',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Clear green turtle soup',), ('Corned Beef Hash',), ('Consomme Maceo',), ('Boiled rice',), ('Puree Mongol',), ('Broiled Rashers of Ham',), ('Consomme Printanier',), ('French fried potatoes',), ('Chicken Mulligatawny',), ('Split Rolls',), ('Oysters, Blue Point Stew',), ('French bread',), ('Corn bread',), ('Oysters, Crumb Fry',), ('English Beef soup',), ('Beef Stew',), ('Oysters, Blue Point Fry',), ('Filet of sole a la Horly',), ('broiled shad',), ('Diamond back terrapin',), ('Fruit',), ('Oat Meal',), ('Boiled rice',), ('Plain Omelette',), ('Fried Eggs',), ('Fried Plaice - Meuniere',), ('Kippered Herring',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Sausage & Mashed Potatoes',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fruits in Season',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Boiled potatoes',), ('Fried fish',), ('Egg, to order',), ('Diamond stew',), ('Jam',), ('Marmalade',), ('Tea',), ('Stewed prunes',), ('Clam Fritters',), ('Boiled Salt Mackerel',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Pork Chops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('English Mutton Chops',), ('Broiled Spring Chicken',), ('Sirloin Steak',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Plain Omelet',), ('Fried Indian Mush',), ('Baked Potatoes',), ('Saratoga Chips',), ('French fried potatoes',), ('Lyonnaise Potatoes',), ('Potatoes stewed in Cream',), ('Saute Potatoes',), ('Rye Bread',), ('French rolls',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn muffins',), ('Wheat Cakes, with Maple Syrup',), ('Coffee',), ('Tea',), ('Chocolate',), ('Cocoa',), ('Oatmeal Porridge',), ('Fruits in Season',), ('Corn Meal Mush',), ('Boiled',), ('Rolled Oats',), ('Scotch grouse en casserole',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Fruit',), ('Quaker Oats',), ('Scrambled Eggs',), ('Eggs au Beurre Noir',), ('Broiled Blue Fish',), ('Fish cakes',), ('Sirloin Steak, Fried French Chips',), ('Chicken Liver on Toast with Bacon',), ('Pork Chops, Sage & Onions',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Marmalade',), ('Coffee',), ('Salt Codfish, Spanish Style',), ('Marmalade',), ('Mashed potatoes',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Apples',), ('Passion Fruit',), ('Kippered Herrings',), ('Curried Pork and Rice',), ('Stewed Tripe with Cream sauce',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Chicken broth',), ('Consomme Macaroni',), ('Oat Meal',), ('Buckwheat Cakes',), ('Hard Boiled Egg',), ('Fruit',), ('Cream Cheese',), ('Plain Omelette',), ('Fried Eggs',), ('Hominy',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Kippered Herring',), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Fish cakes',), ('Apfelsinen',), ('Apfel',), ('Maisgries',), ('Hafergrutze',), ('Snowflakes',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Salt Codfish, Spanish Style',), ('Fruit',), ('Fillet Steads with Mushrooms',), ('Poached Eggs on Toast',), ('Curried Prawns and Rice, Bombay Duck',), ('Eggs au Beurre Noir',), ('Lamb Chops, Broiled Plain',), ('Whiting - Meuniere',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Fish cakes',), ('Sirloin Steak - Fried Onions',), ('Broiled Ham',), ('Grape fruit',), (\"Lambs' Liver Saute\",), ('Breakfast',), ('Chicken Liver on Toast with Bacon',), ('Tripe Fritters',), ('Jambon Grille',), ('Minced Veal a la Zingari',), ('Eggs to order',), ('Dried Hash',), ('Corned Beef Hash',), ('Mutton Chops - Saute Potatoes',), ('Calfs Liver + Bacon',), ('Boiled rice',), ('Cold Smoked Tongue and Ham',), ('Buckwheat Cakes',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Marmalade',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Coffee',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Broiled Fresh Mackerel',), ('English Muffins',), ('Salt Cod, Egg Sauce',), ('Cracked Wheat with Fresh Milk',), ('Rice Cakes',), ('Shad roe and bacon',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Marmalade',), ('Jam',), ('Smoked Schnapper Butter Sce',), ('Yarmouth Bloaters',), ('Tea',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Coffee',), ('Cocoa',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Fruits in Season',), ('Frizzled Breakfast Bacon (to order)',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Saute of Kidney',), ('Corned Beef Hash',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('Coffee',), ('Scrambled Eggs and bacon',), ('liver and bacon',), ('Oranges',), ('Apples',), ('Oatmeal',), ('Fillet de Boeuf a la Parisienne',), ('Fried Chicken a la Maryland',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Kippered Herrings',), ('Broiled Ham',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Strawberries',), ('Hominy',), ('Jam',), ('Boiled potatoes',), ('Pork Sausage and Lyonnaise Potatoes',), ('Baked Apple Dumpling, Hard Sauce',), (\"Potato a la Maitre d'Hotel\",), ('Tea',), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Oysters, Roast in Shell',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Asparagus Omelette ',), ('rice pudding',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Swiss Rolls',), ('Fruit in Season',), ('Charlotte Russe',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Jam',), ('Lettuce',), ('Cum-quats',), ('Raisin cake',), ('Tea',), ('Apples',), ('Orange',), ('Fillet Steak ',), ('Oranges',), ('Grape fruit',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Ham omelette',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('China Teas',), ('Coffee',), ('Broiled Salt Mackerel',), ('Corned Beef Hash',), ('Apples',), ('Stewed Tripe Spanish',), ('Germea',), ('Eggs to order',), ('Eggs to order',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Butter Cakes with Maple Syrup',), ('Marmalade',), ('Eggs to order',), ('Bananas',), ('Hot Rolls',), ('Coffee ',), ('Kraftsuppe, Prinzessin Art',), ('Cracked Wheat',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Boiled rice',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Liver & Bacon',), ('Blumenkohl, hollandische Sauce',), ('Stewed Tripe Spanish',), ('Beef Steak, fried onions',), ('Cotelettes de Veau, Sauce Tomate',), ('Gratinierter Eierkuchen nach Mornay',), ('Boiled eggs',), ('Split Rolls',), ('Veal Cuttlets Lyonnaise',), ('Entenbraten, Bordeaux Sauce',), ('Fried Potatoes',), ('Pork Sausages, Snowflake Potatoes',), ('Mutton Chops & Potato Chips',), ('Hot Rolls',), (\"Lambs' Liver with Bacon\",), ('Mirabellen',), ('Coffee',), ('Tripe, Spanish Style',), ('Citronen-Auflauf',), ('Boiled rice',), ('Liver & Bacon',), ('Cape Horn Hash',), ('Broiled Rashers of Ham',), ('Fruit in Season',), ('Breakfast Rolls',), ('Corn Meal Fritters',), ('Corn bread',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Dry Toast',), ('Boiled Potatos',), ('Pikelets',), ('Rolled Oats',), ('Fried Whiting',), ('Hot Rolls',), ('Flannel Cakes',), ('Marmalade',), ('Tea',), ('Jam',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Tea',), ('Coffee',), ('Fillet Steak Fried Potatoes',), ('Cocoa',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Bacon to order',), ('Breakfast Rolls',), ('Wheat Cakes',), ('Marmalade',), ('Coffee',), ('Beef Steak & onions',), ('Fried Bananas',), ('Egg to Order',), ('Beef Steak and Champignons',), ('Boiled potato',), ('Currant Buns',), ('Cold Ham',), ('Boiled Cod',), ('Waffle',), ('Marmalade',), ('Broiled Spring Chicken',), ('Fruit',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Tea',), ('Oatmeal Porridge',), ('Buckwheat Cakes',), ('Yarmouth Bloaters',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Broiled Ham',), ('Curried Chicken with Rice',), ('Two Eggs Boiled',), ('Eggs to order',), ('Tea',), ('Tea',), ('Mutton Chops',), ('Potato Chips',), (\"Lambs' Liver Saute\",), ('Tea',), ('Curried Veal and Rice',), ('Broiled Rashers of Bacon',), ('Cold: Ox Tongue',), ('French bread',), ('Marmalade',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Bananas',), ('Coffee Cake',), ('Cold Ham',), ('Fried Sausages, Mashed Potatoes',), ('Corned Beef Hash',), ('Split Rolls',), ('Eggs to order',), ('Eggs to order',), ('Tea',), ('Waffles',), ('Coffee',), ('Cocoa',), ('Quaker Oats',), ('Devilled Kidney',), ('Marmalade',), ('Fried Potatoes',), ('Pettijohn',), ('Hot Rolls',), ('Coffee',), ('Corn bread',), ('Fried Ham & Eggs',), ('French bread',), ('Pork Sausage and Mashed Potatoes',), ('Boiled Cracked Wheat',), ('Dry Toast',), ('Spanish Omelettes',), ('Rice Cakes',), ('Fried smelts',), ('English Muffins',), ('Calves Liver and Onions',), ('Marmalade',), ('Mutton Chops (to order)',), ('Jam',), ('Porterhouse Steak and Lamb Chops',), ('Honey in the Comb',), ('Jacket Potatoes',), ('Chocolate',), ('Curried Shrimps and Rice',), ('Corn bread',), ('Boiled Corn Meal with Cream',), ('Yarmouth Bloaters',), ('Maple Syrup',), ('Fried Fresh Fish',), ('Corned Beef Hash',), ('Honey',), ('Jam',), ('Fillet Steaks with Mushrooms',), ('Marmalade',), ('Tea',), ('Cocoa',), ('Tea',), ('Tongues and Sounds',), ('Hot Rolls',), ('Stewed Tripe',), ('Cornmeal Mush',), ('Coffee',), ('Cocoa',), ('Rice Cakes',), ('Breakfast Delight',), ('Diamond stew',), ('Fresh Comb Honey',), ('Flaked Rice',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fricassee of Turkey Wings Celery Sauce',), ('Fried Country Sausages and Lima Beans',), ('Rolled Oats',), ('Oxtail Ragout and Vegetables',), ('Yarmouth Bloaters',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Broiled Ham',), ('Lynnhavens oysters',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Frankfurter Sausages and Sauerkraut',), ('Cape Cods oysters',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Mashed Turnips',), ('Fried Liver & Bacon',), ('Stewed tomatoes',), ('Corned Beef Hash',), ('Oyster cocktail',), ('Boiled potatoes',), ('Potatoes',), ('Potatoes Saute',), ('Cherrystones clams',), ('Fried Ham',), ('Eclairs',), ('Boiled potatoes',), ('Pies',), ('Clam cocktail',), ('Potatoes Boiled',), ('Baked Shad Wine Sauce',), ('Corn bread',), ('Hot Biscuits',), (\"Calf's Liver and Bacon\",), ('Boiled Fish',), ('Broiled Lamb Kidneys and Bacon',), ('Corn bread',), ('Roast Leg of English Mutton',), ('Toast',), (\"Frogs' legs in every style\",), ('French bread',), (\"Roast Phil'a Chicken\",), ('Flannel Cakes',), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), (\"Roast Phil'a Chicken\",), (\"Lambs' Liver Saute\",), ('York Ham, Grilled',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sauterne 1ere',), ('St. Julien Sup\u00e8rieur',), ('Tripe Fritters',), ('Pontet Canet',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Niersteiner',), ('Hochheimer',), ('Corned Beef Hash',), ('Perrier Jou\u00ebt Special and Brut',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Eggs to order',), ('Clicquot Sec',), ('Mo\u00ebt & Chandon, White Seal',), ('Mo\u00ebt & Chandon, Brut',), ('Irroy Brut',), ('Fried New Potatoes',), ('Apollinaris',), ('Johannis',), ('Hot Rolls',), ('Corn bread',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Dry Toast',), ('Bisque of Crawfish',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('English Muffins',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('French bread',), ('New Asparagus, Cream Sauce',), ('Sherbert Roman',), ('Red Head Duck',), ('Rice Cakes',), ('Celery Salad',), ('Fancy Ice Cream',), ('Honey in the Comb',), (\"Broiled Shad Maitre d'Hotel\",), ('Fruit',), ('Cakes',), ('Marmalade',), ('Cheese',), ('Coffee',), ('Jam',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Oranges',), ('Bananas',), ('Apples',), ('Passion Fruit',), ('Fried Whiting',), ('Rolled Oats',), ('Oranges',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Bananas',), ('Curried Lamb and Rice',), ('Broiled Chicken on Toast',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Fried Bananas',), ('Boiled Mackerel',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Veal Cutlets Breaded',), ('Obst',), ('Hamburg Steak with Onions',), ('Nachtisch',), ('Pork Sausages',), ('Corned Beef Hash',), ('Fried Gar fish',), ('Fried Ham',), ('liver and bacon',), ('Eggs to order',), ('Potatoes Boiled',), ('Corn bread',), ('Hot Rolls',), ('Smoked Snapper',), ('English Muffins',), ('Toast',), ('Batter Cakes',), ('Tea',), ('Gemischtes Rahmeis',), ('Oat Meal Porridge',), ('Pork Cutlets',))", "rowcount": 1001, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 373, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Hafergrutze',), ('Apfelsinen',), ('Milchreis',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Hot ribs of beef',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Grilled Mutton Chops',), ('Cold Steak Pie',), ('Eggs to order',), ('Grilled Mutton Chops',), ('Eggs as Ordered',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Apfelsinen',), ('Hafergrutze',), ('Eggs to order',), ('Fried & Boiled Potatoes',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Scrambled Eggs and bacon',), ('Fillet de Boeuf a la Parisienne',), ('Bouchees aux Macaroni',), ('Roast Goose & Apple Sauce',), ('Mashed Pumpkins',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Swiss Rolls',), ('Cum-quats',), ('Fillet Steak ',), ('MacLaren Cheese',), ('China Teas',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Cotelettes de Veau, Sauce Tomate',), ('A. A. Oats with Fresh Milk',), ('Egg to Order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Pork Sausage and Mashed Potatoes',), ('Eggs to order',), (\"Broiled Shad Maitre d'Hotel\",), ('Obst',), ('Nachtisch',), ('Eggs to order',), ('Batter Cakes',), ('Gemischtes Rahmeis',), ('Pork Cutlets',))", "rowcount": 60, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '.', expecting SCOLON in: \"select \"Dish\".name as t1.\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 374, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 375, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(\"T2\".ship_id) from customer as \"T1\" inner join shipment as \"T2\" on \"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 376, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(countcusid) from (select count(cust_id) as countcusid from customer\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 377, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((48,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,clob)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 379, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(*) from \"shipment\" as t1 inner join \"city\" as t2 on t1.city_id = t2\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 380, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting FROM in: \"select count(*) from shipment as t1 inner join city as t2 on t1.city_id = t2.cit\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 381, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26190.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select sum(shipment.weight) from shipment as t1 inner join city as t2 on city.ci\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 383, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,clob)'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 384, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 385, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((538,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol ($)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 386, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((59,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(*) as per from customer as t1 inner join shipment as t2 on t1.cust_\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 387, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 389, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.666545970248333,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (double_precision) unknown in: \"select cast(sum(case when driver.first_name = 'Zachery' and driver.last_name = '\"\n!42000!syntax error, unexpected '*' in: \"*\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 390, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((50,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 391, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57.251907,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 392, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 393, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1206408,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1206408,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 394, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": 1, "error_message": "42000!unexpected end of input", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 395, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 396, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 397, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 398, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 399, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 400, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 401, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 402, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 403, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((25.260960334029228,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 404, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"order_date\", '%Y') from \"cust_order\" group by sys.t\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select strftime('%Y', order_date) from cust_order group by strftime(\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 405, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 406, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(\"email\" from position('@' in \"email\") + 1 for length(\"email\") -\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(email, strpos(email, \"@\" ) + 1, length(email) - strpos(email, \"\"\n", "exec_able": false}}, "TP": 4, "FP": 3, "FN": 4}
{"sql_id": 407, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 408, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,timestamp)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 409, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 410, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 411, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 412, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (float8) unknown in: \"select (cast(sum(case when t1.status_value = 'Returned' then 1 else 0 end) as fl\"\n!42000!syntax error, unexpected '*' in: \"*\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 413, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 414, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 415, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 416, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 417, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(*) from \"book\" as t1 inner join \"publisher\" as t2 on t1.publisher_i\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 418, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'datetime_format(date,char)'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 419, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 420, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 421, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 422, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select distinct t2.dba_name from inspection as t1 inner join establishment as t2\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 423, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 424, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 425, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 426, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 427, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'year' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 428, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 429, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 430, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 431, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 433, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (float64) unknown in: \"select cast(count(case when t1.first_name = 'Jessica' and t1.last_name = 'Anthon\"\n!42000!syntax error, unexpected '/' in: \"/\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 434, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 435, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 436, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 437, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 438, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 439, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y-%m'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 440, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y-%m'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 441, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 442, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "(('Bitcoin',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 443, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 444, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((102415334.30652,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting FROM in: \"select (sum(t2.circulating_supply) / 12) from coins as t1 inner join historical \"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 445, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 446, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 448, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Novacoin',), ('Mincoin',), ('Freicoin',), ('BitBar',), ('WorldCoin',), ('Digitalcoin',), ('Goldcoin',), ('Argentum',), ('Fastcoin',), ('Megacoin',), ('Infinitecoin',), ('Primecoin',), ('Anoncoin',), ('CasinoCoin',), ('Bullion',), ('Emerald Crypto',), ('Quark',), ('Zetacoin',), ('SecureCoin',), ('Sexcoin',), ('TagCoin',), ('I0Coin',), ('FLO',), ('Joulecoin',), ('Datacoin',), ('BetaCoin',), ('GrandCoin',), ('Deutsche eMark',), ('NetCoin',), ('HoboNickels',), ('Tigercoin',), ('Orbitcoin',), ('Catcoin',), ('RonPaulCoin',), ('Mooncoin',), ('Dimecoin',), ('RedCoin',), ('TeslaCoin',), ('NobleCoin',), ('Nyancoin',), ('UltraCoin',), ('PotCoin',), ('Blakecoin',), ('HunterCoin',), ('CacheCoin',), ('Aricoin',), ('Auroracoin',), ('Pesetacoin',), ('Marscoin',), ('Cashcoin',), ('Pandacoin',), ('MAZA',), ('Uniform Fiscal Object',), ('LiteBar',), ('Photon',), ('Myriad',), ('DNotes',), ('Skeincoin',), ('Einsteinium',), ('Bitcoin Scrypt',), ('Coin(O)',), ('FlutterCoin',), ('OctoCoin',), ('e-Gulden',), ('PLNcoin',), ('AsiaCoin',), ('PopularCoin',), ('CannaCoin',), ('BlueCoin',), ('Canada eCoin',), ('Guncoin',), ('Pinkcoin',), ('Energycoin',), ('VeriCoin',), ('TEKcoin',), ('Litecoin Plus',), ('UnbreakableCoin',), ('CryptCoin',), ('SuperCoin',), ('BoostCoin',), ('Hyper',), ('BitQuark',), ('CloakCoin',), ('Fantomcoin',), ('ArtByte',), ('Donationcoin',), ('Piggycoin',), ('Startcoin',), ('Boolberry',), ('SHACoin',), ('BritCoin',), ('Quatloo',), ('Viacoin',), ('Triangles',), ('I/O Coin',), ('Cryptonite',), ('Carboncoin',), ('Titcoin',), ('Virtacoin',), ('Joincoin',), ('Bitmark',), ('Halcyon',), ('Donu',), ('Emercoin',), ('NativeCoin',), ('BunnyCoin',), ('Acoin',), ('FoldingCoin',), ('bitCNY',), ('Sterlingcoin',), ('Magi',), ('ExclusiveCoin',), ('Trollcoin',), ('GlobalBoost-Y',), ('Prime-XI',), ('Dashcoin',), ('Sativacoin',), ('SpreadCoin',), ('Blocknet',), ('Gapcoin',), ('GCN Coin',), ('Bitcoin Fast',), ('PayCoin',), ('Unitus',), ('IncaKoin',), ('SmileyCoin',), ('Bean Cash',), ('Wild Beast Block',), ('Gridcoin',), ('Sharkcoin',), ('SongCoin',), ('Crave',), ('Pura',), ('Neutron',), ('Xaurum',), ('Californium',), ('Advanced Internet Blocks',), ('Universal Currency',), ('Bata',), ('FujiCoin',), ('EuropeCoin',), ('The Cypherfunks',), ('GravityCoin',), ('IrishCoin',), ('Bitzeny',), ('BowsCoin',), ('AnarchistsPrime',), ('CompuCoin',), ('Hellenic Coin',), ('TransferCoin',), ('AmsterdamCoin',), ('Eurocoin',), ('VectorAI',), ('SpaceCoin',), ('Pakcoin',), ('Influxcoin',), ('Expanse',), ('Swing',), ('ParallelCoin',), ('Save and Gain',), ('Elite',), ('SOILcoin',), ('Adzcoin',), ('RussiaCoin',), ('EverGreenCoin',), ('Creditbit',), ('Litecred',), ('Yocoin',), ('Francs',), ('Evil Coin',), ('Asiadigicoin',), ('TrumpCoin',), ('C-Bit',), ('Independent Money System',), ('HOdlcoin',), ('BERNcash',), ('DigixDAO',), ('Fantasy Cash',), ('FuzzBalls',), ('HiCoin',), ('Zurcoin',), ('SixEleven',), ('2GIVE',), ('PlatinumBAR',), ('MarteXcoin',), ('Nullex',), ('Citadel',), ('RevolverCoin',), ('GoldBlocks',), ('Breakout',), ('Debitcoin',), ('Comet',), ('Rise',), ('LBRY Credits',), ('PutinCoin',), ('Syndicate',), ('Cryptojacks',), ('Steem Dollars',), ('Ardor',), ('808Coin',), ('VapersCoin',), ('TajCoin',), ('Experience Points',), ('B3Coin',), ('Neo',), ('Bitcloud',), ('Zayedcoin',), ('Tao',), ('Tellurion',), ('Dollarcoin',), ('MustangCoin',), ('PROUD Money',), ('Sequence',), ('Atomic Coin',), ('JobsCoin',), ('Sakuracoin',), ('Cubits',), ('BipCoin',), ('Zoin',), ('Lykke',), ('Golem',), ('Internet of People',), ('Nexium',), ('Vault Coin',), ('Pabyosi Coin (Special)',), ('Alias',), ('BenjiRolls',), ('iBank',), ('FirstCoin',), ('Solarflarecoin',), ('Eryllium',), ('Elysium',), ('Centurion',), ('Marijuanacoin',), ('PRCoin',), ('Argus',), ('MarxCoin',), ('Pascal Lite',), ('MiloCoin',), ('Musicoin',), ('ZSEcoin',), ('Impact',), ('DubaiCoin',), ('Darsek',), ('Matchpool',), ('Ultimate Secure Cash',), ('BlazerCoin',), ('HappyPay',), ('Coinonat',), ('Lunyr',), ('Qtum',), ('Aeternity',), ('Metaverse ETP',), ('MobileGo',), ('Neuro',), ('More Coin',), ('TenX',), ('Ecobit',), ('Gas',), ('Santiment Network Token',), ('CVCoin',), ('SkinCoin',), ('OracleChain',), ('Shadow Token',), ('BlockCAT',), ('Nebulas',), ('Achain',), ('Loopring',), ('Monetha',), ('Agrello',), ('Elixir',), ('VIBE',), ('Voise',), ('RChain',), ('FLiK',), ('BridgeCoin',), ('ALIS',), ('HelloGold',), ('Enigma',), ('Change',), ('Bitcoin Gold',), ('KuCoin Token',), ('EXRNchain',), ('LATOKEN',), ('NULS',), ('JavaScript Token',), ('Etherparty',), ('Revain',), ('Electroneum',), ('Raiden Network Token',), ('Ties.DB',), ('Upfiring',), ('bitJob',), ('Viuly',), ('EncrypGen',), ('Bodhi',), ('Quantstamp',), ('QASH',), ('Bitcoin Diamond',), ('Divi Exchange Token',), ('Flixxo',), ('Presearch',), ('CyberMiles',), ('IoT Chain',), ('Wabi',), ('Verify',), ('Uquid Coin',), ('ProChain',), ('Ignis',), ('Playkey',), ('Datum',), ('LockTrip',), ('Genaro Network',), ('aelf',), ('Bibox Token',), ('Single Collateral DAI ',), ('SophiaTX',), ('HTMLCOIN',), ('Utrust',), ('AppCoins',), ('Mixin',), ('GameChain System',), ('Coinlancer',), ('AI Doctor',), ('Show',), ('United Traders Token',), ('Spectre.ai Dividend Token',), ('Vezt',), ('ugChain',), ('Bottos',), ('Selfkey',), ('MOAC',), ('IOST',), ('Nitro',), ('Aurora DAO',), ('SingularityNET',), ('Scry.info',), ('Mobius',), ('Hydro Protocol',), ('Maggie',), ('Trinity Network Credit',), ('DATA',), ('Matrix AI Network',), ('CoinFi',), ('Zeepin',), ('CPChain',), ('Zilla',), ('EtherSportz',), ('LOCIcoin',), ('Dether',), ('Fusion',), ('Neurotoken',), ('Concensum',), ('Insights Network',), ('Ravencoin',), ('Sharpe Platform Token',), ('Loom Network',), ('Noah Coin',), ('Mithril',), ('PolySwarm',), ('Stakenet',), ('U Network',), ('AdHive',), ('DeviantCoin',), ('Auctus',), ('Zebi Token',), ('Nexo',), ('Hydro',), ('Sharder',), ('Digitex',), ('Plian',), ('XMax',), ('Project Pai',), ('Karatgold Coin',), ('BitZ Token',), ('Everipedia',), ('Blue Whale EXchange',), ('NIX',), ('Apollo Currency',), ('Vexanium',), ('Maximine Coin',), ('Birake',), ('Gemini Dollar',), ('Paxos Standard',), ('FREE Coin',), ('USD Coin',), ('MMOCoin',), ('Italian Lira',), ('SINOVATE',), ('CWV Chain',), ('MXC',), ('Aergo',), ('HedgeTrade',), ('RSK Infrastructure Framework',), ('v.systems',), ('Grin',), ('Stably USD',), ('SOLVE',), ('PlayChip',), ('Constant',), ('Fetch.ai',), ('BORA',), ('Flexacoin',), ('Theta Fuel',), ('Japan Content Token',), ('Nash',), ('OTOCASH',), ('Locus Chain',), ('Newton',), ('ThoreNext',), ('Diamond Platform Token',), ('Artfinity',), ('Origo',), ('StakeCubeCoin',), ('Bitsdaq',), ('EOSDT',), ('Contentos',), ('MovieBloc',), ('MX Token',), ('USDK',), ('Silverway',), ('Dusk Network',), ('ChainX',), ('Oasis City',), ('GateToken',), ('Cocos-BCX',), ('BHEX Token',), ('BitForex Token',), ('Ladder Network Token',), ('Netbox Coin',), ('VideoCoin',), ('Streamit Coin',), ('MineBee',), ('Lightyears',), ('NuCypher',), ('1irstGold',), ('Ultragate',), ('Beyondcoin',), ('Waves Enterprise',), ('Bitcoin Vault',), ('Jarvis Network',), ('Ghost',), ('Xaya',), ('DXdao',), ('Secret',), ('Simple Software Solutions',), ('MATH',), ('Orion Protocol',), ('Kadena',), ('Sylo',), ('renBTC',), ('Sora',), ('sDEFI',), ('MCDEX',), ('Blocery',), ('ECOMI',), ('Kulupu',), ('Hakka.Finance',), ('UniLayer',), ('NFT',), ('YAMv2',), ('Lien',), ('Falconswap',), ('Polkaswap',), ('DataHighway',), ('BUILD Finance',), ('REVV',), ('Empty Set Dollar',), ('Wing',), ('Percent',), ('Defi Shopping Stake',), ('Rotten',), ('yAxis',), ('DeFiner',), ('DerivaDAO',), ('Nsure.Network',), ('Celo Dollar',), ('cVault.finance',), ('Persistence',), ('Polyient Games Governance Token',), ('Wrapped Origin Axie',), ('CoFiX',), ('Atari Token',), ('Value Liquidity',), ('UniLend',), ('DAOFi',), ('Akash Network',), ('Pepemon Pepeballs',), ('ETG Finance',), ('UnFederalReserve',), ('CryptoFrog.Finance',), ('Gameswap',), ('Unifi Protocol DAO',), ('88mph',), ('Vanilla Network',), ('Pancake Bunny',), ('Bifrost (BFC)',), ('Zoracles',), ('Plasma Finance',), ('Honey',), ('Unit Protocol Duck',), ('AnRKey X',), ('SafePal',), ('MAPS',), ('COVER Protocol',), ('Shabu Shabu Finance',), ('BSCEX',), ('NFTX',), ('ZKSwap',), ('CheeseSwap',), ('Poolz Finance',), ('Paralink Network',), ('Mdex',), ('Onooks',), ('Umbrella Network',), ('Lotto',), ('APYSwap',), ('Goose Finance',), ('Premia',), ('DAOventures',), ('Midas Dollar',), ('Vesper',), ('AC Milan Fan Token',), ('RamenSwap',), ('Polkacity',), ('PRCY Coin',), ('SOTA Finance',), ('Wault Finance (OLD)',), ('FileStar',), ('xToken',), ('Bounce Token',), ('BSCPAD',), ('Vortex Defi',), ('Konomi Network',), ('Playcent',), ('Space Cow Boy',), ('Illuvium',), ('Inverse Finance',), ('Belt',), ('LABS Group',), ('Splyt',), ('Oracle Top 5 Tokens Index',), ('StakerDAO',), ('Ellipsis',), ('Uhive',), ('Scaleswap',), ('WHEAT Token',), ('UniFarm',), ('Refinable',), ('Chainswap',), ('DAIN',), ('Vulcan Forged PYR',), ('Crowny',), ('Phuture',), ('Synthetify',), ('Wault [New]',), ('Smaugs NFT',), ('ETHERLAND',), ('Cubiex Power',), ('MemePad',), ('CrossFi',), ('Coldstack',), ('JaguarSwap',), ('DinoExchange',), ('SingularityDAO',), ('Don-key',), ('My DeFi Pet',), ('Frenchie Network',), ('Sleepy Sloth Finance',), ('Bakery Tools',), ('xxxNifty',), ('Oviex',), ('YooShi',), ('HODL',), ('Netvrk',), ('Dotmoovs',), ('Lean',), ('Elk Finance',), ('Rabbit Finance',), ('Vega Protocol',), ('Convex CRV',), ('EthereumPay',), ('Alpha Impact',), ('Dina',), ('Waivlength',), ('Whale Fall',), ('Pornstar',), ('AirNFTs',), ('PureFi Protocol',))", "rowcount": 589, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Subquery result missing\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 449, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 450, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y-%m'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 453, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 455, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 463, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 471, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.5964036,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 473, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (sum(iif(region.r_name =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 474, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.7149124,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select cast(sum(if\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 475, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 476, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 477, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(\"T2\".\"o_orderkey\") from \"lineitem\" as \"T1\" inner join \"orders\" as \"\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '[' in: \"select count([\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 478, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((9.490509,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected COMPARISON, expecting ')' in: \"select (count(c_acctbal <\"\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 479, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (cast(sum(iif(p_mfgr =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 480, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 481, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.495614,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (sum(iif(t2.n_name =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 482, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"your\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 483, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' in: \"select ((sum(t2.n_name =\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 484, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((48.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected COMPARISON, expecting ')' or ',' in: \"select (sum(iif(ps_supplycost >\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 485, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26.829268,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'FRANCE' unknown\n", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 486, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((23.350254,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'HOUSEHOLD' unknown\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 487, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-21.988263888888923,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting AS in: \"select (sum(cast(case when t3.l_shipmode = 'SHIP' then t1.p_retailprice else 0 e\"\n", "exec_able": false}}, "TP": 4, "FP": 1, "FN": 0}
{"sql_id": 488, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((67.39927,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected THEN, expecting UNION or EXCEPT or INTERSECT or ')' in: \"select (sum(case when t3.s_acctbal < (select avg(supplier.s_acctbal) from suppli\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 489, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (cast(sum(iif(strftime('%Y', l_shipdate) =\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 490, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.0913706,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'HOUSEHOLD' unknown\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 491, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('RAIL',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'DELIVER IN PERSON' unknown\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 3}
{"sql_id": 492, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 493, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-229,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select (sum(case when l_returnflag = 'A' then 1 else 0)\"\n", "exec_able": false}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 494, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select (2440587.5 + extract(epoch\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'to_daterelative(date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 495, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18.481518,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlREAL, expecting SCOLON in: \"select (sum(case when t1.r_name = 'ASIA' then 1 else 0 end)) * 100 / count(t1.r_\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 496, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 497, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select l_linenumber from lineitem where extract('%Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 498, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting FROM in: \"select t3.c_name from orders as t1 inner join lineitem as t2 on t1.o_orderkey = \"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 499, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 500, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((25.641026,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t1.c_mktsegment =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 501, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 502, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 503, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 504, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select \"T3\".\"c_name\" from \"orders\" as \"T1\" inner join \"lineitem\" as \"T2\" on \"T1\"\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'customer.c_name'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 505, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((150,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 506, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(\"PlayerInfo\".\"ELITEID\") from weight_info as t1 inner join playerinf\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 507, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: function 'count' not found\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected AS, expecting ')' or OR in: \"select distinct (count(case when playerinfo.nation = 'Sweden' then playerinfo.el\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 508, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select cast((2440587.5 + extract(epoch\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'billofmaterials'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 510, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((45.37037,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 511, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 512, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((77.994,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t1.shipmethodid =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 513, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, 'OR'), (0, 'AB'), (0, '33'), (0, 'MA'), (0, 'WA'), (0, 'CA'), (0, 'MT'), (0, 'AZ'), (0, 'NE'), (0, 'NY'), (0, 'PA'), (0, 'NSW'), (0, 'SA'), (0, 'ON'), (0, 'QC'), (0, 'MB'), (0, 'NB'), (0, 'BC'), (0, 'TX'), (0, 'SD'), (0, 'IL'), (0, 'MO'), (0, 'WI'), (0, 'ENG'), (0, '59'), (0, '75'), (0, '32'), (0, '91'), (0, 'BB'), (0, 'HE'), (0, 'RI'), (0, 'CT'), (0, 'NH'), (0, 'ME'), (0, 'OH'), (0, 'MI'), (0, 'IN'), (0, 'ID'), (0, 'WY'), (0, 'FL'), (0, 'TN'), (0, 'AL'), (0, 'NC'), (0, 'KY'), (0, 'MS'), (0, 'SC'), (0, 'UT'), (0, 'NM'), (0, 'NV'), (0, 'CO'), (0, 'MD'), (0, 'MN'), (0, 'VIC'), (0, '93'), (0, '62'), (0, 'QLD'), (0, '57'), (0, '78'), (0, 'TAS'), (0, 'SL'), (0, 'NW'), (0, 'HH'), (0, 'BY'), (0, '94'), (0, '41'), (0, '77'), (0, '92'), (0, '17'), (0, 'GA'), (0, '45'), (0, '95'), (0, 'VA'), (0, '80'), (0, '31'))", "rowcount": 74, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'address'\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 514, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1431.5,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (1364.5,), (1364.5,), (1349.6,), (1349.6,), (1349.6,), (1364.5,), (2319.99,), (2319.99,), (2319.99,), (2294.99,), (2294.99,), (2294.99,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (44.54,), (61.92,), (120.27,), (44.54,), (61.92,), (120.27,), (594.83,), (594.83,), (594.83,), (594.83,), (594.83,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (63.5,), (63.5,), (63.5,), (69.99,), (69.99,), (69.99,), (120.0,), (159.0,), (54.99,), (1003.91,), (333.42,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (121.46,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (364.09,), (364.09,), (364.09,), (106.5,), (52.64,), (52.64,), (52.64,), (264.05,), (264.05,), (264.05,), (264.05,), (249.79,), (249.79,), (249.79,), (249.79,), (35.0,), (40.49,), (62.09,), (80.99,), (40.49,), (62.09,), (80.99,), (80.99,), (364.09,), (249.79,), (264.05,), (91.49,), (46.09,), (91.57,), (106.5,), (175.49,), (256.49,), (404.99,), (1214.85,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (1214.85,), (1214.85,), (1214.85,), (1700.99,), (1700.99,), (1700.99,), (1700.99,), (539.99,), (742.35,), (742.35,), (769.49,), (769.49,), (769.49,), (769.49,), (564.99,), (564.99,), (564.99,), (564.99,), (564.99,), (539.99,), (539.99,), (539.99,), (539.99,), (539.99,), (53.99,), (101.24,), (121.49,), (539.99,), (539.99,), (539.99,))", "rowcount": 156, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y-%m-%d'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 515, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((44,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 516, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('W',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 517, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('W',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ON, expecting SCOLON in: \"select t1.transactiontype from transactionhistoryarchive as t1, product as t2 on\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 518, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((290,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlINT, expecting ')' or ',' in: \"select businessentityid from salesperson where businessentityid in ( select busi\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 519, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'Employee.businessentityid'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 520, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((276, 750000.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'salesperson'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 521, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((280,), (280,), (280,), (280,), (283,), (283,), (283,), (283,), (284,), (284,), (284,), (284,))", "rowcount": 12, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select distinct s1.businessentityid from salesperson as s1 inner join salesperso\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 522, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1200000.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'salesperson'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 523, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((290,), (280,), (280,), (280,), (280,), (283,), (283,), (283,), (283,), (275,), (275,), (275,), (275,), (276,), (276,), (276,), (276,), (277,), (277,), (277,), (277,), (278,), (278,), (278,), (278,), (279,), (279,), (279,), (279,), (281,), (281,), (281,), (281,), (282,), (282,), (282,), (282,), (286,), (286,), (286,), (288,), (288,), (288,), (289,), (289,), (289,), (289,), (290,), (290,), (290,))", "rowcount": 50, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select distinct t1.businessentityid from salesperson as t1 inner join salesperso\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 524, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((188715.0, 1.3384042553191489))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (:)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 525, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'employee'\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 526, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'maritalstatus' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 528, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(\"Department\".name) from \"Person\" as t1 inner join \"EmployeeDepartme\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 529, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select avg(2009 - extract('%Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 530, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!TODO: column names of level >= 3\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 531, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting SCOLON in: \"select \"T2\".\"BusinessEntityID\", extract(year from \"T2\".\"HireDate\") - extract(yea\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'purchaseorderheader'\n", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 532, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select 2011 - extract('%Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 533, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Frank', 'S', 'Pellow'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 534, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select t1.firstname, t1.lastname from person as t1 inner join employee as t2 on \"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 535, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Jo', 'Berry', 71))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'person'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 4}
{"sql_id": 536, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 537, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 538, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'employee'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 539, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Classic Vest, S', 'Team Athletic Co.'), ('Classic Vest, M', 'Team Athletic Co.'), ('Classic Vest, L', 'Team Athletic Co.'), (\"Women's Mountain Shorts, S\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, M\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, L\", 'Team Athletic Co.'), ('Water Bottle - 30 oz.', 'Green Lake Bike Company'), ('Mountain Bottle Cage', 'Green Lake Bike Company'), ('Road Bottle Cage', 'Green Lake Bike Company'), ('Patch Kit/8 Patches', 'Green Lake Bike Company'), ('Racing Socks, M', \"Jeff's Sporting Goods\"), ('Racing Socks, L', \"Jeff's Sporting Goods\"), ('Hitch Rack - 4-Bike', 'Green Lake Bike Company'), ('Bike Wash - Dissolver', 'Green Lake Bike Company'), ('Fender Set - Mountain', 'Green Lake Bike Company'), ('All-Purpose Bike Stand', 'Green Lake Bike Company'), ('Hydration Pack - 70 oz.', 'Green Lake Bike Company'), ('Short-Sleeve Classic Jersey, S', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, M', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, L', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, XL', 'Integrated Sport Products'), ('Rear Brakes', 'Superior Bicycles'), ('LL Mountain Seat/Saddle', 'First Rate Bicycles'), ('LL Mountain Seat/Saddle', 'Chicago City Saddles'), ('ML Mountain Seat/Saddle', 'First Rate Bicycles'), ('ML Mountain Seat/Saddle', 'Chicago City Saddles'), ('HL Mountain Seat/Saddle', 'Hybrid Bicycle Center'), ('HL Mountain Seat/Saddle', 'Chicago City Saddles'), ('LL Road Seat/Saddle', \"Hill's Bicycle Service\"), ('LL Road Seat/Saddle', 'Chicago City Saddles'), ('ML Road Seat/Saddle', \"Hill's Bicycle Service\"), ('ML Road Seat/Saddle', 'Chicago City Saddles'), ('HL Road Seat/Saddle', 'First Rate Bicycles'), ('HL Road Seat/Saddle', 'Chicago City Saddles'), ('LL Touring Seat/Saddle', 'Expert Bike Co'), ('LL Touring Seat/Saddle', 'Chicago City Saddles'), ('ML Touring Seat/Saddle', 'Expert Bike Co'), ('ML Touring Seat/Saddle', 'Chicago City Saddles'), ('HL Touring Seat/Saddle', 'Expert Bike Co'), ('HL Touring Seat/Saddle', 'Chicago City Saddles'), ('Mountain Tire Tube', 'Trikes, Inc.'), ('Road Tire Tube', 'Victory Bikes'), ('Touring Tire Tube', 'Victory Bikes'), ('LL Mountain Tire', 'Vista Road Bikes'), ('LL Mountain Tire', 'Sport Fan Co.'), ('ML Mountain Tire', 'Vista Road Bikes'), ('ML Mountain Tire', 'Sport Fan Co.'), ('HL Mountain Tire', 'Trikes, Inc.'), ('HL Mountain Tire', 'Sport Fan Co.'), ('LL Road Tire', 'Signature Cycles'), ('LL Road Tire', 'Professional Athletic Consultants'), ('ML Road Tire', 'Signature Cycles'), ('ML Road Tire', 'Professional Athletic Consultants'), ('HL Road Tire', 'Victory Bikes'), ('HL Road Tire', 'Professional Athletic Consultants'), ('Touring Tire', 'Victory Bikes'), ('Touring Tire', 'Professional Athletic Consultants'), ('LL Mountain Pedal', 'Greenwood Athletic Company'), ('LL Mountain Pedal', 'Crowley Sport'), ('ML Mountain Pedal', 'Greenwood Athletic Company'), ('ML Mountain Pedal', 'Crowley Sport'), ('HL Mountain Pedal', 'Inline Accessories'), ('LL Road Pedal', 'Mitchell Sports'), ('LL Road Pedal', 'Jackson Authority'), ('ML Road Pedal', 'Mitchell Sports'), ('ML Road Pedal', 'Jackson Authority'), ('HL Road Pedal', 'Compete Enterprises, Inc'), ('Touring Pedal', 'Bicycle Specialists'), ('Front Brakes', 'Superior Bicycles'), ('Chain', 'Varsity Sport Co.'))", "rowcount": 70, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 540, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select \"T2.FirstName\", \"T2.LastName\" from employee as t1 inner join person as t2\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 541, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'employee'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 543, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('23:00:00', '07:00:00'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'employee'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 544, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((datetime.date(2010, 5, 30),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 545, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57, 'Prasanna', 'E', 'Samarawickrama'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '[', expecting SCOLON in: \"select to_yoshort(hiredate) - to_yoshort(birthdate), person.firstname, person.mi\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 4}
{"sql_id": 546, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting AS in: \"select t2.persontype from \"Employee\" as t1 inner join \"Person\" as t2 on t1.busin\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 547, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'T1.BusinessEntityID' unknown\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 548, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 549, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 550, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting AS in: \"select cast(sum(365 * (strftime('%Y', t1.enddate) - strftime('%Y', t1.startdate)\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 6}
{"sql_id": 551, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'Department.name'\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 552, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'workorderrouting'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 6}
{"sql_id": 553, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((27, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select sum(case when t1.img_id = 1 then 1 else 0)\"\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 554, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, '73', '185', 47), (None, '74', '180', 44), (None, '73', '200', 43), (None, '75', '186', 40), (None, '74', '198', 46), ('Andrew Joseph Ernest', '72', '185', 45), ('Patrick', '74', '185', 60), ('Tomas Mikael', '71', '182', 54), (None, '72', '188', 45), ('Jose', '71', '182', 49), (None, '71', '180', 41))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select \"Master\".namegiven, \"Master\".height , \"Master\".weight, extract('%Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 555, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-0.6024811218985775,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'birthyear' unknown\n", "exec_able": false}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 556, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('NO',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected FROM, expecting END in: \"select case when awardsmisc.note = \"posthumous\" then \"YES\" else \"NO\" from\"\n", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 557, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'goalies'\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 558, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, 50))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select sum(scoring.g), extract('Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 559, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.097561,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'country'\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 560, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.1209364,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'country'\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 561, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.845218038920128,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting AS in: \"select cast(case when t2.language = \"Chinese\" then t1.surfacearea else 0 end,\"\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 562, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Omg please the heck fix it',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Omg please the heck fix it',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 563, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Classical Minutes: Musical Skills and Motivation | Tips and Insights | Instrumental Coaching | Onlin...',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'podcasts.title'\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 564, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1169,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '01' unknown\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 565, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such operator 'date_substring'\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 566, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((214,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 567, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((26,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((26,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 568, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12444,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '2012' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 569, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '2012' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 570, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((datetime.date(2013, 7, 19),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 571, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 572, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlREAL, expecting SCOLON in: \"select (sum(t2.tmax) / 29) as real\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 573, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 574, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(distinct t2.station_nbr) as number from \"relation\" as t2 inner join\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 575, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((43.333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 576, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 't1.gdp'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 577, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S22!SELECT: no such column 'politics.country'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 578, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Akagera', 'Mwanza,Rwanda'), ('Amazonas', 'Amapa,Amazonas,Amazonas,Cuzco,Ucayali,Loreto,Para'), ('Amudarja', 'Afghanistan,Khatlon,Dashhowuz,Samarqand,Leban,Qaraqalpoghiston'), ('Amur', 'Amurskaya oblast,Yevreyskaya avt. oblast,Heilongjiang,Khabarovskiy kray,Chitinskaya oblast'), ('Argun', 'Chitinskaya oblast,Heilongjiang'), ('Atbara', 'ash Shamaliyah,Ethiopia,ash Sharqiyah'), ('Bahr el-Djebel/Albert-Nil', 'Aali an Nil,Bahr al Ghazal,al Istiwaiyah,Uganda'), ('Bani', 'Cote dIvoire,Mali'), ('Benue', 'Nigeria,Nord'), ('Black Drin', 'Albania,Macedonia'), ('Blue Nile', 'al Khartum,Nil al Asraq,Ethiopia'), ('Bomu', 'Central African Republic,Haut Zaire'), ('Brahmaputra', 'Arunachal Pradesh,Assam,Bangladesh,Tibet'), ('Chire', 'Malawi,Tete,Zambezia'), ('Colorado', 'Arizona,Utah,Colorado,Baja California,Nevada,California,Sonora'), ('Columbia River', 'British Columbia,Oregon,Washington'), ('Cuango', 'Bandundu,Uige,Malanje,Bas Zaire,Lunda Norte,Lunda Sul'), ('Cuilo', 'Bandundu,Cuando Cubango,Bie,Moxico'), ('Detroit River', 'Michigan,Ontario'), ('Dnepr', 'Belarus,Kirovohradska,Chernihivska,Khersonska,Poltavska,Zaporizka,Dnipropetrovska,Cherkaska,Smolenskaya oblast,Kyyivska'), ('Dnjestr', 'Chernivetska,Lvivska,Ivano Frankivska,Odeska,Moldova,Khmelnytska,Ternopilska,Vinnytska'), ('Donau', 'Bacs Kiskun,Slovakia,Mehedinti,Odeska,Baden Wurttemberg,Upper Austria,Teleorman,Croatia,Baranya,Bulgaria,Pest,Olt,Tolna,Caras Severin,Bayern,Ialomita,Fejer,Galati,Vienna,Calarasi,Serbia,Moldova,Lower Austria,Dolj,Tulcea,Giurgiu,Komarom Esztergom,Braila,Constanta,Budapest (munic.)'), ('Doubs', 'Bourgogne,Franche Comte,JU'), ('Douro', 'Aveiro,Guarda,Porto,Viseu,Castile and Leon,Vila Real,Braganca'), ('Drau', 'Baranya,Slovenia,Trentino Alto Adige,Somogy,Carinthia,Croatia,Zala'), ('Elbe', 'Brandenburg,Niedersachsen,Mecklenburg Vorpommern,Hamburg,Sachsen Anhalt,Severocesky,Vychodocesky,Praha,Schleswig Holstein,Sachsen'), ('Euphrat', 'Adiyaman,Al Muthanna,Al Anbar,Gaziantep,Al Qadisiyah,An Najaf,Dhi Qar,Babil,Karbala,Syria,Malatya,Sanliurfa,Al Basrah,Ninawa'), ('Gambia', 'Gambia,Tambacounda,Guinea,Kolda'), ('Ganges', 'Bangladesh,Bihar,Uttar Pradesh,West Bengal'), ('Garonne', 'Aquitaine,Midi Pyrenees,Catalonia,Languedoc Roussillon'), ('Guadiana', 'Algarve,Castile La Mancha,Evora,Estremadura,Beja,Portalegre,Andalusia'), ('Iller', 'Baden Wurttemberg,Vorarlberg,Bayern'), ('Indus', 'Jammu and Kashmir,Pakistan,Tibet'), ('Inn', 'Bayern,Tyrol,GR'), ('Irawaddy', 'Ayeyarwady,Tibet,Sagaing,Yunnan,Magway,Yangon,Mandalay,Bago,Kachin'), ('Irtysch', 'Omskaya oblast,Semey,Shyghys Qazaqstan,Tyumenskaya oblast,Xinjiang Uygur,Pavlodar'), ('Isar', 'Bayern,Tyrol'), ('Ischim', 'Omskaya oblast,Tyumenskaya oblast,Qaraghandy,Soltustik Qazaqstan'), ('Jordan', 'Jordan,West Bank,North,Lebanon,Syria'), ('Jubba', 'Ethiopia,Somalia'), ('Kasai', 'Bandundu,Shaba/Katanga,Lunda Norte,Kasai Occidental,Lunda Sul,Moxico'), ('Klaraelv', 'Hedmark,Varmland'), ('Kura', 'Azerbaijan,Georgia,Kars'), ('Lech', 'Bayern,Tyrol,Vorarlberg'), ('Limpopo', 'Botswana,Gaza,Limpopo,Zimbabwe,Gauteng'), ('Luapula', 'Luapula,Shaba/Katanga'), ('Maas', 'Champagne Ardenne,Lorraine,Limburg,Noord Brabant,Limburg,Zuid Holland,Liege,Namur,Gelderland'), ('March', 'Jihomoravsky,Severomoravsky,Lower Austria,Slovakia'), ('Mekong', 'Cambodia,Yunnan,Thailand,Tibet,Vietnam,Laos'), ('Mosel', 'Lorraine,Saarland,Luxembourg,Rheinland Pfalz'), ('Mur', 'Croatia,Styria,Slovenia,Zala,Salzburg'), ('Narva', 'Estonia,Pskovskaya oblast'), ('Naryn', 'Kyrgyzstan,Toshkent'), ('Niagara River', 'New York,Ontario'), ('Niger', 'Guinea,Mali,Niger,Nigeria'), ('Nile', 'al Khartum,Kafr el Sheikh,Dumyat,El Daqahliya,Asyut,El Buhayra,El Minya,Beni Suef,El Qalubiya,Sohag,El Qahira,Sharqiya,El Minufiya,El Gharbiya,ash Shamaliyah,Aswan,El Giza,Qena'), ('Oder', 'Brandenburg,Severomoravsky,Wroclawskie,Gorzowskie,Zielonogorskie,Opolskie,Mecklenburg Vorpommern,Legnickie,Sachsen,Szczecinskie'), ('Oranje', 'Free State,Lesotho,Namibia,Northern Cape'), ('Orinoco', 'Amazonas,Delta Amacuro,Anzoategui,Apure,Bolivar,Guarico,Guainia,Monagas,Vichada'), ('Paatsjoki', 'Finnmark,Murmanskaya oblast,Lappia'), ('Paraguay', 'Bolivia,Mato Grosso,Paraguay,Chaco,Formosa,Mato Grosso do Sul'), ('Parana', 'Buenos Aires,Mato Grosso do Sul,Goias,Sao Paulo,Santa Fe,Corrientes,Entre Rios,Paraguay,Minas Gerais,Misiones,Distrito Federal,Parana,Chaco'), ('Pjandsh', 'Afghanistan,Kulob,Khatlon,Badakhshoni Kuni'), ('Pruth', 'Botosani,Ivano Frankivska,Chernivetska,Moldova,Iasi,Vaslui,Galati'), ('Raab', 'Burgenland,Gyor Sopron,Vas,Veszprem,Gyor (munic.),Styria'), ('Rhein', 'AG,TG,Baden Wurttemberg,SH,BL,Vorarlberg,Liechtenstein,ZH,Nordrhein Westfalen,Hessen,Rheinland Pfalz,Gelderland,Alsace,Zuid Holland,SG,BS,GR'), ('Rhone', 'GE,Languedoc Roussillon,VD,Provence Cote dAzur,Rhone Alpes,VS'), ('Rio Grande', 'Chihuahua,Tamaulipas,Texas,New Mexico,Colorado,Nuevo Leon,Coahuila'), ('Rio Madeira', 'Amazonas,Rondonia,Bolivia'), ('Rio Negro', 'Amazonas,Guainia,Roraima'), ('Rio San Juan', 'Alajuela,Heredia,Nicaragua,Limon'), ('Ruzizi', 'Burundi,Kivu,Rwanda'), ('Saar', 'Alsace,Saarland,Lorraine,Rheinland Pfalz'), ('Saint Lawrence River', 'New York,Quebec'), ('Saluen', 'Kayah,Mon,Shan,Yunnan,Kayin,Tibet'), ('Salzach', 'Bayern,Salzburg'), ('Sanga', 'Central African Republic,Congo,Est'), ('Save', 'Bosnia and Herzegovina,Croatia,Slovenia,Serbia'), ('Schari', 'Central African Republic,Nord extreme,Chad'), ('Schatt al Arab', 'Al Basrah,Khuzestan'), ('Semliki', 'Haut Zaire,Kivu,Uganda'), ('Senegal', 'Guinea,Mauritania,Mali,Saint Louis,Tambacounda'), ('Shabelle', 'Ethiopia,Somalia'), ('Sobat', 'Aali an Nil,Ethiopia'), ('Southern Morava', 'Kosovo,Macedonia,Serbia'), ('Syrdarja', 'Khujand,Toshkent,Ongtustik Qazaqstan,Namangan,Qyzylorda'), ('Tajo', 'Castelo Branco,Estremadura,Santarem,Castile La Mancha,Lisbon,Portalegre'), ('Theiss', 'Borsod Abauj Zemplen,Hajdu Bihar,Csongrad,Heves,Ivano Frankivska,Szabolcs Szatmar,Szolnok,Zakarpatska,Serbia,Chernivetska,Szeged (munic.)'), ('Ticino', 'Lombardia,Piemonte,TI'), ('Tigris', 'Ad Tamim,Babil,Salah ad Din,Syria,Baghdad,Ninawa,Arbil,Wasit,Al Basrah,Maysan,Batman,Siirt,Mardin,Sirnak,Dahuk,Diyarbakir'), ('Tobol', 'Kurganskaya oblast,Orenburgskaya oblast,Qostanay,Tyumenskaya oblast'), ('Ubangi', 'Central African Republic,Equateur,Congo'), ('Ural', 'Atyrau,Batys Qazaqstan,Orenburgskaya oblast,Chelyabinskaya oblast,Rep. of Bashkortostan'), ('Uruguay', 'Corrientes,Uruguay,Rio Grande do Sul,Misiones,Entre Rios'), ('Volta', 'Burkina Faso,Ghana'), ('Vuoksi', 'Kuopio,Rep. of Karelia,Kymi'), ('Western Dwina', 'Belarus,Smolenskaya oblast,Latvia'), ('White Drin', 'Albania,Kosovo'), ('Yukon River', 'Alaska,Yukon Territory'), ('Zaire', 'Bandundu,Haut Zaire,Congo,Bas Zaire,Kinshasa,Equateur'), ('Zambezi', 'Central,Tete,Northwestern,Zimbabwe,Lusaka,Western,Moxico,Southern,Manica,Zambezia'))", "rowcount": 101, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'river' unknown\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 579, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 582, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select t1.name from country as t1 inner join organization as t2 on t1.code = t2.\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 583, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 1}
{"sql_id": 584, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select name from organization where extract('%Y'\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 585, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select sys.timestamp_to_str(\"T4\".\"Established\", '%Y') from \"continent\" as \"T1\" i\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '(', expecting SCOLON in: \"select strftime('%Y', organization.established) from continent as t1 inner join \"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 586, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 587, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 588, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '1' unknown\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 589, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((42, 'Brendan', 'Reilly', None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected CAST in: \"select t1.ward_no, t1.alderman_first_name, t1.alderman_last_name, t1.alderman_na\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 590, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pat', 'Dowell', 31), ('Sophia', 'King', 23))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting ')' or OR in: \"select \"Ward\".alderman_first_name, \"Ward\".alderman_last_name, count(\"Ward\".ward_\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 591, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((493,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42S02!SELECT: no such table 'fbi_code'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 592, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((53,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 593, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Robert A. Rubio',), ('Glenn White',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected sqlINT, expecting SCOLON in: \"select t1.commander from district as t1 inner join crime as t2 on t1.district_no\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 594, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 595, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select count(distinct t2.business_id) from inspections as t1 inner join business\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 596, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 597, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such unary operator 'to_string(char)'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 598, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 599, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 600, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected STRING in: \"select t2.city from violations as t1 inner join businesses as t2 on t1.business_\"\n!42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 601, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 602, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected YEAR in: \"select count(distinct \"businesses\".business_id) from violations as t1 inner join\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 604, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 606, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 607, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (`)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 608, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'timestamp_to_str(date,char)'\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: no such binary operator 'strftime(char,date)'\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 609, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.818182,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 610, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.7037036,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'American Blonde Ale' unknown\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 611, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('222-23-2222',), ('444-45-4444',), ('500-50-0505',), ('925-45-7116',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 612, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (bigdecimal) unknown in: \"select cast(replace(substr(t1.salary, 4), ',', '') as bigdecimal)\"\n!42000!syntax error, unexpected '-' in: \"-\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 613, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 614, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 617, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (double) unknown in: \"select count(*) from \"employee\" where performance = 'Poor' and cast(replace(subs\"\n!42000!syntax error, unexpected COMPARISON in: \">\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 618, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('David', 'Whitehead'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22018!conversion of string 'US$1' to type flt failed.\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 619, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected REPLACE, expecting ')' or OR in: \"select count(*) from \"_position\" where (substr(maxsalary, 4) replace\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 620, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 621, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((55250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT, expecting ')' or ',' in: \"select avg(cast(replace(substr(employee.salary, 4), ',' , ') AS REAL)) FROM empl\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 624, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 625, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((29613, 463), (118078, 334), (171382, 74947), (176836, 99993), (204767, 687), (207078, 66570), (256927, 90213), (261543, 620), (261544, 617))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 626, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((72411.06315789474, 291.67400318979264))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 2, "FP": 3, "FN": 1}
{"sql_id": 628, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(\"_date\" from char_length(\"_date\") - 3 for 4) from \"weather\" gro\"\n", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected SUBSTRING in: \"select substring(cast(_date as string), -4) from weather group by substring\"\n", "exec_able": false}}, "TP": 2, "FP": 4, "FN": 0}
{"sql_id": 630, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')' in: \"select t2.max_gust_speed_mph, t2.cloud_cover from trip as t1 inner join weather \"\n", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 1}
{"sql_id": 631, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select sum(case when subscription_type = \"Subscriber\" then 1 else 0)\"\n", "exec_able": false}}, "TP": 2, "FP": 3, "FN": 0}
{"sql_id": 632, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('12/2/2013', 477), ('12/2/2013', 348), ('12/2/2013', 576), ('12/2/2013', 562), ('12/2/2013', 616), ('12/2/2013', 462), ('12/2/2013', 585), ('12/2/2013', 553), ('12/2/2013', 355), ('12/2/2013', 319), ('12/2/2013', 628), ('12/2/2013', 514), ('12/2/2013', 488), ('12/2/2013', 567), ('12/2/2013', 483), ('12/2/2013', 532), ('12/2/2013', 335), ('12/2/2013', 394), ('12/2/2013', 573), ('12/2/2013', 580), ('12/2/2013', 482), ('12/2/2013', 270), ('12/2/2013', 522), ('12/2/2013', 379), ('12/2/2013', 351), ('12/2/2013', 530), ('12/2/2013', 326), ('12/2/2013', 592), ('12/2/2013', 370), ('12/2/2013', 584), ('12/2/2013', 501), ('12/2/2013', 584), ('12/2/2013', 474), ('12/2/2013', 503), ('12/2/2013', 432), ('12/2/2013', 593), ('12/2/2013', 613), ('12/2/2013', 407), ('12/2/2013', 317), ('12/2/2013', 561), ('12/2/2013', 444), ('12/2/2013', 630), ('12/2/2013', 503), ('12/2/2013', 320), ('12/2/2013', 623), ('12/2/2013', 482), ('12/2/2013', 137), ('12/2/2013', 394), ('12/2/2013', 630), ('12/2/2013', 436), ('12/2/2013', 296), ('12/2/2013', 444), ('12/2/2013', 456))", "rowcount": 53, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 633, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 2, "FP": 4, "FN": 2}
{"sql_id": 634, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 1, "error_message": "42000!unexpected end of input", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 636, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((327,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select sum(case when start_station_id = end_station_id then 1 else 0)\"\n", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 637, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((58.736,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected AGGREGATE in: \"select aggregate\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 638, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected AS, expecting ')' or OR in: \"select (sum(case when weather.events = 'Rain' then 1 else 0 end) as\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 639, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected COMPARISON in: \"<\"\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!Unexpected symbol (`)\n!42000!syntax error, unexpected '*' in: \"*\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 640, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier '94107' unknown\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 641, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 642, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Powell at Post (Union Square)',), ('Temporary Transbay Terminal (Howard at Beale)',), ('5th at Howard',), ('Embarcadero at Folsom',), ('Market at 4th',), ('2nd at Folsom',), ('Townsend at 7th',), ('Market at Sansome',), ('Powell Street BART',), ('Civic Center BART (7th at Market)',), ('Grant Avenue at Columbus Avenue',), ('San Francisco Caltrain 2 (330 Townsend)',), ('San Francisco Caltrain (Townsend at 4th)',), ('Harry Bridges Plaza (Ferry Building)',), ('Howard at 2nd',), ('Spear at Folsom',), ('Commercial at Montgomery',), ('Embarcadero at Bryant',), ('Embarcadero at Vallejo',), ('Clay at Battery',), ('2nd at South Park',), ('2nd at Townsend',), ('Castro Street and El Camino Real',))", "rowcount": 23, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Wrong format (9/6/2013)\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 643, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'Rain' unknown\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 644, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((15,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 646, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(subscription_type =\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 647, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 648, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select sum(case when t3.name = \"Music\" then 1 else 0)\"\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 649, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.703747619741456,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7.703747619741449,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 1, "FN": 0}
{"sql_id": 650, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.571428,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select cast(sum(case when t1.country = 'India' then 1 else 0)\"\n", "exec_able": false}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 651, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'GINA' unknown\n", "exec_able": false}}, "TP": 2, "FP": 4, "FN": 0}
{"sql_id": 652, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((351,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ',', expecting FROM in: \"select count(customer_id) from payment where string_concat(extract(year,\"\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 654, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((421,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IDENT in: \"select count(distinct rental_id) from rental where extract(\"date\"\"\n", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 655, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.5041735,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting AS in: \"select (sum(cast(case when active = 0 then 1 else 0 end)\"\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 656, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1481.49,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 657, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('BLANKET BEVERLY',), ('LOVE SUICIDES',), ('MYSTIC TRUMAN',), ('LAWLESS VISION',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 658, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 659, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 660, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.016694,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "22000!Type (float64) unknown in: \"select (cast(sum(case when t1.country = \"India\" then 1 else 0 end) as float64)\"\n!42000!syntax error, unexpected '*' in: \"*\"\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 661, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select (sum(case when t1.first_name = 'ANGELA' and t1.last_name = 'WITHERSPOON' \"\n", "exec_able": false}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 662, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' in: \"select count(t3.rating =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 663, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SANDRA', 'MARTIN', 'SANDRA.MARTIN@sakilacustomer.org'), ('JUDITH', 'COX', 'JUDITH.COX@sakilacustomer.org'), ('SHEILA', 'WELLS', 'SHEILA.WELLS@sakilacustomer.org'), ('ERICA', 'MATTHEWS', 'ERICA.MATTHEWS@sakilacustomer.org'), ('HEIDI', 'LARSON', 'HEIDI.LARSON@sakilacustomer.org'), ('PENNY', 'NEAL', 'PENNY.NEAL@sakilacustomer.org'), ('KENNETH', 'GOODEN', 'KENNETH.GOODEN@sakilacustomer.org'), ('HARRY', 'ARCE', 'HARRY.ARCE@sakilacustomer.org'), ('NATHAN', 'RUNYON', 'NATHAN.RUNYON@sakilacustomer.org'), ('THEODORE', 'CULP', 'THEODORE.CULP@sakilacustomer.org'), ('MAURICE', 'CRAWLEY', 'MAURICE.CRAWLEY@sakilacustomer.org'), ('BEN', 'EASTER', 'BEN.EASTER@sakilacustomer.org'), ('CHRISTIAN', 'JUNG', 'CHRISTIAN.JUNG@sakilacustomer.org'), ('JIMMIE', 'EGGLESTON', 'JIMMIE.EGGLESTON@sakilacustomer.org'), ('TERRANCE', 'ROUSH', 'TERRANCE.ROUSH@sakilacustomer.org'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Subquery result missing\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 664, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((22,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 665, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'horror' unknown\n", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 666, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-0.008347245409015025,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected ')', expecting END in: \"select avg(case when t4.country = \"Australia\" then 1 else 0)\"\n", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 667, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (sum(iif(t4.name =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 670, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 671, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 672, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 673, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected COMPARISON, expecting ')' or ',' in: \"select cast(sum(iif(t2._length <\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 674, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select sum(iif(t2.name =\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 675, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected OR, expecting ')' in: \"select cast(sum((t2.name = \"Documentary\" and 1) or\"\n", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 676, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select (cast(sum(iif(\"category\".name =\"\n", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 677, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.1715098488385314,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected '=', expecting ')' or ',' in: \"select cast(sum(iif(t2.first_name =\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 678, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!syntax error, unexpected IF in: \"select cast(sum(if\"\n", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 679, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!SELECT: identifier 'English' unknown\n", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 680, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Unexpected symbol (\\)\n", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 681, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%m'\n", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 2}
{"sql_id": 682, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!unexpected end of input\n", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 683, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "42000!Invalid identifier '%Y'\n", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}

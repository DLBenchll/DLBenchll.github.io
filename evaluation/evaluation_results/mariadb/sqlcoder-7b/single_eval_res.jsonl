{"sql_id": 1, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('A Clockwork Orange', 1971))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 2, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(4161, \"Unknown data type: 'INCEGER'\")", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 3, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((761725,), (19221797,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((761725,), (19221797,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 4, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((312,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((312,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 5, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('las mejores peliculas que vi en el 2016',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `lists`\\\\nColumns:\\\\n(`user_id`, BIGINT)\\\\n(`list_id`, BIGINT, primary ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 7, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('CHINESE CINEMA', 5673), ('Short Films - Courts m\u00e9trages', 5673), ('ESSENTIAL DOCUMENTARIES', 5673), ('The Great British Canon', 5673), ('ESSENTIAL FRENCH FILMS', 5673), ('ESSENTIAL FILMS BY WOMEN', 5673), ('ESSENTIAL AFRICAN FILMS', 5673), ('ESSENTIAL ANIMATION', 5673), ('RECOMMENDED FILMS ABOUT CHILDREN', 5673), ('THE JAPANESE CANON', 5673), ('Argentina In Mubi', 5673), ('Contemplative Cinema Starter Pack', 5673), ('ESSENTIAL IRANIAN FILMS', 5673), ('ESSENTIAL HUNGARIAN FILMS', 5673), ('ESSENTIAL ITALIAN FILMS', 5673), ('MY FAVOURITE FILMS & TV', 5673), ('Fox and His (Queer) Friends', 5672), ('INDIA', 5672), ('SCULPTING IN TIME', 5672), ('FILMS FANTASTICAL & MAGICKAL', 5672), ('ESSENTIAL SHORT FILMS & FEATURETTES', 5672), ('SPAIN: MYSTERY, PASSION, LIFE', 5672), ('A LIBRARY OF RELIGIOUS-THEMED AND SPIRITUAL FILMS', 5672), ('IN SEARCH OF THE COOL', 5671), ('LEFTIST FILMS', 5671), ('FILMS AND COLOUR', 5671), ('100+ Essential Horror Films', 5671), ('TAIWANESE CINEMA', 5671), ('Korean Cinema', 5670), ('EASTERN EUROPEAN ELIXIRS', 5670), ('Top French Films', 5670), ('The Best Horror Films on MUBI', 5669), ('Colors of the Brush: The Cinematography Collection', 5669), ('FILMS ADMIRED BY TARKOVSKY', 5668), ('Movies to trip/smoke/drink to!', 5668), (' Top 11 Scariest Horror Movies Ever Made', 5667), ('coming-of-age', 5666), ('Couples in Crisis', 5666), ('Top Flicks about Chicks', 5662), ('LOVE AT FIRST SIGHT (AND SOUND)', 5662), ('World Literature 500', 5661), ('Queers on Film', 5661), ('THE MUSE: Fashion Inspiration in Film', 5660), ('CONTEMPORARY LITHUANIAN CINEMA', 5659), ('Portugal, land of my dreams', 5656), ('MASTERS OF RUSSIAN ANIMATION', 5654), ('Philosophical Ramble', 5653), ('The Middle Ages', 5644), ('666  Opinions of an Asshole: A Personal Canon ', 5632), ('Akira Kurosawa\u2019s Top 100 Films', 5627), ('THE SILENT ERA, 1888-1929', 5618), ('IMMIGRANTS', 5616), ('Nihilism / Scepticism in Cinema', 5615), ('Punk Rock Movies', 5612), ('Minimalist Extremism + Transcendental Humanism', 5608), ('The 55 Best Russian and Soviet Films', 5608), ('Japanese movies ALL TIME BEST 200 (KineJun readers)', 5607), (\"Unavailable Films Whose Release on (Eng. Lang.) DVD/Streaming is more important than getting Kubrick's work on Blu-Ray\", 5600), ('Best LGBT films of all time', 5593), ('Films that should be better known', 5589), ('Where Comedy & I Meet', 5588), ('Submissions', 5587), ('BOYS WHO LOVE BOYS WHO LOVE BOYS', 5579), ('Video Nasty', 5578), ('REVOLUTIONARY EDITI/N/G', 5574), ('KENJI GETS ALL SEXY AND EROTIC', 5572), ('TURKEY', 5571), ('A Scrumptious Scandinavian Sm\u00f6rg\u00e5sbord (or Nordic Nosh-up Nirvana)', 5567), ('Films Directed By Women', 5565), ('The Best of YUGOSLAVIA', 5563), ('ON THE ROAD', 5561), ('ESSENTIAL FILMS FROM RUSSIA & FORMERLY SOVIET COUNTRIES', 5561), ('auteursXXX', 5555), (\"100 DIRECTORS' ESSENTIAL FILMS\", 5554), ('MENTAL health issues', 5553), ('Made in Romania', 5550), ('Essential Brazilian Films', 5549), ('SURREALISM & ITS OFFSHOOTS', 5548), ('top Indian Films', 5546), ('Transcendent Moments of the Ecstatic Truth', 5546), ('WOMEN OF THE NIGHT', 5545), ('WOMEN UNDER THE INFLUENCE', 5544), ('Russian Masterpieces', 5544), ('Animated Masterpieces', 5543), (\"TARKOVSKY'S LEGACY\", 5543), ('CONTROVERSIAL MOVIE CLUB', 5543), ('Sinema de Sade', 5542), ('NOTABLE FILMS BY BLACK DIRECTORS', 5539), ('FILMS ABOUT FILM', 5539), ('HIDDEN TREASURES', 5536), ('PAINTERS AND FILMS', 5536), ('Jazz on Film', 5531), ('Public Domain Greats', 5529), ('Favorite Films', 5529), ('hysterical in a floral dress', 5529), ('DOSTOEVSKY Dosto\u00efevski Dostojewski \u0414\u043e\u0441\u0442\u043e\u0435\u0432\u0441\u043a\u0438\u0439', 5528), (\"Kenji's 1000\", 5528), ('A ROSEFINCH SANG: THE CZECHOSLOVAKIAN NEW WAVE', 5519), ('Film and Architecture', 5519), ('GREAT CINEMATOGRAPHERS', 5519), ('Female Masturbation', 5517), ('PUSSIES GALORE!', 5516), ('The Best Films of EVERY Year', 5515), (\"SUSAN SONTAG'S FAVOURITE FILMS\", 5513), ('Turkish Films on The Auteurs', 5510), ('DARK, DANK, DRY, DEADPAN', 5507), (\"Japanese Cinema of the 2000's\", 5505), ('We Need to Talk... Comprehensive Mumblecore', 5501), ('ESSENTIAL GERMAN FILMS', 5501), ('Masterpieces you must have seen / Part 1. \"The Masters\"', 5497), ('This Dream People Call Cinema', 5496), ('New Russian Cinema', 5494), ('Symphony of Trash', 5490), ('PARIS', 5486), ('Essential Movies for a Student of Philosophy', 5464), (\"French Films I've Seen\", 5453), ('SCHOOLS AND EDUCATION', 5445), ('Russian Meditative Films', 5443), ('in the mood for blood: a vampire film chronology', 5442), ('FILMS BASED ON POEMS, POETRY & POETS', 5440), ('Under One Anime Nation \u2013 Japanese Animation [Under Construction]', 5440), ('ABSTRACT OR ENIGMATIC ANIMATION', 5437), ('My Kinda Romance', 5434), ('Inspiration Films (Inspiring everything)', 5434), (\"SINCE I'M COMFORTABLE WITH MY MASCULINITY, FILMS THAT MAKE ME SCREAM LIKE A LITTLE GIRL\", 5433), ('Arabic Cinema : Introduction', 5432), ('VISUAL ANTHROPOLOGY', 5427), ('A CINEMATIC HISTORY OF HUMANKIND', 5423), ('Back Alley Philosophers', 5408), ('The Vision and the Voice: The Cinema of the Occult', 5403), ('Pink Films', 5400), ('End Times: Apocalypse Cinema', 5398), ('The Other Side of the Underneath: Britain\\'s \"Hidden\" Cinema', 5397), ('Online Discoveries', 5388), ('ABSURDiTY iN CiNEMA.', 5378), ('CINEMA AS POETRY', 5365), ('city symphonies', 5363), ('\u00a1\u00a1 VIVA M\u00c9XICO, CABRONES !!  : UN REPASO EN CHINGA POR LA HISTORIA DEL CINE MEXICANO', 5359), ('Music Videos on MUBI', 5352), ('BREAKING THE TABOO- MALE FULL FRONTAL', 5335), ('pathological complexes', 5335), ('Drags, Genderbender, Crossdresser and Transgenders', 5335), ('Feminist CINEMA', 5331), ('Forget Filmschool! Learn from this...', 5316), ('ACADEMY AWARDS / BEST FILMS /  WINNERS AND NOMINEES / 1927 - 2020', 5316), ('ENTRE GEISHAS, SAMURAIS, MONSTRUOS Y YAKUZAS TE VEAS : UNA RAPIDA MIRADA AL CINE JAPON\u00c9S.', 5307), ('Architecture on Screen (1960-1979)', 5304), ('Korean modern classic', 5302), ('New York Times - Best 1000 Movies Ever', 5301), ('vison of mind', 5293), ('Childlike Dreams', 5292), ('YOUNG YOUTH', 5290), ('Crimes of an Adolescent(Sex,Drugs,Self Hatred,Abuse,Prostitution,Suicide,and Petty Crimes)', 5285), (\"Apursansar's Latin American Film Canon\", 5283), ('Documentaries', 5283), (\"Apursansar's Documentary Film Canon\", 5275), (\"Stanley Kubrick's Favorite Films\", 5269), ('body as a limit', 5266), ('WORLDWEIRD CINEMA', 5259), ('Iceland: Land of Fire and Ice', 5259), ('Berlin Movies', 5253), ('Filmmakers killed, silenced, persecuted and/or imprisoned.', 5250), ('101 Cult Movies you Must See Before You Die', 5238), ('Loneliness, Depression, Alienation, Mental disorders', 5234), ('New German Cinema: The Displaced Image', 5211), ('ALL TIME FAVORITE TRASH HORROR EXPLOITATION BLACKSPLOITATION CRIME AND GIALLO GRINDHOUSE FILMES', 5204), ('The Postmodern Complex (Millennium Edition)', 5202), (\"COOPER PRESENTS: A MODERNIST'S GUIDE TO POP CINEMA. A WORK IN PROGRESS.\", 5201), ('New French Extremity + Influences', 5191), ('Psychedelic Pop [1964-76]', 5185), ('500 or so Cult Movies', 5174), ('John Waters Loves these films, so should you.', 5159), ('Working Class Goes To Hell', 5147), ('164 Movies That Should Be in the Criterion Collection', 5138), ('1995-2012: South Korean Films ', 5130), ('Giallology (1963-2012)', 5094), ('Uncertain Worlds', 5048), ('girlz, girlz, girlz', 5036), ('The New Cult Canon', 5027), ('\"THEY DO NOT EXIST\": PALESTINE', 5018), ('Disillusionment in Sun-drenched 1970s American New Wave Cinema', 5005), ('I Dream in Technicolor', 5005), ('DIRECTORS A-Z', 5002), ('Terrorism Considered as One of the Fine Arts', 4980), ('must see for a student of psychology', 4951), ('Cult Short Films', 4940), ('I Love Sc\u0130-F\u0130', 4913), ('MINIMALISTA', 4883), ('SURREALIA', 4869), ('Contemplative Cinema - A few more additions to the collection', 4857), ('12 9 19 20', 4823), (\"'10s: Portugal, onde O futuro \u00e9 n\u00e3o ter guito e ainda assim tentar fazer filma\u00e7os\", 4755), ('My Animation Feature List Ranked', 4753), ('a long list of short films', 4743), ('sick crazy crazy sick', 4694), ('melancholy', 4693), ('For Sky Stretched Between The Fingers', 4673), ('rude and funny Mubi stills', 4664), ('Via Surrealmoviez', 4633), ('scandinavian movies', 4632), ('Weird and Gorgeous', 4610), ('Views From the Avant-Garde [1997-2012]', 4609), ('500 EXISTENTIAL FILMS', 4589), ('House of Psychotic Women', 4588), ('What Is Avant-garde?', 4517), ('Best to Worst: Dark Comedies', 4434), ('Child in film', 4400), (\"AMOS VOGEL'S FILM AS A SUBVERSIVE ART\", 4377), ('FANTASTIQUE: EROTIC EURO-HORROR 1968-1984', 4368), ('Loneliness, apathy, isolation and alienation', 4316), ('Women Directors', 4291), ('THE PHENOMENOLOGICAL HEIRLOOMS OF GENEALOGICAL STRATA: an inflated inheritance ', 4270), (\"Jonathan Rosenbaum's 1000 Essential Films\", 4269), ('Essayists, diarists, musers...funambulists of free thought', 4265), ('PSYCHE EN MOTION: THE CINEMA OF MYTHOs', 4244), ('Women-made Movies', 4208), (\"You'll feel like taking a shower after these\", 4203), ('Go Slow', 4203), ('The emergence of the possible', 4194), ('xxxxxx', 4057), ('Directed by Women:  Part 1 - Film Viewing Possibilities', 4005), ('DIRECTED BY WOMEN: PART 2 - FILM VIEWING POSSIBILITIES', 4004), ('Mists on reality', 3987), ('Short, so much intensive', 3986), ('The Terrifying Adventures of Modern Cinema', 3954), ('Radical! Films to inspire your inner anarchist.', 3941), ('Some obscurer gems of international cinema: films of under 50 ratings here', 3935), ('What the fuck?!: Weird films.', 3927), (\"Quentin Tarantino's Favorite Movies\", 3857), (\"Edgar Wright's 1000 Favorite Movies\", 3856), (\"Martin Scorsese's Favorite Films\", 3856), (\"Paul Thomas Anderson's Favorite Films\", 3852), ('Cahiers du Cinema Yearly Top Ten Lists', 3845), ('Wishlist (2015)', 3749), ('vis essential short', 3749), ('Most Anticipated 2015 films', 3731), ('Architecture on Screen (2010-2019)', 3694), ('The Neverending Horror List', 3692), ('Never explain', 3684), ('MY SUBMISSIONS (NEW FILMS 2020+)', 3669), ('NIGHT LIGHTS NEON LIGHTS', 3661), ('Teenage Girls Directed By Women', 3644), ('The Complete Criterion Collection', 3621), ('New cent-east european cinema', 3620), ('Films About Writers, Philosophers, etc.', 3530), ('JAPANESE HORROR', 3478), ('SICK MOVIES /Surreal,wierd,bizarre/', 3458), ('The Most Anticipated Films of 2016:', 3457), ('ZYX Erotica & sex', 3442), ('ZYX NOIR, CRIME & KILLERS', 3439), ('contemporary japanese cinema', 3423), ('Toute la m\u00e9moire du monde', 3358), ('architecture & composition', 3352), ('N O T E S T O S E L F', 3347), ('Video Art', 3335), ('2017 Essentials', 3242), ('The Most Anticipated Films of 2017', 3223), ('Edgar Wright\u2019s 100 Favourite Horror Movies', 2768), ('Antidote to whitewashing', 2757), ('DOCUMENTARIES', 2424))", "rowcount": 260, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'sqlite, mariadb' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 6}
{"sql_id": 8, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1000, 'https://images.mubicdn.net/images/film/1066/cache-8564-1481540828/image-w1280.jpg'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1000, 'https://images.mubicdn.net/images/film/1066/cache-8564-1481540828/image-w1280.jpg'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 9, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 10, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"The Busy Executive's Database Guide\", 'An overview of available database systems with emphasis on common business applications. Illustrated.', 'Algodata Infosystems'), ('Cooking with Computers: Surreptitious Balance Sheets', 'Helpful hints on how to use your electronic resources to the best advantage.', 'Algodata Infosystems'), ('You Can Combat Computer Stress!', 'The latest medical and psychological techniques for living with the electronic office. Easy-to-understand explanations.', 'New Moon Books'), ('Straight Talk About Computers', 'Annotated analysis of what computers can do for you: a no-hype guide for the critical user.', 'Algodata Infosystems'), ('Silicon Valley Gastronomic Treats', 'Favorite recipes for quick, easy, and elegant meals.', 'Binnet & Hardley'), ('The Gourmet Microwave', 'Traditional French gourmet recipes adapted for modern microwave cooking.', 'Binnet & Hardley'), ('But Is It User Friendly?', \"A survey of software for the naive user, focusing on the 'friendliness' of each.\", 'Algodata Infosystems'), ('Computer Phobic AND Non-Phobic Individuals: Behavior Variations', \"A must for the specialist, this book examines the difference between those who hate and fear computers and those who don't.\", 'Binnet & Hardley'), ('Is Anger the Enemy?', 'Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.', 'New Moon Books'), ('Life Without Fear', 'New exercise, meditation, and nutritional techniques that can reduce the shock of daily interactions. Popular audience. Sample menus included, exercise video available separately.', 'New Moon Books'), ('Prolonged Data Deprivation: Four Case Studies', 'What happens when the data runs dry?  Searching evaluations of information-shortage effects.', 'New Moon Books'), ('Emotional Security: A New Algorithm', 'Protecting yourself and your loved ones from undue emotional stress in the modern world. Use of computer and nutritional aids emphasized.', 'New Moon Books'), ('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean', 'Profusely illustrated in color, this makes a wonderful gift book for a cuisine-oriented friend.', 'Binnet & Hardley'), ('Fifty Years in Buckingham Palace Kitchens', \"More anecdotes from the Queen's favorite cook describing life among English royalty. Recipes, techniques, tender vignettes.\", 'Binnet & Hardley'), ('Sushi, Anyone?', 'Detailed instructions on how to make authentic Japanese sushi in your spare time.', 'Binnet & Hardley'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `titles`\\\\nColumns:\\\\n(`title_id`, text, primary key)\\\\n(`title`, text)...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 11, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 12, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1990',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'NULLS LAST LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 13, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Binnet & Hardley',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 14, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('An overview of available database systems with emphasis on common business applications. Illustrated.',))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION book_publishing_company.to_date does not exist')", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 15, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('psychology',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 16, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.333333333333334,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Constraint: `sales` foreign keys and references to `stores` directly\\\\n', 'C...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 17, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Francisco', '', 'Chang'), ('Matti', 'G', 'Karttunen'), ('Ann', 'M', 'Devon'), ('Rita', 'B', 'Muller'), ('Palle', 'D', 'Ibsen'), ('Diego', 'W', 'Roel'), ('Laurence', 'A', 'Lebihan'), ('Mary', 'M', 'Saveley'), ('Janine', 'Y', 'Labrune'), ('Karla', 'J', 'Jablonski'), ('Martin', 'F', 'Sommer'), ('Paul', 'X', 'Henriot'), ('Annette', '', 'Roulet'), ('Roland', '', 'Mendel'), ('Sven', 'K', 'Ottlieb'), ('Victoria', 'P', 'Ashworth'), ('Maria', '', 'Larsson'), ('Paula', 'S', 'Parente'), ('Helvetius', 'A', 'Nagy'), ('Lesley', '', 'Brown'), ('Miguel', 'A', 'Paolino'), ('Anabela', 'R', 'Domingues'), ('Karin', 'F', 'Josephs'), ('Pedro', 'S', 'Afonso'), ('Aria', '', 'Cruz'), ('Pirkko', 'O', 'Koskitalo'), ('Daniel', 'B', 'Tonini'), ('Martine', '', 'Rance'), ('Peter', 'H', 'Franken'), ('Carine', 'G', 'Schmitt'), ('Elizabeth', 'N', 'Lincoln'), ('Paolo', 'M', 'Accorti'))", "rowcount": 32, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Input Table: `employee`\\\\nOutput Table: `employee`\\\\nColumn Transformations:\\\\...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 18, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 6}
{"sql_id": 19, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((981,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 20, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((47.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 't1.city' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 21, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('-96.96970'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 22, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'Date received' in 'field list'\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 6}
{"sql_id": 23, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'of the following SQL dialects: SQLITE, MYSQL, POSTGRESQL, MARIADB.' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 24, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `events`\\\\nColumns:\\\\n(`Date received`, DATE)\\\\n(`Product`, text)\\\\n(`Su...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 25, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((723,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Column name', 'Data type', 'Constraints']' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 27, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Ronnie', 'Cole', 'Velazquez'), ('Jordan', 'Raylee', 'Guevara'), ('Axton', 'Maxton', 'Duran'), ('Adrien', 'Kenneth', 'Horne'), ('Edgar', 'Loren', 'Horton'), ('Gracelyn', 'Addilyn', 'Reeves'), ('Mason', 'Javen', 'Lopez'), ('Dylan', 'Kevin', 'Cohen'), ('Valerie', 'Amarie', 'Robertson'), ('Korbin', 'Tristan', 'Trevino'), ('Barry', 'Jesus', 'Andersen'), ('Anders', 'Dominik', 'Fuentes'), ('Keelan', 'Karsyn', 'Dodd'), ('Madison', 'Roger', 'Andrews'), ('Osiris', 'Mohamed', 'Bennett'), ('Zayn', 'Joziah', 'Blair'), ('Isaiah', 'Khari', 'Bell'), ('Michael', 'Kael', 'Young'), ('Christian', 'Bentley', 'Silva'), ('Johnpaul', 'Bennett', 'Chaney'), ('Akhil', 'Hezekiah', 'Chambers'), ('Zechariah', 'Preston', 'Oneal'), ('Amari', 'Shayan', 'Valdez'), ('Nicholas', 'Abdul', 'Price'), ('Hamza', 'Cory', 'Erickson'), ('Nick', 'Elliot', 'Richmond'), ('Arthur', 'Ashwin', 'Rhodes'), ('Jordon', 'Moses', 'Butler'), ('Coby', 'Simon', 'Wooten'), ('Oliver', 'Nolan', 'Gregory'), ('Cole', 'Kyzer', 'Woods'))", "rowcount": 31, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 29, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('CR0678444', 36017, '915-818-1976'), ('CR0775199', 40342, '978-527-8432'), ('CR1026897', 35730, '978-277-2764'))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'callcenterlogs' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 30, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.353982300884956,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL)) FROM callcenterlogs WHERE `Date received` BETWEEN '2017-01-01' AND '20...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 31, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2016', 1))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 33, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 34, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 35, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 36, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 37, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.7' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 38, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 39, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['SELECT COUNT(T2.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 40, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '10.5.8-MariaDB' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 41, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('82677500.4787'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 42, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('61641217.3333'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'assert sqlite_to_mariadb(<<SQL>>) == <<EXPECTED_OUTPUT>>' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 43, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Four Rooms',), ('Star Wars',), ('Forrest Gump',), ('American Beauty',), ('The Fifth Element',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '9.5.4\\n### mariadb Version:\\n10.2.18-MariaDB' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 44, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1307,), (1308,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ON CAST(STRFTIME('%Y', M.release_date) AS INT) = 1916 AND MC.movie_id = MO.mo...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 45, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Spellbound',), ('State Fair',), ('The Lost Weekend',), ('The Valley of Decision',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 46, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION movies_4.STRFTIME does not exist')", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 47, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Shaft',), ('Mission: Impossible II',), ('The Next Best Thing',), ('What Women Want',), ('Bless the Child',), ('Lucky Numbers',), ('Wonder Boys',), ('Snow Day',), ('Rugrats in Paris: The Movie',), ('Rugrats in Paris: The Movie',), ('The Next Best Thing',))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ...' at line 3\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 48, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Filtering',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.7.30' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 6}
{"sql_id": 49, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '), 1, instr(substr(method.name, instr(method.name, '.') + 1), '.')) - 1) AS t...' at line 1\")", "exec_able": false}}, "TP": 6, "FP": 5, "FN": 0}
{"sql_id": 50, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('HtmlParser',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '9.5.0 12703447 [gj78\\n### mariadb Version:\\n15.1.19-MariaDB' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 6}
{"sql_id": 52, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `Method`\\\\nColumns:\\\\n(`Id`, integer, primary key)\\\\n(`Name`, text)\\\\n(`...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 6}
{"sql_id": 53, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 54, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 55, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('19.6000'), Decimal('22.9000')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((19.6, 22.900000000000002))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 56, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((113.0, 22.0), (120.0, 32.0))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'latude' in 'field list'\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 57, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-6689096779184407258, 'YES'), (-6590029937880196169, 'YES'), (-5305692228635096563, 'YES'), (-2917998150844653076, 'YES'), (-1633968677373322472, 'YES'), (-450723994850216235, 'YES'), (-324761265507882224, 'YES'), (528590055286269542, 'YES'), (4296637564570566271, 'YES'), (5354621554047170232, 'YES'), (5497109940653330488, 'YES'), (5611317768433566721, 'YES'), (5927333115845830913, 'YES'), (6607018907660377991, 'YES'), (6666573787717908158, 'YES'), (8693964245073640147, 'YES'), (9112463114311278255, 'YES'))", "rowcount": 17, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-6689096779184407258, 'YES'), (-6590029937880196169, 'YES'), (-5305692228635096563, 'YES'), (-2917998150844653076, 'YES'), (-1633968677373322472, 'YES'), (-450723994850216235, 'YES'), (-324761265507882224, 'YES'), (528590055286269542, 'YES'), (4296637564570566271, 'YES'), (5354621554047170232, 'YES'), (5497109940653330488, 'YES'), (5611317768433566721, 'YES'), (5927333115845830913, 'YES'), (6607018907660377991, 'YES'), (6666573787717908158, 'YES'), (8693964245073640147, 'YES'), (9112463114311278255, 'YES'))", "rowcount": 17, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 58, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((959,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'QUERY OK, 1 row affected (0.04 sec)' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 59, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('1.1154'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'r' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 60, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 62, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 63, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1001,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''SELECT COUNT(event_id) FROM `events` WHERE EXTRACT(YEAR FROM timestamp) = 20...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 64, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 65, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 66, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.7.30' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 67, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 68, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.0000'), Decimal('0.0000')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1052, \"Column 'label_id' in field list is ambiguous\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 69, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 70, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 71, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 72, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 73, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'COUNT(T1.app_id) AS COUNT FROM app_events AS T1 INNER JOIN events AS T2 ON T1...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 74, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 75, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('-1'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'QUERY OK' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 76, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%M23-26%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 77, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Finance',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Finance',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 78, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '::FLOAT / NULLIF(SUM(CASE WHEN gender_age.gender = 'F' THEN 1 ELSE 0 END), 0)...' at line 1\")", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 79, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.6852'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Output:\\\\n']' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 80, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SUM(CASE WHEN is_installed = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN is_activate...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 81, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.2298'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.22977022977022976,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 82, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 83, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 84, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%htc%'' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 85, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.4120'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.412,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 86, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 87, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((114.0, 24.0), (88.0, 44.0), (120.0, 32.0), (114.0, 31.0), (106.0, 27.0), (113.0, 23.0), (113.0, 23.0), (104.0, 36.0), (114.0, 37.0), (116.0, 40.0), (113.0, 23.0), (120.0, 37.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (122.0, 30.0), (113.0, 23.0), (114.0, 38.0), (116.0, 40.0), (114.0, 39.0), (0.0, 0.0), (1.0, 1.0), (116.0, 40.0), (105.0, 32.0), (113.0, 23.0), (104.0, 30.0), (107.0, 30.0), (119.0, 32.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (114.0, 23.0), (114.0, 23.0), (118.0, 24.0), (119.0, 32.0), (121.0, 29.0), (114.0, 23.0), (121.0, 29.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (102.0, 25.0), (116.0, 29.0), (104.0, 31.0), (109.0, 34.0), (116.0, 24.0), (122.0, 40.0), (118.0, 39.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (1.0, 1.0), (0.0, 0.0), (114.0, 35.0), (122.0, 42.0), (121.0, 30.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (118.0, 39.0), (1.0, 1.0), (104.0, 30.0), (118.0, 32.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (113.0, 36.0), (108.0, 23.0), (114.0, 23.0), (117.0, 32.0), (113.0, 23.0), (1.0, 1.0), (1.0, 1.0), (120.0, 30.0), (121.0, 31.0), (108.0, 23.0), (0.0, 0.0), (114.0, 23.0), (114.0, 25.0), (120.0, 36.0), (113.0, 36.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (120.0, 32.0), (120.0, 37.0), (118.0, 38.0), (0.0, 0.0), (118.0, 24.0), (0.0, 0.0), (0.0, 0.0), (114.0, 37.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (114.0, 38.0), (126.0, 42.0), (113.0, 23.0), (0.0, 0.0), (108.0, 23.0), (117.0, 34.0), (114.0, 31.0), (116.0, 29.0), (121.0, 31.0), (0.0, 0.0), (106.0, 27.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (0.0, 0.0), (114.0, 23.0), (104.0, 30.0), (104.0, 31.0), (114.0, 35.0), (115.0, 33.0), (116.0, 40.0), (116.0, 40.0), (120.0, 30.0), (0.0, 0.0), (114.0, 23.0), (105.0, 23.0), (0.0, 0.0), (0.0, 0.0), (116.0, 40.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (120.0, 36.0), (115.0, 37.0), (104.0, 36.0), (114.0, 31.0), (119.0, 32.0), (0.0, 0.0), (124.0, 42.0), (116.0, 40.0), (106.0, 30.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (120.0, 36.0), (112.0, 23.0), (0.0, 0.0), (114.0, 37.0), (116.0, 40.0), (110.0, 25.0), (118.0, 24.0), (104.0, 30.0), (108.0, 23.0), (107.0, 29.0), (121.0, 31.0), (0.0, 0.0), (113.0, 34.0), (0.0, 0.0), (120.0, 29.0), (104.0, 30.0), (0.0, 0.0), (117.0, 28.0), (108.0, 23.0), (0.0, 0.0), (104.0, 31.0), (114.0, 36.0), (116.0, 40.0), (117.0, 31.0), (0.0, 0.0), (114.0, 38.0), (120.0, 30.0), (104.0, 30.0), (108.0, 23.0), (112.0, 22.0), (114.0, 23.0), (116.0, 23.0), (116.0, 23.0), (117.0, 38.0), (114.0, 31.0), (113.0, 36.0), (122.0, 40.0), (112.0, 36.0), (109.0, 34.0), (122.0, 30.0), (115.0, 26.0), (115.0, 26.0), (121.0, 28.0), (0.0, 0.0), (119.0, 32.0), (119.0, 32.0), (113.0, 23.0), (120.0, 29.0), (119.0, 26.0), (0.0, 0.0), (0.0, 0.0), (115.0, 23.0), (0.0, 0.0), (119.0, 32.0), (120.0, 33.0), (121.0, 30.0), (111.0, 27.0), (120.0, 29.0), (117.0, 39.0), (1.0, 1.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (124.0, 42.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (122.0, 40.0), (105.0, 23.0), (122.0, 40.0), (122.0, 31.0), (112.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (106.0, 37.0), (106.0, 27.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 36.0), (106.0, 38.0), (120.0, 42.0), (0.0, 0.0), (121.0, 31.0), (114.0, 31.0), (110.0, 21.0), (0.0, 0.0), (110.0, 20.0), (120.0, 36.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (1.0, 1.0), (118.0, 35.0), (122.0, 30.0), (120.0, 30.0), (113.0, 23.0), (113.0, 28.0), (0.0, 0.0), (114.0, 31.0), (126.0, 42.0), (0.0, 0.0), (114.0, 23.0), (120.0, 37.0), (112.0, 38.0), (113.0, 28.0), (103.0, 30.0), (113.0, 28.0), (119.0, 32.0), (115.0, 30.0), (110.0, 20.0), (121.0, 31.0), (113.0, 36.0), (1.0, 1.0), (103.0, 25.0), (108.0, 26.0), (123.0, 41.0), (114.0, 23.0), (118.0, 26.0), (116.0, 40.0), (120.0, 27.0), (0.0, 0.0), (121.0, 31.0), (109.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 35.0), (117.0, 37.0), (118.0, 38.0), (0.0, 0.0), (119.0, 26.0), (0.0, 0.0), (114.0, 36.0), (0.0, 0.0), (121.0, 31.0), (104.0, 30.0), (123.0, 41.0), (123.0, 41.0), (109.0, 30.0), (0.0, 0.0), (122.0, 30.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (0.0, 0.0), (117.0, 32.0), (118.0, 39.0), (121.0, 28.0), (121.0, 31.0), (121.0, 38.0), (113.0, 34.0), (121.0, 28.0), (121.0, 31.0), (113.0, 29.0), (114.0, 23.0), (114.0, 23.0), (112.0, 36.0), (113.0, 23.0), (118.0, 40.0), (0.0, 0.0), (111.0, 21.0), (116.0, 40.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (120.0, 37.0), (120.0, 30.0), (114.0, 31.0), (113.0, 38.0), (119.0, 32.0), (115.0, 38.0), (112.0, 32.0), (109.0, 35.0), (0.0, 0.0), (117.0, 36.0), (120.0, 36.0), (119.0, 26.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (102.0, 25.0), (0.0, 0.0), (120.0, 30.0), (115.0, 30.0), (121.0, 30.0), (116.0, 23.0), (117.0, 28.0), (127.0, 46.0), (121.0, 31.0), (114.0, 23.0), (114.0, 35.0), (120.0, 32.0), (114.0, 23.0), (105.0, 29.0), (114.0, 35.0), (102.0, 25.0), (116.0, 40.0), (121.0, 31.0), (112.0, 30.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (1.0, 1.0), (0.0, 0.0), (88.0, 44.0), (118.0, 34.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (119.0, 26.0), (114.0, 23.0), (114.0, 23.0), (106.0, 38.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (88.0, 44.0), (0.0, 0.0), (114.0, 23.0), (106.0, 27.0), (113.0, 23.0), (121.0, 28.0), (118.0, 36.0), (109.0, 18.0), (109.0, 18.0), (118.0, 28.0), (118.0, 28.0), (108.0, 23.0), (0.0, 0.0), (123.0, 42.0), (114.0, 23.0), (0.0, 0.0), (106.0, 27.0), (119.0, 34.0), (0.0, 0.0), (0.0, 0.0), (120.0, 29.0), (119.0, 25.0), (119.0, 25.0), (0.0, 0.0), (114.0, 27.0), (121.0, 31.0), (116.0, 40.0), (109.0, 34.0), (109.0, 34.0), (100.0, 27.0), (0.0, 0.0), (122.0, 40.0), (0.0, 0.0), (0.0, 0.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (112.0, 22.0), (114.0, 35.0), (1.0, 1.0), (114.0, 23.0), (104.0, 31.0), (0.0, 0.0), (110.0, 25.0), (104.0, 30.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (121.0, 29.0), (120.0, 30.0), (114.0, 23.0), (110.0, 20.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (113.0, 23.0), (113.0, 34.0), (113.0, 23.0), (0.0, 0.0), (113.0, 38.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (115.0, 30.0), (114.0, 30.0), (118.0, 35.0), (118.0, 35.0), (121.0, 30.0), (0.0, 0.0), (117.0, 39.0), (0.0, 0.0), (120.0, 33.0), (0.0, 0.0), (116.0, 40.0), (114.0, 31.0), (113.0, 35.0), (0.0, 0.0), (119.0, 40.0), (114.0, 23.0), (106.0, 38.0), (116.0, 40.0), (119.0, 26.0), (114.0, 28.0), (117.0, 37.0), (124.0, 42.0), (0.0, 0.0), (104.0, 30.0), (105.0, 25.0), (114.0, 37.0), (0.0, 0.0), (0.0, 0.0), (122.0, 39.0), (0.0, 0.0), (114.0, 35.0), (115.0, 29.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (110.0, 25.0), (113.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (122.0, 37.0), (114.0, 23.0), (0.0, 0.0), (118.0, 24.0), (121.0, 31.0), (121.0, 38.0), (104.0, 23.0), (119.0, 32.0), (107.0, 30.0), (0.0, 0.0), (119.0, 26.0), (117.0, 32.0), (116.0, 40.0), (117.0, 32.0), (121.0, 28.0), (121.0, 28.0), (119.0, 25.0), (0.0, 0.0), (114.0, 38.0), (118.0, 36.0), (111.0, 36.0), (0.0, 0.0), (0.0, 0.0), (116.0, 36.0), (121.0, 30.0), (117.0, 23.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (114.0, 35.0), (121.0, 31.0), (103.0, 25.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (114.0, 27.0), (124.0, 47.0), (104.0, 36.0), (119.0, 26.0), (117.0, 37.0), (105.0, 23.0), (107.0, 28.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (120.0, 30.0), (116.0, 36.0), (121.0, 31.0), (117.0, 39.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (106.0, 30.0), (114.0, 23.0), (0.0, 0.0), (108.0, 23.0), (111.0, 32.0), (0.0, 0.0), (114.0, 31.0), (127.0, 46.0), (0.0, 0.0), (122.0, 30.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (118.0, 39.0), (113.0, 23.0), (0.0, 0.0), (118.0, 37.0), (113.0, 38.0), (1.0, 1.0), (116.0, 35.0), (117.0, 40.0), (109.0, 34.0), (109.0, 22.0), (0.0, 0.0), (107.0, 27.0), (0.0, 0.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (114.0, 36.0), (108.0, 35.0), (0.0, 0.0), (117.0, 37.0), (122.0, 40.0), (110.0, 19.0), (1.0, 1.0), (0.0, 0.0), (105.0, 23.0), (118.0, 35.0), (0.0, 0.0), (121.0, 37.0), (1.0, 1.0), (117.0, 23.0), (114.0, 23.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (114.0, 32.0), (116.0, 37.0), (0.0, 0.0), (116.0, 29.0), (110.0, 25.0), (122.0, 31.0), (121.0, 31.0), (0.0, 0.0), (121.0, 29.0), (119.0, 32.0), (111.0, 25.0), (102.0, 25.0), (102.0, 25.0), (0.0, 0.0), (118.0, 31.0), (110.0, 21.0), (110.0, 25.0), (119.0, 32.0), (120.0, 30.0), (120.0, 30.0), (120.0, 30.0), (121.0, 31.0), (114.0, 23.0), (108.0, 23.0), (114.0, 23.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (113.0, 36.0), (122.0, 30.0), (108.0, 32.0), (0.0, 0.0), (104.0, 30.0), (104.0, 30.0), (113.0, 23.0), (1.0, 1.0), (123.0, 41.0), (120.0, 30.0), (112.0, 38.0), (112.0, 38.0), (113.0, 28.0), (0.0, 0.0), (116.0, 40.0), (119.0, 32.0), (102.0, 28.0), (122.0, 40.0), (113.0, 23.0), (0.0, 0.0), (114.0, 24.0), (114.0, 24.0), (119.0, 32.0), (100.0, 9.0), (121.0, 31.0), (106.0, 30.0), (104.0, 31.0), (0.0, 0.0), (118.0, 36.0), (120.0, 36.0), (122.0, 31.0), (120.0, 29.0), (116.0, 33.0), (114.0, 23.0), (113.0, 23.0), (119.0, 26.0), (113.0, 23.0), (113.0, 23.0), (121.0, 31.0), (120.0, 29.0), (108.0, 26.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (1.0, 1.0), (121.0, 31.0), (118.0, 25.0), (114.0, 23.0), (108.0, 25.0), (0.0, 0.0), (114.0, 35.0), (114.0, 23.0), (119.0, 26.0), (0.0, 0.0), (114.0, 23.0), (113.0, 28.0), (104.0, 31.0), (117.0, 32.0), (116.0, 40.0), (103.0, 25.0), (106.0, 30.0), (113.0, 34.0), (0.0, 0.0), (0.0, 0.0), (118.0, 38.0), (125.0, 45.0), (114.0, 31.0), (119.0, 37.0), (0.0, 0.0), (121.0, 31.0), (116.0, 40.0), (104.0, 30.0), (118.0, 38.0), (102.0, 39.0), (119.0, 34.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (114.0, 39.0), (119.0, 32.0), (120.0, 36.0), (116.0, 24.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (100.0, 27.0), (107.0, 30.0), (121.0, 31.0), (120.0, 32.0), (120.0, 32.0), (114.0, 31.0), (113.0, 32.0), (0.0, 0.0), (116.0, 35.0), (115.0, 27.0), (113.0, 23.0), (113.0, 23.0), (0.0, 0.0), (122.0, 40.0), (120.0, 31.0), (0.0, 0.0), (121.0, 38.0), (106.0, 38.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (110.0, 25.0), (104.0, 23.0), (114.0, 23.0), (114.0, 23.0), (120.0, 29.0), (0.0, 0.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (104.0, 31.0), (123.0, 42.0), (115.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (110.0, 20.0), (113.0, 35.0), (117.0, 40.0), (1.0, 1.0), (116.0, 27.0), (112.0, 30.0), (113.0, 28.0), (116.0, 40.0), (110.0, 27.0), (110.0, 23.0), (119.0, 32.0), (114.0, 23.0), (119.0, 25.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (119.0, 26.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (113.0, 23.0), (0.0, 0.0), (104.0, 31.0), (1.0, 1.0), (122.0, 30.0), (122.0, 40.0), (104.0, 30.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (117.0, 23.0), (113.0, 28.0), (122.0, 40.0), (120.0, 32.0), (1.0, 1.0), (108.0, 23.0), (1.0, 1.0), (0.0, 0.0), (108.0, 23.0), (120.0, 30.0), (114.0, 31.0), (0.0, 0.0), (121.0, 31.0), (105.0, 32.0), (117.0, 36.0), (113.0, 36.0), (113.0, 36.0), (122.0, 30.0), (110.0, 41.0), (121.0, 28.0), (106.0, 30.0), (114.0, 23.0), (106.0, 27.0), (106.0, 27.0), (104.0, 36.0), (109.0, 18.0), (118.0, 28.0), (116.0, 36.0), (125.0, 50.0), (121.0, 31.0), (119.0, 25.0), (0.0, 0.0), (120.0, 31.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (103.0, 30.0), (119.0, 32.0), (120.0, 30.0), (119.0, 34.0), (114.0, 25.0), (118.0, 30.0), (0.0, 0.0), (121.0, 31.0), (113.0, 36.0), (104.0, 30.0), (126.0, 43.0), (0.0, 0.0), (114.0, 31.0), (113.0, 36.0), (121.0, 31.0), (117.0, 38.0), (113.0, 23.0), (114.0, 35.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (112.0, 38.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (115.0, 37.0), (0.0, 0.0), (120.0, 36.0), (1.0, 1.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 31.0), (113.0, 23.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (116.0, 24.0), (0.0, 0.0), (106.0, 38.0), (113.0, 36.0), (0.0, 0.0), (120.0, 37.0), (121.0, 31.0), (113.0, 23.0), (88.0, 44.0), (116.0, 24.0), (109.0, 34.0), (120.0, 31.0), (121.0, 28.0), (114.0, 37.0), (113.0, 34.0), (116.0, 40.0), (106.0, 37.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 29.0), (114.0, 23.0), (123.0, 42.0), (0.0, 0.0), (113.0, 23.0), (116.0, 40.0), (116.0, 23.0), (0.0, 0.0), (124.0, 42.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (113.0, 36.0), (110.0, 20.0), (118.0, 37.0), (106.0, 38.0), (113.0, 23.0), (112.0, 38.0), (120.0, 30.0), (114.0, 23.0), (116.0, 40.0), (116.0, 40.0), (114.0, 25.0), (0.0, 0.0), (109.0, 34.0), (114.0, 35.0), (124.0, 42.0), (114.0, 35.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (119.0, 34.0), (121.0, 38.0), (120.0, 27.0), (118.0, 36.0), (0.0, 0.0), (114.0, 23.0), (118.0, 38.0), (118.0, 39.0), (1.0, 1.0), (114.0, 38.0), (121.0, 29.0), (116.0, 40.0), (116.0, 36.0), (110.0, 20.0), (0.0, 0.0), (121.0, 31.0), (114.0, 37.0), (121.0, 31.0), (114.0, 35.0), (118.0, 35.0), (113.0, 23.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 31.0), (115.0, 27.0), (105.0, 38.0), (0.0, 0.0), (116.0, 40.0), (114.0, 23.0), (124.0, 47.0))", "rowcount": 959, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SQLite and mariadb both support the date function. Please sure to use it in y...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 88, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 89, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 90, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION talkingdata.IIF does not exist')", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 91, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 92, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('F',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION talkingdata.IIF does not exist')", "exec_able": false}}, "TP": 3, "FP": 1, "FN": 0}
{"sql_id": 93, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.00000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 94, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 95, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 96, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%International%Monitor%Awards%' AND T2.result ILIKE '%Winner%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 97, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1999, 'tt0629228'), (2000, 'tt0629291'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'T2.organizatio' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 98, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Constantine Makris',), ('Rene Balcer',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'T2.organis' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 99, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.009999999999990905, 'cm'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''SELECT SUM(CASE WHEN EXTRACT(YEAR FROM date) = 2009 THEN value END) - SUM(CA...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 100, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `patients`\\\\nColumns:\\\\n(`patient`, text, primary key)\\\\n(`birthdate`, ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 101, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'None' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 102, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('175.1429'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `patients`\\\\nColumns:\\\\n(`patient`, text, primary key)\\\\n(`birthdate`, ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 103, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('212.5000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 105, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `conditions`\\\\nColumns:\\\\n(`START`, date)\\\\n(`STOP`, date)\\\\n(`PATIENT`,...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 106, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 107, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 108, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Tien', 'Turner', None), ('Gabrielle', 'Wunsch', None), ('Lindsay', 'Kilback', None), ('Camelia', 'Boyle', None))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 109, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 110, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((82,), (82,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION synthea.age does not exist')", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 111, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Chronic sinusitis (disorder)',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '.patient=patients.patientWHEREpatients.deathdateISNOTNULLORDERBYEXTRACT(YEARF...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 112, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Irvin', 'Barrows'), ('Jerald', 'Hilpert'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION synthea.age does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 113, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Esmeralda', 'Muller', 50), ('Lai', 'Ebert', 38), ('Shandra', 'Lesch', 32), ('Martin', 'Harris', 60), ('Murray', 'Conroy', 19))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION synthea.strftime does not exist')", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 5}
{"sql_id": 114, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.000000'), Decimal('101')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0, Decimal('0')))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 115, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''10.5.7-mariadb'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 4}
{"sql_id": 116, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((17, 'Allergy to eggs'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1052, \"Column 'patient' in on clause is ambiguous\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 8}
{"sql_id": 117, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION synthea.date_part does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 118, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('11.0000000'),), (Decimal('18.0000000'),))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 119, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 120, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Escherichia coli urinary tract infection', 'NITROFURANTOIN  MACROCRYSTALS 50 MG [Macrodantin]', Decimal('7.0000000'), 'alive'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'death' in 'field list'\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 121, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Julius', 'Moen'), ('Thurman', 'Stroman'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION synthea.age does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 122, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((23,), (9,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION synthea.age does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 123, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 124, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-5.125159642401016,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['INPUT': ['SELECT SUM(CASE WHEN ROUND((strftime(\\\\'%J\\\\', T2.DATE) - strftime(...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 8}
{"sql_id": 125, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(T3.patient) FROM (SELECT t2.description, t1.patient FROM ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 126, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18.727272727272727,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''SELECT CAST(COUNT(PATIENT) AS REAL) / COUNT(DISTINCT EXTRACT(YEAR FROM DATE)...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 127, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None, 'Diabetes self management plan'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None, 'Diabetes self management plan'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 128, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Acute bronchitis (disorder)',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'CONDITIONS.DESCRIPTION' in 'field list'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 129, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('10.0000000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 130, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((33.333333333333336,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Contact%dermatitis%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 131, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31, Decimal('45.161290')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'COUNT(patients.patient) * 100 / NULLIF(SUM(CASE WHEN encounters.description =...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 132, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 133, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'mysql> SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 134, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 135, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Adrianne', 'Rodriguez'), ('Victor', 'Walter'), ('Quentin', 'Toy'), ('Gwen', 'Satterfield'), ('Chin', 'Kub'), ('Natalie', 'Green'), ('Kim', 'Barrows'), ('Mathew', 'Windler'), ('Young', 'Treutel'), ('Jazmine', 'Rau'), ('Anamaria', 'Mraz'), ('Janean', 'Bashirian'), ('Delilah', 'Kuhic'), ('Jeremy', 'Goodwin'), ('Jimmy', 'Marks'), ('Bret', 'Grant'), ('Deanne', 'Kilback'), ('Maurice', 'Bins'), ('Pasquale', 'Crist'), ('Trudi', 'Murray'), ('Rosendo', 'Hodkiewicz'), ('Nestor', 'Dibbert'), ('Royal', 'Turcotte'), ('Myrtie', 'Reilly'), ('Jerome', 'Spinka'), ('Nelson', 'Jast'), ('Livia', 'Williamson'), ('Nyla', 'Heathcote'), ('Kyra', 'Bode'), ('Otto', 'Wolff'), ('Chris', 'Hamill'), ('Merrill', 'Kassulke'), ('Mack', 'Orn'), ('Charlene', 'Mann'), ('Belle', 'Smitham'), ('Tyisha', 'Brekke'), ('Dorian', 'Kovacek'), ('Tiffany', 'Mertz'), ('Bradley', 'Kerluke'), ('Alfonzo', 'Smitham'), ('Milan', 'DuBuque'), ('Jasper', 'Ernser'), ('Maurice', 'Kshlerin'), ('Mui', 'Trantow'), ('Damian', 'Schultz'), ('Carroll', 'Bernhard'), ('Nickie', 'Stiedemann'), ('Neely', 'Keeling'), ('Lorie', 'Cruickshank'), ('Ezekiel', 'Herzog'), ('Kary', 'Schmitt'), ('Tony', 'Kessler'), ('Tabitha', 'Baumbach'), ('Patrick', 'Lind'), ('Serina', 'Robel'), ('Suk', 'Hartmann'), ('Sang', 'Bauch'), ('Octavia', 'Klein'), ('Dania', 'Trantow'), ('Neal', 'Eichmann'), ('Rod', 'Hahn'), ('Lourie', 'Crooks'), ('Rubin', 'Thiel'), ('Randall', 'Wilderman'), ('Jules', 'Barton'), ('Rico', 'Schmitt'), ('Muoi', 'Kuhlman'), ('Reva', 'Schmeler'), ('Emanuel', 'Kerluke'), ('Oswaldo', 'Abernathy'), ('Jose', 'Pfeffer'), ('Olen', 'Homenick'), ('Cheree', 'Rice'), ('Jorge', 'Wolff'), ('Nathan', 'Botsford'), ('Elizbeth', 'Konopelski'), ('Yuriko', 'Schumm'), ('Donn', 'Schowalter'), ('Curtis', 'Schroeder'), ('21-Jan', 'Koelpin'), ('Gilbert', 'Bradtke'), ('Doreen', 'Mohr'), ('Reuben', 'Bashirian'), ('Mario', 'Gottlieb'), ('Carl', 'Sawayn'), ('Elisa', 'Lowe'), ('Joesph', 'Runte'), ('Micki', 'Haag'), ('Kelsey', 'Skiles'), ('Particia', 'Ward'), ('Martin', 'Harris'), ('Scot', 'Morissette'), ('Tobias', 'Carroll'), ('Wilmer', 'Koepp'), ('Cleo', 'Hilpert'), ('Xavier', 'Krajcik'), ('Ona', 'Waters'), ('Randall', 'Smith'), ('Verline', 'Konopelski'), ('Gertrud', 'Roob'), ('Walter', 'Bahringer'), ('Alycia', 'Olson'), ('Dallas', 'Spencer'), ('Katelynn', 'Tremblay'), ('Larue', 'Brekke'), ('Betty', 'Hickle'), ('Ozell', 'Armstrong'), ('Ashlee', 'Leannon'), ('Ernestine', 'Rutherford'), ('Farah', 'Gerhold'), ('Demetrius', 'Dickens'), ('Cami', 'Terry'), ('Clarisa', 'Tromp'), ('Claudette', 'Renner'), ('Emmanuel', 'Douglas'), ('Ima', 'Murphy'), ('Austin', 'Waelchi'), ('Antone', 'Dickinson'), ('Akilah', 'Fadel'), ('Alonzo', 'Prohaska'), ('Charlsie', 'Vandervort'), ('Laci', 'Heller'), ('Andres', 'Parisian'), ('Lizeth', 'Ernser'), ('Diego', 'Hand'), ('Julian', 'Strosin'), ('Saundra', 'Monahan'), ('Dillon', 'Lehner'), ('Astrid', 'Schroeder'), ('Williams', 'Torp'), ('Andres', 'Sipes'), ('Rodolfo', 'Heathcote'), ('Dana', 'Bayer'), ('Shawna', 'Lowe'), ('Whitney', 'Nolan'), ('Kyle', 'Bernier'), ('Willene', 'Orn'), ('Dion', 'Auer'), ('Filiberto', 'Bartoletti'), ('Yahaira', 'Ortiz'), ('Raymonde', 'Heathcote'), ('Anette', 'Hand'), ('Dena', 'Kutch'), ('Hildred', 'Schuppe'), ('Tonette', 'Gislason'), ('Judith', 'Fay'), ('Brice', 'Jerde'), ('Nanci', 'Huel'), ('Emelina', 'Abernathy'), ('Lon', 'Simonis'), ('Dannie', 'Considine'), ('Omar', 'Ziemann'), ('Arielle', 'Nader'), ('Ellyn', 'Block'), ('Denita', 'Nitzsche'), ('Patrick', 'Kilback'), ('Eulalia', 'Wiegand'), ('Wilmer', 'Denesik'), ('Tarra', 'Gerhold'), ('Weldon', 'Murphy'), ('Serafina', 'Bosco'), ('Chelsey', 'Balistreri'), ('Deane', 'Kris'), ('Terra', 'Heller'), ('Dominic', 'Bins'), ('Margarette', 'Maggio'), ('Ronnie', 'Lindgren'), ('Tabetha', 'Hamill'), ('Florida', 'Stark'), ('Lesli', 'Gislason'), ('Caron', 'Volkman'), ('Bryan', 'Mayer'), ('Shona', 'Hamill'), ('Brain', 'Hudson'), ('Verda', 'Stehr'), ('Corrina', 'Feest'), ('Jaye', 'Schroeder'), ('Lloyd', 'Kemmer'), ('Georgie', 'Herzog'), ('Percy', 'Wunsch'), ('Leisha', 'Monahan'), ('Clora', 'Veum'), ('Siobhan', 'Conroy'), ('Maryjane', 'Herzog'), ('Carroll', 'Boyle'), ('Lenard', 'Schiller'), ('Stacy', 'McLaughlin'), ('Missy', 'MacGyver'), ('Eldon', 'Ryan'), ('Rob', 'Pouros'), ('Javier', 'Hamill'), ('Renda', 'Botsford'), ('Roosevelt', 'Breitenberg'), ('Trey', 'Wunsch'), ('Gricelda', 'Hane'), ('Wendy', 'Huels'), ('Tish', 'Donnelly'), ('Irmgard', 'Krajcik'), ('Buck', 'Kshlerin'), ('Lenore', 'Gleason'), ('Lawanda', 'Murray'), ('Marianela', 'Funk'), ('Carley', 'Schneider'), ('Tiffani', 'Dickens'), ('Lai', 'Ebert'), ('Loise', 'Will'), ('Latasha', 'Adams'), ('Mana', 'Schiller'), ('Heath', 'Doyle'), ('Rusty', \"D'Amore\"), ('Trula', 'Harber'), ('Gwendolyn', 'Ziemann'), ('Lorean', 'Gulgowski'), ('Isaiah', 'Bernier'), ('Cecil', 'Gaylord'), ('Elly', 'Koss'), ('Andreas', 'Bauch'), ('Mora', 'Hand'), ('Robert', 'Stamm'), ('Sherlene', 'Murphy'), ('Will', 'Mayert'), ('Yanira', 'Flatley'), ('Vinita', 'Stanton'), ('Luis', 'Wilderman'), ('Merlin', 'Roob'), ('Jesse', 'Leuschke'), ('Arlette', 'Leuschke'), ('Abraham', 'Balistreri'), ('Terry', 'Kuhic'), ('Lillian', 'Stark'), ('Florencio', 'Turner'), ('Winford', 'Jast'), ('Orlando', 'Cormier'), ('Ira', 'Deckow'), ('Elvis', 'Lockman'), ('Adam', 'Lynch'), ('Bonnie', 'Wisoky'), ('Chad', 'Hartmann'), ('Refugio', 'Barton'), ('Tuyet', 'Abernathy'), ('Jame', 'Mayer'), ('Mauro', 'McCullough'), ('Chance', 'Schamberger'), ('Lacy', 'Collier'), ('Fern', 'Padberg'), ('Danilo', 'Feeney'), ('Augustine', 'Erdman'), ('Lindsey', 'Lowe'), ('Darren', 'Predovic'), ('Thomas', 'Altenwerth'), ('Benny', 'Herzog'), ('Telma', 'Jakubowski'), ('Ryan', 'Keeling'), ('Benito', 'Wiegand'), ('Isadora', 'Moen'), ('Hugh', 'Kuhn'), ('Valentine', 'Jacobson'), ('Alina', 'Padberg'), ('Augustine', \"O'Reilly\"), ('Courtney', 'Schaden'), ('Thuy', 'Luettgen'), ('Adam', 'Pacocha'), ('Diego', 'Mosciski'), ('Jerrod', 'Mayert'), ('Laree', 'Strosin'), ('Lavelle', 'Vandervort'), ('Rigoberto', 'Heidenreich'), ('Pok', 'Thompson'), ('Albert', 'Lemke'), ('Delpha', 'Schinner'), ('Marcelo', 'Mayert'), ('Emile', 'Brekke'), ('Deeann', 'Jacobson'), ('Barrie', 'Abernathy'), ('Viva', 'Walker'), ('Shon', 'Nikolaus'), ('Siu', 'Pagac'), ('Cesar', 'Larson'), ('Dexter', 'Mitchell'), ('Edgar', 'Von'), ('Shonta', 'Mann'), ('Rikki', 'Osinski'), ('Warner', 'Wisozk'), ('Keri', 'Veum'), ('Martha', 'Swaniawski'), ('Markus', 'Mraz'), ('Gwenda', \"O'Conner\"), ('Hector', 'Ziemann'), ('Augustus', 'Parker'), ('Harriette', 'Hessel'), ('Adolfo', 'Schmitt'), ('Shantel', 'White'), ('Hilma', 'Rath'), ('Jessie', 'Corkery'), ('Jere', 'Spinka'), ('Faustino', 'Huel'), ('Neville', 'McDermott'), ('Stacey', 'Pollich'), ('Darleen', 'Tillman'), ('Jeff', 'Labadie'), ('Kory', 'Klocko'), ('Avelina', 'Block'), ('Jamar', 'Durgan'), ('Leena', 'Kemmer'), ('Tyrone', 'Johns'), ('Hana', 'Brekke'), ('Melanie', 'Schroeder'), ('Joselyn', 'Marquardt'), ('Ivana', 'Rowe'), ('Annie', 'Prosacco'), ('Garry', \"O'Connell\"), ('Shawnta', 'Erdman'), ('Ernie', 'Fisher'), ('Alfredo', 'Halvorson'), ('Lyndon', 'Pacocha'), ('Gala', 'Carroll'), ('Lynwood', 'Stehr'), ('Conrad', 'Kuhlman'), ('Phillis', 'Mante'), ('Darla', 'Crona'), ('Mckinley', 'Cartwright'), ('Dirk', 'Stoltenberg'), ('Lula', 'Spencer'), ('Sung', 'Carter'), ('Margaretta', \"O'Hara\"), ('Renaldo', 'Kshlerin'), ('Kelle', 'Kessler'), ('Kathaleen', 'Cummerata'), ('Ester', 'Schinner'), ('Felicitas', 'Hahn'), ('Cole', 'Keeling'), ('Katharine', 'Dach'), ('Demarcus', 'Cormier'), ('Sara', 'Pacocha'), ('Georgianna', 'Boehm'), ('Willette', 'Hyatt'), ('Nicolas', 'Prosacco'), ('Berry', 'Keebler'), ('Mohammed', 'Larson'), ('Miquel', 'Pouros'), ('Ozie', 'Larson'), ('Jospeh', 'VonRueden'), ('Deetta', 'Harber'), ('Ethel', 'Cormier'), ('Jonathan', 'Douglas'), ('Dave', 'Hudson'), ('Rudy', 'Cormier'))", "rowcount": 347, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Adrianne', 'Rodriguez'), ('Victor', 'Walter'), ('Quentin', 'Toy'), ('Gwen', 'Satterfield'), ('Chin', 'Kub'), ('Natalie', 'Green'), ('Kim', 'Barrows'), ('Mathew', 'Windler'), ('Young', 'Treutel'), ('Jazmine', 'Rau'), ('Anamaria', 'Mraz'), ('Janean', 'Bashirian'), ('Delilah', 'Kuhic'), ('Jeremy', 'Goodwin'), ('Jimmy', 'Marks'), ('Bret', 'Grant'), ('Deanne', 'Kilback'), ('Maurice', 'Bins'), ('Pasquale', 'Crist'), ('Trudi', 'Murray'), ('Rosendo', 'Hodkiewicz'), ('Nestor', 'Dibbert'), ('Royal', 'Turcotte'), ('Myrtie', 'Reilly'), ('Jerome', 'Spinka'), ('Nelson', 'Jast'), ('Livia', 'Williamson'), ('Nyla', 'Heathcote'), ('Kyra', 'Bode'), ('Otto', 'Wolff'), ('Chris', 'Hamill'), ('Merrill', 'Kassulke'), ('Mack', 'Orn'), ('Charlene', 'Mann'), ('Belle', 'Smitham'), ('Tyisha', 'Brekke'), ('Dorian', 'Kovacek'), ('Tiffany', 'Mertz'), ('Bradley', 'Kerluke'), ('Alfonzo', 'Smitham'), ('Milan', 'DuBuque'), ('Jasper', 'Ernser'), ('Maurice', 'Kshlerin'), ('Mui', 'Trantow'), ('Damian', 'Schultz'), ('Carroll', 'Bernhard'), ('Nickie', 'Stiedemann'), ('Neely', 'Keeling'), ('Lorie', 'Cruickshank'), ('Ezekiel', 'Herzog'), ('Kary', 'Schmitt'), ('Tony', 'Kessler'), ('Tabitha', 'Baumbach'), ('Patrick', 'Lind'), ('Serina', 'Robel'), ('Suk', 'Hartmann'), ('Sang', 'Bauch'), ('Octavia', 'Klein'), ('Dania', 'Trantow'), ('Neal', 'Eichmann'), ('Rod', 'Hahn'), ('Lourie', 'Crooks'), ('Rubin', 'Thiel'), ('Randall', 'Wilderman'), ('Jules', 'Barton'), ('Rico', 'Schmitt'), ('Muoi', 'Kuhlman'), ('Reva', 'Schmeler'), ('Emanuel', 'Kerluke'), ('Oswaldo', 'Abernathy'), ('Jose', 'Pfeffer'), ('Olen', 'Homenick'), ('Cheree', 'Rice'), ('Jorge', 'Wolff'), ('Nathan', 'Botsford'), ('Elizbeth', 'Konopelski'), ('Yuriko', 'Schumm'), ('Donn', 'Schowalter'), ('Curtis', 'Schroeder'), ('21-Jan', 'Koelpin'), ('Gilbert', 'Bradtke'), ('Doreen', 'Mohr'), ('Reuben', 'Bashirian'), ('Mario', 'Gottlieb'), ('Carl', 'Sawayn'), ('Elisa', 'Lowe'), ('Joesph', 'Runte'), ('Micki', 'Haag'), ('Kelsey', 'Skiles'), ('Particia', 'Ward'), ('Martin', 'Harris'), ('Scot', 'Morissette'), ('Tobias', 'Carroll'), ('Wilmer', 'Koepp'), ('Cleo', 'Hilpert'), ('Xavier', 'Krajcik'), ('Ona', 'Waters'), ('Randall', 'Smith'), ('Verline', 'Konopelski'), ('Gertrud', 'Roob'), ('Walter', 'Bahringer'), ('Alycia', 'Olson'), ('Dallas', 'Spencer'), ('Katelynn', 'Tremblay'), ('Larue', 'Brekke'), ('Betty', 'Hickle'), ('Ozell', 'Armstrong'), ('Ashlee', 'Leannon'), ('Ernestine', 'Rutherford'), ('Farah', 'Gerhold'), ('Demetrius', 'Dickens'), ('Cami', 'Terry'), ('Clarisa', 'Tromp'), ('Claudette', 'Renner'), ('Emmanuel', 'Douglas'), ('Ima', 'Murphy'), ('Austin', 'Waelchi'), ('Antone', 'Dickinson'), ('Akilah', 'Fadel'), ('Alonzo', 'Prohaska'), ('Charlsie', 'Vandervort'), ('Laci', 'Heller'), ('Andres', 'Parisian'), ('Lizeth', 'Ernser'), ('Diego', 'Hand'), ('Julian', 'Strosin'), ('Saundra', 'Monahan'), ('Dillon', 'Lehner'), ('Astrid', 'Schroeder'), ('Williams', 'Torp'), ('Andres', 'Sipes'), ('Rodolfo', 'Heathcote'), ('Dana', 'Bayer'), ('Shawna', 'Lowe'), ('Whitney', 'Nolan'), ('Kyle', 'Bernier'), ('Willene', 'Orn'), ('Dion', 'Auer'), ('Filiberto', 'Bartoletti'), ('Yahaira', 'Ortiz'), ('Raymonde', 'Heathcote'), ('Anette', 'Hand'), ('Dena', 'Kutch'), ('Hildred', 'Schuppe'), ('Tonette', 'Gislason'), ('Judith', 'Fay'), ('Brice', 'Jerde'), ('Nanci', 'Huel'), ('Emelina', 'Abernathy'), ('Lon', 'Simonis'), ('Dannie', 'Considine'), ('Omar', 'Ziemann'), ('Arielle', 'Nader'), ('Ellyn', 'Block'), ('Denita', 'Nitzsche'), ('Patrick', 'Kilback'), ('Eulalia', 'Wiegand'), ('Wilmer', 'Denesik'), ('Tarra', 'Gerhold'), ('Weldon', 'Murphy'), ('Serafina', 'Bosco'), ('Chelsey', 'Balistreri'), ('Deane', 'Kris'), ('Terra', 'Heller'), ('Dominic', 'Bins'), ('Margarette', 'Maggio'), ('Ronnie', 'Lindgren'), ('Tabetha', 'Hamill'), ('Florida', 'Stark'), ('Lesli', 'Gislason'), ('Caron', 'Volkman'), ('Bryan', 'Mayer'), ('Shona', 'Hamill'), ('Brain', 'Hudson'), ('Verda', 'Stehr'), ('Corrina', 'Feest'), ('Jaye', 'Schroeder'), ('Lloyd', 'Kemmer'), ('Georgie', 'Herzog'), ('Percy', 'Wunsch'), ('Leisha', 'Monahan'), ('Clora', 'Veum'), ('Siobhan', 'Conroy'), ('Maryjane', 'Herzog'), ('Carroll', 'Boyle'), ('Lenard', 'Schiller'), ('Stacy', 'McLaughlin'), ('Missy', 'MacGyver'), ('Eldon', 'Ryan'), ('Rob', 'Pouros'), ('Javier', 'Hamill'), ('Renda', 'Botsford'), ('Roosevelt', 'Breitenberg'), ('Trey', 'Wunsch'), ('Gricelda', 'Hane'), ('Wendy', 'Huels'), ('Tish', 'Donnelly'), ('Irmgard', 'Krajcik'), ('Buck', 'Kshlerin'), ('Lenore', 'Gleason'), ('Lawanda', 'Murray'), ('Marianela', 'Funk'), ('Carley', 'Schneider'), ('Tiffani', 'Dickens'), ('Lai', 'Ebert'), ('Loise', 'Will'), ('Latasha', 'Adams'), ('Mana', 'Schiller'), ('Heath', 'Doyle'), ('Rusty', \"D'Amore\"), ('Trula', 'Harber'), ('Gwendolyn', 'Ziemann'), ('Lorean', 'Gulgowski'), ('Isaiah', 'Bernier'), ('Cecil', 'Gaylord'), ('Elly', 'Koss'), ('Andreas', 'Bauch'), ('Mora', 'Hand'), ('Robert', 'Stamm'), ('Sherlene', 'Murphy'), ('Will', 'Mayert'), ('Yanira', 'Flatley'), ('Vinita', 'Stanton'), ('Luis', 'Wilderman'), ('Merlin', 'Roob'), ('Jesse', 'Leuschke'), ('Arlette', 'Leuschke'), ('Abraham', 'Balistreri'), ('Terry', 'Kuhic'), ('Lillian', 'Stark'), ('Florencio', 'Turner'), ('Winford', 'Jast'), ('Orlando', 'Cormier'), ('Ira', 'Deckow'), ('Elvis', 'Lockman'), ('Adam', 'Lynch'), ('Bonnie', 'Wisoky'), ('Chad', 'Hartmann'), ('Refugio', 'Barton'), ('Tuyet', 'Abernathy'), ('Jame', 'Mayer'), ('Mauro', 'McCullough'), ('Chance', 'Schamberger'), ('Lacy', 'Collier'), ('Fern', 'Padberg'), ('Danilo', 'Feeney'), ('Augustine', 'Erdman'), ('Lindsey', 'Lowe'), ('Darren', 'Predovic'), ('Thomas', 'Altenwerth'), ('Benny', 'Herzog'), ('Telma', 'Jakubowski'), ('Ryan', 'Keeling'), ('Benito', 'Wiegand'), ('Isadora', 'Moen'), ('Hugh', 'Kuhn'), ('Valentine', 'Jacobson'), ('Alina', 'Padberg'), ('Augustine', \"O'Reilly\"), ('Courtney', 'Schaden'), ('Thuy', 'Luettgen'), ('Adam', 'Pacocha'), ('Diego', 'Mosciski'), ('Jerrod', 'Mayert'), ('Laree', 'Strosin'), ('Lavelle', 'Vandervort'), ('Rigoberto', 'Heidenreich'), ('Pok', 'Thompson'), ('Albert', 'Lemke'), ('Delpha', 'Schinner'), ('Marcelo', 'Mayert'), ('Emile', 'Brekke'), ('Deeann', 'Jacobson'), ('Barrie', 'Abernathy'), ('Viva', 'Walker'), ('Shon', 'Nikolaus'), ('Siu', 'Pagac'), ('Cesar', 'Larson'), ('Dexter', 'Mitchell'), ('Edgar', 'Von'), ('Shonta', 'Mann'), ('Rikki', 'Osinski'), ('Warner', 'Wisozk'), ('Keri', 'Veum'), ('Martha', 'Swaniawski'), ('Markus', 'Mraz'), ('Gwenda', \"O'Conner\"), ('Hector', 'Ziemann'), ('Augustus', 'Parker'), ('Harriette', 'Hessel'), ('Adolfo', 'Schmitt'), ('Shantel', 'White'), ('Hilma', 'Rath'), ('Jessie', 'Corkery'), ('Jere', 'Spinka'), ('Faustino', 'Huel'), ('Neville', 'McDermott'), ('Stacey', 'Pollich'), ('Darleen', 'Tillman'), ('Jeff', 'Labadie'), ('Kory', 'Klocko'), ('Avelina', 'Block'), ('Jamar', 'Durgan'), ('Leena', 'Kemmer'), ('Tyrone', 'Johns'), ('Hana', 'Brekke'), ('Melanie', 'Schroeder'), ('Joselyn', 'Marquardt'), ('Ivana', 'Rowe'), ('Annie', 'Prosacco'), ('Garry', \"O'Connell\"), ('Shawnta', 'Erdman'), ('Ernie', 'Fisher'), ('Alfredo', 'Halvorson'), ('Lyndon', 'Pacocha'), ('Gala', 'Carroll'), ('Lynwood', 'Stehr'), ('Conrad', 'Kuhlman'), ('Phillis', 'Mante'), ('Darla', 'Crona'), ('Mckinley', 'Cartwright'), ('Dirk', 'Stoltenberg'), ('Lula', 'Spencer'), ('Sung', 'Carter'), ('Margaretta', \"O'Hara\"), ('Renaldo', 'Kshlerin'), ('Kelle', 'Kessler'), ('Kathaleen', 'Cummerata'), ('Ester', 'Schinner'), ('Felicitas', 'Hahn'), ('Cole', 'Keeling'), ('Katharine', 'Dach'), ('Demarcus', 'Cormier'), ('Sara', 'Pacocha'), ('Georgianna', 'Boehm'), ('Willette', 'Hyatt'), ('Nicolas', 'Prosacco'), ('Berry', 'Keebler'), ('Mohammed', 'Larson'), ('Miquel', 'Pouros'), ('Ozie', 'Larson'), ('Jospeh', 'VonRueden'), ('Deetta', 'Harber'), ('Ethel', 'Cormier'), ('Jonathan', 'Douglas'), ('Dave', 'Hudson'), ('Rudy', 'Cormier'))", "rowcount": 347, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 136, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 137, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Elizbeth', 'Konopelski'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION synthea.AGE does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 138, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('61.0472'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'death' in 'field list'\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 5}
{"sql_id": 140, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4825.44,), (2757.3999999999996,), (3315.2599999999998,), (3863.02,), (3002.44,), (3222.73,), (1732.59,), (2798.0,), (1846.0,), (2156.5499999999997,), (1395.42,), (2831.54,), (2552.7000000000003,), (3390.48,), (3644.8,), (3344.0,), (3375.84,), (2097.6000000000004,), (4373.53,), (2484.0,), (4039.2000000000003,), (1432.3400000000001,), (3941.0299999999997,), (3081.32,), (1591.52,), (2694.52,), (2618.12,), (1623.51,), (2279.16,), (925.97,), (1064.3400000000001,), (2268.9500000000003,), (1249.5,), (2056.7799999999997,))", "rowcount": 34, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Rovelli%Gifts%' AND T2.status ILIKE '%Shipped%' AND EXTRACT(YEAR FROM...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 141, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'mysql' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 142, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((65, 'Handji Gifts& Co'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 143, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((99,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'Please note that table and column names are case-sensitive.' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 144, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3638.63024390244,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 145, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `payments`\\\\nColumns:\\\\n(`customerNumber`, BIGINT, primary key)\\\\n(`che...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 146, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TestCase 1: \\nInput: SELECT COUNT(customernumber) FROM ( SELECT customernumber...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 147, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('24, place Kl\u00e9ber', None, '88.60.1555'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('24, place Kl\u00e9ber', None, '88.60.1555'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 148, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((datetime.date(2005, 4, 8),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION car_retails.STRFTIME does not exist')", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 149, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 150, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Euro+ Shopping Channel',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `payments`\\\\nColumns:\\\\n(`customerNumber`, integer, primary key)\\\\n(`ch...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 151, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.1795114944011043,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.1795114944011043,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 152, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `orders`\\\\nColumns:\\\\n(`orderNumber`, BIGINT, primary key)\\\\n(`orderDat...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 153, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2003', 15), ('2004', 21), ('2005', 6))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2003, 15), (2004, 21), (2005, 6))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 154, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1992 Ferrari 360 Spider red', Decimal('624')), ('1964 Mercedes Tour Bus', Decimal('384')), ('1936 Mercedes-Benz 500K Special Roadster', Decimal('381')))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''5.5.6'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 155, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'generaleinfo.city' in 'on clause'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 156, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 157, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'QUOTE (SUM(CASE WHEN food_type = 'american food' THEN 1 ELSE 0 END))::FLOAT /...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 158, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.21344717182497333,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'generale.city' in 'on clause'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 159, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(location.id_restaurant) AS proportion FROM geographic JOI...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 161, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(T1.`id_restaurant`) FROM `location` AS T1 INNER JOIN `gen...' at line 1\")", "exec_able": false}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(T1.id_restaurant) FROM location T1 INNER JOIN generalinfo...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 163, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((40,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.7.26' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 164, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((335987,), (335988,), (335989,), (335990,), (335991,), (335992,), (335993,), (335994,), (335995,), (335996,), (335997,), (335998,), (335999,), (336000,), (336001,), (336002,), (336003,), (336004,), (336005,), (336006,), (336007,), (336008,), (336009,), (336010,), (336011,), (336012,), (336013,), (336014,), (336015,), (336016,), (336017,), (336018,), (336019,), (336020,), (336021,), (336022,), (336023,), (336024,), (336025,), (336026,), (336027,), (336028,), (336029,), (336030,), (336031,), (336032,), (336033,), (336034,), (336036,), (336037,), (336038,), (336039,), (336040,), (336041,), (336042,), (336043,), (336044,), (336045,))", "rowcount": 58, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 167, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('40'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SUM(CASE WHEN EXTRACT(MONTH FROM Match_Date) = 5 THEN 1 ELSE 0 END) AS total_...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 168, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('16'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `_Match`\\\\nColumns:\\\\n(`Match_Id`, BIGINT, primary key)\\\\n(`Team_1`, BI...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 169, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.0002'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(match_id) FROM match' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 170, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.023707'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'The translated query should produce the same result as the original.' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 171, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.000000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''SELECT CAST(SUM(CASE WHEN t2.bowling_skill = '' Legbreak'' THEN 1 ELSE 0 END...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 172, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('19.1836735'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / NULLIF(_match.team_1, 0) FROM match AS _match INNER JOIN win_by...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 173, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('11.1111'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 174, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Sohail Tanvir',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \\'\"Player Name\" FROM \"Player\" AS T1 INNER JOIN \"Season\" AS T2 ON T1.player_id =...\\' at line 1')", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 175, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Ishan%Kishan%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 176, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('YK Pathan',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 177, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Kings XI Punjab',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'The query should be equivalent to the following output for sqlite. Please not...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 178, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((36,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((36,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 179, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.47257383966244726,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'soccer_2016.player' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 180, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((37,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'Question mark 1.' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 181, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((24.2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((24.2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 183, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((98.4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((98.4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 184, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.871838111298484,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''9.5'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 185, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 186, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.257328990228013,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 187, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 188, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('1.0000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 189, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 190, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-35.632183908045974,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 191, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, None, None, None, 273045, 'Documentary'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'directorid' in 'field list'\")", "exec_able": false}}, "TP": 4, "FP": 5, "FN": 0}
{"sql_id": 192, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 193, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Xerox 1901',), ('Acme Elite Stainless Steel Scissors',), ('Boston School Pro Electric Pencil Sharpener, 1670',), ('Telescoping Adjustable Floor Lamp',), ('Xerox 1952',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 194, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((42,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 195, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Count(DISTINCT east_superstore.`Order ID`) AS COUNT_1', '']' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 196, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Mophie Juice Pack Helium for iPhone',), ('Commercial WindTunnel Clean Air Upright Vacuum, Replacement Belts, Filtration Bags',), ('Xerox 1979',))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Matt%Abelman%' AND EXTRACT(YEAR FROM west_superstore.order_date) = 2013' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 197, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((739.0306,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '[]' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 198, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((353210.0869999996,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 199, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Aaron Smayling',), ('Alejandro Ballentine',), ('Allen Armold',), ('Anna Andreadi',), ('Ben Ferrer',), ('Brian Dahlen',), ('Chris Selesnick',), ('Clytie Kelty',), ('Corey Catlett',), ('Craig Carreira',), ('Cynthia Arntzen',), ('Delfina Latchford',), ('Denise Leinenbach',), ('Elpida Rittenbach',), ('Frank Hawley',), ('Gary McGarr',), ('Giulietta Weimer',), ('Greg Maxwell',), ('Harold Pawlan',), ('Herbert Flentye',), (\"Jack O'Briant\",), ('James Galang',), ('Jay Fein',), ('Jay Kimmel',), ('Joe Elijah',), ('Joe Kamberova',), ('Jonathan Doherty',), ('Ken Heidel',), ('Kimberly Carter',), ('Kristen Hastings',), ('Laurel Elliston',), ('Lena Hernandez',), ('Lindsay Castell',), ('Maria Etezadi',), ('Mark Haberlin',), ('Maxwell Schwartz',), ('Michael Moore',), ('Mitch Willingham',), ('Natalie DeCherney',), ('Patrick Gardner',), ('Randy Ferguson',), ('Raymond Buch',), ('Roy Collins',), ('Roy Franz\u00f6sisch',), ('Ruben Ausman',), ('Russell Applegate',), ('Sally Hughsby',), ('Sean Miller',), ('Shahid Hopkins',), ('Sheri Gordon',), ('Shirley Daniels',), ('Steven Roelle',), ('Thomas Boland',), ('Tony Sayre',), ('Vivek Sundaresam',))", "rowcount": 55, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Aaron Smayling',), ('Alejandro Ballentine',), ('Allen Armold',), ('Anna Andreadi',), ('Ben Ferrer',), ('Brian Dahlen',), ('Chris Selesnick',), ('Clytie Kelty',), ('Corey Catlett',), ('Craig Carreira',), ('Cynthia Arntzen',), ('Delfina Latchford',), ('Denise Leinenbach',), ('Elpida Rittenbach',), ('Frank Hawley',), ('Gary McGarr',), ('Giulietta Weimer',), ('Greg Maxwell',), ('Harold Pawlan',), ('Herbert Flentye',), (\"Jack O'Briant\",), ('James Galang',), ('Jay Fein',), ('Jay Kimmel',), ('Joe Elijah',), ('Joe Kamberova',), ('Jonathan Doherty',), ('Ken Heidel',), ('Kimberly Carter',), ('Kristen Hastings',), ('Laurel Elliston',), ('Lena Hernandez',), ('Lindsay Castell',), ('Maria Etezadi',), ('Mark Haberlin',), ('Maxwell Schwartz',), ('Michael Moore',), ('Mitch Willingham',), ('Natalie DeCherney',), ('Patrick Gardner',), ('Randy Ferguson',), ('Raymond Buch',), ('Roy Collins',), ('Roy Franz\u00f6sisch',), ('Ruben Ausman',), ('Russell Applegate',), ('Sally Hughsby',), ('Sean Miller',), ('Shahid Hopkins',), ('Sheri Gordon',), ('Shirley Daniels',), ('Steven Roelle',), ('Thomas Boland',), ('Tony Sayre',), ('Vivek Sundaresam',))", "rowcount": 55, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 200, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 201, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Erin Smith',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Erin Smith',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 202, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('5.00'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 203, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Novimex Swivel Fabric Task Chair',), ('Black Print Carbonless 8 1/2\" x 8 1/4\" Rapid Memo Book',), ('Plymouth Boxed Rubber Bands by Plymouth',), ('Harbour Creations Steel Folding Chair',), ('DAX Black Cherry Wood-Tone Poster Frame',), ('Fellowes Bankers Box Recycled Super Stor/Drawer',), ('Recycled Steel Personal File for Hanging File Folders',), ('Bevis Round Conference Room Tables and Bases',), ('3.6 Cubic Foot Counter Height Office Refrigerator',), ('Geographics Note Cards, Blank, White, 8 1/2\" x 11\"',), ('Hewlett-Packard Deskjet 6540 Color Inkjet Printer',), ('Xerox 1963',), ('Bionaire Personal Warm Mist Humidifier/Vaporizer',), ('Memo Book, 100 Message Capacity, 5 3/8_ x 11_',), ('Newell 35',), ('Wilson Jones 14 Line Acrylic Coated Pressboard Data Binders',), ('Avery Non-Stick Heavy Duty View Round Locking Ring Binders',), ('Newell 333',), ('Xerox 1966',), ('RSVP Cards & Envelopes, Blank White, 8-1/2\" X 11\", 24 Cards/25 Envelopes/Set',), ('Xerox 1967',), ('Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack',))", "rowcount": 22, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'Sample Tests' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 204, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%colan Barnes%' AND EXTRACT(YEAR FROM central_superstore.order_date) =...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 205, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((13.175675675675675,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.7.26' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 206, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Ibico EPK-21 Electric Binding System',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.7.30\\n<s> SELECT product.product_name FROM central_superstore INNER JOIN pro...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 207, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((56.52173913043478,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `officers`\\\\nColumns:\\\\n(`case_number`, text)\\\\n(`race`, text)\\\\n(`gende...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 209, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2014',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'STRFTIME' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 210, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('3'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%Vehicle%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 4}
{"sql_id": 211, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('031347-2015',), ('125333Z',), ('130254Z',), ('134472-2015',), ('135680Z',), ('143473-2014',), ('154184-2014',), ('155466-2015',), ('155523Z',), ('165193-2016',), ('182199A',), ('183313Z',), ('192024-2014',), ('192550-2014',), ('199250-2015',), ('203639-2016',), ('204701-2014',), ('206124-2014',), ('216145-2014',), ('219229-2015',), ('248051A',), ('280218A',), ('302115Z',), ('308643Z',), ('32587A',), ('36192Z',), ('45802Z',), ('56628A',), ('60045A',), ('79223B',), ('912B',), ('94757B',))", "rowcount": 32, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `incidents`\\\\nColumns:\\\\n(`case_number`, text, primary key)\\\\n(`date`, ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 212, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.342229199372056,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `Genes`\\\\nColumns:\\\\n(`GeneID`, text)\\\\nNULLIF(`Essential`, 'null')\\\\n(`...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 213, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((84.61538461538461,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Genes' ('GeneID', 'text'), ('Essential', 'text'), ('Class', 'text'), ('Comp...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 214, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('3D Color Pixel by Number - Sandbox Art Coloring', 'nan'), ('2ndLine - Second Phone Number', 'Positive'), ('2ndLine - Second Phone Number', 'Neutral'), ('2ndLine - Second Phone Number', 'Negative'), ('2RedBeans', 'Neutral'), ('2RedBeans', 'Positive'), ('2RedBeans', 'Negative'), ('2RedBeans', 'nan'), ('2Date Dating App, Love and matching', 'Positive'), ('2Date Dating App, Love and matching', 'Negative'), ('2Date Dating App, Love and matching', 'Neutral'), ('2Date Dating App, Love and matching', 'nan'))", "rowcount": 12, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'playstore.last_updated' in 'where clause'\")", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 216, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'last_updated' in 'field list'\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 217, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Medsep Group',), ('Ole Group',), ('Pure Group',), ('Prasco Group',), ('Wuxi Group',), ('S.S.S. Group',), ('Uriel Group',), ('Amylin Group',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 218, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Elorac, Corp',), ('O.E. Ltd',), ('Dharma Ltd',), ('Linde ',), ('Prasco Group',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 219, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('8'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 220, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SO - 000106',), ('SO - 000136',), ('SO - 000163',), ('SO - 000165',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE T IS NOT NULL' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 221, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('396'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 222, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Georgia',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE T IS NOT NULL' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 223, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Stemware',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'regional_sales.sales_orders' doesn't exist\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 224, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('10/15/18',), ('10/12/18',), ('6/13/18',), ('10/9/18',), ('10/13/18',), ('10/19/18',), ('10/18/18',), ('10/26/18',), ('6/16/18',), ('11/10/18',), ('11/15/18',), ('11/4/18',), ('11/13/18',), ('6/21/18',), ('11/23/18',), ('11/27/18',), ('12/22/18',), ('12/8/18',), ('7/4/18',), ('1/3/19',), ('12/11/18',), ('12/28/18',), ('1/4/19',), ('7/3/18',), ('1/13/19',), ('12/29/18',), ('1/18/19',))", "rowcount": 27, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE t IS NOT NULL' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 225, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Cookware',), ('Wine Storage',), ('Stemware',), ('Pendants',), ('Serveware',), ('Festive',), ('Candles',), ('Wall Coverings',), ('Accessories',), ('Table Lamps',), ('Wardrobes',), ('Floral',), ('Floor Lamps',), ('Home Fragrances',), ('Pillows',), ('Bedroom Furniture',), ('Cocktail Glasses',), ('Mirrors',), ('Bar Tools',), ('Audio',), ('Wall Frames',), ('Ornaments',), ('Blankets',), ('Furniture Cushions',), ('Platters',), ('Baseball',), ('Vases',), ('Table Linens',), ('Dinnerware',), ('Clocks',), ('Bakeware',), ('Basketball',), ('TV and video',), ('Photo Frames',), ('Dining Furniture',), ('Candleholders',), ('Phones',), ('Computers',), ('Collectibles',), ('Vanities',), ('Sculptures',), ('Bean Bags',), ('Wreaths',), ('Outdoor Decor',))", "rowcount": 44, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '10.5.7-mariadb' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 226, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('18',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 227, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('781.22',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 228, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Avon Corp',), ('WakeFern ',), ('Elorac, Corp',), ('ETUDE Ltd',), ('Procter Corp',), ('PEDIFIX, Corp',), ('New Ltd',), ('Medsep Group',), ('Ei ',), ('21st Ltd',), ('Apollo Ltd',), ('Medline ',), ('Ole Group',), ('Linde ',), ('Rochester Ltd',), ('3LAB, Ltd',), ('Pure Group',), ('Eminence Corp',), ('Qualitest ',), ('Pacific Ltd',), ('Ohio ',), ('Capweld ',), ('E. Ltd',), (\"Burt's Corp\",), ('Prasco Group',), ('Mylan Corp',), ('Wuxi Group',), ('Dharma Ltd',), ('Apotheca, Ltd',), ('S.S.S. Group',), ('Uriel Group',), (\"OHTA'S Corp\",), ('Trigen ',), ('OUR Ltd',), ('Amylin Group',), ('O.E. Ltd',), ('AuroMedics Corp',), ('Ascend Ltd',), ('Victory Ltd',), ('Select ',), ('Weimei Corp',), ('Llorens Ltd',), ('Exact-Rx, Corp',), ('Winthrop ',), ('Nipro ',), ('U.S. Ltd',), ('Niconovum Corp',), ('Fenwal, Corp',), ('Bare ',), ('Sundial ',))", "rowcount": 50, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'regional_sales.sales_orders' doesn't exist\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 229, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('22'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 230, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('30'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `Sales_Orders`\\\\nColumns:\\\\n(`OrderNumber`, text, primary key)\\\\n(`Sale...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 231, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SO - 000156', 'Outdoor Decor'), ('SO - 000157', 'Home Fragrances'), ('SO - 000158', 'Home Fragrances'), ('SO - 000159', 'Cookware'))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE ordernumber IS NOT NULL AND product_name IS NOT NULL' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 232, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('7/19/18',), ('4/10/18',), ('12/31/17',), ('10/27/18',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE t IS NOT NULL' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 233, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('28'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SUM(CASE WHEN `Sales Date` ILIKE '%/6/18' AND `Sales Channel` = 'Online' THEN...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 234, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1052, \"Column 'firstName' in where clause is ambiguous\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 235, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Chauncey', 'Ray', 'Billups', 27))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'awards_classers.award' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 236, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-13.370913190529876,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''SELECT (SUM(CASE WHEN T2.lgID = 'ABA' THEN 1970 - EXTRACT(YEAR FROM T3.birth...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 6}
{"sql_id": 237, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.112449799196787,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 238, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((Decimal('4'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('4'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 239, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((44.827586206896555,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'works.genre_type' in 'field list'\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 240, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0'), Decimal('0'), Decimal('0.000000')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 't4.char_name' in 'field list'\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 241, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 242, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((Decimal('4'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('4'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 243, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((21.428571428571427,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 244, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pericles, Prince of Tyre',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Mytilestone%A%street%before%the%brother%.'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 0}
{"sql_id": 245, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Venus and Adonis.',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Venus and Adonis.',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 247, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('f',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('f',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 0}
{"sql_id": 248, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('DS Yamamura Misa Suspense: Maiko Kogiku - Kisha Katherine - Sougiya Isa Akashi - Koto ni Maru Hana Sanrin: Kyoto Satujin Jinken File',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 249, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Proceedings of the International IFIP-IEEE Conference on Broadband Communications, Global Infrastructure for the Information Age',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 250, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female White students',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION college_completion.IIF does not exist')", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 251, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((128, 16))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'u.user_id' in 'on clause'\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 252, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'public_review_platform.users' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 253, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 254, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `Business_Hours`\\\\nColumns:\\\\n(`business_id`, integer, primary key)\\\\n'...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 255, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'simpson_episodes.person' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 256, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 257, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 259, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('MyPods and Boomsticks',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(4161, \"Unknown data type: 'INTE'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 260, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Richard Gasparian',), ('Tom Mazzocco',), ('Derek Casari',), ('Bill Higley',), ('Michael Miller',), ('Eric Loudon',), ('Heliodoro Salvatierra',), ('Martin Alvarez',), ('Jason Bikowski',), ('Esther H. Lee',), ('William Bemiller',), ('Richard K. Chung',), ('Kent Rice',), ('Michael Wolf',), ('Scott D. Greenberg',), ('Tom Klein',), ('Amanda Byrnes',), ('Ashley Brooke Cooper',), ('Michael G. Mahan',), ('Laurie Biernacki',), ('Rick Polizzi',), ('Ray Miceli',), ('Will Anderson',), ('Angela Wixtrom',), ('Brooks Stonestreet',), ('Nikki Isordia',), ('Desiree E. Craig',), ('Deanna Asato',), ('Stephenie Moffatt',), ('Elizabeth Ableson',), ('Trista H. Navarro',), ('Larry Smith',), ('Lisa S. Cervantes',), ('Mike Battle',), ('Sergio Guerra',), ('Colin Contreary',), ('Lisa Walder',), ('N. Vyolet Diaz',), ('Alexander Duke',), ('Felicia Nalivansky-Caplan',), ('Dean Scammahorn',), ('Debbie Peterson',), ('Peter Gomez',), ('Kurtis Kunsak',), ('Jesse D. Miller',), ('Andrea Schell',), ('Karolina Waclawiak',), ('Lauren Biller',), ('Matt Marshall',), ('Michael D. Mitchell',), ('Michael Nobori',), ('Mindi Lee',), ('Lance Wilder',), ('Lynna Blankenship',), ('T.J. Kim',), ('John Liu',), ('John Pattison',), ('Larry Miravalles',), ('Sam Ho',), ('Eric S. Keyes',), ('Kevin M. Newman',), ('Kevin N. Moore',), ('Matt Groening',), ('Sam Simon',), ('Caroline Cruikshank',), ('Christianna Lang Daley',), ('David Salvador',), ('Debbie Mahan',), ('Eric Koenig',), ('Erick T. Tran',), ('Greg Checketts',), ('Jeff Johnson',), ('Liz Climo',), ('Maeve McGrath',), ('Mark Ervin',), ('Mary Orario-Natale',), ('Matthew Herbert',), ('Sooan Kim',), ('Viorel Voronca',), ('Ed Ghertner',), ('Bill Odenkirk',), ('J. Stewart Burns',), ('Joel H. Cohen',), ('John Frink',), ('Kevin Curran',), ('Marc Wilmore',), ('Michael Price',), ('Rob LaZebnik',), ('Ron Hauge',), ('Karen Bauer',), ('Anne Legge',), ('Chris Bolden',), ('Eli Balser',), ('Alf Clausen',), ('Danny Elfman',), ('Dell Hake',), ('Brian Kelley',), ('Carolyn Omine',), ('David Silverman',), ('Don Payne',), ('James L. Brooks',), ('Bobby Mackston',), ('Norm MacLeod',), ('Terry Greene',), ('Steve Mills',), ('Steven Dean Moore',), ('Rosanna Lyons',), ('Charles McCaskill',), ('Al Jean',), ('Robyn Anderson',), ('Sally Stevens',), ('Chris Ledesma',), ('Joe Zimmerman',), ('Rick Riccio',), ('Steven L. Smith',), ('Victor Pesavento',), ('Tom Boyd',), ('Scott Clausen',), ('Ian Maxtone-Graham',), ('Matt Selman',), ('Tim Long',), ('Michael Bridge',), ('Don Barrozo',), ('Heejin Kim',), ('Mike Scully',), ('Richard Raynis',), ('Richard Sakai',), ('Tom Gammill',), ('Ronny Cox',), ('Jefferson R. Weekley',), ('John Krause',), ('Richard Hinds Jr.',), ('Alan Decker',), ('Bonita Pietila',), ('Utit Choomuang',), ('Nelson Shin',), ('Brian J. Kaufman',), ('Joe Saunders',), ('Dominique Braud',), ('Dan Greaney',), ('Daniel Chun',), ('David Mirkin',), ('Denise Sirkot',), ('Max Pross',), ('Mike Reiss',), ('Glen Wuthrich',), ('John Mathot',), ('Scott Alberts',), ('Jim Reardon',), ('Rudi Berden',), ('Mike B. Anderson',), ('Jeff Westbrook',), ('Larina Jean Adamson',), ('Matt Warburton',), ('Mark Linden',), ('Drew McPhail',), ('Louise Jaffe',), ('Robert Nichols II',), ('Tim Lauber',), ('Valentina Garza',), ('Dan Castellaneta',), ('Pamela Hayden',), ('Nancy Cartwright',), ('Harry Shearer',), ('Yeardley Smith',), ('Tress MacNeille',), ('Julie Kavner',), ('Felix Sanchez',), ('Larry Field',), ('Laurie Wetzler',), ('Denise Donatelli',), ('Hank Azaria',), ('Shohreh Aghdashloo',), ('Russi Taylor',), ('Karl Wiedergott',), ('Adam Kuhlman',), ('Jack Dyer',), ('Ray Claffey',), ('Robert Ingram',), ('Sam Im',), ('Billy Theriot',), ('John W. Hyde',), ('Carlton Batten',), ('Patrick Buchanan',), ('Scott Brutz',), ('Chris Clements',), ('Matthew Schofield',), ('Oscar Cervantes',), ('Charles Ragins',), ('Paul Wee',), (\"Shannon O'Connor\",), ('Gabriel DeFrancesco',), ('Alfred Cruz',), ('Daniel Chiu',), ('Ian Wilcox',), ('Jabu Henderson',), ('Mike Pettengill',), ('Rene Vega',), ('Steve Pilapil',), ('Adam Klein',), ('William L. Arance',), ('Joe Wack',), ('Alex Que',), ('Alex Ruiz',), ('Ben Lane',), ('Chance Raspberry',), ('Cynthia Jill French',), ('Dane Romley',), ('Dante Fabiero',), ('Eddie Rosas',), ('Edwin E. Aguilar',), ('Eric Lara',), ('Ernie Elicanal',), ('Fill Marc Sagadraca',), ('Grant Lee',), ('Istvan Majoros',), ('J.C. Wegman',), ('Jason D. Warnesky',), ('Jay Robinson',), ('Jeanne Erickson',), ('Jennie Hoffer',), ('Jennifer Moeller',), ('John Achenbach',), ('Jonathan Gebhart',), ('Josh Taback',), ('Julia Fitzmaurice',), ('Jung A. Yoo',), ('Lena Podesta',), ('Luis Escobar',), ('Manny DeGuzman',), ('Mike Morris',), ('Norman P. Auble',), ('Orlando Baeza',), ('Oscar Pangestu',), ('Richard Manginsay',), ('Rick Salonga',), ('Ryan Rivette',), ('Silvia Pompei',), ('Tom Madrid Jr.',), ('Tricia Benson',), ('Victor E. Almaguer',), ('Yelena Geodakyan',), ('Young Yoo',), ('Paul Newman',), ('Bob Anderson',), ('Matthew Faughnan',), ('Michael Polcino',), ('Nancy Kruse',), ('Raymond S. Persi',), ('Jennifer Dolce',), ('Cameron Porter',), ('Jarod Daetwiler',), ('Javier Pineda',), ('John Berman',), ('Leasa Epps-Eisele',), ('Merl Reagle',), ('Myung Nam Chang',))", "rowcount": 257, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'simpson_episodes.episode' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 261, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((52,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 262, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 263, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Outstanding Voice-Over Performance', 'Dan Castellaneta'), ('Best Animated Series', None), ('Best Voice-Over Performance', 'Hank Azaria'), ('Favorite Animated Comedy', None))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 264, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 265, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Treehouse of Horror XIX', 'https://m.media-amazon.com/images/M/MV5BMTgzOTYyNTc2OF5BMl5BanBnXkFtZTgwNjc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Best Directing in an Animated Television Production or Short Form', 'Bob Anderson'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Outstanding Writing in a Comedy Series', 'Marc Wilmore'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('Homer and Lisa Exchange Cross Words', 'https://m.media-amazon.com/images/M/MV5BMTQ2MzcyOTMyMl5BMl5BanBnXkFtZTgwNDc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Animation', 'Tim Long'))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Nominee%'' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 266, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Paul Newman', 'Shaker Heights', 'dedicated to the memory of', 97))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Paul Newman', 'Shaker Heights', 'dedicated to the memory of', 97))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 267, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.08333333333333333, 'Joel H. Cohen', 'Animation', 'Wedding for Disaster', None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 268, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TestCase 1: sqlite to mariadb translation. Check if the translated SQL is fun...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 269, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Al Jean',), ('Alex Dilts',), ('Alf Clausen',), ('Anna Pagan',), ('Bill Odenkirk',), ('Billy Kimball',), ('Bobby Mackston',), ('Bonita Pietila',), ('Brian Grazer',), ('Carolyn Omine',), ('Chris Ledesma',), ('Chuck Sheetz',), ('Colm Meaney',), ('Dan Castellaneta',), ('Dan Greaney',), ('Danny Elfman',), ('David Mirkin',), ('David Silverman',), ('Dean Scammahorn',), ('Dell Hake',), ('Denis Leary',), ('Denise Sirkot',), ('Don Payne',), ('Don Vanderbeek',), ('Ed Begley Jr.',), ('Eric S. Keyes',), ('Glen Wuthrich',), ('Grant Lee',), ('Hank Azaria',), ('Harry Shearer',), ('Ian Maxtone-Graham',), ('J. Stewart Burns',), ('James L. Brooks',), ('Jeff Bezos',), ('Jeff Topping',), ('Jefferson R. Weekley',), ('Jodie Foster',), ('Joe Mantegna',), ('Joe Montana',), ('John Achenbach',), ('John Berman',), ('John Frink',), ('John Mathot',), ('Julia Louis-Dreyfus',), ('Julie Kavner',), ('Karen Bauer',), ('Karl Wiedergott',), ('Kelsey Grammer',), ('Kevin Curran',), ('Kipp Lennon',), ('Lance Kramer',), ('Larina Jean Adamson',), ('Lynna Blankenship',), ('Maggie Roswell',), ('Marc Wilmore',), ('Marcia Wallace',), ('Mark Cuban',), ('Mark Kirkland',), ('Marv Albert',), ('Matt Groening',), ('Matthew Nastuk',), ('Maurice LaMarche',), ('Max Pross',), ('Merl Reagle',), ('Michael Polcino',), ('Michael Price',), ('Mike Reiss',), ('Mike Scully',), ('Nancy Cartwright',), ('Nancy Kruse',), ('Orlando Gumatay',), ('Pamela Hayden',), ('Patty Shinagawa',), ('Paul Newman',), ('Richard Raynis',), ('Richard Sakai',), ('Rob LaZebnik',), ('Robert Forster',), ('Robert Nichols II',), ('Russi Taylor',), ('Sally Stevens',), ('Sam Simon',), ('Scott Thompson',), ('Shohreh Aghdashloo',), ('Sooan Kim',), ('Stephanie Gillis',), ('Tim Long',), ('Tom Gammill',), ('Tom Mazzocco',), ('Tress MacNeille',), ('Will Shortz',), ('William Bemiller',), ('Yeardley Smith',))", "rowcount": 93, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Al Jean',), ('Alex Dilts',), ('Alf Clausen',), ('Anna Pagan',), ('Bill Odenkirk',), ('Billy Kimball',), ('Bobby Mackston',), ('Bonita Pietila',), ('Brian Grazer',), ('Carolyn Omine',), ('Chris Ledesma',), ('Chuck Sheetz',), ('Colm Meaney',), ('Dan Castellaneta',), ('Dan Greaney',), ('Danny Elfman',), ('David Mirkin',), ('David Silverman',), ('Dean Scammahorn',), ('Dell Hake',), ('Denis Leary',), ('Denise Sirkot',), ('Don Payne',), ('Don Vanderbeek',), ('Ed Begley Jr.',), ('Eric S. Keyes',), ('Glen Wuthrich',), ('Grant Lee',), ('Hank Azaria',), ('Harry Shearer',), ('Ian Maxtone-Graham',), ('J. Stewart Burns',), ('James L. Brooks',), ('Jeff Bezos',), ('Jeff Topping',), ('Jefferson R. Weekley',), ('Jodie Foster',), ('Joe Mantegna',), ('Joe Montana',), ('John Achenbach',), ('John Berman',), ('John Frink',), ('John Mathot',), ('Julia Louis-Dreyfus',), ('Julie Kavner',), ('Karen Bauer',), ('Karl Wiedergott',), ('Kelsey Grammer',), ('Kevin Curran',), ('Kipp Lennon',), ('Lance Kramer',), ('Larina Jean Adamson',), ('Lynna Blankenship',), ('Maggie Roswell',), ('Marc Wilmore',), ('Marcia Wallace',), ('Mark Cuban',), ('Mark Kirkland',), ('Marv Albert',), ('Matt Groening',), ('Matthew Nastuk',), ('Maurice LaMarche',), ('Max Pross',), ('Merl Reagle',), ('Michael Polcino',), ('Michael Price',), ('Mike Reiss',), ('Mike Scully',), ('Nancy Cartwright',), ('Nancy Kruse',), ('Orlando Gumatay',), ('Pamela Hayden',), ('Patty Shinagawa',), ('Paul Newman',), ('Richard Raynis',), ('Richard Sakai',), ('Rob LaZebnik',), ('Robert Forster',), ('Robert Nichols II',), ('Russi Taylor',), ('Sally Stevens',), ('Sam Simon',), ('Scott Thompson',), ('Shohreh Aghdashloo',), ('Sooan Kim',), ('Stephanie Gillis',), ('Tim Long',), ('Tom Gammill',), ('Tom Mazzocco',), ('Tress MacNeille',), ('Will Shortz',), ('William Bemiller',), ('Yeardley Smith',))", "rowcount": 93, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 270, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%California%' AND birth_country ILIKE '%USA%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 271, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Billy Kimball',), ('Ian Maxtone-Graham',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Billy Kimball',), ('Ian Maxtone-Graham',))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 272, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E13',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'information, please refer to the sqlite and mariadb documentation.' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 273, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Jodie Foster',), ('Rob LaZebnik',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `person`\\\\nColumns:\\\\n(`name`, text, primary key)\\\\n(`birthdate`, text)...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 274, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E1',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'vote_count' in 'order clause'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 275, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Wedding for Disaster',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '::DATE) = 2010 AND Award.person = 'Joel H. Cohen'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 276, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.878787878787879,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(birthdate) FROM Person' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 277, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `Credit`\\\\nColumns:\\\\n(`episode_id`, text)\\\\n(`category`, text)\\\\n(`pers...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 278, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('MyPods and Boomsticks',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 279, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((61,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 280, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 281, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1930s to 2020s',), ('2d animation',), ('bail bondsman',), ('biblical quote',), ('biblical reference',), ('bleeding arm',), ('bounty hunter',), ('buddy cop spoof',), ('bullet',), ('bulletproof glass',), ('cake',), ('catholic joke',), ('catholic priest',), ('cigar smoking',), ('coffee',), ('concrete',), ('construction site',), ('erotic bakery',), ('face slap',), ('fantastic four spoof',), ('female slaps male',), ('fistfight',), ('flashback',), ('gratitude',), ('gun',), ('irish joke',), ('leprechaun',), ('male bonding',), ('male in drag',), ('male in female clothes',), ('man in drag',), (\"man in woman's clothes\",), ('montage with pop song',), ('parade float',), ('partnership',), ('phallus shaped cake',), ('plastic bag',), ('police arrest',), ('prayer',), ('prison',), ('punched in the face',), ('reference to the fantastic four',), ('ricochet',), ('riot',), ('school principal',), ('secret from husband',), ('shillelagh',), ('shot in the arm',), ('slow motion scene',), (\"st. patrick's day\",), ('suffocation',), ('taser',), ('twin',), ('twin sister',), ('wanted poster',), ('wet cement',), ('1930s to 2020s',), ('2d animation',), ('cell phone',), ('machu picchu',), ('overprotective mother',), ('peru',), ('pun in title',), ('tracking device',), ('1930s to 2020s',), ('2d animation',), ('bad behavior',), ('identity swap',), ('lottery',), ('lottery ticket',), ('lottery winner',), ('party',), ('rich kid',), ('1930s to 2020s',), ('2d animation',), ('advertising campaign',), ('alien',), ('body in chipper',), ('celebrity death',), ('christmas',), ('dead celebrity',), ('frankenstein costume',), ('ghost costume',), ('giant pumpkin',), ('halloween',), ('halloween costume',), ('halloween episode',), ('halloween party',), ('halloween spoof',), (\"jack o'lantern\",), ('princess costume',), ('pumpkin patch',), ('reference to abraham lincoln',), ('reference to barack obama',), ('reference to charlie brown',), ('reference to charlton heston',), ('reference to dwight d. eisenhower',), ('reference to edward g. robinson',), ('reference to george clooney',), ('reference to george washington',), ('reference to golda meir',), ('reference to jimmy stewart',), ('reference to john mccain',), ('reference to john wayne',), ('reference to kate winslet',), ('reference to mad men',), ('reference to pontius pilate',), ('reference to prince',), ('reference to rip taylor',), ('reference to the great pumpkin',), ('roman numeral in title',), ('skeleton costume',), ('toy car',), ('transformer',), ('transformer toy',), ('turkey the bird',), ('voting booth',), ('witch costume',), ('year 2008',), ('1930s to 2020s',), ('bear trap',), ('body in a trunk',), ('limbo dancing',), ('premarital sex',), ('steamer trunk',), ('1930s to 2020s',), ('2d animation',), ('crossword puzzle',), ('disco',), ('gay bar',), ('getting dumped',), ('lemonade stand',), ('1930s to 2020s',), ('2d animation',), ('arab culture',), ('arab stereotype',), ('ipod',), ('time machine',), ('1930s to 2020s',), ('2d animation',), ('bagpipes',), ('beehive',), ('beekeeper',), ('billionaire',), ('boston celtics',), ('colony collapse disorder',), ('construction site',), ('dare',), ('demolition',), ('eskimo indian',), ('greenhouse',), ('killer bee',), ('male bonding',), ('poker game',), ('prank',), ('secret handshake',), ('skinny dipping',), ('stadium',), ('surrealism',), ('town meeting',), ('wetting pants',))", "rowcount": 161, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['AirIG DATE'::DATE - '2008-01-01'::DATE) AS CURRENT_YEAR\\\\n', 'SELECT KEYWORD...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 282, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'Question: What is the following SQL statement functionally equivalent when ru...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 283, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 284, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E1',), ('S20-E2',), ('S20-E3',), ('S20-E4',), ('S20-E5',), ('S20-E6',), ('S20-E7',), ('S20-E8',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TIMESTAMP)) = 2008 AND T2.stars < 5' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 285, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.9,), (11.6,), (13.5,), (22.0,), (23.2,), (6.9,), (15.1,), (15.4,), (17.4,), (29.0,), (5.2,), (11.6,), (14.4,), (19.1,), (24.7,), (2.1,), (2.6,), (3.7,), (6.5,), (0.7,), (2.2,), (2.6,), (4.6,), (2.4,), (2.9,), (4.4,), (6.0,), (8.9,), (6.1,), (9.2,), (15.4,), (15.4,), (2.9,), (2.6,), (5.9,), (6.0,))", "rowcount": 36, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Episode','Vote']' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 286, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((9,), (6,), (8,), (10,), (7,), (9,), (8,), (10,), (6,), (7,), (9,), (10,), (6,), (8,), (7,), (9,), (6,), (8,), (10,), (7,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (5,), (5,), (5,), (5,), (10,), (6,), (6,), (6,), (2,), (9,))", "rowcount": 46, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION simpson_episodes.to_timestamp does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 287, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 288, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((54.166666666666664,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'CAST(SUM(CASE WHEN no_payment_due.bool = 'pos' THEN 1 ELSE 0 END) AS FLOAT) *...' at line 1\")", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 289, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16.363636363636363,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 290, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'The function IIF() can be replaced with the CASE WHEN statement.' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 291, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((102.12765957446808,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'QUERY OK' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 292, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((37.755102040816325,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `longest_absense_from_school`\\\\nColumns:\\\\n(`name`, text, primary key)...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 293, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'QUERY SELECT CASE WHEN T.result = 0 THEN 'female' ELSE 'male' END AS re FROM ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 294, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0.000000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION student_loan.IIF does not exist')", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 295, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('52.666667'), Decimal('47.333333')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((52.666666666666664, 47.333333333333336))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 296, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(name) FROM longest_absense_from_school' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 297, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1.8011204481792717,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'None.' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 298, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female', 'uci'), ('female', 'ucsd'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION student_loan.IIF does not exist')", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 299, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((50.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''8.0.19'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 300, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('female',), ('male',), ('male',), ('male',), ('male',), ('female',), ('female',))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['gender', 'TEXT', ]' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 301, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'AS FLOAT) / NULLIF(SUM(CASE WHEN month = 0 THEN 1 ELSE 0 END), 0) AS fraction...' at line 1\")", "exec_able": false}}, "TP": 3, "FP": 3, "FN": 0}
{"sql_id": 302, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('-6'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'Question: Please translate the following SQL statement from sqlite to mariadb...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 303, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-7.0, 'NO'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(T1.name), IIF(SUM(IIF(T2.name IS NOT NULL AND T1.month = ...' at line 1\")", "exec_able": false}}, "TP": 5, "FP": 4, "FN": 0}
{"sql_id": 304, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('12.244898'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 305, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('1500'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 306, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('ucla', 'female'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('ucla', 'female'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 307, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.10526315789473684,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.173,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 308, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('24'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 309, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Wolfgang%Reitherman%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 311, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((\"Ev'rybody Wants to Be a Cat\",))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((\"Ev'rybody Wants to Be a Cat\",))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 312, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('101 Dalmatians',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'sqlite\\n### SQL Statement Version to Translate To:\\nmariadb' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 313, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'All of the following test cases should return the same result:\\n<s> SELECT mov...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 314, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 315, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%Ron%Clements%' ORDER BY CAST(REPLACE(movies_total_gross.total_gross, ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 316, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Barry Cook',), ('Chris Buck',), ('Gary Trousdale',), ('Mark Dindal',), ('Mike Gabriel',), ('Ralph Zondag',), ('Roger Allers',), ('Ron Clements',), ('Wolfgang Reitherman',))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''SELECT director.director FROM movies_total_gross INNER JOIN director ON movi...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 317, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) DESC LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 318, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Lion King',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' ','), ',', '') AS REAL) DESC LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 319, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Ron%Clements%' ORDER BY CAST(replace(trim(movies_total_gross.total_gr...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 320, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((194933183.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' ','), ',') AS REAL)) / COUNT(movie_title) FROM voice_actors AS T1 INNER JOIN...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 321, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('A Beautiful Planet', 'Documentary'), ('Alice Through the Looking Glass', 'Adventure'), ('Captain America: Civil War', 'Action'), ('Doctor Strange', 'Adventure'), ('Finding Dory', 'Adventure'), ('Moana', 'Adventure'), ('Pete\u2019s Dragon', 'Adventure'), ('Queen of Katwe', 'Drama'), ('Rogue One: A Star Wars Story', 'Adventure'), ('The BFG', 'Adventure'), ('The Finest Hours', 'Thriller/Suspense'), ('The Jungle Book', 'Adventure'), ('The Light Between Oceans', 'Drama'), ('Zootopia', 'Adventure'))", "rowcount": 14, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 3}
{"sql_id": 322, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Star Wars Ep. VII: The Force Awakens', 1.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) / NULLIF(cast(replace(total_gross, ',', '') AS REAL), 0) FROM movies_to...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 3}
{"sql_id": 323, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Many Adventures of Winnie the Pooh', 'Winnie the Pooh', 'Winnie the Pooh'), ('The Rescuers', 'Bernard and Miss Bianca', 'The Journey'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `movies_total_gross`\\\\nColumns:\\\\n(`movie_title`, text, primary key)\\\\n...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 326, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['movies_total_gross` movie_title => director name (foreign key to foreign key)' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 328, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' ','), ',', '') AS FLOAT) / NULLIF((SELECT SUM(cast(replace(trim(tt.total_gro...' at line 1\")", "exec_able": false}}, "TP": 6, "FP": 5, "FN": 2}
{"sql_id": 329, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'None' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 330, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Make Mine Music',), ('Saludos Amigos',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Make Mine Music',), ('Saludos Amigos',))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 331, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Ron Clements',), ('Clyde Geronimi',), ('Gary Trousdale',), ('Don Hall',), ('Chris Williams',), ('Mark Dindal',), ('Wilfred Jackson',), ('Ralph Zondag',), ('Chris Buck',), ('Chris Sanders',), ('Barry Cook',), ('Mike Gabriel',), ('David Hand',), ('Nathan Greno',), ('Wolfgang Reitherman',), ('Roger Allers',), ('Rich Moore',), ('Byron Howard',))", "rowcount": 18, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 332, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Circle of Life',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' ','), '', '') AS REAL) DESC LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 333, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('David Hand',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' ',''), ',', '') AS REAL) DESC LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 1}
{"sql_id": 335, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Tangled',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 336, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 337, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Clayton',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'villain' in 'field list'\")", "exec_able": false}}, "TP": 3, "FP": 3, "FN": 0}
{"sql_id": 338, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Avengers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' ',''), ',', '') AS REAL) DESC LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 339, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pinocchio',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' ','), ',', '') AS REAL) DESC LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 340, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Wolfgang Reitherman',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 343, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((314140384.0, 203522176.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `movies_total_gross`\\\\nColumns:\\\\n(`movie_title`, text, primary key)\\\\n...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 346, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 347, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'), ('2009-01-03', 'Republican'))", "rowcount": 88, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'legislator.current-terms' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 348, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('-95'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SELECT SUM(CASE WHEN type = 'sen' THEN 1 ELSE 0 END) - SUM(CASE WHEN type = '...' at line 3\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 349, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.15267175572519084,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(party) FROM current WHERE gender_bio = 'M' AND EXTRACT(YE...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 350, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 351, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((92.03056768558952,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(bioguide_id) FROM current JOIN `current-terms` ON bioguid...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 352, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 353, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Sanford D. Bishop, Jr.',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 354, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('1'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \\'\"current-terms\" AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = \\'...\\' at line 1')", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 355, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Sherrod Brown',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike 'Lutheran' AND state ILIKE '%OH%' AND type ILIKE '%rep%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 356, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 357, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 't1.first' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 358, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 359, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `customers`\\\\nColumns:\\\\n(`customerid`, integer, primary key)\\\\n(`first...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 360, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Teddy', 'Bruschi'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 361, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"Captain Eli's\",))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 364, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('134'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['num']' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 365, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('YES',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Alex%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 366, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('19073'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'mariadb (mysql) output:\\n<s> SELECT SUM(T2.Quantity) FROM Products AS T1 INNER...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 367, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Black',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%Silver%' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Name ilike '%Black%' T...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 3}
{"sql_id": 369, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4.278838342810723,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4.278838342810723,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 370, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 371, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / NULLIF(COUNT(Products.`Cost`), 0) FROM Sales JOIN Products ON S...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 372, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Strawberries',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), ('Cream of Cauliflower Soup',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Raw Oysters',), ('Stewed tomatoes',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('Rockaways oysters',), ('Hafergrutze',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Grape fruit',), ('Oranges',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('Rissoles a la Merrill',), ('Lammkoteletten nach Villeroi',), ('SALTED ALMONDS',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Vegetable Soup',), ('Baked fish, wine sauce',), ('Pur\u00e9e of split peas aux croutons',), ('Consomm\u00e9 in cup',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Hot ribs of beef',), ('Doucette salad',), ('Stewed tomatoes',), ('New beets',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Old fashioned rice pudding',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Oranges',), ('Strawberries',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Grape fruit',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Stewed prunes',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges',), ('Oranges sliced',), ('Large pot of coffee',), ('Cup of coffee (served in small pot)',), ('Large pot of Oolong tea',), ('Pot of chocolate',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Sliced Bananas and Cream',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('French rolls',), ('Milk rolls',), ('Celery',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Mohren Suppe mit Sago',), ('Oranges',), ('Food',), ('Shreaded Wheat',), ('Clam cocktail',), ('Oyster cocktail',), ('Sardines',), ('Little Neck clams',), ('Stuffed olives',), ('Lalla Rookh Sorbet',), ('Celery',), ('Malaga grapes',), ('Pears',), ('Martineaus',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('Strawberry',), ('Oyster Bay asparagus',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Fruit',), ('Plain Omelette',), ('Canape, Martha',), ('Fruit',), ('Quaker Oats',), ('Cracked Wheat',), ('Puree of beans',), ('Fruits in Season',), ('Fried Flounders',), ('Oatmeal Porridge',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Bouillon in cup',), ('Queen olives',), ('Radishes',), ('Chow chow',), ('Panfish, Meuniere, German fried potatoes',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Philadelphia Cream Cheese',), ('Assorted cakes',), ('Scollops en caisse, Supreme',), ('Irish stew',), ('Marrow on toast, Bordelaise',), ('Lobster salad',), ('Potato salad',), ('Chicken salad',), ('Mashed potatoes',), ('Coffee',), ('Spinach with egg',), ('Boiled potatoes',), ('Baba au rhum',), ('Hot buns',), ('Tongue',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Stewed prunes',), ('Boiled rice',), ('Roast beef',), ('Sliced Bananas',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Sardines',), ('Chicken',), ('Apple Sauce',), ('Tea',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Coffee',), ('Milk',), ('Rolls',), ('Griddle cakes',), ('Baked Potatoes',), ('Porterhouse Steak',), ('Pommes de Terre a la Creme',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Onions plain or fried',), ('Sandwiches of all Kinds',), ('Small Steak',), ('Hamburger Steak',), ('Veal Chops',), ('Mutton Chops',), ('Pork Chops',), ('Ham & Eggs',), ('Bacon & Eggs',), ('Fried Liver',), ('German Pancake',), ('Omelettes',), ('Oysters & Clams',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters stewed',), ('Oysters box stew',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Fruit',), ('Oat Meal',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Fish cakes',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Griddle cakes',), ('Hominy',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Fish cakes',), ('Sirloin Steak',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Lyonnaise Potatoes',), ('Griddle cakes',), ('Marmalade',), ('Coffee',), ('Tomato Soup',), ('Baked Weakfish',), ('Oysters, Raw on the shell',), ('Half and Half Scallops & Oysters',), ('Oranges',), ('Rolled Oats',), ('Broiled Mullet',), ('Sirloin Steak with Mushrooms',), ('Pork Chops Piquante Sauce',), ('Broiled Chicken on Toast',), ('Calfs Liver and Onions',), ('Broiled Kidney with Bacon',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Waffles',), ('Split Rolls',), ('Hot Cakes',), ('Tea',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Oranges',), ('Oatmeal Porridge',), ('Smelts Meuniere',), ('Findon Haddock',), ('Oatmeal Porridge',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Cold Half Chicken and Ham ',), ('Cold Veal and Ham Pie',), ('Cold Roast Lamb',), ('Oranges',), ('Fried Flounder',), ('Grillirte Kuken',), ('Hoot Mon Mush',), ('Fillet Steaks aux Champignon',), ('Fruit',), ('Strawberries',), ('broiled shad',), ('Oysters, Milk Stew',), ('Oysters, Boston stew',), ('Oysters, Box Stew',), ('Oysters, Raw on the Half Shell',), ('Coffee',), ('Quaker Oats',), ('Boiled rice',), ('Smelts, Tartare sauce',), ('Findon Haddock',), ('Beef Steak, Saratoga chips',), ('Calves Liver & Bacon',), ('Sausage',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Sliced Pineapples',), ('Oatmeal Porridge',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Broiled Ham',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Cold Steak Pie',), ('Cold Mutton',), ('Cold Roast Beef',), ('Cold German Sausage',), ('Oysters, Boston Box Stew',), ('Oysters, Fry',), ('Oysters, Fry with Bacon',), ('Oatmeal',), ('Oyster Omelette',), ('Stewed Tripe',), ('Pork Sausage and Lyonnaise Potatoes',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Mock turtle soup',), ('Consomme Benoiton',), ('Filet Steaks aux Champignon',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Consomme San Remo',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Clear green turtle soup',), ('Corned Beef Hash',), ('Consomme Maceo',), ('Boiled rice',), ('Puree Mongol',), ('Broiled Rashers of Ham',), ('Consomme Printanier',), ('French fried potatoes',), ('Chicken Mulligatawny',), ('Split Rolls',), ('Oysters, Blue Point Stew',), ('French bread',), ('Corn bread',), ('Oysters, Crumb Fry',), ('English Beef soup',), ('Beef Stew',), ('Oysters, Blue Point Fry',), ('Filet of sole a la Horly',), ('broiled shad',), ('Diamond back terrapin',), ('Fruit',), ('Oat Meal',), ('Boiled rice',), ('Plain Omelette',), ('Fried Eggs',), ('Fried Plaice - Meuniere',), ('Kippered Herring',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Sausage & Mashed Potatoes',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fruits in Season',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Boiled potatoes',), ('Fried fish',), ('Egg, to order',), ('Diamond stew',), ('Jam',), ('Marmalade',), ('Tea',), ('Stewed prunes',), ('Clam Fritters',), ('Boiled Salt Mackerel',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Pork Chops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('English Mutton Chops',), ('Broiled Spring Chicken',), ('Sirloin Steak',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Plain Omelet',), ('Fried Indian Mush',), ('Baked Potatoes',), ('Saratoga Chips',), ('French fried potatoes',), ('Lyonnaise Potatoes',), ('Potatoes stewed in Cream',), ('Saute Potatoes',), ('Rye Bread',), ('French rolls',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn muffins',), ('Wheat Cakes, with Maple Syrup',), ('Coffee',), ('Tea',), ('Chocolate',), ('Cocoa',), ('Oatmeal Porridge',), ('Fruits in Season',), ('Corn Meal Mush',), ('Boiled',), ('Rolled Oats',), ('Scotch grouse en casserole',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Fruit',), ('Quaker Oats',), ('Scrambled Eggs',), ('Eggs au Beurre Noir',), ('Broiled Blue Fish',), ('Fish cakes',), ('Sirloin Steak, Fried French Chips',), ('Chicken Liver on Toast with Bacon',), ('Pork Chops, Sage & Onions',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Marmalade',), ('Coffee',), ('Salt Codfish, Spanish Style',), ('Marmalade',), ('Mashed potatoes',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Apples',), ('Passion Fruit',), ('Kippered Herrings',), ('Curried Pork and Rice',), ('Stewed Tripe with Cream sauce',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Chicken broth',), ('Consomme Macaroni',), ('Oat Meal',), ('Buckwheat Cakes',), ('Hard Boiled Egg',), ('Fruit',), ('Cream Cheese',), ('Plain Omelette',), ('Fried Eggs',), ('Hominy',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Kippered Herring',), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Fish cakes',), ('Apfelsinen',), ('Apfel',), ('Maisgries',), ('Hafergrutze',), ('Snowflakes',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Salt Codfish, Spanish Style',), ('Fruit',), ('Fillet Steads with Mushrooms',), ('Poached Eggs on Toast',), ('Curried Prawns and Rice, Bombay Duck',), ('Eggs au Beurre Noir',), ('Lamb Chops, Broiled Plain',), ('Whiting - Meuniere',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Fish cakes',), ('Sirloin Steak - Fried Onions',), ('Broiled Ham',), ('Grape fruit',), (\"Lambs' Liver Saute\",), ('Breakfast',), ('Chicken Liver on Toast with Bacon',), ('Tripe Fritters',), ('Jambon Grille',), ('Minced Veal a la Zingari',), ('Eggs to order',), ('Dried Hash',), ('Corned Beef Hash',), ('Mutton Chops - Saute Potatoes',), ('Calfs Liver + Bacon',), ('Boiled rice',), ('Cold Smoked Tongue and Ham',), ('Buckwheat Cakes',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Marmalade',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Coffee',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Broiled Fresh Mackerel',), ('English Muffins',), ('Salt Cod, Egg Sauce',), ('Cracked Wheat with Fresh Milk',), ('Rice Cakes',), ('Shad roe and bacon',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Marmalade',), ('Jam',), ('Smoked Schnapper Butter Sce',), ('Yarmouth Bloaters',), ('Tea',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Coffee',), ('Cocoa',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Fruits in Season',), ('Frizzled Breakfast Bacon (to order)',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Saute of Kidney',), ('Corned Beef Hash',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('Coffee',), ('Scrambled Eggs and bacon',), ('liver and bacon',), ('Oranges',), ('Apples',), ('Oatmeal',), ('Fillet de Boeuf a la Parisienne',), ('Fried Chicken a la Maryland',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Kippered Herrings',), ('Broiled Ham',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Strawberries',), ('Hominy',), ('Jam',), ('Boiled potatoes',), ('Pork Sausage and Lyonnaise Potatoes',), ('Baked Apple Dumpling, Hard Sauce',), (\"Potato a la Maitre d'Hotel\",), ('Tea',), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Oysters, Roast in Shell',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Asparagus Omelette ',), ('rice pudding',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Swiss Rolls',), ('Fruit in Season',), ('Charlotte Russe',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Jam',), ('Lettuce',), ('Cum-quats',), ('Raisin cake',), ('Tea',), ('Apples',), ('Orange',), ('Fillet Steak ',), ('Oranges',), ('Grape fruit',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Ham omelette',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('China Teas',), ('Coffee',), ('Broiled Salt Mackerel',), ('Corned Beef Hash',), ('Apples',), ('Stewed Tripe Spanish',), ('Germea',), ('Eggs to order',), ('Eggs to order',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Butter Cakes with Maple Syrup',), ('Marmalade',), ('Eggs to order',), ('Bananas',), ('Hot Rolls',), ('Coffee ',), ('Kraftsuppe, Prinzessin Art',), ('Cracked Wheat',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Boiled rice',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Liver & Bacon',), ('Blumenkohl, hollandische Sauce',), ('Stewed Tripe Spanish',), ('Beef Steak, fried onions',), ('Cotelettes de Veau, Sauce Tomate',), ('Gratinierter Eierkuchen nach Mornay',), ('Boiled eggs',), ('Split Rolls',), ('Veal Cuttlets Lyonnaise',), ('Entenbraten, Bordeaux Sauce',), ('Fried Potatoes',), ('Pork Sausages, Snowflake Potatoes',), ('Mutton Chops & Potato Chips',), ('Hot Rolls',), (\"Lambs' Liver with Bacon\",), ('Mirabellen',), ('Coffee',), ('Tripe, Spanish Style',), ('Citronen-Auflauf',), ('Boiled rice',), ('Liver & Bacon',), ('Cape Horn Hash',), ('Broiled Rashers of Ham',), ('Fruit in Season',), ('Breakfast Rolls',), ('Corn Meal Fritters',), ('Corn bread',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Dry Toast',), ('Boiled Potatos',), ('Pikelets',), ('Rolled Oats',), ('Fried Whiting',), ('Hot Rolls',), ('Flannel Cakes',), ('Marmalade',), ('Tea',), ('Jam',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Tea',), ('Coffee',), ('Fillet Steak Fried Potatoes',), ('Cocoa',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Bacon to order',), ('Breakfast Rolls',), ('Wheat Cakes',), ('Marmalade',), ('Coffee',), ('Beef Steak & onions',), ('Fried Bananas',), ('Egg to Order',), ('Beef Steak and Champignons',), ('Boiled potato',), ('Currant Buns',), ('Cold Ham',), ('Boiled Cod',), ('Waffle',), ('Marmalade',), ('Broiled Spring Chicken',), ('Fruit',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Tea',), ('Oatmeal Porridge',), ('Buckwheat Cakes',), ('Yarmouth Bloaters',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Broiled Ham',), ('Curried Chicken with Rice',), ('Two Eggs Boiled',), ('Eggs to order',), ('Tea',), ('Tea',), ('Mutton Chops',), ('Potato Chips',), (\"Lambs' Liver Saute\",), ('Tea',), ('Curried Veal and Rice',), ('Broiled Rashers of Bacon',), ('Cold: Ox Tongue',), ('French bread',), ('Marmalade',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Bananas',), ('Coffee Cake',), ('Cold Ham',), ('Fried Sausages, Mashed Potatoes',), ('Corned Beef Hash',), ('Split Rolls',), ('Eggs to order',), ('Eggs to order',), ('Tea',), ('Waffles',), ('Coffee',), ('Cocoa',), ('Quaker Oats',), ('Devilled Kidney',), ('Marmalade',), ('Fried Potatoes',), ('Pettijohn',), ('Hot Rolls',), ('Coffee',), ('Corn bread',), ('Fried Ham & Eggs',), ('French bread',), ('Pork Sausage and Mashed Potatoes',), ('Boiled Cracked Wheat',), ('Dry Toast',), ('Spanish Omelettes',), ('Rice Cakes',), ('Fried smelts',), ('English Muffins',), ('Calves Liver and Onions',), ('Marmalade',), ('Mutton Chops (to order)',), ('Jam',), ('Porterhouse Steak and Lamb Chops',), ('Honey in the Comb',), ('Jacket Potatoes',), ('Chocolate',), ('Curried Shrimps and Rice',), ('Corn bread',), ('Boiled Corn Meal with Cream',), ('Yarmouth Bloaters',), ('Maple Syrup',), ('Fried Fresh Fish',), ('Corned Beef Hash',), ('Honey',), ('Jam',), ('Fillet Steaks with Mushrooms',), ('Marmalade',), ('Tea',), ('Cocoa',), ('Tea',), ('Tongues and Sounds',), ('Hot Rolls',), ('Stewed Tripe',), ('Cornmeal Mush',), ('Coffee',), ('Cocoa',), ('Rice Cakes',), ('Breakfast Delight',), ('Diamond stew',), ('Fresh Comb Honey',), ('Flaked Rice',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fricassee of Turkey Wings Celery Sauce',), ('Fried Country Sausages and Lima Beans',), ('Rolled Oats',), ('Oxtail Ragout and Vegetables',), ('Yarmouth Bloaters',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Broiled Ham',), ('Lynnhavens oysters',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Frankfurter Sausages and Sauerkraut',), ('Cape Cods oysters',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Mashed Turnips',), ('Fried Liver & Bacon',), ('Stewed tomatoes',), ('Corned Beef Hash',), ('Oyster cocktail',), ('Boiled potatoes',), ('Potatoes',), ('Potatoes Saute',), ('Cherrystones clams',), ('Fried Ham',), ('Eclairs',), ('Boiled potatoes',), ('Pies',), ('Clam cocktail',), ('Potatoes Boiled',), ('Baked Shad Wine Sauce',), ('Corn bread',), ('Hot Biscuits',), (\"Calf's Liver and Bacon\",), ('Boiled Fish',), ('Broiled Lamb Kidneys and Bacon',), ('Corn bread',), ('Roast Leg of English Mutton',), ('Toast',), (\"Frogs' legs in every style\",), ('French bread',), (\"Roast Phil'a Chicken\",), ('Flannel Cakes',), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), (\"Roast Phil'a Chicken\",), (\"Lambs' Liver Saute\",), ('York Ham, Grilled',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sauterne 1ere',), ('St. Julien Sup\u00e8rieur',), ('Tripe Fritters',), ('Pontet Canet',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Niersteiner',), ('Hochheimer',), ('Corned Beef Hash',), ('Perrier Jou\u00ebt Special and Brut',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Eggs to order',), ('Clicquot Sec',), ('Mo\u00ebt & Chandon, White Seal',), ('Mo\u00ebt & Chandon, Brut',), ('Irroy Brut',), ('Fried New Potatoes',), ('Apollinaris',), ('Johannis',), ('Hot Rolls',), ('Corn bread',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Dry Toast',), ('Bisque of Crawfish',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('English Muffins',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('French bread',), ('New Asparagus, Cream Sauce',), ('Sherbert Roman',), ('Red Head Duck',), ('Rice Cakes',), ('Celery Salad',), ('Fancy Ice Cream',), ('Honey in the Comb',), (\"Broiled Shad Maitre d'Hotel\",), ('Fruit',), ('Cakes',), ('Marmalade',), ('Cheese',), ('Coffee',), ('Jam',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Oranges',), ('Bananas',), ('Apples',), ('Passion Fruit',), ('Fried Whiting',), ('Rolled Oats',), ('Oranges',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Bananas',), ('Curried Lamb and Rice',), ('Broiled Chicken on Toast',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Fried Bananas',), ('Boiled Mackerel',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Veal Cutlets Breaded',), ('Obst',), ('Hamburg Steak with Onions',), ('Nachtisch',), ('Pork Sausages',), ('Corned Beef Hash',), ('Fried Gar fish',), ('Fried Ham',), ('liver and bacon',), ('Eggs to order',), ('Potatoes Boiled',), ('Corn bread',), ('Hot Rolls',), ('Smoked Snapper',), ('English Muffins',), ('Toast',), ('Batter Cakes',), ('Tea',), ('Gemischtes Rahmeis',), ('Oat Meal Porridge',), ('Pork Cutlets',))", "rowcount": 1001, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Strawberries',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), ('Cream of Cauliflower Soup',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Raw Oysters',), ('Stewed tomatoes',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('Rockaways oysters',), ('Hafergrutze',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Grape fruit',), ('Oranges',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('Rissoles a la Merrill',), ('Lammkoteletten nach Villeroi',), ('SALTED ALMONDS',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Vegetable Soup',), ('Baked fish, wine sauce',), ('Pur\u00e9e of split peas aux croutons',), ('Consomm\u00e9 in cup',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Hot ribs of beef',), ('Doucette salad',), ('Stewed tomatoes',), ('New beets',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Old fashioned rice pudding',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Oranges',), ('Strawberries',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Grape fruit',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Stewed prunes',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges',), ('Oranges sliced',), ('Large pot of coffee',), ('Cup of coffee (served in small pot)',), ('Large pot of Oolong tea',), ('Pot of chocolate',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Sliced Bananas and Cream',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('French rolls',), ('Milk rolls',), ('Celery',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Mohren Suppe mit Sago',), ('Oranges',), ('Food',), ('Shreaded Wheat',), ('Clam cocktail',), ('Oyster cocktail',), ('Sardines',), ('Little Neck clams',), ('Stuffed olives',), ('Lalla Rookh Sorbet',), ('Celery',), ('Malaga grapes',), ('Pears',), ('Martineaus',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('Strawberry',), ('Oyster Bay asparagus',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Fruit',), ('Plain Omelette',), ('Canape, Martha',), ('Fruit',), ('Quaker Oats',), ('Cracked Wheat',), ('Puree of beans',), ('Fruits in Season',), ('Fried Flounders',), ('Oatmeal Porridge',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Bouillon in cup',), ('Queen olives',), ('Radishes',), ('Chow chow',), ('Panfish, Meuniere, German fried potatoes',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Philadelphia Cream Cheese',), ('Assorted cakes',), ('Scollops en caisse, Supreme',), ('Irish stew',), ('Marrow on toast, Bordelaise',), ('Lobster salad',), ('Potato salad',), ('Chicken salad',), ('Mashed potatoes',), ('Coffee',), ('Spinach with egg',), ('Boiled potatoes',), ('Baba au rhum',), ('Hot buns',), ('Tongue',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Stewed prunes',), ('Boiled rice',), ('Roast beef',), ('Sliced Bananas',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Sardines',), ('Chicken',), ('Apple Sauce',), ('Tea',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Coffee',), ('Milk',), ('Rolls',), ('Griddle cakes',), ('Baked Potatoes',), ('Porterhouse Steak',), ('Pommes de Terre a la Creme',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Onions plain or fried',), ('Sandwiches of all Kinds',), ('Small Steak',), ('Hamburger Steak',), ('Veal Chops',), ('Mutton Chops',), ('Pork Chops',), ('Ham & Eggs',), ('Bacon & Eggs',), ('Fried Liver',), ('German Pancake',), ('Omelettes',), ('Oysters & Clams',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters stewed',), ('Oysters box stew',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Fruit',), ('Oat Meal',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Fish cakes',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Griddle cakes',), ('Hominy',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Fish cakes',), ('Sirloin Steak',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Lyonnaise Potatoes',), ('Griddle cakes',), ('Marmalade',), ('Coffee',), ('Tomato Soup',), ('Baked Weakfish',), ('Oysters, Raw on the shell',), ('Half and Half Scallops & Oysters',), ('Oranges',), ('Rolled Oats',), ('Broiled Mullet',), ('Sirloin Steak with Mushrooms',), ('Pork Chops Piquante Sauce',), ('Broiled Chicken on Toast',), ('Calfs Liver and Onions',), ('Broiled Kidney with Bacon',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Waffles',), ('Split Rolls',), ('Hot Cakes',), ('Tea',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Oranges',), ('Oatmeal Porridge',), ('Smelts Meuniere',), ('Findon Haddock',), ('Oatmeal Porridge',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Cold Half Chicken and Ham ',), ('Cold Veal and Ham Pie',), ('Cold Roast Lamb',), ('Oranges',), ('Fried Flounder',), ('Grillirte Kuken',), ('Hoot Mon Mush',), ('Fillet Steaks aux Champignon',), ('Fruit',), ('Strawberries',), ('broiled shad',), ('Oysters, Milk Stew',), ('Oysters, Boston stew',), ('Oysters, Box Stew',), ('Oysters, Raw on the Half Shell',), ('Coffee',), ('Quaker Oats',), ('Boiled rice',), ('Smelts, Tartare sauce',), ('Findon Haddock',), ('Beef Steak, Saratoga chips',), ('Calves Liver & Bacon',), ('Sausage',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Sliced Pineapples',), ('Oatmeal Porridge',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Broiled Ham',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Cold Steak Pie',), ('Cold Mutton',), ('Cold Roast Beef',), ('Cold German Sausage',), ('Oysters, Boston Box Stew',), ('Oysters, Fry',), ('Oysters, Fry with Bacon',), ('Oatmeal',), ('Oyster Omelette',), ('Stewed Tripe',), ('Pork Sausage and Lyonnaise Potatoes',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Mock turtle soup',), ('Consomme Benoiton',), ('Filet Steaks aux Champignon',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Consomme San Remo',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Clear green turtle soup',), ('Corned Beef Hash',), ('Consomme Maceo',), ('Boiled rice',), ('Puree Mongol',), ('Broiled Rashers of Ham',), ('Consomme Printanier',), ('French fried potatoes',), ('Chicken Mulligatawny',), ('Split Rolls',), ('Oysters, Blue Point Stew',), ('French bread',), ('Corn bread',), ('Oysters, Crumb Fry',), ('English Beef soup',), ('Beef Stew',), ('Oysters, Blue Point Fry',), ('Filet of sole a la Horly',), ('broiled shad',), ('Diamond back terrapin',), ('Fruit',), ('Oat Meal',), ('Boiled rice',), ('Plain Omelette',), ('Fried Eggs',), ('Fried Plaice - Meuniere',), ('Kippered Herring',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Sausage & Mashed Potatoes',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fruits in Season',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Boiled potatoes',), ('Fried fish',), ('Egg, to order',), ('Diamond stew',), ('Jam',), ('Marmalade',), ('Tea',), ('Stewed prunes',), ('Clam Fritters',), ('Boiled Salt Mackerel',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Pork Chops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('English Mutton Chops',), ('Broiled Spring Chicken',), ('Sirloin Steak',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Plain Omelet',), ('Fried Indian Mush',), ('Baked Potatoes',), ('Saratoga Chips',), ('French fried potatoes',), ('Lyonnaise Potatoes',), ('Potatoes stewed in Cream',), ('Saute Potatoes',), ('Rye Bread',), ('French rolls',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn muffins',), ('Wheat Cakes, with Maple Syrup',), ('Coffee',), ('Tea',), ('Chocolate',), ('Cocoa',), ('Oatmeal Porridge',), ('Fruits in Season',), ('Corn Meal Mush',), ('Boiled',), ('Rolled Oats',), ('Scotch grouse en casserole',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Fruit',), ('Quaker Oats',), ('Scrambled Eggs',), ('Eggs au Beurre Noir',), ('Broiled Blue Fish',), ('Fish cakes',), ('Sirloin Steak, Fried French Chips',), ('Chicken Liver on Toast with Bacon',), ('Pork Chops, Sage & Onions',), ('Minced Veal a la Zingari',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Marmalade',), ('Coffee',), ('Salt Codfish, Spanish Style',), ('Marmalade',), ('Mashed potatoes',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Apples',), ('Passion Fruit',), ('Kippered Herrings',), ('Curried Pork and Rice',), ('Stewed Tripe with Cream sauce',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Chicken broth',), ('Consomme Macaroni',), ('Oat Meal',), ('Buckwheat Cakes',), ('Hard Boiled Egg',), ('Fruit',), ('Cream Cheese',), ('Plain Omelette',), ('Fried Eggs',), ('Hominy',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Kippered Herring',), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Calves Liver & Bacon',), ('Broiled Ham',), ('Grilled Mutton Chops',), ('Griddle cakes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Coffee',), ('Chocolate',), ('Cocoa',), ('Fruit',), ('Fish cakes',), ('Apfelsinen',), ('Apfel',), ('Maisgries',), ('Hafergrutze',), ('Snowflakes',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Salt Codfish, Spanish Style',), ('Fruit',), ('Fillet Steads with Mushrooms',), ('Poached Eggs on Toast',), ('Curried Prawns and Rice, Bombay Duck',), ('Eggs au Beurre Noir',), ('Lamb Chops, Broiled Plain',), ('Whiting - Meuniere',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Fish cakes',), ('Sirloin Steak - Fried Onions',), ('Broiled Ham',), ('Grape fruit',), (\"Lambs' Liver Saute\",), ('Breakfast',), ('Chicken Liver on Toast with Bacon',), ('Tripe Fritters',), ('Jambon Grille',), ('Minced Veal a la Zingari',), ('Eggs to order',), ('Dried Hash',), ('Corned Beef Hash',), ('Mutton Chops - Saute Potatoes',), ('Calfs Liver + Bacon',), ('Boiled rice',), ('Cold Smoked Tongue and Ham',), ('Buckwheat Cakes',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Marmalade',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Coffee',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Broiled Fresh Mackerel',), ('English Muffins',), ('Salt Cod, Egg Sauce',), ('Cracked Wheat with Fresh Milk',), ('Rice Cakes',), ('Shad roe and bacon',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Marmalade',), ('Jam',), ('Smoked Schnapper Butter Sce',), ('Yarmouth Bloaters',), ('Tea',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Coffee',), ('Cocoa',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Fruits in Season',), ('Frizzled Breakfast Bacon (to order)',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Saute of Kidney',), ('Corned Beef Hash',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('Coffee',), ('Scrambled Eggs and bacon',), ('liver and bacon',), ('Oranges',), ('Apples',), ('Oatmeal',), ('Fillet de Boeuf a la Parisienne',), ('Fried Chicken a la Maryland',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Kippered Herrings',), ('Broiled Ham',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Strawberries',), ('Hominy',), ('Jam',), ('Boiled potatoes',), ('Pork Sausage and Lyonnaise Potatoes',), ('Baked Apple Dumpling, Hard Sauce',), (\"Potato a la Maitre d'Hotel\",), ('Tea',), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Oysters, Roast in Shell',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Asparagus Omelette ',), ('rice pudding',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Swiss Rolls',), ('Fruit in Season',), ('Charlotte Russe',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Jam',), ('Lettuce',), ('Cum-quats',), ('Raisin cake',), ('Tea',), ('Apples',), ('Orange',), ('Fillet Steak ',), ('Oranges',), ('Grape fruit',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Ham omelette',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('China Teas',), ('Coffee',), ('Broiled Salt Mackerel',), ('Corned Beef Hash',), ('Apples',), ('Stewed Tripe Spanish',), ('Germea',), ('Eggs to order',), ('Eggs to order',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Butter Cakes with Maple Syrup',), ('Marmalade',), ('Eggs to order',), ('Bananas',), ('Hot Rolls',), ('Coffee ',), ('Kraftsuppe, Prinzessin Art',), ('Cracked Wheat',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Boiled rice',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Liver & Bacon',), ('Blumenkohl, hollandische Sauce',), ('Stewed Tripe Spanish',), ('Beef Steak, fried onions',), ('Cotelettes de Veau, Sauce Tomate',), ('Gratinierter Eierkuchen nach Mornay',), ('Boiled eggs',), ('Split Rolls',), ('Veal Cuttlets Lyonnaise',), ('Entenbraten, Bordeaux Sauce',), ('Fried Potatoes',), ('Pork Sausages, Snowflake Potatoes',), ('Mutton Chops & Potato Chips',), ('Hot Rolls',), (\"Lambs' Liver with Bacon\",), ('Mirabellen',), ('Coffee',), ('Tripe, Spanish Style',), ('Citronen-Auflauf',), ('Boiled rice',), ('Liver & Bacon',), ('Cape Horn Hash',), ('Broiled Rashers of Ham',), ('Fruit in Season',), ('Breakfast Rolls',), ('Corn Meal Fritters',), ('Corn bread',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Dry Toast',), ('Boiled Potatos',), ('Pikelets',), ('Rolled Oats',), ('Fried Whiting',), ('Hot Rolls',), ('Flannel Cakes',), ('Marmalade',), ('Tea',), ('Jam',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Tea',), ('Coffee',), ('Fillet Steak Fried Potatoes',), ('Cocoa',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Bacon to order',), ('Breakfast Rolls',), ('Wheat Cakes',), ('Marmalade',), ('Coffee',), ('Beef Steak & onions',), ('Fried Bananas',), ('Egg to Order',), ('Beef Steak and Champignons',), ('Boiled potato',), ('Currant Buns',), ('Cold Ham',), ('Boiled Cod',), ('Waffle',), ('Marmalade',), ('Broiled Spring Chicken',), ('Fruit',), ('Coffee',), ('Fruits in Season',), ('Boiled rice',), ('Tea',), ('Oatmeal Porridge',), ('Buckwheat Cakes',), ('Yarmouth Bloaters',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Broiled Ham',), ('Curried Chicken with Rice',), ('Two Eggs Boiled',), ('Eggs to order',), ('Tea',), ('Tea',), ('Mutton Chops',), ('Potato Chips',), (\"Lambs' Liver Saute\",), ('Tea',), ('Curried Veal and Rice',), ('Broiled Rashers of Bacon',), ('Cold: Ox Tongue',), ('French bread',), ('Marmalade',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Bananas',), ('Coffee Cake',), ('Cold Ham',), ('Fried Sausages, Mashed Potatoes',), ('Corned Beef Hash',), ('Split Rolls',), ('Eggs to order',), ('Eggs to order',), ('Tea',), ('Waffles',), ('Coffee',), ('Cocoa',), ('Quaker Oats',), ('Devilled Kidney',), ('Marmalade',), ('Fried Potatoes',), ('Pettijohn',), ('Hot Rolls',), ('Coffee',), ('Corn bread',), ('Fried Ham & Eggs',), ('French bread',), ('Pork Sausage and Mashed Potatoes',), ('Boiled Cracked Wheat',), ('Dry Toast',), ('Spanish Omelettes',), ('Rice Cakes',), ('Fried smelts',), ('English Muffins',), ('Calves Liver and Onions',), ('Marmalade',), ('Mutton Chops (to order)',), ('Jam',), ('Porterhouse Steak and Lamb Chops',), ('Honey in the Comb',), ('Jacket Potatoes',), ('Chocolate',), ('Curried Shrimps and Rice',), ('Corn bread',), ('Boiled Corn Meal with Cream',), ('Yarmouth Bloaters',), ('Maple Syrup',), ('Fried Fresh Fish',), ('Corned Beef Hash',), ('Honey',), ('Jam',), ('Fillet Steaks with Mushrooms',), ('Marmalade',), ('Tea',), ('Cocoa',), ('Tea',), ('Tongues and Sounds',), ('Hot Rolls',), ('Stewed Tripe',), ('Cornmeal Mush',), ('Coffee',), ('Cocoa',), ('Rice Cakes',), ('Breakfast Delight',), ('Diamond stew',), ('Fresh Comb Honey',), ('Flaked Rice',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fricassee of Turkey Wings Celery Sauce',), ('Fried Country Sausages and Lima Beans',), ('Rolled Oats',), ('Oxtail Ragout and Vegetables',), ('Yarmouth Bloaters',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Broiled Ham',), ('Lynnhavens oysters',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Frankfurter Sausages and Sauerkraut',), ('Cape Cods oysters',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Mashed Turnips',), ('Fried Liver & Bacon',), ('Stewed tomatoes',), ('Corned Beef Hash',), ('Oyster cocktail',), ('Boiled potatoes',), ('Potatoes',), ('Potatoes Saute',), ('Cherrystones clams',), ('Fried Ham',), ('Eclairs',), ('Boiled potatoes',), ('Pies',), ('Clam cocktail',), ('Potatoes Boiled',), ('Baked Shad Wine Sauce',), ('Corn bread',), ('Hot Biscuits',), (\"Calf's Liver and Bacon\",), ('Boiled Fish',), ('Broiled Lamb Kidneys and Bacon',), ('Corn bread',), ('Roast Leg of English Mutton',), ('Toast',), (\"Frogs' legs in every style\",), ('French bread',), (\"Roast Phil'a Chicken\",), ('Flannel Cakes',), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), (\"Roast Phil'a Chicken\",), (\"Lambs' Liver Saute\",), ('York Ham, Grilled',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sauterne 1ere',), ('St. Julien Sup\u00e8rieur',), ('Tripe Fritters',), ('Pontet Canet',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Niersteiner',), ('Hochheimer',), ('Corned Beef Hash',), ('Perrier Jou\u00ebt Special and Brut',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Eggs to order',), ('Clicquot Sec',), ('Mo\u00ebt & Chandon, White Seal',), ('Mo\u00ebt & Chandon, Brut',), ('Irroy Brut',), ('Fried New Potatoes',), ('Apollinaris',), ('Johannis',), ('Hot Rolls',), ('Corn bread',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Dry Toast',), ('Bisque of Crawfish',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('English Muffins',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('French bread',), ('New Asparagus, Cream Sauce',), ('Sherbert Roman',), ('Red Head Duck',), ('Rice Cakes',), ('Celery Salad',), ('Fancy Ice Cream',), ('Honey in the Comb',), (\"Broiled Shad Maitre d'Hotel\",), ('Fruit',), ('Cakes',), ('Marmalade',), ('Cheese',), ('Coffee',), ('Jam',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Oranges',), ('Bananas',), ('Apples',), ('Passion Fruit',), ('Fried Whiting',), ('Rolled Oats',), ('Oranges',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Bananas',), ('Curried Lamb and Rice',), ('Broiled Chicken on Toast',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Fried Bananas',), ('Boiled Mackerel',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Veal Cutlets Breaded',), ('Obst',), ('Hamburg Steak with Onions',), ('Nachtisch',), ('Pork Sausages',), ('Corned Beef Hash',), ('Fried Gar fish',), ('Fried Ham',), ('liver and bacon',), ('Eggs to order',), ('Potatoes Boiled',), ('Corn bread',), ('Hot Rolls',), ('Smoked Snapper',), ('English Muffins',), ('Toast',), ('Batter Cakes',), ('Tea',), ('Gemischtes Rahmeis',), ('Oat Meal Porridge',), ('Pork Cutlets',))", "rowcount": 1001, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 373, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Hafergrutze',), ('Apfelsinen',), ('Milchreis',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Hot ribs of beef',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Grilled Mutton Chops',), ('Cold Steak Pie',), ('Eggs to order',), ('Grilled Mutton Chops',), ('Eggs as Ordered',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Apfelsinen',), ('Hafergrutze',), ('Eggs to order',), ('Fried & Boiled Potatoes',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Scrambled Eggs and bacon',), ('Fillet de Boeuf a la Parisienne',), ('Bouchees aux Macaroni',), ('Roast Goose & Apple Sauce',), ('Mashed Pumpkins',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Swiss Rolls',), ('Cum-quats',), ('Fillet Steak ',), ('MacLaren Cheese',), ('China Teas',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Cotelettes de Veau, Sauce Tomate',), ('A. A. Oats with Fresh Milk',), ('Egg to Order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Pork Sausage and Mashed Potatoes',), ('Eggs to order',), (\"Broiled Shad Maitre d'Hotel\",), ('Obst',), ('Nachtisch',), ('Eggs to order',), ('Batter Cakes',), ('Gemischtes Rahmeis',), ('Pork Cutlets',))", "rowcount": 60, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Hafergrutze',), ('Apfelsinen',), ('Milchreis',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Hot ribs of beef',), (\"Consomme aux Quenelle's\",), ('Milk rice',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Grilled Mutton Chops',), ('Cold Steak Pie',), ('Eggs to order',), ('Grilled Mutton Chops',), ('Eggs as Ordered',), ('Grilled Mutton Chops',), ('Grilled Mutton Chops',), ('Apfelsinen',), ('Hafergrutze',), ('Eggs to order',), ('Fried & Boiled Potatoes',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Scrambled Eggs and bacon',), ('Fillet de Boeuf a la Parisienne',), ('Bouchees aux Macaroni',), ('Roast Goose & Apple Sauce',), ('Mashed Pumpkins',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Swiss Rolls',), ('Cum-quats',), ('Fillet Steak ',), ('MacLaren Cheese',), ('China Teas',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Cotelettes de Veau, Sauce Tomate',), ('A. A. Oats with Fresh Milk',), ('Egg to Order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Pork Sausage and Mashed Potatoes',), ('Eggs to order',), (\"Broiled Shad Maitre d'Hotel\",), ('Obst',), ('Nachtisch',), ('Eggs to order',), ('Batter Cakes',), ('Gemischtes Rahmeis',), ('Pork Cutlets',))", "rowcount": 60, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 374, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'None' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 375, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 376, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((14,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((14,), (26,), (17,), (6,), (14,), (8,), (3,), (20,), (1,), (22,), (15,), (19,), (21,), (21,))", "rowcount": 14, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 377, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((48,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((48,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 378, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Andrea', 'Simons'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 379, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'shipment.ship_date' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 380, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'PRIMARY KEY (cust_id)' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 381, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26190.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 382, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((880695.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 383, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'shipment.ship_date' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 384, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 385, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((538,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION shipping.to_timestamp does not exist')", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 386, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((59,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.7.30-1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 387, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION shipping.STRFTIME does not exist')", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 388, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((14543.866171003718,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(*) AS proportion FROM shipment AS t1 INNER JOIN driver AS...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 389, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.666545970248333,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `shipment`\\\\nColumns:\\\\n(`ship_id`, integer, primary key)\\\\n(`cust_id`,...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 390, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((50,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 391, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57.25190839694657,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `shipment`\\\\nColumns:\\\\n(`ship_id`, BIGINT, primary key)\\\\n(`cust_id`, ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 392, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `pages`\\\\nColumns:\\\\n(`pid`, BIGINT, primary key)\\\\n(`lid`, BIGINT)\\\\n(`...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 393, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('1206408'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('1206407'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 394, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Consider the Lilies',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `book`\\\\nColumns:\\\\n(`book_id`, integer, primary key)\\\\n(`title`, text)...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 395, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 396, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 397, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 398, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((25.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(*) AS proportion FROM book JOIN book_author ON book.book_...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 399, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Illuminati', 'Thomas Nelson'), ('The Season: A Candid Look at Broadway', 'Limelight'), ('Working Effectively with Legacy Code', 'Prentice Hall'), ('Programming in C', 'Sams'), (\"PHP and MySQL Web Development (Developer's Library)\", 'Sams'), (\"The Bonesetter's Daughter\", 'Harper Perennial'), ('Naked Empire (Sword of Truth  #8)', 'Voyager'), ('The Real Trial of Oscar Wilde', 'Harper Perennial'), ('The Opposite of Fate', 'Harper Perennial'), ('Wild Swans: Three Daughters of China', 'Harper Perennial'), ('Reading Lolita in Tehran', 'Fourth Estate'), ('Where Rainbows End', 'HarperCollins'), ('The Known World', 'Harper Perennial'), ('Going Postal (Discworld  #33)', 'Harper'), ('After', 'HarperTeen'), ('Barracuda 945 (Admiral Arnold Morgan  #6)', 'HarperTorch'), ('Behaving Like Adults', 'William Morrow Paperbacks'), ('Letters from the Earth: Uncensored Writings', 'Harper Perennial Modern Classics'), ('Murder Unleashed (Jack and Jamie #2)', 'Avon Books'), ('To Collar a Killer (Jack and Jamie #3)', 'Avon'), ('A Faint Cold Fear (Grant County  #3)', 'Harper'), ('City of the Beasts (Eagle and Jaguar  #1)', 'Rayo'), ('Brave New World and Brave New World Revisited', 'HarperCollins'), ('How to Make Love Like a Porn Star: A Cautionary Tale', 'It Books'), ('1421: The Year China Discovered America', 'Harper Perennial (NYC)'), ('Nimitz Class (Admiral Arnold Morgan  #1)', 'Harper Paperbacks'), ('Built to Last: Successful Habits of Visionary Companies', 'Harper Business'), ('Fluke: Or  I Know Why the Winged Whale Sings', 'Harper'), ('The Perennial Philosophy', 'Harper Perennial Modern Classics'), ('Dead Witch Walking (The Hollows  #1)', 'HarperTorch'), ('Sabriel (Abhorsen  #1)', 'Eos'), ('Slider', 'It Books'), ('The Way the Crow Flies', 'Harper Perennial'), ('Great Short Works of Herman Melville', 'Harper Perennial Modern Classics'), ('El reino del drag\u00f3n de oro', 'HarperCollins Espanol'), ('Quicksilver (The Baroque Cycle  #1)', 'HarperCollins Perennial'), ('Beautiful Boys (Weetzie Bat  #4-5)', 'HarperTeen'), (\"Since You're Leaving Anyway  Take Out the Trash (Domestic Equalizers #1)\", 'Avon'), ('Outposts: Journeys to the Surviving Relics of the British Empire', 'Harper Perennial'), ('Darkest Hour (The Mediator  #4)', 'HarperCollins'), ('Great Short Works of Fyodor Dostoevsky', 'Harper Perennial Modern Classics'), ('The Collected Letters of C.S. Lewis  Volume 1: Family Letters  1905-1931', 'HarperOne'), ('Bloodsucking Fiends (A Love Story  #1)', 'HarperCollins'), ('Island of the Sequined Love Nun', 'Harper Perennial'), ('The Lust Lizard of Melancholy Cove (Pine Cove  #2)', 'William Morrow Paperbacks'), ('One Hundred Years of Solitude', 'Harper Perennial'), ('Wicked: The Life and Times of the Wicked Witch of the West', 'William Morrow Paperbacks'), ('This Rough Magic', 'HarperTorch'), ('Airs Above the Ground', 'HarperTorch'), ('The Known World', 'Harper'), ('One Hundred Years of Solitude', 'Harper'), ('Journey Into the Void (Sovereign Stone  #3)', 'Harper Voyager'), (\"Harrison's Principles of Internal Medicine\", 'McGraw-Hill Medical Publishing'), ('Advanced Statistics Demystified', 'McGraw-Hill Education'), ('Slim to None: A Journey Through the Wasteland of Anorexia Treatment', 'McGraw-Hill Education'), ('The Last Dance: Encountering Death and Dying', 'McGraw-Hill Humanities/Social Sciences/Languages'), ('The Toy Maker: The Life and Times of Inventor Frank Hornby', 'Ebury Press'), ('The Confessions of Nat Turner', 'Vintage Classics'), ('The Time of Our Singing', 'Vintage'), ('Blood Canticle (The Vampire Chronicles #10)', 'Arrow'), ('Like a Charm', 'Arrow'), ('Bringing Down The House', 'Arrow'), ('Earthly Powers', 'Vintage Classics'), ('The Witching Hour (Lives of the Mayfair Witches  #1)', 'Arrow'), ('Lasher (Lives of the Mayfair Witches  #2)', 'Arrow Books'), ('Women Who Love Too Much', 'Arrow'), ('Physics: for Scientists and Engineers with Modern Physics', 'Benjamin-Cummings Publishing Company'), ('Introduction to the Philosophies of Research and Criticism in Education and the Social Sciences', 'Pearson'), ('Criminal Investigation: The Art and the Science', 'Prentice Hall'), ('Java: An Introduction to Problem Solving and Programming', 'Prentice Hall'), ('The Normans in Sicily: The Normans in the South 1016-1130 and the Kingdom in the Sun 1130-1194', 'Penguin Global'), ('The Nibelungenlied', 'Penguin Classics'), ('Germinal', 'Penguin Classics'), ('Metamorphoses', 'Penguin'), ('Sentimental Education', 'Penguin Classics'), ('Dead Souls', 'Penguin Classics'), ('The Nicomachean Ethics', 'Penguin Classics'), ('The Teeth of the Tiger (Jack Ryan Universe  #12)', 'Penguin Books Ltd.'), ('Stiff: The Curious Lives of Human Cadavers', 'Penguin'), ('You Shall Know Our Velocity', 'Penguin'), ('Citizens: A Chronicle of the French Revolution', 'Penguin'), ('Drop City', 'Penguin Books'), ('Freedom Evolves', 'Penguin'), ('Lost in a Good Book (Thursday Next  #2)', 'Penguin Books'), ('River of Shadows: Eadweard Muybridge and the Technological Wild West', 'Penguin Books'), ('The Life of Graham Greene  Vol. 1: 1904-1939', 'Penguin Books'), ('Outcast of Redwall (Redwall  #8)', 'Firebird'), ('Triss (Redwall  #15)', 'Firebird'), ('In the Land of Time: And Other Fantasy Tales', 'Penguin Classics'), ('The Portable John Adams', 'Penguin Books'), ('Paris: After the Liberation 1944-1949', 'Penguin Books'), (\"Swann's Way (In Search of Lost Time  #1)\", 'Penguin Classics'), ('This Lullaby', 'Speak'), ('The Well of Lost Plots (Thursday Next #3)', 'Penguin Books'), ('Anna Karenina', 'Penguin Classics'), ('The Flanders Panel', 'Mariner Books'), ('The Seville Communion', 'Mariner Books'), ('The Liberated Bride', 'Mariner Books'), ('Life of Pi', 'Mariner Books / Harvest Books'), ('Pride and Prejudice', 'Oxford University Press'), ('Sense and Sensibility', 'Oxford University Press'), ('Purgatorio (La Divina Commedia #2)', 'Oxford University Press USA'), ('The Oresteia', 'Oxford University Press USA'), ('American Legal History: Cases and Materials', 'Oxford University Press USA'), ('Modern Latin America', 'Oxford University Press USA'), ('The Selected Journals Of L.M. Montgomery  Vol. 5: 1935-1942', 'Oxford University Press USA'), ('Infants  Children  and Adolescents (MyDevelopmentLab Series)', 'Allyn & Bacon'), ('The Plot Against America', 'Jonathan Cape'), ('Lost Prophet: The Life and Times of Bayard Rustin', 'University of Chicago Press'), ('Directing the Documentary', 'Focal Press'), ('Desde mi cielo', 'Debolsillo'), ('Breach of Promise', 'Zondervan'), (\"Moloka'i (Moloka'i #1)\", \"St. Martin's Griffin\"), ('The New York Times Guide to Essential Knowledge', \"St. Martin's Press\"), ('Something Borrowed (Darcy & Rachel  #1)', \"St. Martin's Press\"), (\"Marching Powder: A True Story of Friendship  Cocaine  and South America's Strangest Jail\", \"St. Martin's Griffin\"), ('All Things Wise and Wonderful', \"St. Martin's Griffin\"), ('Sideways', \"St. Martin's Griffin\"), ('Rereading America: Cultural Contexts for Critical Thinking and Writing', 'Bedford Books'), ('The Interpreter', 'St. Martins Press'), ('Galatea 2.2', 'Picador'), ('Mason & Dixon', 'Picador USA'), ('The River at the Center of the World: A Journey Up the Yangtze & Back in Chinese Time', 'Picador'), ('Primo Levi: A Life', 'Picador'), ('Dry', 'Picador USA'), ('A Home at the End of the World', 'Picador'), ('Faking It (Dempseys  #2)', \"St. Martin's Paperbacks\"), ('Welcome to Temptation (Dempseys  #1)', \"St. Martin's Paperbacks\"), ('Crazy For You', \"St. Martin's Paperbacks\"), ('Full Blast (Full #4)', \"St. Martin's Paperbacks\"), ('The Awakening (Vampire Huntress  #2)', \"St. Martin's Paperbacks\"), ('The Tristan Betrayal', \"St. Martin's Paperbacks\"), ('The Firefly', \"St. Martin's Paperbacks\"), ('As the Crow Flies', \"St. Martin's Paperbacks\"), ('The Lovely Bones', 'Back Bay Books'), ('An Unfinished Life: John F. Kennedy  1917-1963', 'Back Bay Books'), ('The Necessary Shakespeare', 'Longman Publishing Group'), ('Marching Powder', 'Pan MacMillan'), ('The Battle Of Corrin (Legends of Dune  #3)', 'Hodder & Stoughton Ltd'), ('The Dark Tower (The Dark Tower #7)', 'Hodder & Stoughton'), ('Girl Meets Ape', 'Coronet'), ('Rise to Rebellion', 'Ballantine Books'), ('Standing in the Rainbow (Elmwood Springs  #2)', 'Ballantine Books'), ('The Probable Future', 'Ballantine Books'), ('The Bloody Crown of Conan (Conan the Cimmerian  #2)', 'Del Rey Ballantine Random House'), (\"Dragon's Kin (Pern  #17)\", 'Del Rey'), ('Yoda: Dark Rendezvous', 'Del Rey'), ('The Hunchback of Notre-Dame', 'Modern Library'), ('We Were Soldiers Once... and Young: Ia Drang - The Battle that Changed the War in Vietnam', 'Presidio Press'), ('The Star Wars Trilogy', 'Del Rey'), ('The Guns of August', 'Ballantine Books'), ('The Fortunate Pilgrim', 'Ballantine Books'), ('Interview with the Vampire (The Vampire Chronicles  #1)', 'Ballantine Books'), ('The Vampire Lestat (The Vampire Chronicles  #2)', 'Ballantine Books'), ('Back When We Were Grownups', 'Ballantine Books'), ('Narrative of the Life of Frederick Douglass  an American Slave / Incidents in the Life of a Slave Girl', 'Modern Library'), ('Trump: The Art of the Deal', 'Ballantine Books'), ('Jennifer Government', 'Abacus'), ('Slightly Settled (Slightly  #2)', 'Red Dress Ink'), ('Monkey Business', 'Red Dress Ink'), (\"Girls' Night In\", 'Red Dress Ink'), ('Double-Cross (Athena Force #4)', 'Silhouette Bombshell'), (\"Elphame's Choice (Partholon  #4)\", 'Luna Books'), ('The Fairy Godmother (Five Hundred Kingdoms  #1)', 'Luna Books'), ('Sylvester', 'Harlequin'), ('Selected Verse', 'Farrar Straus and Giroux'), ('The Iliad', 'Farrar Straus and Giroux'), ('The Fixer', 'Farrar Straus and Giroux'), ('My Life', 'Knopf Publishing Group'), ('Sons of Mississippi: A Story of Race and Its Legacy', 'Vintage'), ('The Elegant Universe: Superstrings  Hidden Dimensions  and the Quest for the Ultimate Theory', 'Vintage Books USA'), ('The Adolescent', 'Vintage'), ('The Life and Opinions of Tristram Shandy  Gentleman', 'Modern Library'), ('Shutter Island', 'HarperTorch'), (\"Lamb: The Gospel According to Biff  Christ's Childhood Pal\", 'William Morrow / HarperCollins / Harper Perennial'), ('The Body in the Lighthouse', 'Avon'), ('The Cloud Atlas', 'Dial Press'), ('Coming of Age in Mississippi: The Classic Autobiography of a Young Black Girl in the Rural South', 'Delta'), ('A Painted House', 'Bantam'), ('Sailing the Wine-Dark Sea: Why the Greeks Matter', 'Anchor'), ('Good Faith', 'Anchor Books'), ('Will in the World: How Shakespeare Became Shakespeare', 'W.W. Norton & Company (NY/London)'), ('The Annotated Brothers Grimm', 'W. W. Norton Company'), ('The New Annotated Sherlock Holmes: The Complete Short Stories', 'W. W. Norton & Company'), ('The Complete Aubrey/Maturin Novels (5 Volumes)', 'W. W. Norton Company'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('Moneyball: The Art of Winning an Unfair Game', 'W. W. Norton Company'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('Paradise Lost', 'W. W. Norton & Company'), (\"Anton Chekhov's Selected Plays\", 'W. W. Norton & Company'), ('A History of Modern Europe  Volume 2: From the French Revolution to the Present', 'W. W. Norton & Company'), ('Madame Bovary (Critical Editions)', 'W.W. Norton & Company'), ('Raise the Titanic! (Dirk Pitt  #4)', \"G.P. Putnam's Sons\"), ('For Kicks', \"G.P. Putnam's Sons\"), ('Field of Thirteen', \"G.P. Putnam's Sons\"), ('The Bad Place', 'Berkley'), ('Wild Horses', \"G.P. Putnam's Sons\"), (\"Jane's Warlord (Warlord #1)\", 'Berkley Sensation'), ('Iceberg (Dirk Pitt  #3)', 'Berkley Books'), ('The Mediterranean Caper (Dirk Pitt  #2)', \"G.P. Putnam's Sons\"), ('10 lb Penalty', \"G.P. Putnam's Sons\"), ('Goddess of Spring (Goddess Summoning  #2)', 'Berkley Sensation'), ('Guilty Pleasures (Anita Blake  Vampire Hunter  #1)', 'Berkley'), (\"Death's Acre: Inside the Legendary Forensic Lab the Body Farm Where the Dead Do Tell Tales\", 'Berkley'), ('Blow Fly (Kay Scarpetta  #12)', 'Berkley'), ('Master of the Night (Mageverse #1)', 'Berkley Sensation'), (\"Wild Card (Tom Clancy's Power Plays  #8)\", 'Berkley'), ('Trojan Odyssey (Dirk Pitt  #17)', \"G.P. Putnam's Sons\"), ('Disordered Minds', 'Berkley'), ('Decider', \"G.P. Putnam's Sons\"), ('Murder on the Orient Express (Hercule Poirot  #10)', 'Berkley'), ('The Body Farm (Kay Scarpetta  #5)', 'Berkley'), (\"Splinter Cell (Tom Clancy's Splinter Cell  #1)\", 'Berkley'), ('Atlantis Found (Dirk Pitt  #15)', 'Berkley Trade'), ('Birds Without Wings', 'Secker'), ('Harry Potter and the Order of the Phoenix (Harry Potter  #5)', 'Scholastic Inc.'), ('Harry Potter and the Prisoner of Azkaban (Harry Potter  #3)', 'Scholastic Inc.'), ('Harry Potter Boxed Set  Books 1-5 (Harry Potter  #1-5)', 'Scholastic'), (\"Trickster's Choice (Daughter of the Lioness  #1)\", 'Scholastic Press'), ('Shopaholic Takes Manhattan (Shopaholic  #2)', 'Dell Publishing Company'), ('Shopaholic Ties the Knot (Shopaholic  #3)', 'Dell Publishing Company'), ('Masterpieces: The Best Science Fiction of the Twentieth Century', 'Ace Books'), ('Neuromancer', 'Ace'), ('The Big Bad Wolf  (Alex Cross  #9)', 'Grand Central Publishing'), ('Still Life With Crows (Pendergast  #4)', 'Grand Central Publishing'), ('Gloriana', 'Aspect'), ('Lost Boy Lost Girl', 'Ballantine Books'), ('No Second Chance', 'Dutton Books'), ('A Whole Lotta Love', 'Signet'), ('Night Over Water', 'NAL'), ('Monkeewrench (Monkeewrench  #1)', \"G.P. Putnam's Sons\"), (\"Mayada  Daughter of Iraq: One Woman's Survival Under Saddam Hussein\", 'Berkley Books'), ('The Agony and the Ecstasy: A Biographical Novel of Michelangelo', 'NAL'), ('Four Past Midnight', 'Signet'), ('The Anodyne Necklace (Richard Jury  #3)', 'Onyx'), ('The Dirty Duck (Richard Jury  #4)', 'Onyx'), ('Jerusalem Inn (Richard Jury  #5)', 'Onyx'), ('Wuthering Heights', 'Signet Classics'), ('Little Women', 'Signet Classics'), ('The Sea-Wolf and Selected Stories', 'Signet Classics'), ('Travels of Marco Polo', 'Signet'), ('Lies & the Lying Liars Who Tell Them: A Fair & Balanced Look at the Right', 'Plume Books'), ('Stolen (Women of the Otherworld  #2)', 'Plume'), ('Bitten (Otherworld  #1)', 'Plume Books'), ('Atlas Shrugged', 'NAL'), ('Astronomy: A Self-Teaching Guide', 'John Wiley & Sons'), ('The Philosophy of History', 'Dover Publications'), ('Anna Karenina', 'Dover Publications'), ('Love Bites (Argeneau #2)', 'Love Spell'), (\"Aphrodite's Flame (Superhero Central #4)\", 'Love Spell'), ('Cerulean Sins (Anita Blake  Vampire Hunter  #11)', 'Berkley Books'), ('After Glow (Ghost Hunters  #2)', 'Jove Books'), ('Cravings (Undead #1.5; Moon #3.5)', 'Berkley Books'), ('Sunshine', 'Jove'), ('Bite (Anita Blake  Vampire Hunter  #8.5; Sookie Stackhouse  #5.1; Undead  #2.5; Mageverse  #1.5)', 'Jove'), ('The Shell Seekers', 'Gramercy Books'), ('A History of God: The 4 000-Year Quest of Judaism  Christianity  and Islam', 'Gramercy Books'), ('Pathologies of Power: Health  Human Rights and the New War on the Poor', 'University of California Press'), ('A First Course in String Theory', 'Cambridge University Press'), ('Data Structures and Algorithms in C++', 'Course Technology'), ('Deception Point', 'Corgi Books'), ('Not Without My Daughter', 'Transworld Publishers Ltd'), ('Inferno', 'Bantam Books'), ('Purgatorio (The Divine Comedy  #2)', 'Bantam Books'), ('Light (Kefahuchi Tract  #1)', 'Spectra'), ('The Face', 'Bantam'), ('The Murder Stone', 'Bantam'), ('Dime Store Magic (Women of the Otherworld  #3)', 'Bantam Spectra'), ('Industrial Magic (Women of the Otherworld #4)', 'Bantam Spectra'), ('Beach Girls', 'Bantam'), ('Foundation and Earth (Foundation #5)', 'Spectra'), ('The Devil in the White City: Murder  Magic and Madness at the Fair that Changed America', 'Bantam Press'), ('The Kid Stays in the Picture', 'Faber & Faber'), ('The Avignon Quintet: Monsieur  Livia  Constance  Sebastian and Quinx', 'Faber & Faber'), ('High Performance MySQL: Optimization  Backups  Replication & Load Balancing', \"O'Reilly Media\"), ('BSD Hacks', \"O'Reilly Media\"), ('iMovie 4 & iDVD: The Missing Manual: The Missing Manual', 'Pogue Press'), ('Rising Sun', 'Turtleback Books'), (\"Charlie Wilson's War: The Extraordinary Story of the Largest Cover Operation in History\", 'Turtleback Books'), ('Queen of Scots: The True Life of Mary Stuart', 'Houghton Mifflin'), ('The Best American Mystery Stories 2004', 'Mariner Books'), ('The Best American Nonrequired Reading 2004', 'Houghton Mifflin'), ('The Silmarillion', 'Houghton Mifflin Company'), ('The Earth and Its Peoples: A Global History  Volume C: Since 1750', 'Cengage Learning'), ('Fabulous Small Jews', 'Mariner Books'), ('Reefer Madness: Sex  Drugs  and Cheap Labor in the American Black Market', 'Mariner Books'), ('Dark Star Safari: Overland from Cairo to Cape Town', 'Mariner Books'), ('Natural Health  Natural Medicine', 'Mariner Books'), ('The Lord of the Rings (The Lord of the Rings  #1-3)', 'Houghton Mifflin Harcourt'), ('The Fellowship of the Ring (The Lord of the Rings  #1)', 'Houghton Mifflin Company'), ('In the Shadow of Young Girls in Flower (In Search of Lost Time  #2)', 'Viking Adult'), ('How to Stop Worrying and Start Living', 'Gallery Books'), ('Sharp Edges', 'Pocket Star Books'), ('Four & Twenty Blackbirds (Bardic Voices  #4)', 'Baen Books'), ('Sonnets', 'Simon Schuster'), ('The Color Purple', 'Pocket'), ('What Is Ancient Philosophy?', 'Belknap Press'), ('Magic Circles: The Beatles in Dream and History', 'Harvard University Press'), ('The Killer Angels: A Novel of the Civil War (The Civil War Trilogy  #2)', 'Modern Library'), ('The Collected Autobiographies of Maya Angelou', 'Modern Library'), ('Mortals', 'Vintage'), (\"Mary Stewart's Merlin Trilogy (Arthurian Saga  #1-3)\", 'Harper Voyager'), ('Nancy Drew: Girl Detective: #1-4', 'Aladdin'), ('Walden', 'Princeton University Press'), ('Shamanism: Archaic Techniques of Ecstasy', 'Princeton University Press'), ('Mary Queen of Scots and the Murder of Lord Darnley', 'Pimlico'), ('Robbins and Cotran Review of Pathology', 'Saunders'), ('Hell House', 'Severn House Publishers'), ('Code Complete', 'Microsoft Press'), (\"Zolar's Encyclopedia and Dictionary of Dreams: Fully Revised and Updated for the 21st Century\", 'Atria Books'), ('Authentic Happiness: Using the New Positive Psychology to Realize Your Potential for Lasting Fulfillment', 'Atria Books'), ('Brick Lane', 'Scribner'), (\"Will You Miss Me When I'm Gone? The Carter Family and Their Legacy in American Music\", 'Simon Schuster'), ('Wrapped in Rainbows: The Life of Zora Neale Hurston', 'Scribner'), ('Plan of Attack', 'Simon & Schuster'), ('Frankenstein', 'Kaplan Publishing'), ('The Path Between the Seas: The Creation of the Panama Canal  1870-1914', 'Simon Schuster'), ('The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change', 'Free Press'), ('The Other Boleyn Girl', 'Atria Books'), ('The Good Earth (House of Earth  #1)', 'Washington Square Press'), ('Plain Truth', 'Atria Books'), ('The Coffin Dancer (Lincoln Rhyme  #2)', 'Simon & Schuster'), ('The Second Time Around', 'Pocket Books'), ('Nighttime Is My Time', 'Simon & Schuster Adult Publishing Group'), ('Black Cat (Gemini  #2)', 'Pocket Books'), ('The Vanished Man (Lincoln Rhyme  #5)', 'Pocket Books'), ('The Footprints of God', 'Pocket Star Books'), ('The Price of Pleasure (Sutherland Brothers  #2)', 'Pocket Books'), ('Dead I Well May Be (Dead Trilogy #1)', 'Pocket Books'), ('Romeo and Juliet', 'Simon Schuster'), ('Othello', 'Simon Schuster'), ('Underworld: Blood Enemy (Underworld  #2)', 'Pocket Star'), ('King Lear', 'Simon Schuster'), ('Othello', 'Simon Schuster'), ('Richard III', 'Simon Schuster'), ('Easy Prey (Lucas Davenport  #11)', 'Simon & Schuster'), ('Certain Prey (Lucas Davenport  #10)', 'Simon & Schuster'), ('Henry V', 'Washington Square Press'), ('The Count of Monte Cristo', 'Simon Schuster'), ('The Scarlet Letter', 'Simon & Schuster'), ('Frankenstein  or the Modern Prometheus', 'Pocket Books'), ('A Tale of Two Cities', 'Simon Schuster'), ('The Awakening and Selected Stories', 'Simon Schuster'), ('The Scarlet Pimpernel', 'Simon Schuster'), ('Twisted: The Collected Short Stories', 'Pocket Books'), ('Dracula', 'Walker Books Ltd'), ('To the Nines (Stephanie Plum  #9)', \"St. Martin's Press\"), ('The Dream Kingdom (The Morland Dynasty  #26)', 'Little Brown Book Group'), ('The Bourne Ultimatum (Jason Bourne  #3)', 'Orion'), ('The Icarus Agenda', 'Orion Books'), ('Trevayne', 'Orion'), ('The Shadow of the Wind', 'Phoenix'), ('The Jester', 'Headline'), ('Falling for You', 'Headline Review'), ('Joust (Dragon Jousters  #1)', 'DAW'), ('The War of the Flowers', 'DAW'), (\"Exile's Valor (Heralds of Valdemar  #7)\", 'DAW'), ('The DC Comics Encyclopedia', 'DK Publishing'), ('Lemon Meringue Pie Murder (Hannah Swensen  #4)', 'Kensington'), ('Corvette: Fifty Years', 'Motorbooks'), ('PHP and MySQL for Dummies', 'For Dummies'), ('ebay Timesaving Techniques for Dummies', 'Wiley'), ('Starting an eBay Business for Dummies', 'Wiley'), ('Dreamer of Dune: The Biography of Frank Herbert', 'Tor Books'), ('Maps in a Mirror: The Short Fiction of Orson Scott Card', 'Orb Books'), ('Sleeping in Flame (Answered Prayers  #2)', 'Orb Books'), ('Wasteland of Flint', 'Tor Books'), ('Naked Empire (Sword of Truth  #8)', 'Tor Books'), ('Wolfskin (Saga of the Light Isles  #1)', 'Tor Books'), ('New Threads in the Pattern: The Great Hunt  Part 2 (Wheel of Time  #2-2)', 'Starscape'), ('A Short History of Nearly Everything', 'Broadway Books'), ('Babyville', 'Broadway Books'), ('The Full Matilda', 'Broadway Books'), ('Holy Cow: An Indian Adventure', 'Broadway Books'), ('The Prize (deWarenne Dynasty  #4)', 'Mira Books'), ('Marvels', 'Marvel Comics Group'), ('Essential Monster of Frankenstein  Vol. 1', 'Marvel Comics'), ('The Origin of Species', 'Castle Books'), ('Island Of Bones (Louis Kincaid  #5)', 'Pinnacle'), ('The Mammoth Book of Storms  Shipwrecks and Sea Disasters', 'Running Press'), ('Summerland', 'Miramax'), ('The Legend of Huma (Dragonlance: Heroes  #1)', 'Wizards of the Coast'), ('Time of the Twins (Dragonlance: Legends  #1)', 'Wizards of the Coast'), ('The Search for Power (Dragonlance: Tales from the War of Souls  #3)', 'Wizards of the Coast'), ('Night of Blood (Dragonlance: The Minotaur Wars  #1)', 'Wizards of the Coast'), ('Dragons in the Archives: The Best of Weis & Hickman (Dragonlance Anthology)', 'Wizards of the Coast'), ('In Focus: National Geographic Greatest Portraits', 'National Geographic Society'), ('Cruelest Journey: Six Hundred Miles To Timbuktu', 'National Geographic Society'), ('The Odyssey (New Translations from Antiquity)', 'Johns Hopkins University Press'), (\"Charlie Wilson's War: The Extraordinary Story of How the Wildest Man in Congress and a Rogue CIA Agent Changed the History of our Times\", 'Grove Press'), ('Monster: The Autobiography of an L.A. Gang Member', 'Grove Press'), ('Layer Cake', 'Grove Press Black Cat'), ('The Second World War: A Complete History', 'Holt McDougal'), (\"Hegemony or Survival: America's Quest for Global Dominance\", 'Holt McDougal'), ('The Origins of Totalitarianism', 'Schocken Books'), ('Once Upon a Gulf Coast Summer', 'B Fiction'), ('Anna Karenina', 'Wildside Press'), ('Drum Into Silence (Drums of Chaos  #3)', 'Tor Fantasy'), ('The Scientists: A History of Science Told Through the Lives of Its Greatest Inventors', 'Random House Trade Paperbacks'), ('The Birth of Venus', 'Random House'), ('The Knight of Maison-Rouge', 'Modern Library'), ('Selected Stories', 'Modern Library'), ('Kim', 'Modern Library'), ('The Red and the Black', 'Modern Library'), ('The Mysterious Island (Extraordinary Voyages  #12)', 'Modern Library'), ('Mountains Beyond Mountains: The Quest of Dr. Paul Farmer  a Man Who Would Cure the World', 'Random House Trade'), ('Filth: Dirt  Disgust  and Modern Life', 'Univ Of Minnesota Press'), ('Weekend Warriors (Sisterhood  #1)', 'Kensington'), ('See How She Dies', 'Zebra Books'), ('Courageous Faith Through the Year', 'IVP Books'), ('Rejoice (Redemption  #4)', 'Tyndale House Publishers'), ('Reunion (Redemption  #5)', 'Tyndale House Publishers'), ('Sweet Revenge', 'Leisure Books'), ('The Deed (Deed  #1)', 'Leisure Books'), ('Nightmare House (Harrow House  #1)', 'Leisure Books'), ('The Chase (Deed  #3)', 'Leisure Books'), ('Blood Moon Over Bengal', 'Leisure Books'), ('History of Beauty', 'Rizzoli'), ('Blink', 'Thomas Nelson'), ('Tuscan Countess: The Life and Extraordinary Times of Matilda of Canossa', 'Vendome Press'), ('Republic', 'Hackett Publishing Company Inc.'), ('The St. Paul Stories of F. Scott Fitzgerald', 'Minnesota Historical Society Press'), (\"A Gateway to Sindarin: A Grammar of an Elvish Language from J.R.R. Tolkien's Lord of the Rings\", 'University of Utah Press'), ('Harpo Speaks!', 'Limelight Editions'), ('Bioinformatics: Sequence and Genome Analysis', 'Cold Spring Harbor Laboratory Press'), ('The Elements of Typographic Style', 'Hartley & Marks Publishers'), ('The Complete I Ching: The Definitive Translation', 'Inner Traditions International'), ('The Criss Cross', 'Melodrama Publishing'), (\"Programming Ruby: The Pragmatic Programmers' Guide\", 'Pragmatic Bookshelf'), ('Plants and Landscapes for Summer-Dry Climates of the San Francisco Bay Region', 'East Bay Municipal Utility District'), ('Natural Cures \"They\" Don\\'t Want You to Know about', 'Alliance Publishing'), ('The Dogs of Riga (Kurt Wallander  #2)', 'Vintage Crime/Black Lizard'), ('The Secret History', 'Vintage'), ('Beloved', 'Vintage'), ('Song of Solomon', 'Vintage'), ('Tar Baby', 'Vintage'), ('Providence of a Sparrow: Lessons from a Life Gone to the Birds', 'Anchor'), ('Living to Tell the Tale', 'Vintage'), (\"Lidia's Family Table\", 'Knopf Publishing Group'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", \"Everyman's Library\"), ('The Plague  The Fall  Exile and the Kingdom  and Selected Essays', \"Everyman's Library\"), ('Runaway', 'Alfred A. Knopf'), ('Dead Souls', \"Everyman's Library\"), (\"The Last Hours of Ancient Sunlight: The Fate of the World and What We Can Do Before It's Too Late\", 'Broadway Books'), (\"FDR's Folly: How Roosevelt and His New Deal Prolonged the Great Depression\", 'Crown Forum'), ('Titan: The Life of John D. Rockefeller  Sr.', 'Vintage'), ('The Filth', 'Vertigo'), ('On the Road to Perdition \u2014 Oasis  Sanctuary  and Detour \u2014 (Road to Perdition  #2)', 'DC Comics'), ('Pledged: The Secret Life of Sororities', 'Hyperion'), ('Scar Tissue', 'Hachette Books'), ('Feast: Food to Celebrate Life', 'Hachette Books'), (\"Jamie's Dinners: The Essential Family Cookbook\", 'Hachette Books'), ('Illustrated Guide to the NEC: Based on the 2005 National Electric Code', 'Cengage Learning'), ('Little Women (Little Women  #1)', 'Sterling'), (\"Kushiel's Avatar (Ph\u00e8dre's Trilogy  #3)\", 'Tor'), ('The English Novel: An Introduction', 'Wiley-Blackwell'), ('The Radical Right & the Murder of John F. Kennedy: Stunning Evidence in the Assassination of the President', 'Trafford Publishing'), ('The Best Short Stories of Edith Wharton', 'Kessinger Publishing'), ('Katherine', 'Chicago Review Press'), (\"Not Your Mother's Slow Cooker Cookbook\", 'Harvard Common Press'), ('The Mother', 'Moyer Bell and its subsidiaries'), ('Kinfolk', 'Moyer Bell and its subsidiaries'), ('Expelled from Eden: A William T. Vollmann Reader', 'Da Capo Press'), ('Enslaved by Ducks', 'Algonquin Books'), ('On Genesis/A Refutation of the Manichees/The Unfinished Literal Meaning of Genesis (Works of St Augustine 1)', 'New City Press'), ('Selected Poems of Herman Melville', 'David R. Godine Publisher'), ('Africa South of the Sahara: A Geographical Interpretation (Texts In Regional Geography)', 'The Guilford Press'), ('The Story of Philosophy', 'AudioGO'), ('The Letters of Vita Sackville-West and Virginia Woolf', 'Cleis Press'), ('1000 Rings: Inspiring Adornments for the Hand', 'Lark Books'), ('Prophet', 'Crossway Books'), ('Chop Shop (Bug Man  #2)', 'Howard Books'), ('The Stones of Summer', 'Overlook Press'), ('Cocktail Time', 'Harry N. Abrams'), ('Piccadilly Jim', 'Harry N. Abrams'), ('The Big Book of Boy Stuff', 'Gibbs Smith Publishers'), (\"Heart & Hands: A Midwife's Guide to Pregnancy & Birth\", 'Celestial Arts'), (\"The Music of the Republic: Essays on Socrates' Conversations and Plato's Writings\", 'Paul Dry Books'), ('Open Secrets / Inward Prospects: Reflections on World and Soul', 'Paul Dry Books'), ('The Ivory Tower', 'NYRB Classics'), ('The Wave in the Mind: Talks and Essays on the Writer  the Reader and the Imagination', 'Shambhala'), ('A Guide to the Words of My Perfect Teacher', 'Shambhala'), ('Joel on Software', 'Apress'), ('Tuf Voyaging', 'Meisha Merlin Publishing'), ('The Brothers Karamazov', 'Barnes Noble Classics'), ('The Idiot', 'Barnes Noble Classics'), ('Essential Tales and Poems', 'Barnes Noble Classics'), ('The Portrait of a Lady', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('A Tale of Two Cities', 'Barnes & Noble Classics'), ('The Three Musketeers', 'Barnes Noble Classics'), ('The House of Mirth', 'Barnes Noble Classics'), ('Anna Karenina', 'Barnes & Noble'), ('Oliver Twist', 'Barnes Noble Classics'), ('Pride and Prejudice', 'Barnes Noble Classics'), ('A Tale of Two Cities', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('Write Great Code: Volume 1: Understanding the Machine', 'No Starch Press'), ('The Nature of Play: Great Apes and Humans', 'The Guilford Press'), ('The Lovely Bones', 'Large Print Press'), ('The Zanzibar Chest', 'Riverhead Books'), (\"The Magicians' Guild (Black Magician Trilogy  #1)\", 'Orbit'), ('The Novice (Black Magician Trilogy  #2)', 'Orbit'), ('The High Lord (Black Magician Trilogy  #3)', 'Orbit'), ('Desiring God: Meditations of a Christian Hedonist', 'Inter-Varsity Press'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", 'Random House'), ('Architecture and Tourism: Perception  Performance and Place', 'Bloomsbury Academic'), ('Watchfiends and Rack Screams: Works from the Final Period', 'Exact Change'), (\"Harrington on Hold 'em: Expert Strategy for No-Limit Tournaments  Volume I: Strategic Play\", 'Two Plus Two Publishing LLC'), ('Her Smoke Rose Up Forever', 'Tachyon Publications'), (\"The Devil's in the Details (A Camilla MacPhee Mystery  #4)\", 'Napoleon and Co'), ('Judas Pig', 'Do-Not Press'), ('Little Women', \"Collector's Library\"), ('Collected Stories I: Gimpel the Fool to The Letter Writer', 'Library of America'), ('Collected Stories III: One Night in Brazil to The Death of Methuselah', 'Library of America'), (\"McSweeney's #14\", \"McSweeney's\"), ('Think and Grow Rich', 'High Roads Media'), ('Under the Influence: The Disinformation Guide to Drugs', 'The Disinformation Company (NYC)'), ('\u041c\u0430\u0441\u0442\u0435\u0440 \u0438 \u041c\u0430\u0440\u0433\u0430\u0440\u0438\u0442\u0430', '\u042d\u043a\u0441\u043c\u043e'), ('El club Dante', 'Seix Barral'), ('Ahora sabr\u00e9is lo que es correr', 'Mondadori'), ('El hombre duplicado', 'Punto de Lectura'), ('El azul de la virgen', 'Punto de Lectura'), ('Harry Potter y la Orden del F\u00e9nix (Harry Potter  #5)', 'Emece Editores'), ('El umbral de la noche', 'Debolsillo'), ('O Xar\u00e1', 'Companhia das Letras'), ('Narraciones Extraordinarias', 'Panamericana Editorial'), ('Zaat', 'American University in Cairo Press'))", "rowcount": 528, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION books.STRFTIME does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 400, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Saints',), ('Lovelock (Mayflower Trilogy  #1)',), ('Legends',), ('Sarah (Women of Genesis  #1)',), ('Shadow of the Hegemon (The Shadow Series  #2)',), ('How to Write Science Fiction & Fantasy',), (\"X\u00e9nocide (Ender's Saga  #3)\",))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Saints',), ('Lovelock (Mayflower Trilogy  #1)',), ('Legends',), ('Sarah (Women of Genesis  #1)',), ('Shadow of the Hegemon (The Shadow Series  #2)',), ('How to Write Science Fiction & Fantasy',), (\"X\u00e9nocide (Ender's Saga  #3)\",))", "rowcount": 7, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 401, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 402, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 403, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((25.260960334029228,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'CAST(SUM(CASE WHEN t2.method_name = 'Internional' THEN 1 ELSE 0 END) AS REAL)...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 404, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2020',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'NULLS LAST LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 3}
{"sql_id": 405, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Witness for the Prosecution and Selected Plays',), ('She Came to Stay',), ('The Collection: The Outsiders / Rumble Fish / That Was Then  This Is Now',), ('The Love of the Last Tycoon',), ('Heart Songs and Other Stories',), ('Reason in History',), ('Tyranny of the Majority: Fundamental Fairness in Representative Democracy',), ('Mrs. Piggle-Wiggle Treasury (Mrs. Piggle Wiggle  #1-2  #4)',), ('Embracing the Love of God: The Path and Promise of Christian Life',), ('Cathedral  Forge  and Waterwheel: Technology and Invention in the Middle Ages',), (\"Laura Ingalls Wilder Country: The People and places in Laura Ingalls Wilder's life and books\",), ('Imajica: The Reconciliation',), ('The Pilgrimage: A Contemporary Quest for Ancient Wisdom',), ('Betsy and Joe (Betsy-Tacy  #8)',), ('Betsy Was a Junior (Betsy-Tacy  #7)',), ('Crazy Lady!',), ('Seven Spiders Spinning (The Hamlet Chronicles  #1)',), ('American Dragons: Twenty-five Asian American Voices',), ('Winter Days in the Big Woods',), ('The Professor of Desire',), ('The Rings of Saturn',), ('Slow Learner: Early Stories',), (\"Midnight's Children\",), ('Five Patients',), (\"Love's Executioner  And Other Tales Of Psychotherapy\",), ('The Assault',), (\"The Monkey's Wrench\",), ('Six Characters in Search of an Author and Other Plays',), ('Harvesting the Heart',), ('The Basketball Diaries',), ('The Making of Pride and Prejudice',), ('Great Expectations',), ('Anne Frank Beyond the Diary: A Photographic Remembrance',), ('Oddballs',), ('What is Art?',), ('The Railway Children',), ('Billy Budd  Sailor',), ('Fire: From A Journal of Love - The Unexpurgated Diary of Ana\u00efs Nin (1934-1937)',), ('How to Travel with a Salmon and Other Essays',), ('The Metamorphoses of Ovid',), ('Winterdance: The Fine Madness of Running the Iditarod',), ('Roald Dahl: A Biography',), ('This Is the Way the World Ends',), ('View With a Grain of Sand: Selected Poems',), (\"Paul Revere's Ride\",), ('Justice Oliver Wendell Holmes: Law and the Inner Self',), ('Aristophanes and Athens: An Introduction to the Plays',), ('The Mythical Man-Month: Essays on Software Engineering',), ('Bengal Nights',), ('A Dance to the Music of Time: 1st Movement (A Dance to the Music of Time  #1-3)',), ('A Dance to the Music of Time: 2nd Movement (A Dance to the Music of Time  #4-6)',), ('A Dance to the Music of Time: 3rd Movement (A Dance to the Music of Time  #7-9)',), ('A Dance to the Music of Time: 4th Movement (A Dance to the Music of Time  #10-12)',), (\"Dante's Inferno\",), ('The Shaping of America: A Geographical Perspective on 500 Years of History: Volume 2: Continental America  1800-1867',), (\"White Man's Grave\",), ('Isak Dinesen: The Life of a Storyteller',), ('The Wild Shore (Three Californias Triptych  #1)',), ('The Gold Coast (Three Californias Triptych  #2)',), ('Pacific Edge (Three Californias Triptych  #3)',), ('Earthborn (Homecoming Saga #5)',), ('The Edge of Honor',), (\"The Scold's Bridle\",), ('Rose in Bloom (Eight Cousins  #2)',), ('Cry to Heaven',), ('The Vampire Companion',), ('The Shockwave Rider',), ('The Age of Extremes: The Short Twentieth Century  1914-1991',), ('P.S. I Love You (Sealed with a Kiss #4)',), ('First Love  Second Chance',), ('The Night of Wishes',), ('The Sixteen Pleasures',), ('Running from Safety: An Adventure of the Spirit',), (\"Black Holes & Time Warps: Einstein's Outrageous Legacy\",), ('Excellence',), ('Frankenstein',), ('Jesus the Son of Man',), (\"Revenge of the Lawn / The Abortion / So the Wind Won't Blow it All Away\",), ('The Old Way of Seeing: How Architecture Lost Its Magic - And How to Get It Back',), (\"McNally's Caper (Archy McNally  #4)\",), ('The Key to Midnight',), ('Debt of Honor (Jack Ryan  #7)',), ('A Pinch of Poison (Hemlock Falls Mysteries  #3)',), ('Escape from Fire Mountain (World of Adventure  #3)',), ('A Ring of Endless Light (Austin Family  #4)',), ('Fantastic Alice',), ('Nothing Lasts Forever',), ('Prime Time',), ('Death of a Charming Man (Hamish Macbeth  #10)',), ('Season of the Machete',), ('Charade',), ('Night Train to Memphis (Vicky Bliss  #5)',), (\"Fannie Flagg's Original Whistle Stop Cafe Cookbook\",), ('Four Past Midnight: Featuring \"The Langoliers\"',), ('Nightfall',), ('Angel Christmas',), ('The Forest House (Avalon  #2)',), ('Here I Stand: A Life of Martin Luther',), ('The Armies of the Night: History as a Novel  the Novel as History',), ('Holiday Romance and Other Writings for Children',), ('Extraordinary Popular Delusions and the Madness of Crowds/Confusi\u00f3n de Confusiones (Marketplace Book)',), ('The Oil Jar and Other Stories',), ('The Birth of Tragedy',), ('Arms and Armor: A Pictorial Archive from Nineteenth-Century Sources',), ('Three Complete Xanth Novels (Xanth  #1-3)',), ('Children of the Thunder / The Tides of Time / The Crucible of Time',), (\"Cat's Cradle/God Bless You Mr. Rosewater/Breakfast of Champions\",), ('Setting Free the Bears / The Water-Method Man / The 158-Pound Marriage',), ('The Complete Novels',), ('Fine Lines (One-Eyed Mack  #6)',), ('Of Love and Other Demons',), ('The Orion Mystery: Unlocking the Secrets of the Pyramids',), (\"Foucault's Virginity: Ancient Erotic Fiction & the History of Sexuality (Stanford Memorial Lecture)\",), ('The New Knighthood: A History of the Order of the Temple',), ('The Hot Zone: The Chilling True Story of an Ebola Outbreak',), ('Feersum Endjinn',), ('Judge Dredd (Audio Cassette)',), ('The Celestine Prophecy: An Experiential Guide',), ('I. Asimov',), (\"Heaven's Price\",), ('Lords of the Sky',), ('The Seventh Gate (The Death Gate Cycle  #7)',), (\"Finnegan's Week\",), ('Lines and Shadows',), (\"The Goon Show  Volume 11: He's Fallen in the Water!\",), ('The Last Temptation',), ('If I Die In A Combat Zone',), ('How Much is That Guinea Pig in the Window?',), ('The Leader In You: How to Win Friends  Influence People and Succeed in a Changing World',), ('Sahara (Dirk Pitt  #11)',), ('Star Trek: Logs 7-10',), ('A Place Where the Sea Remembers',), ('New Worlds  Ancient Texts: The Power of Tradition and the Shock of Discovery',), ('The Roman Empire',), ('Children of Heracles / Hippolytus / Andromache / Hecuba',), ('The Divine Comedy',), ('Rabbit Angstrom: The Four Novels',), ('Cancer Ward',), ('The Great American Novel',), ('Democracy',), ('A Book of Common Prayer',), ('The Death of Virgil',), ('The Son Avenger (The Master of Hestviken  #4)',), ('Open Secrets',), (\"The Reed Cutter & Captain Shigemoto's Mother\",), ('When She Was Good',), ('Quicksand',), (\"In Pharaoh's Army: Memories of the Lost War\",), ('The Makioka Sisters',), ('Blues for Mister Charlie',), ('Going to Meet the Man',), ('Aman: The Story of a Somali Girl',), ('Three Plays: Desire Under the Elms / Strange Interlude / Mourning Becomes Electra',), (\"Corelli's Mandolin\",), ('Resistance  Rebellion and Death: Essays',), ('Selected Stories',), ('Les Miserables (Stepping Stones)',), ('Daisy-Head Mayzie',), ('A Frolic of His Own',), ('The Great Gatsby',), ('A Life in Letters',), ('The Pat Hobby Stories',), ('No Ordinary Time: Franklin and Eleanor Roosevelt: The Home Front in World War II',), ('Achilles in Vietnam: Combat Trauma and the Undoing of Character',), ('The Reawakening',), ('Survival in Auschwitz',), ('Trapped in the Mirror: Adult Children of Narcissists in Their Struggle for Self',), ('Julius  the Baby of the World',), ('The Fourth of July Story',), ('Come a Stranger (Tillerman Cycle  #5)',), ('The Moon Lady',), ('Unpainted to the Last: \"Moby Dick\" and Twentieth-century American Art',), ('Mondrian',), ('The Painter of Modern Life and Other Essays (Phaidon Arts and Letters)',), ('Red Phoenix',), ('Different Seasons',), (\"The Wealthy Barber: Everyone's Common-Sense Guide to Becoming Financially Independent\",), ('Something Borrowed',), ('Bad Dreams',), ('Sparrow Hawk Red',), ('Love',), ('Bob Marley - Songs of Freedom',), ('Lectures on the History of Philosophy 1: Greek Philosophy to Plato',), ('The Complete Stories',), ('The Forgotten',), ('Anti-Semite and Jew: An Exploration of the Etiology of Hate',), ('The Trial of God: (as it was held on February 25  1649  in Shamgorod)',), ('The Complete Stories',), ('Warfare in the Classical World: An Illustrated Encyclopedia of Weapons  Warriors  and Warfare in the Ancient Civilizations of Greece and Rome',), (\"The Last Book of Swords: Shieldbreaker's Story (Lost Swords  #8)\",), ('Lord of Chaos (The Wheel of Time  #6)',), ('The Ships of Earth (Homecoming Saga #3)',), ('Harpy Thyme (Xanth #17)',), ('Geis of the Gargoyle (Xanth #18)',), ('The Little Baby Snoogle-Fleejer',), ('Practice! Practice!: A Latin Via Ovid Workbook',), ('You Can Never Go Home Again',), ('The Camera (Ansel Adams Photography  #1)',), ('The Negative (Ansel Adams Photography  #2)',), ('The Print (Ansel Adams Photography  #3)',), ('Six Degrees of Separation',), ('Cigarettes Are Sublime',), ('The Calvin and Hobbes Tenth Anniversary Book',), (\"Romanee Conti: The World's Most Fabled Wine\",), ('Moon in a Dewdrop: Writings of Zen Master Dogen',), ('Fire in the Sky (Diadem: Shadowsong  #1)',), ('Storm Warning (Valdemar: Mage Storms #1)',), ('Walking the Rez Road',), ('Dalit: The Black Untaouchables of India',), ('Ghosts of Gettysburg III: Spirits  Apparitions  and Haunted Places of the Battlefield',), ('Novels and Stories',), ('The Ethics of Rhetoric',), ('Pyramids of Montauk: Explorations in Consciousness',), (\"Cook's Illustrated 1995 (Cook's Illustrated Annuals)\",), ('When the World Was Steady',), ('From Far Away',), ('The Belly of Paris (Les Rougon-Macquart  #3)',), ('Keeping Faith: Memoirs of a President',), ('Intimate Communion: Awakening Your Sexual Essence',), ('East Wind: West Wind',), ('A Guided Tour of 5 Works by Plato: Euthyphro/Apology/Crito/Phaedo/Cave',), (\"Meditations for Manifesting: Morning and Evening Meditations to Literally Create Your Heart's Desire\",), ('The Mystery Play',), ('Prince of the City',), ('Lies My Teacher Told Me: Everything Your History Textbook Got Wrong',), ('World War 3 Illustrated: Confrontational Comics',), ('Arcadia',), ('The Azathoth Cycle: Tales of the Blind Idiot God',), ('The Return of Lum  Volume 1: Urusei Yatsura (Urusei Yatsura  #2)',), ('Gunslinger and Nine Other Action-Packed Stories of the Wild West',), ('Desolation Angels',), ('The Western Canon: The Books and School of the Ages',), ('Illuminata: A Return to Prayer',), ('Fantastic Mr. Fox (Cover to Cover)',), ('One Hundred Years Of Solitude',), ('The Bridge over the Drina',), ('The Transit of Venus',), ('Collected Poems  Prose  and Plays',), ('Stories and Early Novels: Pulp Stories / The Big Sleep / Farewell  My Lovely / The High Window',), ('Later Novels and Other Writings: The Lady in the Lake / The Little Sister / The Long Goodbye / Playback / Double Indemnity (screenplay) / Selected Essays and Letters',), (\"Edward Lear's Book of Nonsense: With Lear's Original Illustrations\",), ('En attendant Godot',), ('Premi\u00e8res Histoires',), ('The Art of Richard P. Feynman',), ('April  May und June',), ('Homo faber: Ein Bericht.',), ('La m\u00e1quina de follar',), ('El Hotel New Hampshire',), ('Relato de Um N\u00e1ufrago',))", "rowcount": 249, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Witness for the Prosecution and Selected Plays',), ('She Came to Stay',), ('The Collection: The Outsiders / Rumble Fish / That Was Then  This Is Now',), ('The Love of the Last Tycoon',), ('Heart Songs and Other Stories',), ('Reason in History',), ('Tyranny of the Majority: Fundamental Fairness in Representative Democracy',), ('Mrs. Piggle-Wiggle Treasury (Mrs. Piggle Wiggle  #1-2  #4)',), ('Embracing the Love of God: The Path and Promise of Christian Life',), ('Cathedral  Forge  and Waterwheel: Technology and Invention in the Middle Ages',), (\"Laura Ingalls Wilder Country: The People and places in Laura Ingalls Wilder's life and books\",), ('Imajica: The Reconciliation',), ('The Pilgrimage: A Contemporary Quest for Ancient Wisdom',), ('Betsy and Joe (Betsy-Tacy  #8)',), ('Betsy Was a Junior (Betsy-Tacy  #7)',), ('Crazy Lady!',), ('Seven Spiders Spinning (The Hamlet Chronicles  #1)',), ('American Dragons: Twenty-five Asian American Voices',), ('Winter Days in the Big Woods',), ('The Professor of Desire',), ('The Rings of Saturn',), ('Slow Learner: Early Stories',), (\"Midnight's Children\",), ('Five Patients',), (\"Love's Executioner  And Other Tales Of Psychotherapy\",), ('The Assault',), (\"The Monkey's Wrench\",), ('Six Characters in Search of an Author and Other Plays',), ('Harvesting the Heart',), ('The Basketball Diaries',), ('The Making of Pride and Prejudice',), ('Great Expectations',), ('Anne Frank Beyond the Diary: A Photographic Remembrance',), ('Oddballs',), ('What is Art?',), ('The Railway Children',), ('Billy Budd  Sailor',), ('Fire: From A Journal of Love - The Unexpurgated Diary of Ana\u00efs Nin (1934-1937)',), ('How to Travel with a Salmon and Other Essays',), ('The Metamorphoses of Ovid',), ('Winterdance: The Fine Madness of Running the Iditarod',), ('Roald Dahl: A Biography',), ('This Is the Way the World Ends',), ('View With a Grain of Sand: Selected Poems',), (\"Paul Revere's Ride\",), ('Justice Oliver Wendell Holmes: Law and the Inner Self',), ('Aristophanes and Athens: An Introduction to the Plays',), ('The Mythical Man-Month: Essays on Software Engineering',), ('Bengal Nights',), ('A Dance to the Music of Time: 1st Movement (A Dance to the Music of Time  #1-3)',), ('A Dance to the Music of Time: 2nd Movement (A Dance to the Music of Time  #4-6)',), ('A Dance to the Music of Time: 3rd Movement (A Dance to the Music of Time  #7-9)',), ('A Dance to the Music of Time: 4th Movement (A Dance to the Music of Time  #10-12)',), (\"Dante's Inferno\",), ('The Shaping of America: A Geographical Perspective on 500 Years of History: Volume 2: Continental America  1800-1867',), (\"White Man's Grave\",), ('Isak Dinesen: The Life of a Storyteller',), ('The Wild Shore (Three Californias Triptych  #1)',), ('The Gold Coast (Three Californias Triptych  #2)',), ('Pacific Edge (Three Californias Triptych  #3)',), ('Earthborn (Homecoming Saga #5)',), ('The Edge of Honor',), (\"The Scold's Bridle\",), ('Rose in Bloom (Eight Cousins  #2)',), ('Cry to Heaven',), ('The Vampire Companion',), ('The Shockwave Rider',), ('The Age of Extremes: The Short Twentieth Century  1914-1991',), ('P.S. I Love You (Sealed with a Kiss #4)',), ('First Love  Second Chance',), ('The Night of Wishes',), ('The Sixteen Pleasures',), ('Running from Safety: An Adventure of the Spirit',), (\"Black Holes & Time Warps: Einstein's Outrageous Legacy\",), ('Excellence',), ('Frankenstein',), ('Jesus the Son of Man',), (\"Revenge of the Lawn / The Abortion / So the Wind Won't Blow it All Away\",), ('The Old Way of Seeing: How Architecture Lost Its Magic - And How to Get It Back',), (\"McNally's Caper (Archy McNally  #4)\",), ('The Key to Midnight',), ('Debt of Honor (Jack Ryan  #7)',), ('A Pinch of Poison (Hemlock Falls Mysteries  #3)',), ('Escape from Fire Mountain (World of Adventure  #3)',), ('A Ring of Endless Light (Austin Family  #4)',), ('Fantastic Alice',), ('Nothing Lasts Forever',), ('Prime Time',), ('Death of a Charming Man (Hamish Macbeth  #10)',), ('Season of the Machete',), ('Charade',), ('Night Train to Memphis (Vicky Bliss  #5)',), (\"Fannie Flagg's Original Whistle Stop Cafe Cookbook\",), ('Four Past Midnight: Featuring \"The Langoliers\"',), ('Nightfall',), ('Angel Christmas',), ('The Forest House (Avalon  #2)',), ('Here I Stand: A Life of Martin Luther',), ('The Armies of the Night: History as a Novel  the Novel as History',), ('Holiday Romance and Other Writings for Children',), ('Extraordinary Popular Delusions and the Madness of Crowds/Confusi\u00f3n de Confusiones (Marketplace Book)',), ('The Oil Jar and Other Stories',), ('The Birth of Tragedy',), ('Arms and Armor: A Pictorial Archive from Nineteenth-Century Sources',), ('Three Complete Xanth Novels (Xanth  #1-3)',), ('Children of the Thunder / The Tides of Time / The Crucible of Time',), (\"Cat's Cradle/God Bless You Mr. Rosewater/Breakfast of Champions\",), ('Setting Free the Bears / The Water-Method Man / The 158-Pound Marriage',), ('The Complete Novels',), ('Fine Lines (One-Eyed Mack  #6)',), ('Of Love and Other Demons',), ('The Orion Mystery: Unlocking the Secrets of the Pyramids',), (\"Foucault's Virginity: Ancient Erotic Fiction & the History of Sexuality (Stanford Memorial Lecture)\",), ('The New Knighthood: A History of the Order of the Temple',), ('The Hot Zone: The Chilling True Story of an Ebola Outbreak',), ('Feersum Endjinn',), ('Judge Dredd (Audio Cassette)',), ('The Celestine Prophecy: An Experiential Guide',), ('I. Asimov',), (\"Heaven's Price\",), ('Lords of the Sky',), ('The Seventh Gate (The Death Gate Cycle  #7)',), (\"Finnegan's Week\",), ('Lines and Shadows',), (\"The Goon Show  Volume 11: He's Fallen in the Water!\",), ('The Last Temptation',), ('If I Die In A Combat Zone',), ('How Much is That Guinea Pig in the Window?',), ('The Leader In You: How to Win Friends  Influence People and Succeed in a Changing World',), ('Sahara (Dirk Pitt  #11)',), ('Star Trek: Logs 7-10',), ('A Place Where the Sea Remembers',), ('New Worlds  Ancient Texts: The Power of Tradition and the Shock of Discovery',), ('The Roman Empire',), ('Children of Heracles / Hippolytus / Andromache / Hecuba',), ('The Divine Comedy',), ('Rabbit Angstrom: The Four Novels',), ('Cancer Ward',), ('The Great American Novel',), ('Democracy',), ('A Book of Common Prayer',), ('The Death of Virgil',), ('The Son Avenger (The Master of Hestviken  #4)',), ('Open Secrets',), (\"The Reed Cutter & Captain Shigemoto's Mother\",), ('When She Was Good',), ('Quicksand',), (\"In Pharaoh's Army: Memories of the Lost War\",), ('The Makioka Sisters',), ('Blues for Mister Charlie',), ('Going to Meet the Man',), ('Aman: The Story of a Somali Girl',), ('Three Plays: Desire Under the Elms / Strange Interlude / Mourning Becomes Electra',), (\"Corelli's Mandolin\",), ('Resistance  Rebellion and Death: Essays',), ('Selected Stories',), ('Les Miserables (Stepping Stones)',), ('Daisy-Head Mayzie',), ('A Frolic of His Own',), ('The Great Gatsby',), ('A Life in Letters',), ('The Pat Hobby Stories',), ('No Ordinary Time: Franklin and Eleanor Roosevelt: The Home Front in World War II',), ('Achilles in Vietnam: Combat Trauma and the Undoing of Character',), ('The Reawakening',), ('Survival in Auschwitz',), ('Trapped in the Mirror: Adult Children of Narcissists in Their Struggle for Self',), ('Julius  the Baby of the World',), ('The Fourth of July Story',), ('Come a Stranger (Tillerman Cycle  #5)',), ('The Moon Lady',), ('Unpainted to the Last: \"Moby Dick\" and Twentieth-century American Art',), ('Mondrian',), ('The Painter of Modern Life and Other Essays (Phaidon Arts and Letters)',), ('Red Phoenix',), ('Different Seasons',), (\"The Wealthy Barber: Everyone's Common-Sense Guide to Becoming Financially Independent\",), ('Something Borrowed',), ('Bad Dreams',), ('Sparrow Hawk Red',), ('Love',), ('Bob Marley - Songs of Freedom',), ('Lectures on the History of Philosophy 1: Greek Philosophy to Plato',), ('The Complete Stories',), ('The Forgotten',), ('Anti-Semite and Jew: An Exploration of the Etiology of Hate',), ('The Trial of God: (as it was held on February 25  1649  in Shamgorod)',), ('The Complete Stories',), ('Warfare in the Classical World: An Illustrated Encyclopedia of Weapons  Warriors  and Warfare in the Ancient Civilizations of Greece and Rome',), (\"The Last Book of Swords: Shieldbreaker's Story (Lost Swords  #8)\",), ('Lord of Chaos (The Wheel of Time  #6)',), ('The Ships of Earth (Homecoming Saga #3)',), ('Harpy Thyme (Xanth #17)',), ('Geis of the Gargoyle (Xanth #18)',), ('The Little Baby Snoogle-Fleejer',), ('Practice! Practice!: A Latin Via Ovid Workbook',), ('You Can Never Go Home Again',), ('The Camera (Ansel Adams Photography  #1)',), ('The Negative (Ansel Adams Photography  #2)',), ('The Print (Ansel Adams Photography  #3)',), ('Six Degrees of Separation',), ('Cigarettes Are Sublime',), ('The Calvin and Hobbes Tenth Anniversary Book',), (\"Romanee Conti: The World's Most Fabled Wine\",), ('Moon in a Dewdrop: Writings of Zen Master Dogen',), ('Fire in the Sky (Diadem: Shadowsong  #1)',), ('Storm Warning (Valdemar: Mage Storms #1)',), ('Walking the Rez Road',), ('Dalit: The Black Untaouchables of India',), ('Ghosts of Gettysburg III: Spirits  Apparitions  and Haunted Places of the Battlefield',), ('Novels and Stories',), ('The Ethics of Rhetoric',), ('Pyramids of Montauk: Explorations in Consciousness',), (\"Cook's Illustrated 1995 (Cook's Illustrated Annuals)\",), ('When the World Was Steady',), ('From Far Away',), ('The Belly of Paris (Les Rougon-Macquart  #3)',), ('Keeping Faith: Memoirs of a President',), ('Intimate Communion: Awakening Your Sexual Essence',), ('East Wind: West Wind',), ('A Guided Tour of 5 Works by Plato: Euthyphro/Apology/Crito/Phaedo/Cave',), (\"Meditations for Manifesting: Morning and Evening Meditations to Literally Create Your Heart's Desire\",), ('The Mystery Play',), ('Prince of the City',), ('Lies My Teacher Told Me: Everything Your History Textbook Got Wrong',), ('World War 3 Illustrated: Confrontational Comics',), ('Arcadia',), ('The Azathoth Cycle: Tales of the Blind Idiot God',), ('The Return of Lum  Volume 1: Urusei Yatsura (Urusei Yatsura  #2)',), ('Gunslinger and Nine Other Action-Packed Stories of the Wild West',), ('Desolation Angels',), ('The Western Canon: The Books and School of the Ages',), ('Illuminata: A Return to Prayer',), ('Fantastic Mr. Fox (Cover to Cover)',), ('One Hundred Years Of Solitude',), ('The Bridge over the Drina',), ('The Transit of Venus',), ('Collected Poems  Prose  and Plays',), ('Stories and Early Novels: Pulp Stories / The Big Sleep / Farewell  My Lovely / The High Window',), ('Later Novels and Other Writings: The Lady in the Lake / The Little Sister / The Long Goodbye / Playback / Double Indemnity (screenplay) / Selected Essays and Letters',), (\"Edward Lear's Book of Nonsense: With Lear's Original Illustrations\",), ('En attendant Godot',), ('Premi\u00e8res Histoires',), ('The Art of Richard P. Feynman',), ('April  May und June',), ('Homo faber: Ein Bericht.',), ('La m\u00e1quina de follar',), ('El Hotel New Hampshire',), ('Relato de Um N\u00e1ufrago',))", "rowcount": 249, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 406, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('amazonaws.com',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((19,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 2, "FN": 4}
{"sql_id": 407, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 408, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 409, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 410, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 411, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 412, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 413, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('The Landmark Thucydides: A Comprehensive Guide to the Peloponnesian War',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'function EXTRACT to obtain the year part of a date.' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 414, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3.84,), (4.82,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3.84,), (4.82,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 415, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 416, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 417, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 418, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Ruth', 'Noble'), ('Anastasia', 'Hansen'), ('Vicky', 'Coleman'), ('Joshua', 'Rosa'), ('Randall', 'Curtis'), ('Arnold', 'Holder'), ('Sarah', 'Lindsey'), ('Robert', 'Morin'), ('David', 'Hodges'), ('Bob', 'Benson'), ('Standard', 'Murray'), ('Craig', 'Kerr'), ('Rosemary', 'Kennedy'), ('Zach', 'Barber'), ('Lisa', 'Tillman'), ('Mark', 'Atkins'), ('Jessica', 'Anthony'))", "rowcount": 17, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Ruth', 'Noble'), ('Anastasia', 'Hansen'), ('Vicky', 'Coleman'), ('Joshua', 'Rosa'), ('Randall', 'Curtis'), ('Arnold', 'Holder'), ('Sarah', 'Lindsey'), ('Robert', 'Morin'), ('David', 'Hodges'), ('Bob', 'Benson'), ('Standard', 'Murray'), ('Craig', 'Kerr'), ('Rosemary', 'Kennedy'), ('Zach', 'Barber'), ('Lisa', 'Tillman'), ('Mark', 'Atkins'), ('Jessica', 'Anthony'))", "rowcount": 17, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 419, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Joshua%' AND T1.last_name ILIKE '%Rosa%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 420, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((108,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `inspection`\\\\nColumns:\\\\n(`inspection_id`, BIGINT, primary key)\\\\n(`in...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 421, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 422, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"TONY'S BURRITO MEX, INC\",), (\"PIZZARO'S\",), ('ORANGE GARDEN RESTAURANT LLC',), ('COALFIRE',), ('FOREVER YOGURT',), ('DUKS RED HOTS',), ('Southern Grill',), ('EL SALVADOR RESTAURANT',), ('LA HACIENDITA TAQUERIA INC',), ('COMPUTER AND NETWORK SOLUTIONS',), ('TAQUERIA JAMAY',), ('JALISCO RESTAURANT',), ('EL CONCORDIA',), ('LAS ISLAS MARIAS',), ('McDonalds',), ('STARFRUIT CAFE',), ('SMOTHER BROTHERS',), ('GOLDEN CRUST PIZZERIA',), ('THE PARTHENON RESTAURANT INC',), ('THE WORM HOLE',), (\"CHICAGO'S HOME OF CHICKEN & WAFFLES\",), ('SAN JOSE RESTAURANT, INC.',), ('EL MEZQUITE GRILL',), ('PR CAFETERIA INCORPORATED',), ('ROCKIN  TACO',))", "rowcount": 25, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'mysql Ver 14.15 Distrib Enterprise' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 423, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 424, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 425, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 426, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 427, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 428, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%RON%OF%JapAN%INC%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 429, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `establishment`\\\\nColumns:\\\\n(`license_no`, integer, primary key)\\\\n(`a...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 430, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5\\n<s> SELECT COUNT(*) FROM inspection WHERE date_part('year', inspection_date...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 431, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%Fail%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 433, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((125.125,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `employee`\\\\nColumns:\\\\n(`employee_id`, integer, primary key)\\\\n(`first...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 434, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION food_inspection_2.date_part does not exist')", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 435, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 436, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.5.60-0ubuntu\\n### sqlite Version: 1.4.1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 437, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 438, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('COALFIRE', 'Fail'), (\"TONY'S SUB\", 'Pass'), (\"MARY'S SNACK SHOP\", 'Pass w/ Conditions'), (\"MCDONALD'S CORPORATION\", 'Pass'), ('AL BAR B QUE', 'Pass'), ('RIB PLACE INC.', 'Pass'), ('MR CAJAKES SANDWICH SHOP', 'Pass w/ Conditions'), ('AMEER KABOB', 'Pass'), ('LOS CANDILES', 'Pass'), (\"BANANA JOE'S\", 'Pass'))", "rowcount": 10, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 439, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 440, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 441, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'assert sqlite_to_mariadb('DISTINCT T1.employee_id FROM employee AS T1 INNER J...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 442, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Bitcoin',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `coins`\\\\nColumns:\\\\n(`id`, integer, primary key)\\\\n(`name`, text)\\\\n(`s...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 443, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('12:44:28', '23:09:25', datetime.date(2016, 8, 1)), ('17:34:25', '00:04:25', datetime.date(2016, 8, 2)), ('19:49:25', '13:34:25', datetime.date(2016, 8, 3)), ('04:39:24', '19:54:25', datetime.date(2016, 8, 4)), ('21:34:25', '07:04:24', datetime.date(2016, 8, 5)), ('01:29:25', '17:09:25', datetime.date(2016, 8, 6)), ('15:09:25', '21:54:25', datetime.date(2016, 8, 7)), ('02:29:25', '15:54:24', datetime.date(2016, 8, 8)), ('20:09:26', '01:04:25', datetime.date(2016, 8, 9)), ('02:54:25', '01:04:25', datetime.date(2016, 8, 10)), ('01:24:25', '20:44:25', datetime.date(2016, 8, 11)), ('17:24:25', '11:34:25', datetime.date(2016, 8, 12)), ('16:54:24', '04:19:15', datetime.date(2016, 8, 13)), ('23:59:24', '22:19:25', datetime.date(2016, 8, 14)), ('22:24:25', '03:24:24', datetime.date(2016, 8, 15)), ('01:44:25', '20:04:25', datetime.date(2016, 8, 16)), ('00:19:25', '20:39:25', datetime.date(2016, 8, 17)), ('06:09:27', '23:29:25', datetime.date(2016, 8, 18)), ('23:19:24', '18:09:25', datetime.date(2016, 8, 19)), ('11:39:24', '08:49:25', datetime.date(2016, 8, 20)), ('15:14:24', '04:04:25', datetime.date(2016, 8, 21)), ('19:54:25', '08:49:24', datetime.date(2016, 8, 22)), ('14:29:25', '00:24:25', datetime.date(2016, 8, 23)), ('00:24:25', '22:24:25', datetime.date(2016, 8, 24)), ('07:24:25', '16:29:25', datetime.date(2016, 8, 25)), ('23:19:26', '07:19:25', datetime.date(2016, 8, 26)), ('00:04:26', '14:34:25', datetime.date(2016, 8, 27)), ('12:19:25', '15:39:25', datetime.date(2016, 8, 28)), ('16:14:26', '23:54:25', datetime.date(2016, 8, 29)), ('00:04:25', '06:29:25', datetime.date(2016, 8, 30)), ('17:54:26', '20:49:26', datetime.date(2016, 8, 31)))", "rowcount": 31, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('12:44:28', '23:09:25', datetime.date(2016, 8, 1)), ('17:34:25', '00:04:25', datetime.date(2016, 8, 2)), ('19:49:25', '13:34:25', datetime.date(2016, 8, 3)), ('04:39:24', '19:54:25', datetime.date(2016, 8, 4)), ('21:34:25', '07:04:24', datetime.date(2016, 8, 5)), ('01:29:25', '17:09:25', datetime.date(2016, 8, 6)), ('15:09:25', '21:54:25', datetime.date(2016, 8, 7)), ('02:29:25', '15:54:24', datetime.date(2016, 8, 8)), ('20:09:26', '01:04:25', datetime.date(2016, 8, 9)), ('02:54:25', '01:04:25', datetime.date(2016, 8, 10)), ('01:24:25', '20:44:25', datetime.date(2016, 8, 11)), ('17:24:25', '11:34:25', datetime.date(2016, 8, 12)), ('16:54:24', '04:19:15', datetime.date(2016, 8, 13)), ('23:59:24', '22:19:25', datetime.date(2016, 8, 14)), ('22:24:25', '03:24:24', datetime.date(2016, 8, 15)), ('01:44:25', '20:04:25', datetime.date(2016, 8, 16)), ('00:19:25', '20:39:25', datetime.date(2016, 8, 17)), ('06:09:27', '23:29:25', datetime.date(2016, 8, 18)), ('23:19:24', '18:09:25', datetime.date(2016, 8, 19)), ('11:39:24', '08:49:25', datetime.date(2016, 8, 20)), ('15:14:24', '04:04:25', datetime.date(2016, 8, 21)), ('19:54:25', '08:49:24', datetime.date(2016, 8, 22)), ('14:29:25', '00:24:25', datetime.date(2016, 8, 23)), ('00:24:25', '22:24:25', datetime.date(2016, 8, 24)), ('07:24:25', '16:29:25', datetime.date(2016, 8, 25)), ('23:19:26', '07:19:25', datetime.date(2016, 8, 26)), ('00:04:26', '14:34:25', datetime.date(2016, 8, 27)), ('12:19:25', '15:39:25', datetime.date(2016, 8, 28)), ('16:14:26', '23:54:25', datetime.date(2016, 8, 29)), ('00:04:25', '06:29:25', datetime.date(2016, 8, 30)), ('17:54:26', '20:49:26', datetime.date(2016, 8, 31)))", "rowcount": 31, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 444, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((102415334.30651997,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'sqlite.coins (id) -> historical (coin_id); sqlite.historical.coin_id -> sqlit...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 445, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((568.492413380107,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((568.492413380107,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 446, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((257.4744598327145,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((257.4744598327145,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 447, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('9',), ('Feathercoin',), ('Mincoin',), ('Freicoin',), ('CHNCoin',), ('BBQCoin',), ('Ixcoin',), ('BitBar',), ('Bytecoin',), ('WorldCoin',))", "rowcount": 10, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 448, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Novacoin',), ('Mincoin',), ('Freicoin',), ('BitBar',), ('WorldCoin',), ('Digitalcoin',), ('Goldcoin',), ('Argentum',), ('Fastcoin',), ('Megacoin',), ('Infinitecoin',), ('Primecoin',), ('Anoncoin',), ('CasinoCoin',), ('Bullion',), ('Emerald Crypto',), ('Quark',), ('Zetacoin',), ('SecureCoin',), ('Sexcoin',), ('TagCoin',), ('I0Coin',), ('FLO',), ('Joulecoin',), ('Datacoin',), ('BetaCoin',), ('GrandCoin',), ('Deutsche eMark',), ('NetCoin',), ('HoboNickels',), ('Tigercoin',), ('Orbitcoin',), ('Catcoin',), ('RonPaulCoin',), ('Mooncoin',), ('Dimecoin',), ('RedCoin',), ('TeslaCoin',), ('NobleCoin',), ('Nyancoin',), ('UltraCoin',), ('PotCoin',), ('Blakecoin',), ('HunterCoin',), ('CacheCoin',), ('Aricoin',), ('Auroracoin',), ('Pesetacoin',), ('Marscoin',), ('Cashcoin',), ('Pandacoin',), ('MAZA',), ('Uniform Fiscal Object',), ('LiteBar',), ('Photon',), ('Myriad',), ('DNotes',), ('Skeincoin',), ('Einsteinium',), ('Bitcoin Scrypt',), ('Coin(O)',), ('FlutterCoin',), ('OctoCoin',), ('e-Gulden',), ('PLNcoin',), ('AsiaCoin',), ('PopularCoin',), ('CannaCoin',), ('BlueCoin',), ('Canada eCoin',), ('Guncoin',), ('Pinkcoin',), ('Energycoin',), ('VeriCoin',), ('TEKcoin',), ('Litecoin Plus',), ('UnbreakableCoin',), ('CryptCoin',), ('SuperCoin',), ('BoostCoin',), ('Hyper',), ('BitQuark',), ('CloakCoin',), ('Fantomcoin',), ('ArtByte',), ('Donationcoin',), ('Piggycoin',), ('Startcoin',), ('Boolberry',), ('SHACoin',), ('BritCoin',), ('Quatloo',), ('Viacoin',), ('Triangles',), ('I/O Coin',), ('Cryptonite',), ('Carboncoin',), ('Titcoin',), ('Virtacoin',), ('Joincoin',), ('Bitmark',), ('Halcyon',), ('Donu',), ('Emercoin',), ('NativeCoin',), ('BunnyCoin',), ('Acoin',), ('FoldingCoin',), ('bitCNY',), ('Sterlingcoin',), ('Magi',), ('ExclusiveCoin',), ('Trollcoin',), ('GlobalBoost-Y',), ('Prime-XI',), ('Dashcoin',), ('Sativacoin',), ('SpreadCoin',), ('Blocknet',), ('Gapcoin',), ('GCN Coin',), ('Bitcoin Fast',), ('PayCoin',), ('Unitus',), ('IncaKoin',), ('SmileyCoin',), ('Bean Cash',), ('Wild Beast Block',), ('Gridcoin',), ('Sharkcoin',), ('SongCoin',), ('Crave',), ('Pura',), ('Neutron',), ('Xaurum',), ('Californium',), ('Advanced Internet Blocks',), ('Universal Currency',), ('Bata',), ('FujiCoin',), ('EuropeCoin',), ('The Cypherfunks',), ('GravityCoin',), ('IrishCoin',), ('Bitzeny',), ('BowsCoin',), ('AnarchistsPrime',), ('CompuCoin',), ('Hellenic Coin',), ('TransferCoin',), ('AmsterdamCoin',), ('Eurocoin',), ('VectorAI',), ('SpaceCoin',), ('Pakcoin',), ('Influxcoin',), ('Expanse',), ('Swing',), ('ParallelCoin',), ('Save and Gain',), ('Elite',), ('SOILcoin',), ('Adzcoin',), ('RussiaCoin',), ('EverGreenCoin',), ('Creditbit',), ('Litecred',), ('Yocoin',), ('Francs',), ('Evil Coin',), ('Asiadigicoin',), ('TrumpCoin',), ('C-Bit',), ('Independent Money System',), ('HOdlcoin',), ('BERNcash',), ('DigixDAO',), ('Fantasy Cash',), ('FuzzBalls',), ('HiCoin',), ('Zurcoin',), ('SixEleven',), ('2GIVE',), ('PlatinumBAR',), ('MarteXcoin',), ('Nullex',), ('Citadel',), ('RevolverCoin',), ('GoldBlocks',), ('Breakout',), ('Debitcoin',), ('Comet',), ('Rise',), ('LBRY Credits',), ('PutinCoin',), ('Syndicate',), ('Cryptojacks',), ('Steem Dollars',), ('Ardor',), ('808Coin',), ('VapersCoin',), ('TajCoin',), ('Experience Points',), ('B3Coin',), ('Neo',), ('Bitcloud',), ('Zayedcoin',), ('Tao',), ('Tellurion',), ('Dollarcoin',), ('MustangCoin',), ('PROUD Money',), ('Sequence',), ('Atomic Coin',), ('JobsCoin',), ('Sakuracoin',), ('Cubits',), ('BipCoin',), ('Zoin',), ('Lykke',), ('Golem',), ('Internet of People',), ('Nexium',), ('Vault Coin',), ('Pabyosi Coin (Special)',), ('Alias',), ('BenjiRolls',), ('iBank',), ('FirstCoin',), ('Solarflarecoin',), ('Eryllium',), ('Elysium',), ('Centurion',), ('Marijuanacoin',), ('PRCoin',), ('Argus',), ('MarxCoin',), ('Pascal Lite',), ('MiloCoin',), ('Musicoin',), ('ZSEcoin',), ('Impact',), ('DubaiCoin',), ('Darsek',), ('Matchpool',), ('Ultimate Secure Cash',), ('BlazerCoin',), ('HappyPay',), ('Coinonat',), ('Lunyr',), ('Qtum',), ('Aeternity',), ('Metaverse ETP',), ('MobileGo',), ('Neuro',), ('More Coin',), ('TenX',), ('Ecobit',), ('Gas',), ('Santiment Network Token',), ('CVCoin',), ('SkinCoin',), ('OracleChain',), ('Shadow Token',), ('BlockCAT',), ('Nebulas',), ('Achain',), ('Loopring',), ('Monetha',), ('Agrello',), ('Elixir',), ('VIBE',), ('Voise',), ('RChain',), ('FLiK',), ('BridgeCoin',), ('ALIS',), ('HelloGold',), ('Enigma',), ('Change',), ('Bitcoin Gold',), ('KuCoin Token',), ('EXRNchain',), ('LATOKEN',), ('NULS',), ('JavaScript Token',), ('Etherparty',), ('Revain',), ('Electroneum',), ('Raiden Network Token',), ('Ties.DB',), ('Upfiring',), ('bitJob',), ('Viuly',), ('EncrypGen',), ('Bodhi',), ('Quantstamp',), ('QASH',), ('Bitcoin Diamond',), ('Divi Exchange Token',), ('Flixxo',), ('Presearch',), ('CyberMiles',), ('IoT Chain',), ('Wabi',), ('Verify',), ('Uquid Coin',), ('ProChain',), ('Ignis',), ('Playkey',), ('Datum',), ('LockTrip',), ('Genaro Network',), ('aelf',), ('Bibox Token',), ('Single Collateral DAI ',), ('SophiaTX',), ('HTMLCOIN',), ('Utrust',), ('AppCoins',), ('Mixin',), ('GameChain System',), ('Coinlancer',), ('AI Doctor',), ('Show',), ('United Traders Token',), ('Spectre.ai Dividend Token',), ('Vezt',), ('ugChain',), ('Bottos',), ('Selfkey',), ('MOAC',), ('IOST',), ('Nitro',), ('Aurora DAO',), ('SingularityNET',), ('Scry.info',), ('Mobius',), ('Hydro Protocol',), ('Maggie',), ('Trinity Network Credit',), ('DATA',), ('Matrix AI Network',), ('CoinFi',), ('Zeepin',), ('CPChain',), ('Zilla',), ('EtherSportz',), ('LOCIcoin',), ('Dether',), ('Fusion',), ('Neurotoken',), ('Concensum',), ('Insights Network',), ('Ravencoin',), ('Sharpe Platform Token',), ('Loom Network',), ('Noah Coin',), ('Mithril',), ('PolySwarm',), ('Stakenet',), ('U Network',), ('AdHive',), ('DeviantCoin',), ('Auctus',), ('Zebi Token',), ('Nexo',), ('Hydro',), ('Sharder',), ('Digitex',), ('Plian',), ('XMax',), ('Project Pai',), ('Karatgold Coin',), ('BitZ Token',), ('Everipedia',), ('Blue Whale EXchange',), ('NIX',), ('Apollo Currency',), ('Vexanium',), ('Maximine Coin',), ('Birake',), ('Gemini Dollar',), ('Paxos Standard',), ('FREE Coin',), ('USD Coin',), ('MMOCoin',), ('Italian Lira',), ('SINOVATE',), ('CWV Chain',), ('MXC',), ('Aergo',), ('HedgeTrade',), ('RSK Infrastructure Framework',), ('v.systems',), ('Grin',), ('Stably USD',), ('SOLVE',), ('PlayChip',), ('Constant',), ('Fetch.ai',), ('BORA',), ('Flexacoin',), ('Theta Fuel',), ('Japan Content Token',), ('Nash',), ('OTOCASH',), ('Locus Chain',), ('Newton',), ('ThoreNext',), ('Diamond Platform Token',), ('Artfinity',), ('Origo',), ('StakeCubeCoin',), ('Bitsdaq',), ('EOSDT',), ('Contentos',), ('MovieBloc',), ('MX Token',), ('USDK',), ('Silverway',), ('Dusk Network',), ('ChainX',), ('Oasis City',), ('GateToken',), ('Cocos-BCX',), ('BHEX Token',), ('BitForex Token',), ('Ladder Network Token',), ('Netbox Coin',), ('VideoCoin',), ('Streamit Coin',), ('MineBee',), ('Lightyears',), ('NuCypher',), ('1irstGold',), ('Ultragate',), ('Beyondcoin',), ('Waves Enterprise',), ('Bitcoin Vault',), ('Jarvis Network',), ('Ghost',), ('Xaya',), ('DXdao',), ('Secret',), ('Simple Software Solutions',), ('MATH',), ('Orion Protocol',), ('Kadena',), ('Sylo',), ('renBTC',), ('Sora',), ('sDEFI',), ('MCDEX',), ('Blocery',), ('ECOMI',), ('Kulupu',), ('Hakka.Finance',), ('UniLayer',), ('NFT',), ('YAMv2',), ('Lien',), ('Falconswap',), ('Polkaswap',), ('DataHighway',), ('BUILD Finance',), ('REVV',), ('Empty Set Dollar',), ('Wing',), ('Percent',), ('Defi Shopping Stake',), ('Rotten',), ('yAxis',), ('DeFiner',), ('DerivaDAO',), ('Nsure.Network',), ('Celo Dollar',), ('cVault.finance',), ('Persistence',), ('Polyient Games Governance Token',), ('Wrapped Origin Axie',), ('CoFiX',), ('Atari Token',), ('Value Liquidity',), ('UniLend',), ('DAOFi',), ('Akash Network',), ('Pepemon Pepeballs',), ('ETG Finance',), ('UnFederalReserve',), ('CryptoFrog.Finance',), ('Gameswap',), ('Unifi Protocol DAO',), ('88mph',), ('Vanilla Network',), ('Pancake Bunny',), ('Bifrost (BFC)',), ('Zoracles',), ('Plasma Finance',), ('Honey',), ('Unit Protocol Duck',), ('AnRKey X',), ('SafePal',), ('MAPS',), ('COVER Protocol',), ('Shabu Shabu Finance',), ('BSCEX',), ('NFTX',), ('ZKSwap',), ('CheeseSwap',), ('Poolz Finance',), ('Paralink Network',), ('Mdex',), ('Onooks',), ('Umbrella Network',), ('Lotto',), ('APYSwap',), ('Goose Finance',), ('Premia',), ('DAOventures',), ('Midas Dollar',), ('Vesper',), ('AC Milan Fan Token',), ('RamenSwap',), ('Polkacity',), ('PRCY Coin',), ('SOTA Finance',), ('Wault Finance (OLD)',), ('FileStar',), ('xToken',), ('Bounce Token',), ('BSCPAD',), ('Vortex Defi',), ('Konomi Network',), ('Playcent',), ('Space Cow Boy',), ('Illuvium',), ('Inverse Finance',), ('Belt',), ('LABS Group',), ('Splyt',), ('Oracle Top 5 Tokens Index',), ('StakerDAO',), ('Ellipsis',), ('Uhive',), ('Scaleswap',), ('WHEAT Token',), ('UniFarm',), ('Refinable',), ('Chainswap',), ('DAIN',), ('Vulcan Forged PYR',), ('Crowny',), ('Phuture',), ('Synthetify',), ('Wault [New]',), ('Smaugs NFT',), ('ETHERLAND',), ('Cubiex Power',), ('MemePad',), ('CrossFi',), ('Coldstack',), ('JaguarSwap',), ('DinoExchange',), ('SingularityDAO',), ('Don-key',), ('My DeFi Pet',), ('Frenchie Network',), ('Sleepy Sloth Finance',), ('Bakery Tools',), ('xxxNifty',), ('Oviex',), ('YooShi',), ('HODL',), ('Netvrk',), ('Dotmoovs',), ('Lean',), ('Elk Finance',), ('Rabbit Finance',), ('Vega Protocol',), ('Convex CRV',), ('EthereumPay',), ('Alpha Impact',), ('Dina',), ('Waivlength',), ('Whale Fall',), ('Pornstar',), ('AirNFTs',), ('PureFi Protocol',))", "rowcount": 589, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '9.6.1\\n### mariadb Version: 5.7.32-0ubuntu' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 449, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Freicoin',), ('CHNCoin',), ('BBQCoin',), ('Ixcoin',), ('CHNCoin',), ('BitBar',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',))", "rowcount": 28, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 450, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 453, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 455, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,), (2,), (14,), (4,), (3,), (5,), (14,), (22,), (5,), (3,), (9,), (1,), (1,), (4,), (6,), (6,), (3,), (10,), (24,), (8,))", "rowcount": 20, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'retail_world.customers' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 463, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Guaran\u00e1 Fant\u00e1stica',), ('R\u00f6ssle Sauerkraut',), ('Raclette Courdavault',), ('Fl\u00f8temysost',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Guaran\u00e1 Fant\u00e1stica',), ('R\u00f6ssle Sauerkraut',), ('Raclette Courdavault',), ('Fl\u00f8temysost',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 471, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.5964035964035963,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) / NULLIF(COUNT(*), 0) AS proportion FROM customer c JOIN nation n ON c....' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 473, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 474, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.714912280701754,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.047149122807017545,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 475, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((995,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `lineitem`\\\\nColumns:\\\\n(`l_shipdate`, DATE)\\\\n(`l_orderkey`, BIGINT, p...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 476, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''SELECT COUNT(l_linenumber) FROM lineitem WHERE l_returnflag = \\\\'R\\\\' AND l_sh...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 477, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION retails.date_part does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 478, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((9.49050949050949,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(c_custkey) FROM customer ; SELECT CAST(AVG(CASE WHEN c_ac...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 479, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(p_partkey) FROM part' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 480, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 481, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.495614035087719,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'Question: What proportion of suppliers with a negative account balance who ar...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 482, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1067527\\n### Correct output SQL statement on mariadb:\\nSELECT COUNT(l_orderkey)...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 484, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((48.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 485, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26.829268292682926,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 486, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((23.3502538071066,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(customer.c_nationkey) FROM nation JOIN region ON nation.n...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 487, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-21.988263888888923,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '::FLOAT / NULLIF(SUM(CASE WHEN partsupp.ps_partkey = 1 THEN 1 ELSE 0 END), 0)...' at line 1\")", "exec_able": false}}, "TP": 4, "FP": 4, "FN": 0}
{"sql_id": 488, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((67.3992673992674,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(nation.n_nationkey) FROM nation JOIN region ON nation.n_r...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 489, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) / 12) - (cast(SUM(CASE WHEN EXTRACT(YEAR FROM l_shipdate) = 1996 THEN 1...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 490, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.091370558375634,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `customer`\\\\nColumns:\\\\n(`c_custkey`, BIGINT, primary key)\\\\n(`c_mktseg...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 491, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('RAIL',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('RAIL',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 492, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 493, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('-229'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION retails.IIF does not exist')", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 494, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '5.7.29-0ubuntu' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 495, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18.48151848151848,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(region.r_regionkey) FROM region JOIN nation ON region.r_r...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 496, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 497, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 498, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 500, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((25.641025641025642,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['']' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 501, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 502, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 503, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 504, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION retails.JULIANDay does not exist')", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 505, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((150,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 506, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 507, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.026030368763557,), (11.946050096339114,), (0.0,))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 508, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('60.0000000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `BillOfMaterials`\\\\nColumns:\\\\n(`BillOfMaterialsID`, integer, primary ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 4}
{"sql_id": 510, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((45.370370370370374,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(BusinessEntityID) FROM Employee WHERE SUBSTR(HireDate, 1,...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 511, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'ProductVendor.standard_price' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 512, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((77.994,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `ShipMethod`\\\\nColumns:\\\\n(`ShipMethodID`, BIGINT, primary key)\\\\n(`Nam...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 513, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0'), '17'), (Decimal('0'), '31'), (Decimal('0'), '32'), (Decimal('0'), '33'), (Decimal('0'), '41'), (Decimal('0'), '45'), (Decimal('0'), '57'), (Decimal('0'), '59'), (Decimal('0'), '62'), (Decimal('0'), '75'), (Decimal('0'), '77'), (Decimal('0'), '78'), (Decimal('0'), '80'), (Decimal('0'), '91'), (Decimal('0'), '92'), (Decimal('0'), '93'), (Decimal('0'), '94'), (Decimal('0'), '95'), (Decimal('0'), 'AB'), (Decimal('0'), 'AL'), (Decimal('0'), 'AZ'), (Decimal('0'), 'BB'), (Decimal('0'), 'BC'), (Decimal('0'), 'BY'), (Decimal('0'), 'CA'), (Decimal('0'), 'CO'), (Decimal('0'), 'CT'), (Decimal('0'), 'ENG'), (Decimal('0'), 'FL'), (Decimal('0'), 'GA'), (Decimal('0'), 'HE'), (Decimal('0'), 'HH'), (Decimal('0'), 'ID'), (Decimal('0'), 'IL'), (Decimal('0'), 'IN'), (Decimal('0'), 'KY'), (Decimal('0'), 'MA'), (Decimal('0'), 'MB'), (Decimal('0'), 'MD'), (Decimal('0'), 'ME'), (Decimal('0'), 'MI'), (Decimal('0'), 'MN'), (Decimal('0'), 'MO'), (Decimal('0'), 'MS'), (Decimal('0'), 'MT'), (Decimal('0'), 'NB'), (Decimal('0'), 'NC'), (Decimal('0'), 'NE'), (Decimal('0'), 'NH'), (Decimal('0'), 'NM'), (Decimal('0'), 'NSW'), (Decimal('0'), 'NV'), (Decimal('0'), 'NW'), (Decimal('0'), 'NY'), (Decimal('0'), 'OH'), (Decimal('0'), 'ON'), (Decimal('0'), 'OR'), (Decimal('0'), 'PA'), (Decimal('0'), 'QC'), (Decimal('0'), 'QLD'), (Decimal('0'), 'RI'), (Decimal('0'), 'SA'), (Decimal('0'), 'SC'), (Decimal('0'), 'SD'), (Decimal('0'), 'SL'), (Decimal('0'), 'TAS'), (Decimal('0'), 'TN'), (Decimal('0'), 'TX'), (Decimal('0'), 'UT'), (Decimal('0'), 'VA'), (Decimal('0'), 'VIC'), (Decimal('0'), 'WA'), (Decimal('0'), 'WI'), (Decimal('0'), 'WY'))", "rowcount": 74, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 514, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1431.5,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (1364.5,), (1364.5,), (1349.6,), (1349.6,), (1349.6,), (1364.5,), (2319.99,), (2319.99,), (2319.99,), (2294.99,), (2294.99,), (2294.99,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (44.54,), (61.92,), (120.27,), (44.54,), (61.92,), (120.27,), (594.83,), (594.83,), (594.83,), (594.83,), (594.83,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (63.5,), (63.5,), (63.5,), (69.99,), (69.99,), (69.99,), (120.0,), (159.0,), (54.99,), (1003.91,), (333.42,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (121.46,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (364.09,), (364.09,), (364.09,), (106.5,), (52.64,), (52.64,), (52.64,), (264.05,), (264.05,), (264.05,), (264.05,), (249.79,), (249.79,), (249.79,), (249.79,), (35.0,), (40.49,), (62.09,), (80.99,), (40.49,), (62.09,), (80.99,), (80.99,), (364.09,), (249.79,), (264.05,), (91.49,), (46.09,), (91.57,), (106.5,), (175.49,), (256.49,), (404.99,), (1214.85,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (1214.85,), (1214.85,), (1214.85,), (1700.99,), (1700.99,), (1700.99,), (1700.99,), (539.99,), (742.35,), (742.35,), (769.49,), (769.49,), (769.49,), (769.49,), (564.99,), (564.99,), (564.99,), (564.99,), (564.99,), (539.99,), (539.99,), (539.99,), (539.99,), (539.99,), (53.99,), (101.24,), (121.49,), (539.99,), (539.99,), (539.99,))", "rowcount": 156, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'works_cycles.product' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 515, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((44,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%Catherine%' AND t1.lastname ilike '%Ward%'' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 516, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('W',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('W',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',))", "rowcount": 8, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 517, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('W',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 518, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((290,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'works_cycles.SalespersonQuotaHistory' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 519, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 520, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((276, 750000.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 521, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((280,), (283,), (284,))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'mariadb (10.4.25-MariaDB)' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 522, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1200000.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'works_cycles.Salesperson' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 523, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((275,), (276,), (277,), (278,), (279,), (280,), (281,), (282,), (283,), (286,), (288,), (289,), (290,))", "rowcount": 13, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((275,), (276,), (277,), (278,), (279,), (280,), (281,), (282,), (283,), (286,), (288,), (289,), (290,))", "rowcount": 13, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 524, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((188715.0, 1.3384042553191489))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 525, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((13.4615,), (12.45,), (11.0,), (25.0,), (9.5,), (11.0,), (15.0,), (14.0,), (6.5,), (7.25,), (9.5,), (15.0,), (15.0,), (10.5769,))", "rowcount": 14, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-------------------------------------- ### ### Solution:' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 526, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((9,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '11.04\\n### mariadb Version:\\n15.1\\n### Access Rights:\\nPUBLIC' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 528, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 529, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((38.7647,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('38.7647'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 530, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((53, 14.4231))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Marketing%Specialist%' ORDER BY age DESC LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 531, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((254, 40))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION works_cycles.STRFTIME does not exist')", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 532, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2,), (2,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,), (2,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 533, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Frank', 'S', 'Pellow'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'works_cycles.employee' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 534, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Ken', 'S\u00e1nchez'), ('Terri', 'Duffy'), ('Roberto', 'Tamburello'), ('Gail', 'Erickson'), ('Jossef', 'Goldberg'), ('Dylan', 'Miller'), ('Diane', 'Margheim'), ('Gigi', 'Matthew'), ('Michael', 'Raheem'), ('Michael', 'Sullivan'), ('Sharon', 'Salavaria'), ('David', 'Bradley'), ('James', 'Hamilton'), ('Peter', 'Krebs'), ('Pilar', 'Ackerman'), ('Hazem', 'Abolrous'), ('Peng', 'Wu'), ('Gary', 'Altman'), ('Christian', 'Kleinerman'), ('Laura', 'Norman'), ('Paula', 'Barreto de Mattos'), ('David', 'Liu'), ('Barbara', 'Moreland'), ('Mike', 'Seamans'), ('Wendy', 'Kahn'), ('Sheela', 'Word'), ('Jean', 'Trenary'), ('Stephanie', 'Conroy'), ('Karen', 'Berg'), ('Ramesh', 'Meyyappan'), ('Dan', 'Bacon'), ('Fran\u00e7ois', 'Ajenstat'), ('Dan', 'Wilson'), ('Janaina', 'Bueno'), ('Brian', 'Welcker'), ('Stephen', 'Jiang'), ('Michael', 'Blythe'), ('Linda', 'Mitchell'), ('Jillian', 'Carson'), ('Garrett', 'Vargas'), ('Tsvi', 'Reiter'), ('Pamela', 'Ansman-Wolfe'), ('Shu', 'Ito'), ('Jos\u00e9', 'Saraiva'), ('David', 'Campbell'), ('Tete', 'Mensa-Annan'), ('Syed', 'Abbas'), ('Lynn', 'Tsoflias'), ('Amy', 'Alberts'), ('Rachel', 'Valdez'), ('Jae', 'Pak'), ('Ranjit', 'Varkey Chudukatil'))", "rowcount": 52, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 535, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Jo', 'Berry', 71))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'P.BirthDate' in 'field list'\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 4}
{"sql_id": 536, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pilar', 'Ackerman'), ('Matthias', 'Berndt'), ('Jimmy', 'Bischoff'))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'person.employee' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 537, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16.25,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 538, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((46.9828,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('46.9828'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 539, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Classic Vest, S', 'Team Athletic Co.'), ('Classic Vest, M', 'Team Athletic Co.'), ('Classic Vest, L', 'Team Athletic Co.'), (\"Women's Mountain Shorts, S\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, M\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, L\", 'Team Athletic Co.'), ('Water Bottle - 30 oz.', 'Green Lake Bike Company'), ('Mountain Bottle Cage', 'Green Lake Bike Company'), ('Road Bottle Cage', 'Green Lake Bike Company'), ('Patch Kit/8 Patches', 'Green Lake Bike Company'), ('Racing Socks, M', \"Jeff's Sporting Goods\"), ('Racing Socks, L', \"Jeff's Sporting Goods\"), ('Hitch Rack - 4-Bike', 'Green Lake Bike Company'), ('Bike Wash - Dissolver', 'Green Lake Bike Company'), ('Fender Set - Mountain', 'Green Lake Bike Company'), ('All-Purpose Bike Stand', 'Green Lake Bike Company'), ('Hydration Pack - 70 oz.', 'Green Lake Bike Company'), ('Short-Sleeve Classic Jersey, S', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, M', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, L', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, XL', 'Integrated Sport Products'), ('Rear Brakes', 'Superior Bicycles'), ('LL Mountain Seat/Saddle', 'First Rate Bicycles'), ('LL Mountain Seat/Saddle', 'Chicago City Saddles'), ('ML Mountain Seat/Saddle', 'First Rate Bicycles'), ('ML Mountain Seat/Saddle', 'Chicago City Saddles'), ('HL Mountain Seat/Saddle', 'Hybrid Bicycle Center'), ('HL Mountain Seat/Saddle', 'Chicago City Saddles'), ('LL Road Seat/Saddle', \"Hill's Bicycle Service\"), ('LL Road Seat/Saddle', 'Chicago City Saddles'), ('ML Road Seat/Saddle', \"Hill's Bicycle Service\"), ('ML Road Seat/Saddle', 'Chicago City Saddles'), ('HL Road Seat/Saddle', 'First Rate Bicycles'), ('HL Road Seat/Saddle', 'Chicago City Saddles'), ('LL Touring Seat/Saddle', 'Expert Bike Co'), ('LL Touring Seat/Saddle', 'Chicago City Saddles'), ('ML Touring Seat/Saddle', 'Expert Bike Co'), ('ML Touring Seat/Saddle', 'Chicago City Saddles'), ('HL Touring Seat/Saddle', 'Expert Bike Co'), ('HL Touring Seat/Saddle', 'Chicago City Saddles'), ('Mountain Tire Tube', 'Trikes, Inc.'), ('Road Tire Tube', 'Victory Bikes'), ('Touring Tire Tube', 'Victory Bikes'), ('LL Mountain Tire', 'Vista Road Bikes'), ('LL Mountain Tire', 'Sport Fan Co.'), ('ML Mountain Tire', 'Vista Road Bikes'), ('ML Mountain Tire', 'Sport Fan Co.'), ('HL Mountain Tire', 'Trikes, Inc.'), ('HL Mountain Tire', 'Sport Fan Co.'), ('LL Road Tire', 'Signature Cycles'), ('LL Road Tire', 'Professional Athletic Consultants'), ('ML Road Tire', 'Signature Cycles'), ('ML Road Tire', 'Professional Athletic Consultants'), ('HL Road Tire', 'Victory Bikes'), ('HL Road Tire', 'Professional Athletic Consultants'), ('Touring Tire', 'Victory Bikes'), ('Touring Tire', 'Professional Athletic Consultants'), ('LL Mountain Pedal', 'Greenwood Athletic Company'), ('LL Mountain Pedal', 'Crowley Sport'), ('ML Mountain Pedal', 'Greenwood Athletic Company'), ('ML Mountain Pedal', 'Crowley Sport'), ('HL Mountain Pedal', 'Inline Accessories'), ('LL Road Pedal', 'Mitchell Sports'), ('LL Road Pedal', 'Jackson Authority'), ('ML Road Pedal', 'Mitchell Sports'), ('ML Road Pedal', 'Jackson Authority'), ('HL Road Pedal', 'Compete Enterprises, Inc'), ('Touring Pedal', 'Bicycle Specialists'), ('Front Brakes', 'Superior Bicycles'), ('Chain', 'Varsity Sport Co.'))", "rowcount": 70, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '[]' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 540, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Terri', 'Duffy'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'works_cycles.employee' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 541, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((35, 'Production'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 543, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('23:00:00', '07:00:00'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'class Solution(object):\\n    def __init__(self, sqlite_schema=None, mariadb_sc...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 544, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((datetime.date(2010, 5, 30),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '--> SELECT T2.end_date FROM employee AS t1 JOIN employeedepartmenthistory AS ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 545, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57, 'Prasanna', 'E', 'Samarawickrama'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((729597, 'Gail', 'A', 'Erickson'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 546, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('EM',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1. Use the WITH clause to create a derived table if necessary. 2. For mysql c...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 547, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 548, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 549, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 550, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('910.0000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 6}
{"sql_id": 551, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 552, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 5, "FN": 6}
{"sql_id": 553, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('27'), Decimal('0')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'TestCase 1: Input SQL statement : SELECT SUM(IIF(T1.IMG_ID = 1, 1, 0)), SUM(I...' at line 1\")", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 554, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None, '73', '185', 47), (None, '74', '180', 44), (None, '73', '200', 43), (None, '75', '186', 40), (None, '74', '198', 46), ('Andrew Joseph Ernest', '72', '185', 45), ('Patrick', '74', '185', 60), ('Tomas Mikael', '71', '182', 54), (None, '72', '188', 45), ('Jose', '71', '182', 49), (None, '71', '180', 41))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '::text || T2.birthMon::text || T2.birthDay::text, 'YYYYMMDD')) AS age FROM Ma...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 555, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-0.6024811218985917,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `Master`\\\\nColumns:\\\\n(`playerID`, text)\\\\n(`coachID`, text)\\\\n(`hofID`,...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 556, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('NO',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('NO',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 557, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION hockey.IIF does not exist')", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 558, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0'), 50))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'hockey.master' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 559, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.097560975609756,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN countrylanguage AS...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 560, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.120936280884265,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN countrylanguage AS...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 561, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.8452181419627407,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / SUM(t1.surface_area) FROM country AS t1 JOIN countrylang AS t2 ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 563, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Classical Minutes: Musical Skills and Motivation | Tips and Insights | Instrumental Coaching | Onlin...',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%numeric%' ORDER BY length(podcasts.title) DESC NULLS LAST LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 564, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('1169'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SUM(sales_in_weather.units) FROM sales_in_weather WHERE EXTRACT(MONTH FROM sa...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 565, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('0'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'sqlite_to_mariadb_translate.sql' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 568, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('12444'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 569, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'NULLS LAST LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 570, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((datetime.date(2013, 7, 19),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((datetime.date(2013, 7, 19),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 571, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 4}
{"sql_id": 572, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) / 29 FROM (SELECT station_nbr FROM relation GROUP BY station_nbr ORDER ...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 573, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'COUNT(DISTINCT date) AS days FROM weather WHERE sunrise < '05:00:00'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 574, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 575, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((43.333333333333336,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 576, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('A', 5), ('AUS', 1), ('B', 10), ('BY', 1), ('CH', 17), ('CI', 2), ('CL', 1), ('CZ', 1), ('DJI', 1), ('EAU', 1), ('ET', 1), ('ETH', 2), ('FJI', 1), ('G', 1), ('GCA', 1), ('GUY', 1), ('H', 1), ('HCA', 1), ('IL', 1), ('IR', 1), ('JOR', 2), ('L', 1), ('MA', 1), ('NCA', 1), ('NEP', 1), ('PE', 1), ('RA', 1), ('RB', 1), ('RCA', 1), ('RCB', 1), ('RCH', 1), ('ROU', 1), ('RP', 1), ('RSA', 1), ('RT', 1), ('S', 1), ('SA', 3), ('SF', 1), ('SGP', 1), ('SUD', 1), ('SYR', 1), ('THA', 1), ('UAE', 1), ('WAN', 1), ('WL', 1), ('YV', 1))", "rowcount": 46, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'mondial_geo.organ' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 577, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SP',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'politics.indepenendence' in 'where clause'\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 579, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((174.54734802615644,), (114.49680350194552,), (174.54734802615644,), (11.932633788037775,), (174.54734802615644,))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'mondial_geo.organizations' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 581, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('GE',), ('BY',), ('MD',))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 582, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Belgium',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION mondial_geo.date_part does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 583, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('5'), Decimal('62.5000')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('0.1093'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 4, "FN": 1}
{"sql_id": 584, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Arab Bank for Economic Development in Africa',), ('Agency for Cultural and Technical Cooperation',), ('African, Caribbean, and Pacific Countries',), ('Arab Monetary Fund',), ('Central African States Development Bank',), ('Caribbean Community and Common Market',), ('Economic Community of the Great Lakes Countries',), ('Economic Community of West African States',), ('European Space Agency',), ('Economic and Social Commission for Western Asia',), ('Group of 19',), ('Group of 24',), ('Group of 8',), ('Islamic Development Bank',), ('International Energy Agency',), ('International Fund for Agricultural Development',), ('International Mobile Satellite Organization',), ('International Telecommunications Satellite Organization',), ('Latin American Economic System',), ('Latin American Integration Association',), ('Nordic Investment Bank',), ('South Pacific Forum',), ('United Nations Disengagement Observer Force',), ('United Nations Interim Force in Lebanon',), ('United Nations University',), ('West African Development Bank',), ('World Tourism Organization',))", "rowcount": 27, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'sqlite output goes here)' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 585, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1949',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 586, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('AG', datetime.date(1981, 11, 1), None, 'parliamentary democracy'), ('BDS', datetime.date(1966, 11, 30), None, 'parliamentary democracy'), ('BZ', datetime.date(1981, 9, 21), None, 'parliamentary democracy'), ('CZ', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('HR', datetime.date(1991, 6, 25), None, 'parliamentary democracy'), ('JA', datetime.date(1962, 8, 6), None, 'parliamentary democracy'), ('M', datetime.date(1964, 9, 21), None, 'parliamentary democracy'), ('MS', datetime.date(1968, 3, 12), None, 'parliamentary democracy'), ('PNG', datetime.date(1975, 9, 16), None, 'parliamentary democracy'), ('SK', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('SLB', datetime.date(1978, 7, 7), None, 'parliamentary democracy'), ('TT', datetime.date(1962, 8, 31), None, 'parliamentary democracy'), ('WD', datetime.date(1978, 11, 3), None, 'parliamentary democracy'), ('WG', datetime.date(1974, 2, 7), None, 'parliamentary democracy'), ('WL', datetime.date(1979, 2, 22), None, 'parliamentary democracy'), ('ZW', datetime.date(1980, 4, 18), None, 'parliamentary democracy'))", "rowcount": 16, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'Expected correctness: 100%.' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 587, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.563025210084033,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(Country) AS percentage_with_independence_in_1960 FROM pol...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 588, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 589, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((42, 'Brendan', 'Reilly', None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 591, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('493'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 592, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('53'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 593, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Glenn White',), ('Robert A. Rubio',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION chicago_crime.to_date does not exist')", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 594, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ': ['COUNT(date) AS COUNT FROM inspections WHERE EXTRACT(YEAR FROM date) = 201...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 595, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((523,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'inspections.business_id = businesses.business_id' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 596, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Tiramisu Kitchen',), ('OMNI S.F. Hotel - 2nd Floor Pantry',), (\"CHARLIE'S DELI CAFE\",), (\"ART'S CAFE\",), ('CAFE X + O',), ('Chowders',), ('STARBUCKS',), (\"DINO'S UNCLE VITO\",), ('OMNI S.F. Hotel - 3rd Floor Pantry',), ('OMNI S.F. Hotel - Employee Cafeteria',), (\"J.B.'S PLACE\",), ('Vega',), (\"Akiko's Sushi Bar\",), ('Akikos Sushi',), ('Broadway Dim Sum',), ('Silver Star Cafe and Deli',), (\"AFC SUSHI @ MOLLIE STONE'S 2\",), ('C & Y Cafe',), ('SECRET GARDEN TEA HOUSE',), ('NENAS RESTAURANT',), ('RADIO HABANA',), ('COURTYARD BY MARRIOTT-STAFF KITCHEN',), ('ARLEQUIN',), ('BAYSIDE COFFEE SHOP',), (\"JIM'S SMOKE SHOP\",), ('CONSTANS GROCERY',), ('PROGRESSIVE GROUNDS',), ('NOODLE EXPRESS',), (\"Grumpy's American Pub\",), ('Caffe Puccini',), ('New Moon Restaurant',), ('Gelato Classico Italian Ice',), ('Just Wonton',), ('MIKI RESTAURANT',), ('Toy Boat Dessert Cafe',), ('BEANERY INC.',), ('Marche Club of S.F.',), ('VIKINGS GIANT SUBMARINE',), ('LOS HERMANOS',), ('ON THE BRIDGE',), ('HAI SUN RESTAURANT',), (\"Ben & Jerry's\",), ('CORSAGNA',), ('Inga Donuts',), ('BISTRO AIX',), ('Bamboo Restaurant',), ('YUKOL PLACE THAI CUISINE',), ('SUBWAY',), ('MOULIN ROUGE',), ('PACIFIC CATCH',), ('The Posh Bagel',), ('FIRST CUP',), ('NAPOLI PIZZA RESTAURANT',), ('Miyako',), ('Polkers',), ('GORDO TAQUERIA #2',), ('GIANT SCOOP',), ('RINCONSITO SALVADORENO',), ('REINA RESTAURANT',), (\"ADELITA'S CAKES\",), ('SUPER STAR RESTAURANT',), ('SF MARRIOTT HOTEL PANTRY 4/F',), ('COW HOLLOW CATERING',), ('HAAGEN-DAZS #561',), ('HOUSE OF HUNAN',), ('Cafe Madeleine',), (\"Buster's\",), ('Caffe Roma Coffee Roasting Co',), ('Michelangelo Caffe',), ('Orale Orale Inc',), ('CHATZ',), (\"Calzone's\",), ('Rose Pistola',), ('Bohemian Cigar Store',), ('Vieni-Vieni',), ('North Beach Restaurant',), ('The Stinking Rose',), ('Yuet Lee Restaurant',), ('Garden of Eden',), (\"Sam's Pizza\",), ('Taqueria Zorro',), ('Franchino',), (\"Mara's\",), ('Il Pollaio',), ('Ristorante Ideale',), (\"Mo's Grill\",), ('Maykadeh Restaurant',), ('Columbus Cafe',), ('Silverhat Bar, Inc',), ('The House',), ('Dol-Ho Restaurant',), ('San Francisco Athletic Club',), ('Caffe Trieste',), ('Roxanne Cafe',), ('COURTYARD BY MARRIOTT-COFFEE SHOP',), ('Quickly',), (\"Viking's Giant Sub\",), ('Donut Time',), ('SHERATON PALACE - EMP.  CAFETERIA',), (\"MELISA'S CHINESE CUISINE\",), (\"Nizario's Pizza\",), ('Marnee Thai Restaurant',), ('Hamburger Haven',), ('Gordo Taqueria #1',), (\"Loi's Vietnamese Restaurant\",), ('CAJUN PACIFIC',), ('SAN FRANCISCO SOUP COMPANY',), (\"MUFFIN'S MUFFIN\",), ('TACO LOS ALTOS',), ('BURRITO EXPRESS',), ('YOU SEE SUSHI',), ('Caffe Del Sole',), ('TSING TAO RESTAURANT',), ('A-1 BAKERY',), ('EL BURRITO EXPRESS #2',), ('SUBWAY SANDWICHES & SALADS',), ('Golden Coffee',), ('BRAZEN HEAD RESTAURANT',), ('VIKINGS GIANT SUBMARINE SANDWICHES',), ('Kitchen Kura',), ('MARINA SUBMARINE',), ('BARBARY COAST PASTRY & COFFEE',), ('BEN WAH RESTAURANT',), ('ASHOKA Indian Cuisine',), ('MOZZARELLA DI BUFALA PIZZERIA II',), ('Cafe Bellini',), ('APERTO RESTAURANT',), ('MARIPOSA HUNTERS POINT YACHT CLUB',), ('BAY VIEW BOAT CLUB',), ('Piperade',), ('Boudin Bakery',), ('Hunan Restaurant',), ('Sushi Rapture',), (\"Courtyard by Marriott at Fisherman's Wharf\",), ('TRIPTYCH',), ('B & J QUARTER POUNDER BURGERS',), ('LA SANTANECA',), (\"BABY'S EATERY AND PALABOK\",), ('TAQUERIA EL FAROLITO NO. 2',), ('LOS PLANES DE RENDEROS',), ('Molinari Delicatessen',), ('Estia Restaurant',), ('Golden Boy Pizza',), ('New Hollywood Bakery & Restaurant',), ('Firenze By Night',), ('DELFINA RESTAURANT',), ('PATPONG THAI CUISINE, INC.',), ('Delicious Dim Sum',), ('House of Nanking',), (\"MARCELLO'S PIZZA\",), ('Sabra Restaurant',), ('Town & Country Club',), ('Ritz-Carlton SF - Club Lounge',), ('Cafe Ethiopia',), ('PEKING WOK RESTAURANT',), ('BUFFALO BURGERS RESTAURANT',), ('KENTUCKY FRIED CHICKEN #50',), ('SHANGRILA VEGETARIAN REST',), ('JAVA BEACH CAFE',), (\"L'AVENIDA\",), ('GOLDEN ISLAND CAFE',), ('MING TAI WUN TUN NOODLE, INC.',), ('VANIDA THAI KITCHEN',), (\"The Sunset's Best Seafood Restaurant\",), ('RAILROAD EXPRESSO CAFE',), ('HEUNG YUEN RESTAURANT',), ('BIG MOUTH BURGERS',), ('RINCON PERUANO RESTAURANT',), (\"CHAVITA'S MEXICAN RESTAURANT\",), ('IL BORGO',), ('PORK STORE CAFE',), ('CREPE EXPRESS',), ('BEAN THERE COFFEE & TEA',), ('UNIVERSAL CAFE',), ('HOANG DAT COFFEE SHOP',), ('STARBUCKS COFFEE #509',), (\"Peet's Coffee & Tea, Inc\",), ('Starbucks Coffee',), ('Star Bagels',), ('Aux Delices Vietnam',), ('POMELO ON CHURCH',), ('Boudin Petit Cafe',), ('Zona Rosa',), (\"TULLY'S  COFFEE\",), ('TEKKA JAPANESE RESTAURANT',), (\"PEET'S COFFEES & TEAS\",), (\"TAWAN'S THAI FOOD\",), ('ZAOH RESTAURANT',), ('JAVA SUPREME',), ('THANH THANH',), ('KABABAYAN FAST FOOD',), (\"KD'S GROG & GROCERY\",), ('NORTH BEACH PIZZA',), ('STARBUCKS COFFEE CO.',), (\"ORPHAN ANDY'S\",), ('ANCHOR OYSTER BAR INC.',), ('GORDO TAQUERIA #6',), ('SAN MIGUEL RESTAURANT #2',), ('HIGHER GROUNDS',), ('Beanery',), ('Cordon Bleu',), ('EXIT THEATRE',), ('LA TORTILLA',), (\"GASPARE'S PIZZA HOUSE & REST.\",), (\"YUMMA'S MED GRILL\",), ('La Copa Loca',), ('SWEET DELIGHT BAKERY',), ('MIFUNE DON',), ('CABLE CAR COFFEE CO',), ('Waterfront Bakery',), ('CAFE V',), ('KISS SEAFOOD',), ('BIO',), ('BAZAAR CAFE',), ('Whole Foods Steep Brew',), ('A2 CAFE',), (\"ZEKE'S DIAMOND BAR\",), ('Starbucks Coffee Company #6765',), ('Nonna Rose Restaurant',), ('CLUB WAZIEMA',), ('AT&T - Cognac Bar/ KITCHEN Room3232 [145080]',), ('AT&T - FIELD CLUB KITCHEN [145082]',), (\"CHOUQUET'S\",), (\"CITY'S CHOICE\",), ('Neiman Marcus On The Square',), ('Cafe Niebaum Coppola',), ('OMNI S.F. Hotel - Food & Beverage Storeroom',), (\"Uncle Vito's Pizza\",), ('Asia Chinese Food #2',), ('TANPOPO',), ('901 Columbus Cafe',), ('SF Bay Club - Court Cafe',), (\"Nick's Lighthouse\",), ('ESPERPENTO RESTAURANT',), ('Zazie',), ('BURGERMEISTER',), ('LE ZINC',), ('CLADDAGH COFFEE',), ('Tung Sing Restaurant',), ('CLEMENT BBQ RESTAURANT',), ('Bistro Burger',), ('LUPA TRATTORIA',), ('Casa Mexicana Restaurant',), ('KEZAR PUB',), ('AXUM',), ('MARTHA & BROS. COFFEE CO',), ('COURTYARD BY MARRIOTT-RESTAURANT',), ('PANDA EXPRESS',), ('Just For You Cafe Inc.',), (\"WORKING GIRLS' CAFE III\",), ('NORDSTROM CAFE BISTRO',), ('PRIMO PATIO CAFE',), ('New Lun Ting Cafe, Inc',), ('Plouf',), ('Raintree Cafe',), ('Lanna Restaurant',), ('Emporio Rulli Il Caffe at Union Square',), ('SEA BREEZE CAFE',), ('CAFE MUMS',), ('KFC/TACO BELL',), ('Osha Thai Noodle Cafe',), ('RED BALLOON',), (\"Fisherman's Pizzeria Inc [#50]\",), ('Dar Bar Pakistani/Indian Cusine',), ('FLORIO',), (\"Pete's Deli & Cafe\",), ('Academy Bar & Kitchen',), ('GARDEN HOUSE CAFE',), ('ATLAS CAFE',), ('CHEVRON #1512',), ('TAL-Y-TARA TEA & POLO SHOPPE',), ('MOONLIGHT CAFE',), ('Cesario',), ('Nob Hill Cafe',), ('Rogue Ales Public House',), ('Sushi on North Beach',), (\"Murphy's\",), ('The Old Ship Saloon',), ('Cafe Bastille',), (\"Ma's Dim Sum & Cafe\",), ('Battery Street Coffee Roastery',), (\"Pat's Cafe\",), ('Cafe Venue',), (\"Diller's Delicatessen\",), ('Latte Express #3',), ('Starbucks Coffee Company',), ('Escape From New York Pizza',), ('Cafe Tiramisu',), ('Pasquales',), ('Sorabol-Stonestown Galleria',), (\"MAI'S VIETNAMESE RESTAURANT\",), ('SIMPLE PLEASURES CAFE',), ('Clement Street Bar & Grill',), ('GEARY STREET BELLA PIZZA',), ('TARAVAL OKAZU YA',), ('Allstar Donuts',), ('LINCOLN PARK BAR AND GRILL',), ('Sunrise Deli',), ('YUMMY YUMMY VIETNAMESE RESTAURANT',), ('JITRA THAI CUISINE',), ('S.F. Pizza',), ('BULLSHEAD RESTAURANT',), ('Han Bat Korean Restaurant',), ('T C PASTRY',), ('Spiazzo',), ('AL-MASRI EGYPTIAN RESTAURANT',), ('KENTUCKY FRIED CHICKEN',), ('MY FAVORITE CAFE',), ('BURMA SUPERSTAR RESTAURANT',), ('GOLDEN CHARIOT BAKERY & REST',), ('PRESIDIO GOLF CLUB',), ('GENEVA STEAK HOUSE',), ('EL POLLO SUPREMO',), (\"Elaine's Kitchen\",), ('Bocadillos',), ('Hook a Cook',), ('CHEESE STEAK SHOP, THE',), ('EXTREME  PIZZA',), ('THE GROVE FILLMORE',), ('MONROE RESIDENCE CLUB',), ('SANPPO RESTAURANT',), ('QUEEN ANNE HOTEL',), ('ISUMIYA',), (\"Joanie's Diner Inc.\",), ('Chestnut Diner',), ('Hyde Street Seafood House & Raw Bar, Inc',), ('Cocotte',), ('ZA',), ('Zarzuela',), ('Sun Kwong Restaurant',), ('Amarena',), ('CAFE LOMBARD',), ('ATAMI SUSHI BAR & GRILL',), ('ZUSHI-PUZZLE',), ('Thai Spice Restaurant',), ('Street Restaurant',), (\"Peet's Coffee & Tea\",), ('KENTUCKY FRIED CHICKEN #249',), (\"CARL'S JUNIOR\",), ('Olympic Flame Cafe',), ('Original Perfect Hamburger',), ('Kim Thanh Restaurant',), ('ANH HONG PHU-NHUAN RESTAURANT',), ('A La Turca',), (\"LITTLE HENRY'S RESTAURANT\",), (\"NOAH'S BAGELS\",), ('DRAGON WELL',), ('B & M MEI SING RESTAURANT',), ('HOWARD STREET COFFEE ROASTERY CAFE',), ('THE BITTER END',), ('FRINGALE',), ('HARD KNOX CAFE',), ('Caffe Sapore',))", "rowcount": 353, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Tiramisu Kitchen',), ('OMNI S.F. Hotel - 2nd Floor Pantry',), (\"CHARLIE'S DELI CAFE\",), (\"ART'S CAFE\",), ('CAFE X + O',), ('Chowders',), ('STARBUCKS',), (\"DINO'S UNCLE VITO\",), ('OMNI S.F. Hotel - 3rd Floor Pantry',), ('OMNI S.F. Hotel - Employee Cafeteria',), (\"J.B.'S PLACE\",), ('Vega',), (\"Akiko's Sushi Bar\",), ('Akikos Sushi',), ('Broadway Dim Sum',), ('Silver Star Cafe and Deli',), (\"AFC SUSHI @ MOLLIE STONE'S 2\",), ('C & Y Cafe',), ('SECRET GARDEN TEA HOUSE',), ('NENAS RESTAURANT',), ('RADIO HABANA',), ('COURTYARD BY MARRIOTT-STAFF KITCHEN',), ('ARLEQUIN',), ('BAYSIDE COFFEE SHOP',), (\"JIM'S SMOKE SHOP\",), ('CONSTANS GROCERY',), ('PROGRESSIVE GROUNDS',), ('NOODLE EXPRESS',), (\"Grumpy's American Pub\",), ('Caffe Puccini',), ('New Moon Restaurant',), ('Gelato Classico Italian Ice',), ('Just Wonton',), ('MIKI RESTAURANT',), ('Toy Boat Dessert Cafe',), ('BEANERY INC.',), ('Marche Club of S.F.',), ('VIKINGS GIANT SUBMARINE',), ('LOS HERMANOS',), ('ON THE BRIDGE',), ('HAI SUN RESTAURANT',), (\"Ben & Jerry's\",), ('CORSAGNA',), ('Inga Donuts',), ('BISTRO AIX',), ('Bamboo Restaurant',), ('YUKOL PLACE THAI CUISINE',), ('SUBWAY',), ('MOULIN ROUGE',), ('PACIFIC CATCH',), ('The Posh Bagel',), ('FIRST CUP',), ('NAPOLI PIZZA RESTAURANT',), ('Miyako',), ('Polkers',), ('GORDO TAQUERIA #2',), ('GIANT SCOOP',), ('RINCONSITO SALVADORENO',), ('REINA RESTAURANT',), (\"ADELITA'S CAKES\",), ('SUPER STAR RESTAURANT',), ('SF MARRIOTT HOTEL PANTRY 4/F',), ('COW HOLLOW CATERING',), ('HAAGEN-DAZS #561',), ('HOUSE OF HUNAN',), ('Cafe Madeleine',), (\"Buster's\",), ('Caffe Roma Coffee Roasting Co',), ('Michelangelo Caffe',), ('Orale Orale Inc',), ('CHATZ',), (\"Calzone's\",), ('Rose Pistola',), ('Bohemian Cigar Store',), ('Vieni-Vieni',), ('North Beach Restaurant',), ('The Stinking Rose',), ('Yuet Lee Restaurant',), ('Garden of Eden',), (\"Sam's Pizza\",), ('Taqueria Zorro',), ('Franchino',), (\"Mara's\",), ('Il Pollaio',), ('Ristorante Ideale',), (\"Mo's Grill\",), ('Maykadeh Restaurant',), ('Columbus Cafe',), ('Silverhat Bar, Inc',), ('The House',), ('Dol-Ho Restaurant',), ('San Francisco Athletic Club',), ('Caffe Trieste',), ('Roxanne Cafe',), ('COURTYARD BY MARRIOTT-COFFEE SHOP',), ('Quickly',), (\"Viking's Giant Sub\",), ('Donut Time',), ('SHERATON PALACE - EMP.  CAFETERIA',), (\"MELISA'S CHINESE CUISINE\",), (\"Nizario's Pizza\",), ('Marnee Thai Restaurant',), ('Hamburger Haven',), ('Gordo Taqueria #1',), (\"Loi's Vietnamese Restaurant\",), ('CAJUN PACIFIC',), ('SAN FRANCISCO SOUP COMPANY',), (\"MUFFIN'S MUFFIN\",), ('TACO LOS ALTOS',), ('BURRITO EXPRESS',), ('YOU SEE SUSHI',), ('Caffe Del Sole',), ('TSING TAO RESTAURANT',), ('A-1 BAKERY',), ('EL BURRITO EXPRESS #2',), ('SUBWAY SANDWICHES & SALADS',), ('Golden Coffee',), ('BRAZEN HEAD RESTAURANT',), ('VIKINGS GIANT SUBMARINE SANDWICHES',), ('Kitchen Kura',), ('MARINA SUBMARINE',), ('BARBARY COAST PASTRY & COFFEE',), ('BEN WAH RESTAURANT',), ('ASHOKA Indian Cuisine',), ('MOZZARELLA DI BUFALA PIZZERIA II',), ('Cafe Bellini',), ('APERTO RESTAURANT',), ('MARIPOSA HUNTERS POINT YACHT CLUB',), ('BAY VIEW BOAT CLUB',), ('Piperade',), ('Boudin Bakery',), ('Hunan Restaurant',), ('Sushi Rapture',), (\"Courtyard by Marriott at Fisherman's Wharf\",), ('TRIPTYCH',), ('B & J QUARTER POUNDER BURGERS',), ('LA SANTANECA',), (\"BABY'S EATERY AND PALABOK\",), ('TAQUERIA EL FAROLITO NO. 2',), ('LOS PLANES DE RENDEROS',), ('Molinari Delicatessen',), ('Estia Restaurant',), ('Golden Boy Pizza',), ('New Hollywood Bakery & Restaurant',), ('Firenze By Night',), ('DELFINA RESTAURANT',), ('PATPONG THAI CUISINE, INC.',), ('Delicious Dim Sum',), ('House of Nanking',), (\"MARCELLO'S PIZZA\",), ('Sabra Restaurant',), ('Town & Country Club',), ('Ritz-Carlton SF - Club Lounge',), ('Cafe Ethiopia',), ('PEKING WOK RESTAURANT',), ('BUFFALO BURGERS RESTAURANT',), ('KENTUCKY FRIED CHICKEN #50',), ('SHANGRILA VEGETARIAN REST',), ('JAVA BEACH CAFE',), (\"L'AVENIDA\",), ('GOLDEN ISLAND CAFE',), ('MING TAI WUN TUN NOODLE, INC.',), ('VANIDA THAI KITCHEN',), (\"The Sunset's Best Seafood Restaurant\",), ('RAILROAD EXPRESSO CAFE',), ('HEUNG YUEN RESTAURANT',), ('BIG MOUTH BURGERS',), ('RINCON PERUANO RESTAURANT',), (\"CHAVITA'S MEXICAN RESTAURANT\",), ('IL BORGO',), ('PORK STORE CAFE',), ('CREPE EXPRESS',), ('BEAN THERE COFFEE & TEA',), ('UNIVERSAL CAFE',), ('HOANG DAT COFFEE SHOP',), ('STARBUCKS COFFEE #509',), (\"Peet's Coffee & Tea, Inc\",), ('Starbucks Coffee',), ('Star Bagels',), ('Aux Delices Vietnam',), ('POMELO ON CHURCH',), ('Boudin Petit Cafe',), ('Zona Rosa',), (\"TULLY'S  COFFEE\",), ('TEKKA JAPANESE RESTAURANT',), (\"PEET'S COFFEES & TEAS\",), (\"TAWAN'S THAI FOOD\",), ('ZAOH RESTAURANT',), ('JAVA SUPREME',), ('THANH THANH',), ('KABABAYAN FAST FOOD',), (\"KD'S GROG & GROCERY\",), ('NORTH BEACH PIZZA',), ('STARBUCKS COFFEE CO.',), (\"ORPHAN ANDY'S\",), ('ANCHOR OYSTER BAR INC.',), ('GORDO TAQUERIA #6',), ('SAN MIGUEL RESTAURANT #2',), ('HIGHER GROUNDS',), ('Beanery',), ('Cordon Bleu',), ('EXIT THEATRE',), ('LA TORTILLA',), (\"GASPARE'S PIZZA HOUSE & REST.\",), (\"YUMMA'S MED GRILL\",), ('La Copa Loca',), ('SWEET DELIGHT BAKERY',), ('MIFUNE DON',), ('CABLE CAR COFFEE CO',), ('Waterfront Bakery',), ('CAFE V',), ('KISS SEAFOOD',), ('BIO',), ('BAZAAR CAFE',), ('Whole Foods Steep Brew',), ('A2 CAFE',), (\"ZEKE'S DIAMOND BAR\",), ('Starbucks Coffee Company #6765',), ('Nonna Rose Restaurant',), ('CLUB WAZIEMA',), ('AT&T - Cognac Bar/ KITCHEN Room3232 [145080]',), ('AT&T - FIELD CLUB KITCHEN [145082]',), (\"CHOUQUET'S\",), (\"CITY'S CHOICE\",), ('Neiman Marcus On The Square',), ('Cafe Niebaum Coppola',), ('OMNI S.F. Hotel - Food & Beverage Storeroom',), (\"Uncle Vito's Pizza\",), ('Asia Chinese Food #2',), ('TANPOPO',), ('901 Columbus Cafe',), ('SF Bay Club - Court Cafe',), (\"Nick's Lighthouse\",), ('ESPERPENTO RESTAURANT',), ('Zazie',), ('BURGERMEISTER',), ('LE ZINC',), ('CLADDAGH COFFEE',), ('Tung Sing Restaurant',), ('CLEMENT BBQ RESTAURANT',), ('Bistro Burger',), ('LUPA TRATTORIA',), ('Casa Mexicana Restaurant',), ('KEZAR PUB',), ('AXUM',), ('MARTHA & BROS. COFFEE CO',), ('COURTYARD BY MARRIOTT-RESTAURANT',), ('PANDA EXPRESS',), ('Just For You Cafe Inc.',), (\"WORKING GIRLS' CAFE III\",), ('NORDSTROM CAFE BISTRO',), ('PRIMO PATIO CAFE',), ('New Lun Ting Cafe, Inc',), ('Plouf',), ('Raintree Cafe',), ('Lanna Restaurant',), ('Emporio Rulli Il Caffe at Union Square',), ('SEA BREEZE CAFE',), ('CAFE MUMS',), ('KFC/TACO BELL',), ('Osha Thai Noodle Cafe',), ('RED BALLOON',), (\"Fisherman's Pizzeria Inc [#50]\",), ('Dar Bar Pakistani/Indian Cusine',), ('FLORIO',), (\"Pete's Deli & Cafe\",), ('Academy Bar & Kitchen',), ('GARDEN HOUSE CAFE',), ('ATLAS CAFE',), ('CHEVRON #1512',), ('TAL-Y-TARA TEA & POLO SHOPPE',), ('MOONLIGHT CAFE',), ('Cesario',), ('Nob Hill Cafe',), ('Rogue Ales Public House',), ('Sushi on North Beach',), (\"Murphy's\",), ('The Old Ship Saloon',), ('Cafe Bastille',), (\"Ma's Dim Sum & Cafe\",), ('Battery Street Coffee Roastery',), (\"Pat's Cafe\",), ('Cafe Venue',), (\"Diller's Delicatessen\",), ('Latte Express #3',), ('Starbucks Coffee Company',), ('Escape From New York Pizza',), ('Cafe Tiramisu',), ('Pasquales',), ('Sorabol-Stonestown Galleria',), (\"MAI'S VIETNAMESE RESTAURANT\",), ('SIMPLE PLEASURES CAFE',), ('Clement Street Bar & Grill',), ('GEARY STREET BELLA PIZZA',), ('TARAVAL OKAZU YA',), ('Allstar Donuts',), ('LINCOLN PARK BAR AND GRILL',), ('Sunrise Deli',), ('YUMMY YUMMY VIETNAMESE RESTAURANT',), ('JITRA THAI CUISINE',), ('S.F. Pizza',), ('BULLSHEAD RESTAURANT',), ('Han Bat Korean Restaurant',), ('T C PASTRY',), ('Spiazzo',), ('AL-MASRI EGYPTIAN RESTAURANT',), ('KENTUCKY FRIED CHICKEN',), ('MY FAVORITE CAFE',), ('BURMA SUPERSTAR RESTAURANT',), ('GOLDEN CHARIOT BAKERY & REST',), ('PRESIDIO GOLF CLUB',), ('GENEVA STEAK HOUSE',), ('EL POLLO SUPREMO',), (\"Elaine's Kitchen\",), ('Bocadillos',), ('Hook a Cook',), ('CHEESE STEAK SHOP, THE',), ('EXTREME  PIZZA',), ('THE GROVE FILLMORE',), ('MONROE RESIDENCE CLUB',), ('SANPPO RESTAURANT',), ('QUEEN ANNE HOTEL',), ('ISUMIYA',), (\"Joanie's Diner Inc.\",), ('Chestnut Diner',), ('Hyde Street Seafood House & Raw Bar, Inc',), ('Cocotte',), ('ZA',), ('Zarzuela',), ('Sun Kwong Restaurant',), ('Amarena',), ('CAFE LOMBARD',), ('ATAMI SUSHI BAR & GRILL',), ('ZUSHI-PUZZLE',), ('Thai Spice Restaurant',), ('Street Restaurant',), (\"Peet's Coffee & Tea\",), ('KENTUCKY FRIED CHICKEN #249',), (\"CARL'S JUNIOR\",), ('Olympic Flame Cafe',), ('Original Perfect Hamburger',), ('Kim Thanh Restaurant',), ('ANH HONG PHU-NHUAN RESTAURANT',), ('A La Turca',), (\"LITTLE HENRY'S RESTAURANT\",), (\"NOAH'S BAGELS\",), ('DRAGON WELL',), ('B & M MEI SING RESTAURANT',), ('HOWARD STREET COFFEE ROASTERY CAFE',), ('THE BITTER END',), ('FRINGALE',), ('HARD KNOX CAFE',), ('Caffe Sapore',))", "rowcount": 353, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 597, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((374,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `businesses`\\\\nColumns:\\\\n(`business_id`, integer, primary key)\\\\n(`nam...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 598, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''SELECT COUNT(business_id) FROM inspections WHERE EXTRACT(YEAR FROM date) = 2...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 599, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 600, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('SF',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SF',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 601, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ilike '%Contamined%or%adulterated%food'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 602, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 603, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' '-' || (rowNumber - 1) || ' years') HAVING COUNT(years) >= 4 ) AS subquery G...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 604, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('74.0000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 606, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 607, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `violations`\\\\nColumns:\\\\n(`business_id`, integer)\\\\n(`date`, date)\\\\n(`...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 608, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'COUNT(T2.business_id)' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 609, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.818181818181817,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 610, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.7037037037037037,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ': (expected_output, actual_output) = ('50.0', '50.0')' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 611, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('222-23-2222',), ('444-45-4444',), ('500-50-0505',), ('925-45-7116',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('222-23-2222',), ('444-45-4444',), ('500-50-0505',), ('925-45-7116',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 612, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('22500'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 613, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'QUERY SELECT COUNT(*) AS total_records FROM employee AS t1 INNER JOIN positio...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 614, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'real)) AS avg_salary FROM employee t1 INNER JOIN position t2 ON t1.positionid...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 615, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.962962962962955,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'real)) - CAST(replace(substring(t2.minsalary, 4), ',', '') AS real)) / NULLIF...' at line 1\")", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 0}
{"sql_id": 616, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((66.66666666666667,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \\'assert sqlite_to_mariadb(\"SELECT 100 * (CAST(REPLACE(SUBSTR(T2.maxsalary, 4),...\\' at line 1')", "exec_able": false}}, "TP": 3, "FP": 5, "FN": 0}
{"sql_id": 617, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 618, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('David', 'Whitehead'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) = ( SELECT MAX(CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS REAL)) FROM ...' at line 1\")", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 619, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) < 100000' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 620, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('20333.3333'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL)) FROM employee JOIN position ON employee.positionID = position.position...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 621, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((55250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'real)) FROM employee T1 JOIN position T2 ON T1.positionID = T2.positionID WHE...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 622, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('14583.333333'), 'David', 'Whitehead', 'Regional Manager', 'Boston'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL)) AS average_salary, firstname, lastname, positiontitle, locationcity FR...' at line 1\")", "exec_able": false}}, "TP": 3, "FP": 4, "FN": 0}
{"sql_id": 623, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Mountain View',), ('San Francisco',), ('San Jose',), ('Palo Alto',), ('Redwood City',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1146, \"Table 'bike_share_1.onsion' doesn't exist\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 8}
{"sql_id": 624, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1054, \"Unknown column 'T1.rowid' in 'on clause'\")", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 625, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((29613, 463), (118078, 334), (171382, 74947), (176836, 99993), (204767, 687), (207078, 66570), (256927, 90213), (261543, 620), (261544, 617))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ONweather.date=SUBSTR(CAST(trip.start_dateAStext), 1, INSTR(trip.start_date,'...' at line 1\")", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 626, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('72411.0632'), Decimal('291.6740')))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 627, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('1',), ('Ryland Park',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 628, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2014',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%rain%' THEN 1 ELSE 0 END) DESC LIMIT 1' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 629, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('San Jose Diridon Caltrain Station', '8/6/2013', 'San Jose'), ('San Jose Civic Center', '8/5/2013', 'San Jose'), ('Santa Clara at Almaden', '8/6/2013', 'San Jose'), ('Adobe on Almaden', '8/5/2013', 'San Jose'), ('San Pedro Square', '8/7/2013', 'San Jose'), ('Paseo de San Antonio', '8/7/2013', 'San Jose'), ('San Salvador at 1st', '8/5/2013', 'San Jose'), ('Japantown', '8/5/2013', 'San Jose'), ('San Jose City Hall', '8/6/2013', 'San Jose'), ('MLK Library', '8/6/2013', 'San Jose'), ('SJSU 4th at San Carlos', '8/7/2013', 'San Jose'), ('St James Park', '8/6/2013', 'San Jose'), ('Arena Green / SAP Center', '8/5/2013', 'San Jose'), ('SJSU - San Salvador at 9th', '8/7/2013', 'San Jose'), ('Franklin at Maple', '8/12/2013', 'Redwood City'), ('Redwood City Caltrain Station', '8/15/2013', 'Redwood City'), ('San Mateo County Center', '8/15/2013', 'Redwood City'), ('Redwood City Public Library', '8/12/2013', 'Redwood City'), ('Stanford in Redwood City', '8/12/2013', 'Redwood City'), ('Redwood City Medical Center', '8/12/2013', 'Redwood City'), ('Mountain View City Hall', '8/16/2013', 'Mountain View'), ('Mountain View Caltrain Station', '8/15/2013', 'Mountain View'), ('San Antonio Caltrain Station', '8/15/2013', 'Mountain View'), ('Evelyn Park and Ride', '8/16/2013', 'Mountain View'), ('San Antonio Shopping Center', '12/31/2013', 'Mountain View'), ('Castro Street and El Camino Real', '12/31/2013', 'Mountain View'), ('Rengstorff Avenue / California Street', '8/16/2013', 'Mountain View'), ('Palo Alto Caltrain Station', '8/14/2013', 'Palo Alto'), ('University and Emerson', '8/15/2013', 'Palo Alto'), ('California Ave Caltrain Station', '8/14/2013', 'Palo Alto'), ('Cowper at University', '8/14/2013', 'Palo Alto'), ('Park at Olive', '8/14/2013', 'Palo Alto'), ('Powell Street BART', '8/25/2013', 'San Francisco'), ('Clay at Battery', '8/19/2013', 'San Francisco'), ('Davis at Jackson', '8/19/2013', 'San Francisco'), ('Commercial at Montgomery', '8/19/2013', 'San Francisco'), ('Washington at Kearney', '8/19/2013', 'San Francisco'), ('Post at Kearney', '8/19/2013', 'San Francisco'), ('Embarcadero at Vallejo', '8/19/2013', 'San Francisco'), ('Spear at Folsom', '8/20/2013', 'San Francisco'), ('Harry Bridges Plaza (Ferry Building)', '8/20/2013', 'San Francisco'), ('Embarcadero at Folsom', '8/20/2013', 'San Francisco'), ('Embarcadero at Bryant', '8/20/2013', 'San Francisco'), ('Temporary Transbay Terminal (Howard at Beale)', '8/20/2013', 'San Francisco'), ('Beale at Market', '8/20/2013', 'San Francisco'), ('5th at Howard', '8/21/2013', 'San Francisco'), ('San Francisco City Hall', '8/21/2013', 'San Francisco'), ('Golden Gate at Polk', '8/21/2013', 'San Francisco'), ('Embarcadero at Sansome', '8/21/2013', 'San Francisco'), ('2nd at Townsend', '8/22/2013', 'San Francisco'), ('2nd at Folsom', '8/22/2013', 'San Francisco'), ('Howard at 2nd', '8/22/2013', 'San Francisco'), ('2nd at South Park', '8/22/2013', 'San Francisco'), ('Townsend at 7th', '8/22/2013', 'San Francisco'), ('South Van Ness at Market', '8/23/2013', 'San Francisco'), ('Market at 10th', '8/23/2013', 'San Francisco'), ('Yerba Buena Center of the Arts (3rd @ Howard)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain 2 (330 Townsend)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain (Townsend at 4th)', '8/23/2013', 'San Francisco'), ('Powell at Post (Union Square)', '8/23/2013', 'San Francisco'), ('Civic Center BART (7th at Market)', '8/23/2013', 'San Francisco'), ('Grant Avenue at Columbus Avenue', '8/21/2013', 'San Francisco'), ('Steuart at Market', '8/25/2013', 'San Francisco'), ('Mechanics Plaza (Market at Battery)', '8/25/2013', 'San Francisco'), ('Market at 4th', '8/25/2013', 'San Francisco'), ('Market at Sansome', '8/25/2013', 'San Francisco'), ('Santa Clara County Civic Center', '12/31/2013', 'San Jose'))", "rowcount": 67, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'When working with date and time values, be sure to use functions that will pr...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 8}
{"sql_id": 630, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 631, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['start_date': '6/%/2013%']' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 632, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('12/2/2013', 477), ('12/2/2013', 348), ('12/2/2013', 576), ('12/2/2013', 562), ('12/2/2013', 616), ('12/2/2013', 462), ('12/2/2013', 585), ('12/2/2013', 553), ('12/2/2013', 355), ('12/2/2013', 319), ('12/2/2013', 628), ('12/2/2013', 514), ('12/2/2013', 488), ('12/2/2013', 567), ('12/2/2013', 483), ('12/2/2013', 532), ('12/2/2013', 335), ('12/2/2013', 394), ('12/2/2013', 573), ('12/2/2013', 580), ('12/2/2013', 482), ('12/2/2013', 270), ('12/2/2013', 522), ('12/2/2013', 379), ('12/2/2013', 351), ('12/2/2013', 530), ('12/2/2013', 326), ('12/2/2013', 592), ('12/2/2013', 370), ('12/2/2013', 584), ('12/2/2013', 501), ('12/2/2013', 584), ('12/2/2013', 474), ('12/2/2013', 503), ('12/2/2013', 432), ('12/2/2013', 593), ('12/2/2013', 613), ('12/2/2013', 407), ('12/2/2013', 317), ('12/2/2013', 561), ('12/2/2013', 444), ('12/2/2013', 630), ('12/2/2013', 503), ('12/2/2013', 320), ('12/2/2013', 623), ('12/2/2013', 482), ('12/2/2013', 137), ('12/2/2013', 394), ('12/2/2013', 630), ('12/2/2013', 436), ('12/2/2013', 296), ('12/2/2013', 444), ('12/2/2013', 456))", "rowcount": 53, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%events%'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 633, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'text), 1, instr(t1.start_date, ' ') - 1) WHERE t2.date like '8/27/2013' AND t...' at line 1\")", "exec_able": false}}, "TP": 4, "FP": 5, "FN": 0}
{"sql_id": 634, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((Decimal('1'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('1'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 636, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('327'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.32667332667332666,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 637, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('58.7360'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 638, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'postgresql' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 639, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'postgres' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 640, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('68'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 641, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('13'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((Decimal('0'),))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 642, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Powell at Post (Union Square)',), ('Temporary Transbay Terminal (Howard at Beale)',), ('5th at Howard',), ('Embarcadero at Folsom',), ('Market at 4th',), ('2nd at Folsom',), ('Townsend at 7th',), ('Market at Sansome',), ('Powell Street BART',), ('Civic Center BART (7th at Market)',), ('Grant Avenue at Columbus Avenue',), ('San Francisco Caltrain 2 (330 Townsend)',), ('San Francisco Caltrain (Townsend at 4th)',), ('Harry Bridges Plaza (Ferry Building)',), ('Howard at 2nd',), ('Spear at Folsom',), ('Commercial at Montgomery',), ('Embarcadero at Bryant',), ('Embarcadero at Vallejo',), ('Clay at Battery',), ('2nd at South Park',), ('2nd at Townsend',), ('Castro Street and El Camino Real',))", "rowcount": 23, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'CREATE TABLE IF NOT EXISTS `weather` (`date` TEXT, `max_temperature_f` BIGINT...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 644, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('100'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'http://sqlfiddle.com/#!/a285e/27610' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 645, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('23.3333333'), Decimal('20.0000000'), Decimal('16.1111111')), (Decimal('25.5555556'), Decimal('20.5555556'), Decimal('15.5555556')), (Decimal('21.6666667'), Decimal('17.7777778'), Decimal('13.8888889')))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 2, "FN": 0}
{"sql_id": 646, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 647, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%RutH%' AND T1.last_name ILIKE '%MARTINEZ%' AND EXTRACT(MONTH FROM T2....' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 648, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'class TestClass(unittest.TestCase):  ### Test Case # 1:  Input SQL statement:...' at line 1\")", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 649, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.703747619741146,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 650, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.571428571428571,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) / NULLIF(SUM(IIF(t1.country = 'Italy', 1, 0)), 0) AS ratio FROM country...' at line 1\")", "exec_able": false}}, "TP": 2, "FP": 5, "FN": 0}
{"sql_id": 651, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['film_actor'.'actor_id' <--> 'actor'.`actor_id`, ]' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 652, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((351,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((351,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 654, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((421,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((421,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 655, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.5041736227045077,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.5041736227045077,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 656, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1481.4900000000027,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1481.4900000000027,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 657, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('BLANKET BEVERLY',), ('LOVE SUICIDES',), ('MYSTIC TRUMAN',), ('LAWLESS VISION',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('BLANKET BEVERLY',), ('LOVE SUICIDES',), ('MYSTIC TRUMAN',), ('LAWLESS VISION',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 658, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%BRIAN%' AND customer.last_name ILIKE '%WYMAN%' AND EXTRACT(YEAR FROM ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 659, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%Natalie%' AND T5.last_name ILIKE '%Meyer%' AND EXTRACT(YEAR FROM to_t...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 660, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.01669449081803,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''5.7'' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 661, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 663, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('SANDRA', 'MARTIN', 'SANDRA.MARTIN@sakilacustomer.org'), ('JUDITH', 'COX', 'JUDITH.COX@sakilacustomer.org'), ('SHEILA', 'WELLS', 'SHEILA.WELLS@sakilacustomer.org'), ('ERICA', 'MATTHEWS', 'ERICA.MATTHEWS@sakilacustomer.org'), ('HEIDI', 'LARSON', 'HEIDI.LARSON@sakilacustomer.org'), ('PENNY', 'NEAL', 'PENNY.NEAL@sakilacustomer.org'), ('KENNETH', 'GOODEN', 'KENNETH.GOODEN@sakilacustomer.org'), ('HARRY', 'ARCE', 'HARRY.ARCE@sakilacustomer.org'), ('NATHAN', 'RUNYON', 'NATHAN.RUNYON@sakilacustomer.org'), ('THEODORE', 'CULP', 'THEODORE.CULP@sakilacustomer.org'), ('MAURICE', 'CRAWLEY', 'MAURICE.CRAWLEY@sakilacustomer.org'), ('BEN', 'EASTER', 'BEN.EASTER@sakilacustomer.org'), ('CHRISTIAN', 'JUNG', 'CHRISTIAN.JUNG@sakilacustomer.org'), ('JIMMIE', 'EGGLESTON', 'JIMMIE.EGGLESTON@sakilacustomer.org'), ('TERRANCE', 'ROUSH', 'TERRANCE.ROUSH@sakilacustomer.org'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SANDRA', 'MARTIN', 'SANDRA.MARTIN@sakilacustomer.org'), ('JUDITH', 'COX', 'JUDITH.COX@sakilacustomer.org'), ('SHEILA', 'WELLS', 'SHEILA.WELLS@sakilacustomer.org'), ('ERICA', 'MATTHEWS', 'ERICA.MATTHEWS@sakilacustomer.org'), ('HEIDI', 'LARSON', 'HEIDI.LARSON@sakilacustomer.org'), ('PENNY', 'NEAL', 'PENNY.NEAL@sakilacustomer.org'), ('KENNETH', 'GOODEN', 'KENNETH.GOODEN@sakilacustomer.org'), ('HARRY', 'ARCE', 'HARRY.ARCE@sakilacustomer.org'), ('NATHAN', 'RUNYON', 'NATHAN.RUNYON@sakilacustomer.org'), ('THEODORE', 'CULP', 'THEODORE.CULP@sakilacustomer.org'), ('MAURICE', 'CRAWLEY', 'MAURICE.CRAWLEY@sakilacustomer.org'), ('BEN', 'EASTER', 'BEN.EASTER@sakilacustomer.org'), ('CHRISTIAN', 'JUNG', 'CHRISTIAN.JUNG@sakilacustomer.org'), ('JIMMIE', 'EGGLESTON', 'JIMMIE.EGGLESTON@sakilacustomer.org'), ('TERRANCE', 'ROUSH', 'TERRANCE.ROUSH@sakilacustomer.org'))", "rowcount": 15, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 664, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((22.3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '['Table: `film`\\\\nColumns:\\\\n(`film_id`, bigint, primary key)\\\\n(`title`, text)\\\\...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 666, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('-0.0083472'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 667, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(actor.actor_id) AS percentage FROM actor JOIN film_actor ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 669, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "None", "rowcount": 0, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '10.3.27-MariaDB' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 670, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'nodes = 2017375 result = 'SELECT COUNT(r.rental_id) FROM rental r INNER JOIN ...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 671, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 672, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 673, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'mysql-8.0.29' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 674, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('-4'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1305, 'FUNCTION movie_3.IIF does not exist')", "exec_able": false}}, "TP": 2, "FP": 3, "FN": 0}
{"sql_id": 675, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((Decimal('6.8000'),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(film_category.film_id) FROM film_category JOIN category O...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 676, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'REAL) * 100 / COUNT(fc.film_id) FROM film_category fc INNER JOIN category c O...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 677, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.1715098488385873,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '`payment` Query Output:\\nCast(Sum(Case When t2.first_name = 'MARGARET' and t2....' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 1}
{"sql_id": 679, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.056,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 680, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '8.0.19' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 682, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1065, 'Query was empty')", "exec_able": false}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 683, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "None", "rowcount": -1, "error_message": "(1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ILIKE '%MARY%' AND C.last_name ILIKE '%SMITH%' AND EXTRACT(YEAR FROM P.paymen...' at line 1\")", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}

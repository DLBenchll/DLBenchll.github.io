{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN SUBSTR('Last Updated', -4) > '2018' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(App) AS PER FROM playstore WHERE Type = 'Free' AND Rating >= 4.5", "sql_id": 216}
{"model": "gpt-3.5-turbo", "message": "SELECT FullName FROM Conference ORDER BY LENGTH(FullName) DESC LIMIT 1", "sql_id": 249}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN \"_transaction\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1._First = 'Frank-Paul' AND T1._Last = 'Santangelo' AND DATE_TRUNC('month', T2.TransactionDate) = '2014-07'", "sql_id": 357}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN \"_transaction\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Gender = 'M' AND DATE_TRUNC('month', T2.TransactionDate) = '2014-07'", "sql_id": 358}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN \"_transaction\" AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.SubscribedToEmailList = 'TRUE' AND T2.CreditCardType = 'Visa' AND DATE_TRUNC('month', T2.TransactionDate) = '2014-07'", "sql_id": 359}
{"model": "gpt-3.5-turbo", "message": "SELECT MAX(T2.max_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2._date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) WHERE T1.id = 4080;", "sql_id": 624}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.id, T1.duration\nFROM trip AS T1\nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2._date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1)\nWHERE T2.events LIKE '%Rain%' OR T2.events LIKE '%rain%'", "sql_id": 625}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T1.duration), AVG(T2.wind_dir_degrees) \nFROM trip AS T1 \nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code \nWHERE SUBSTR(CAST(T2._date AS TEXT), 1, POSITION('/' IN T2._date) - 1) IN ('7', '8', '9') \nAND SUBSTR(CAST(T2._date AS TEXT), -4) = '2013';", "sql_id": 626}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTR(CAST(_date AS TEXT), -4) FROM weather GROUP BY SUBSTR(CAST(_date AS TEXT), -4) ORDER BY SUM(CASE WHEN events LIKE '%Rain%' OR events LIKE '%rain%' THEN 1 ELSE 0 END) DESC LIMIT 1", "sql_id": 628}
{"model": "gpt-3.5-turbo", "message": "SELECT name, installation_date, city FROM station WHERE (SUBSTR(CAST(installation_date AS TEXT), 1, POSITION('/' IN installation_date) - 1) = '5' AND SUBSTR(CAST(installation_date AS TEXT), POSITION('/' IN installation_date) + 1, -6) >= '8' AND SUBSTR(CAST(installation_date AS TEXT), -4) = '2013') OR (SUBSTR(CAST(installation_date AS TEXT), 1, POSITION('/' IN installation_date) - 1) IN ( '6', '7', '8', '9', '10', '11', '12' ) AND SUBSTR(CAST(installation_date AS TEXT), -4) = '2013');", "sql_id": 629}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.max_gust_speed_mph, T2.cloud_cover\nFROM trip AS T1\nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2._date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1)\nWHERE T1.bike_id = 10\nAND T2.mean_temperature_f > 62\nAND T1.subscription_type = 'Customer'\nAND T1.start_station_name = 'MLK Library'\nAND T1.end_station_name = 'San Salvador at 1st'\nAND T1.duration = 386;", "sql_id": 630}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN subscription_type = 'Subscriber' THEN 1 ELSE 0 END) - SUM(CASE WHEN subscription_type = 'Customer' THEN 1 ELSE 0 END) FROM trip WHERE start_date LIKE '6/%/2013%'", "sql_id": 631}
{"model": "gpt-3.5-turbo", "message": "SELECT T2._date, T1.bike_id \nFROM trip AS T1 \nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code \nWHERE SUBSTR(CAST(T2._date AS TEXT), -4) = '2013' AND T2.events = 'Fog-Rain';", "sql_id": 632}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.start_date \nFROM trip AS T1 \nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2._date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) \nWHERE T2._date LIKE '8/%/2013' AND T1.start_station_name = 'Market at 10th' AND T1.end_station_name = 'South Van Ness at Market' \nAND T2.min_temperature_f = ( \n    SELECT MIN(T2.min_temperature_f) \n    FROM trip AS T1 \n    INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2._date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) \n    WHERE T2._date LIKE '8/%/2013' AND T1.start_station_name = 'Market at 10th' AND T1.end_station_name = 'South Van Ness at Market' \n)", "sql_id": 633}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN city = 'San Francisco' AND SUBSTR(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station;", "sql_id": 634}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN start_station_id = end_station_id THEN 1 ELSE 0 END) FROM trip", "sql_id": 636}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.mean_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2._date AS TEXT), -4) = '2013' AND T1.start_station_name = 'Market at 4th';", "sql_id": 637}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.events = 'Rain' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.id) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2._date AS TEXT), -4) = '2015' AND T1.subscription_type = 'Customer';", "sql_id": 638}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN zip_code = '94107' AND _date = '8/29/2013' THEN mean_temperature_f ELSE 0 END) FROM weather;", "sql_id": 640}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN zip_code = '94107' AND _date = '8/29/2013' THEN max_temperature_f - min_temperature_f ELSE 0 END) FROM weather;", "sql_id": 641}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.start_station_name\nFROM trip AS T1\nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code\nWHERE SUBSTR(CAST(T2._date AS TEXT), -4) = '2013'\nAND T2.zip_code = '94107'\nAND T2.max_temperature_f > 80;", "sql_id": 642}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN zip_code = '94041' AND events = 'Rain' THEN 1 ELSE 0 END) FROM weather;", "sql_id": 643}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN city = 'Redwood City' AND CAST(SUBSTR(installation_date, -4) AS INTEGER) < 2014 THEN dock_count ELSE 0 END) AS NUM FROM station;", "sql_id": 644}
{"model": "gpt-3.5-turbo", "message": "SELECT (max_temperature_f - 32) / 1.8000 , (mean_temperature_f - 32) / 1.8000 , (min_temperature_f - 32) / 1.8000 FROM weather WHERE SUBSTR(CAST(_date AS TEXT), 1, POSITION(_date, '/') - 1) = '8' AND SUBSTR(CAST(_date AS TEXT), -4) = '2013' AND zip_code = '94107';", "sql_id": 645}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN subscription_type = 'Subscriber' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN subscription_type = 'Customer' THEN 1 ELSE 0 END) FROM trip WHERE start_station_name = '2nd at South Park' AND end_station_name = '2nd at South Park';", "sql_id": 646}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN city = 'San Jose' AND SUBSTR(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station UNION SELECT name FROM station WHERE city = 'San Jose' AND SUBSTR(installation_date, -4) = '2014';", "sql_id": 627}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM book WHERE CAST(EXTRACT(YEAR FROM publication_date) AS VARCHAR) = '1900' ORDER BY publication_date LIMIT 1", "sql_id": 394}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM country AS T1 INNER JOIN address AS T2 ON T1.country_id = T2.country_id INNER JOIN cust_order AS T3 ON T3.dest_address_id = T2.address_id WHERE T1.country_name = 'Iran' AND CAST(strftime('%Y', T3.order_date) AS INTEGER) = 2022", "sql_id": 395}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Delivered' AND CAST(EXTRACT(YEAR FROM T2.status_date) AS VARCHAR) = '2021'", "sql_id": 396}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T3.cost) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Page' AND T1.last_name = 'Holsey' AND CAST(SUBSTR(CAST(T2.order_date AS VARCHAR), 1, 4) AS INTEGER) = 2022", "sql_id": 397}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T1.publication_date) = '1992' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Abraham Lincoln';", "sql_id": 398}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title, T2.publisher_name\nFROM book AS T1\nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id\nWHERE CAST(SUBSTR(T1.publication_date, 1, 4) AS INTEGER) = 2004\nAND T1.num_pages * 100 > (SELECT AVG(num_pages) FROM book) * 70;", "sql_id": 399}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title\nFROM book AS T1\nINNER JOIN book_author AS T2 ON T1.book_id = T2.book_id\nINNER JOIN author AS T3 ON T3.author_id = T2.author_id\nWHERE T3.author_name = 'Orson Scott Card' AND CAST(strftime('%Y', T1.publication_date) AS INTEGER) = 2001;", "sql_id": 400}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM cust_order AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Daisey' AND T2.last_name = 'Lamball' AND CAST(EXTRACT(YEAR FROM T1.order_date) AS VARCHAR) = '2021'", "sql_id": 401}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Delivered' AND CAST(EXTRACT(YEAR FROM T2.status_date) AS VARCHAR) = '2019'", "sql_id": 402}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.method_name = 'International' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) FROM cust_order AS T1 INNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id WHERE STRFTIME('%Y', T1.order_date) = '2020'", "sql_id": 403}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%Y', order_date) FROM cust_order GROUP BY strftime('%Y', order_date) ORDER BY COUNT(strftime('%Y', order_date)) DESC LIMIT 1", "sql_id": 404}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM book WHERE CAST(EXTRACT(YEAR FROM publication_date) AS VARCHAR) = '1995'", "sql_id": 405}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(email, POSITION('@' IN email) + 1, LENGTH(email) - POSITION('@' IN email)) AS ym FROM customer GROUP BY SUBSTRING(email, POSITION('@' IN email) + 1, LENGTH(email) - POSITION('@' IN email)) ORDER BY COUNT(*) DESC LIMIT 1", "sql_id": 406}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Returned' AND CAST(EXTRACT(YEAR FROM T2.status_date) AS VARCHAR) = '2020'", "sql_id": 407}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) \nFROM customer AS T1 \nINNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id \nINNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id \nWHERE T1.first_name = 'Marcelia' \nAND T1.last_name = 'Goering' \nAND CAST(strftime('%Y', T2.order_date) AS INTEGER) = 2021 \nAND T3.method_name = 'Priority';", "sql_id": 409}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Cancelled' AND CAST(EXTRACT(YEAR FROM T2.status_date) AS VARCHAR) = '2022'", "sql_id": 410}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book WHERE CAST(EXTRACT(YEAR FROM publication_date) AS VARCHAR) = '2017'", "sql_id": 411}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM book AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id \nWHERE T2.publisher_name = 'Free Press' \nAND CAST(SUBSTR(T1.publication_date, 1, 4) AS INTEGER) BETWEEN 1990 AND 2000 \nORDER BY T1.num_pages DESC \nLIMIT 1", "sql_id": 413}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'The Servant Leader' AND CAST(strftime('%Y', T1.publication_date) AS INTEGER) = 2003", "sql_id": 414}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Returned' AND CAST(EXTRACT(YEAR FROM T2.status_date) AS VARCHAR) = '2022'", "sql_id": 415}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Birlinn' AND CAST(strftime('%Y', T1.publication_date) AS INTEGER) = 2008 AND T1.num_pages BETWEEN 600 AND 700", "sql_id": 416}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Brava' AND CAST(strftime('%Y', T1.publication_date) AS INTEGER) = 2006", "sql_id": 417}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title\nFROM sales AS T1\nINNER JOIN titles AS T2 ON T1.title_id = T2.title_id\nWHERE CAST(strftime('%Y', T1.ord_date) AS INTEGER) = 1992\nORDER BY T1.qty DESC\nLIMIT 1", "sql_id": 9}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title, T1.notes, T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE CAST(strftime('%Y', T1.pubdate) AS INTEGER) = 1991", "sql_id": 10}
{"model": "gpt-3.5-turbo", "message": "SELECT fname, lname FROM employee WHERE CAST(STRFTIME('%Y', hire_date) AS INTEGER) < 1990", "sql_id": 11}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%Y', hire_date) FROM employee GROUP BY STRFTIME('%Y', hire_date) ORDER BY COUNT(emp_id) DESC LIMIT 1", "sql_id": 12}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.pub_name\nFROM titles AS T1\nINNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id\nWHERE CAST(strftime('%Y', T1.pubdate) AS INTEGER) = 1991\nGROUP BY T1.pub_id, T2.pub_name\nORDER BY COUNT(T1.title_id) DESC\nLIMIT 1", "sql_id": 13}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.notes \nFROM titles AS T1 \nINNER JOIN sales AS T2 ON T1.title_id = T2.title_id \nWHERE DATE_TRUNC('day', T2.ord_date) = '1994-09-14'", "sql_id": 14}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.type\nFROM titles AS T1\nINNER JOIN sales AS T2 ON T1.title_id = T2.title_id\nWHERE DATE_TRUNC('day', T2.ord_date) = '1993-05-29';", "sql_id": 15}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) - SUM(CASE WHEN T2.city = 'Portland' THEN qty END) AS DOUBLE) * 100 / SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE STRFTIME('%Y', T1.ord_date) = '1993'", "sql_id": 16}
{"model": "gpt-3.5-turbo", "message": "SELECT fname, minit, lname FROM employee WHERE CAST(STRFTIME('%Y', hire_date) AS INTEGER) BETWEEN 1990 AND 1995 ORDER BY job_lvl DESC", "sql_id": 17}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.priceEach * T3.quantityOrdered \nFROM customers AS T1 \nINNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber \nINNER JOIN orderdetails AS T3 ON T2.orderNumber = T3.orderNumber \nWHERE T1.customerName = 'Rovelli Gifts' \nAND T2.status = 'Shipped' \nAND CAST(strftime('%Y', T2.shippedDate) AS INTEGER) = 2003;", "sql_id": 140}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.checkNumber) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE customerName = 'Euro+ Shopping Channel' AND CAST(strftime('%Y', T1.paymentDate) AS INTEGER) = 2004", "sql_id": 141}
{"model": "gpt-3.5-turbo", "message": "SELECT ( SELECT COUNT(customerNumber) FROM customers WHERE creditLimit <= 100000 AND customerNumber IN ( SELECT customerNumber FROM payments WHERE CAST(strftime('%Y', paymentDate) AS INTEGER) = 2004 ) ), T1.customerName FROM customers AS T1 INNER JOIN payments AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.creditLimit <= 100000 AND CAST(strftime('%Y', T2.paymentDate) AS INTEGER) = 2004 GROUP BY T1.customerNumber, T1.customerName ORDER BY SUM(T2.amount) DESC LIMIT 1", "sql_id": 142}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.orderNumber) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.quantityOrdered < 30 AND CAST(SUBSTR(T2.orderDate, 1, 4) AS INTEGER) = 2003", "sql_id": 143}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.quantityOrdered * T2.priceEach) / COUNT(T3.orderNumber) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber WHERE T1.productVendor = 'Exoto Designs' AND CAST(strftime('%Y', T3.orderDate) AS INTEGER) = 2005", "sql_id": 144}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(amount) FROM payments WHERE STRFTIME('%Y', paymentDate) = '2003' AND customerNumber IN ( SELECT customerNumber FROM customers WHERE creditLimit = 0 )", "sql_id": 145}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(customerNumber) FROM ( SELECT customerNumber FROM payments WHERE CAST(strftime('%Y', paymentDate) AS BIGINT) >= 2003 AND CAST(strftime('%Y', paymentDate) AS BIGINT) <= 2004 GROUP BY customerNumber HAVING COUNT(customerNumber) > 3 ) T", "sql_id": 146}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.addressLine1, T3.addressLine2, T3.phone\nFROM orderdetails AS T1\nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber\nINNER JOIN customers AS T3 ON T2.customerNumber = T3.customerNumber\nINNER JOIN employees AS T4 ON T3.salesRepEmployeeNumber = T4.employeeNumber\nINNER JOIN offices AS T5 ON T4.officeCode = T5.officeCode\nWHERE CAST(strftime('%Y', T2.orderDate) AS INTEGER) = 2005\nAND T4.jobTitle = 'Sales Rep'\nORDER BY T1.quantityOrdered DESC\nLIMIT 1", "sql_id": 147}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.orderDate\nFROM orderdetails AS T1\nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber\nWHERE DATE(T2.orderDate) = '2005-04-08' OR DATE(T2.orderDate) = '2005-04-10'\nORDER BY T1.quantityOrdered * T1.priceEach DESC\nLIMIT 1", "sql_id": 148}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(CASE WHEN JULIANDAY(t1.shippeddate) - JULIANDAY(t1.requireddate) > 3 THEN t1.customerNumber ELSE NULL END) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber WHERE t1.status = 'Shipped';", "sql_id": 149}
{"model": "gpt-3.5-turbo", "message": "SELECT t2.customerName\nFROM payments AS t1\nINNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber\nWHERE CAST(strftime('%Y', t1.paymentDate) AS INTEGER) = 2005\nGROUP BY t2.customerNumber, t2.customerName\nORDER BY SUM(t1.amount) DESC\nLIMIT 1", "sql_id": 150}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN t1.customerName = 'Atelier graphique' THEN t2.amount ELSE 0 END) * 100 / SUM(t2.amount) FROM customers AS t1 INNER JOIN payments AS t2 ON t1.customerNumber = t2.customerNumber WHERE CAST(strftime('%Y', t2.paymentDate) AS INTEGER) = 2004", "sql_id": 151}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE t3.productLine = 'motorcycles' AND CAST(strftime('%Y', t1.orderDate) AS INTEGER) = 2004", "sql_id": 152}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('year', t1.paymentDate), COUNT(t1.customerNumber) FROM payments AS t1 WHERE t1.amount < 10000 GROUP BY DATE_PART('year', t1.paymentDate)", "sql_id": 153}
{"model": "gpt-3.5-turbo", "message": "SELECT t3.productName, SUM(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE CAST(strftime('%Y', t1.orderDate) AS INTEGER) = 2003 GROUP BY t3.productName ORDER BY SUM(t2.quantityOrdered) DESC LIMIT 3", "sql_id": 154}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(T1.fbi_code_no) AS REAL) / 4 FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE SUBSTR(T2._date, 1, 1) = '1' AND SUBSTR(T2._date, 6, 4) = '2018';", "sql_id": 588}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN SUBSTR(T2._date, 5, 4) = '2018' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.crime_against = 'Property' AND SUBSTR(T2._date, 1, 1) = '1';", "sql_id": 591}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.commander FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander IN ('Robert A. Rubio', 'Glenn White') AND SUBSTR(T2._date, 1, 1) = '1' AND SUBSTR(T2._date, 5, 4) = '2018' GROUP BY T1.commander", "sql_id": 593}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.time_high, T2.time_low, T2._date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'WARP' AND STRFTIME('%Y-%m', T2._date) = '2016-08';", "sql_id": 443}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' AND CAST(STRFTIME('%Y', T2._date) AS INTEGER) = 2016", "sql_id": 445}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE STRFTIME('%Y', T2._date) = '2013' AND T1.name = 'Bitcoin';", "sql_id": 446}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM coins WHERE LENGTH(tag_names) - LENGTH(REPLACE(tag_names, ',', '')) = 2", "sql_id": 448}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE STRFTIME('%Y-%m', T2._date) = '2013-05' AND T2.open IS NULL", "sql_id": 449}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.coin_id) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bytecoin' AND STRFTIME('%Y-%m', T2._date) = '2013-06';", "sql_id": 450}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(id) AS num FROM coins WHERE STRFTIME('%Y-%m', date_added) = '2013-05' UNION ALL SELECT name FROM coins WHERE STRFTIME('%Y-%m', date_added) = '2013-05';", "sql_id": 447}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.style = 'American Adjunct Lager' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.brewery_id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T2.name = 'Stevens Point Brewery'", "sql_id": 609}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.state = 'WI' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T1.style = 'American Blonde Ale'", "sql_id": 610}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_title) FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE SUBSTR(release_date, POSITION('-' IN release_date) + 1, 3) = 'Dec' AND T2.director = 'Wolfgang Reitherman'", "sql_id": 309}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nWHERE CAST(SUBSTR(T1.release_date, POSITION(',' IN T1.release_date) + 2) AS INTEGER) BETWEEN 1970 AND 1979 \nORDER BY CAST(REPLACE(SUBSTR(T1.total_gross, 2), ',', '') AS FLOAT) DESC \nLIMIT 1", "sql_id": 311}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title\nFROM movies_total_gross AS T1\nINNER JOIN director AS T2 ON T1.movie_title = T2.name\nWHERE T2.director = 'Wolfgang Reitherman'\nORDER BY CAST(REPLACE(SUBSTR(inflation_adjusted_gross, 2), ',', '') AS REAL) DESC\nLIMIT 1", "sql_id": 312}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title\nFROM movies_total_gross AS T1\nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title\nWHERE T2.hero = 'Donald Duck'\nORDER BY CAST(REPLACE(SUBSTR(total_gross, 2), ',', '') AS REAL) DESC\nLIMIT 1", "sql_id": 313}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM movies_total_gross WHERE MPAA_rating = 'R' AND genre = 'Horror' AND CAST(SUBSTR(release_date, POSITION(',' IN release_date) + 1) AS INTEGER) BETWEEN 1990 AND 2015", "sql_id": 314}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name\nFROM movies_total_gross AS T1\nINNER JOIN director AS T2 ON T2.name = T1.movie_title\nWHERE T2.director = 'Ron Clements'\nORDER BY CAST(REPLACE(SUBSTR(total_gross, 2), ',', '') AS INTEGER) DESC\nLIMIT 1", "sql_id": 315}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 \nON T1.movie_title = T2.name \nAND CAST(SUBSTR(release_date, POSITION(',' IN release_date) + 2) AS INTEGER) BETWEEN 1990 AND 2000 \nGROUP BY T2.director", "sql_id": 316}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title\nFROM movies_total_gross AS T1\nINNER JOIN characters AS T2 ON T2.movie_title = T1.movie_title\nWHERE T2.song IS NULL\nORDER BY CAST(REPLACE(TRIM(T1.total_gross, '$'), ',', '') AS REAL) DESC\nLIMIT 1", "sql_id": 317}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.movie_title\nFROM director AS T1\nINNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title\nWHERE T1.director = 'Ron Clements'\nORDER BY CAST(REPLACE(TRIM(REPLACE(T2.total_gross, '$', '')), ',', '') AS REAL) DESC\nLIMIT 1", "sql_id": 319}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title, CAST(REPLACE(TRIM(inflation_adjusted_gross, '$'), ',', '')::FLOAT / CAST(REPLACE(TRIM(total_gross, '$'), ',', '')::FLOAT FROM movies_total_gross ORDER BY CAST(REPLACE(TRIM(total_gross, '$'), ',', '')::FLOAT DESC LIMIT 1", "sql_id": 322}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title, T2.hero, T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nINNER JOIN director AS T3 ON T1.movie_title = T3.name \nWHERE T3.director = 'Wolfgang Reitherman' \nAND SUBSTR(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) = '1977';", "sql_id": 323}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director\nFROM movies_total_gross AS T1\nINNER JOIN director AS T2 ON T1.movie_title = T2.name\nORDER BY CAST(REPLACE(TRIM(REPLACE(T1.total_gross, '$', ''), ','), ' ') AS REAL) DESC\nLIMIT 1", "sql_id": 325}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director, T1.MPAA_rating \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nWHERE T1.genre = 'Musical' AND SUBSTR(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) = '1993';", "sql_id": 326}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name, T2.director\nFROM movies_total_gross AS T1\nINNER JOIN director AS T2 ON T1.movie_title = T2.name\nWHERE SUBSTR(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) BETWEEN '2001' AND '2005'\nAND CAST(REPLACE(TRIM(T1.total_gross, '$'), ',', '') AS REAL) / (\n    SELECT SUM(CAST(REPLACE(TRIM(T3.total_gross, '$'), ',', '') AS REAL)) / COUNT(T3.movie_title) AS avg_gross\n    FROM movies_total_gross AS T3\n    INNER JOIN director AS T4 ON T3.movie_title = T4.name\n    WHERE SUBSTR(T3.release_date, LENGTH(T3.release_date) - 3, LENGTH(T3.release_date)) BETWEEN '2001' AND '2005'\n) - 1 > 1", "sql_id": 328}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM characters WHERE CAST(SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) AS INTEGER) BETWEEN 37 AND 50", "sql_id": 329}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title\nFROM characters AS T1\nINNER JOIN director AS T2 ON T1.movie_title = T2.name\nWHERE T2.director = 'Jack Kinney'\nAND CAST(SUBSTR(T1.release_date, LENGTH(T1.release_date) - 1, LENGTH(T1.release_date)) AS INTEGER) < 47", "sql_id": 330}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.song\nFROM movies_total_gross AS T1\nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title\nORDER BY CAST(REPLACE(TRIM(REPLACE(T1.total_gross, '$', '')), ',', '') AS REAL) DESC\nLIMIT 1", "sql_id": 332}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title FROM characters ORDER BY SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) ASC LIMIT 1", "sql_id": 335}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM characters WHERE CAST(SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) AS INTEGER) BETWEEN 10 AND 16", "sql_id": 336}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title FROM movies_total_gross WHERE genre = 'Action' ORDER BY CAST(REPLACE(TRIM(total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1", "sql_id": 338}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.hero\nFROM movies_total_gross AS T1\nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title\nWHERE T1.genre = 'Adventure'\nORDER BY CAST(REPLACE(TRIM(T1.inflation_adjusted_gross, '$'), ',', '') AS REAL) DESC\nLIMIT 1", "sql_id": 339}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CAST(REPLACE(TRIM(inflation_adjusted_gross, '$'), ',', '')::FLOAT) / SUM(CAST(REPLACE(TRIM(total_gross, '$'), ',', '')::FLOAT)) FROM movies_total_gross WHERE SUBSTR(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) = '1995' GROUP BY SUBSTR(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) = '1995';", "sql_id": 342}
{"model": "gpt-3.5-turbo", "message": "SELECT teacher_ny_teaching_fellow FROM projects WHERE teacher_acctid = '42d43fa6f37314365d08692e08680973';", "sql_id": 247}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.business_id) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE CAST(STRFTIME('%Y', T1._date) AS INTEGER) = 2016 AND T2.city IN ('San Francisco', 'SAN FRANCISCO', 'SF', 'S.F.')", "sql_id": 595}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.name\nFROM violations AS T1\nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id\nWHERE CAST(STRFTIME('%Y', T1._date) AS INTEGER) = 2014\nAND T1.risk_category = 'Low Risk';", "sql_id": 596}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(business_id) FROM businesses WHERE CAST(strftime('%Y', application_date) AS INTEGER) = 2012", "sql_id": 597}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.name\nFROM inspections AS T1\nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id\nWHERE CAST(EXTRACT(YEAR FROM T1._date) AS VARCHAR) = '2013' AND T1.score = 100;", "sql_id": 599}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.city\nFROM violations AS T1\nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id\nWHERE STRFTIME('%Y', T1._date) = '2016' AND T1.risk_category = 'High Risk'\nGROUP BY T2.city\nORDER BY COUNT(T2.city) DESC\nLIMIT 1", "sql_id": 600}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name \nFROM violations AS T1 \nINNER JOIN businesses AS T2 \nON T1.business_id = T2.business_id \nWHERE CAST(STRFTIME('%Y', T1._date) AS INTEGER) = 2013 \nAND T1.description = 'Contaminated or adulterated food';", "sql_id": 601}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id INNER JOIN inspections AS T3 ON T2.business_id = T3.business_id WHERE STRFTIME('%Y', T1._date) = '2015' AND T2.postal_code = '94102' AND T3.score > 90", "sql_id": 602}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT business_id) FROM inspections WHERE CAST(strftime('%Y', _date) AS INTEGER) = 2013 AND score = (SELECT MAX(score) FROM inspections WHERE CAST(strftime('%Y', _date) AS INTEGER) = 2013)", "sql_id": 606}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(risk_category) FROM violations WHERE CAST(strftime('%Y', _date) AS INTEGER) = 2014 AND risk_category = 'Low Risk'", "sql_id": 607}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.business_id) FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1._date) = '2016' AND T2.type = 'Routine - Unscheduled';", "sql_id": 608}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first_name, T1.last_name\nFROM employee AS T1\nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id\nWHERE strftime('%Y-%m', T2.inspection_date) = '2010-05'\nAND T1.title = 'Sanitarian';", "sql_id": 418}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.inspection_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE CAST(strftime('%Y', T2.inspection_date) AS INTEGER) = 2010 AND T1.first_name = 'Joshua' AND T1.last_name = 'Rosa';", "sql_id": 419}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y', T1.inspection_date) = '2010' AND T2.facility_type = 'Restaurant';", "sql_id": 420}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE CAST(strftime('%Y', T1.inspection_date) AS INTEGER) = 2010 AND T2.ward = 42", "sql_id": 421}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.dba_name FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T1.results = 'Fail' AND CAST(strftime('%Y', T1.inspection_date) AS INTEGER) = 2010", "sql_id": 422}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE CAST(strftime('%Y', T1.inspection_date) AS INTEGER) = 2010 AND T2.risk_level = 3", "sql_id": 423}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T2.address = '5000 N Wolcott Ave' AND T2.title = 'Sanitarian' AND STRFTIME('%Y-%m', T1.inspection_date) = '2011-05';", "sql_id": 424}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.first_name, T3.last_name\nFROM (\n    SELECT T1.employee_id, COUNT(T1.inspection_id)\n    FROM inspection AS T1\n    WHERE DATE_TRUNC('month', T1.inspection_date) = '2016-03-01'\n    GROUP BY T1.employee_id\n    ORDER BY COUNT(T1.inspection_id) DESC\n    LIMIT 1\n) AS T2\nINNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id", "sql_id": 425}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.dba_name\nFROM inspection AS T1\nINNER JOIN establishment AS T2 ON T1.license_no = T2.license_no\nWHERE strftime('%Y-%m', T1.inspection_date) = '2012-05'\nAND T1.results = 'Pass w/ Conditions';", "sql_id": 426}
{"model": "gpt-3.5-turbo", "message": "SELECT T.dba_name\nFROM (\n    SELECT T1.dba_name, SUM(T3.fine)\n    FROM establishment AS T1\n    INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no\n    INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id\n    WHERE CAST(strftime('%Y', T2.inspection_date) AS INTEGER) = 2014\n    GROUP BY T1.dba_name\n    ORDER BY SUM(T3.fine) DESC\n    LIMIT 1\n) AS T;", "sql_id": 427}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T3.fine) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE strftime('%Y-%m', T2.inspection_date) = '2014-02' AND T1.dba_name = 'RON OF JAPAN INC';", "sql_id": 428}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.address\nFROM establishment AS T1\nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no\nWHERE strftime('%Y-%m', T2.inspection_date) = '2010-03'\nAND T2.results = 'Pass'\nAND T1.facility_type = 'School';", "sql_id": 429}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(inspection_id) FROM inspection WHERE CAST(inspection_date AS VARCHAR) LIKE '2011-01%'", "sql_id": 430}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(inspection_id) FROM inspection WHERE CAST(strftime('%Y', inspection_date) AS INTEGER) = 2014 AND results = 'Fail'", "sql_id": 431}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN T1.first_name = 'Jessica' AND T1.last_name = 'Anthony' THEN T2.inspection_id ELSE 0 END) AS FLOAT) / 8 FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE strftime('%Y', T2.inspection_date) BETWEEN '2010' AND '2017'", "sql_id": 433}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE CAST(strftime('%Y', T2.inspection_date) AS INTEGER) = 2010 AND T1.risk_level = 3", "sql_id": 434}
{"model": "gpt-3.5-turbo", "message": "SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'JOHN SCHALLER' AND CAST(strftime('%Y', T2.inspection_date) AS INTEGER) = 2010", "sql_id": 435}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.dba_name\nFROM establishment AS T1\nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no\nWHERE CAST(strftime('%Y', T2.inspection_date) AS INTEGER) = 2010\nAND T2.results = 'Pass'\nAND T1.facility_type = 'Liquor';", "sql_id": 436}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y-%m', T2.inspection_date) = '2010-07' AND T2.results = 'Fail' AND T1.facility_type = 'Restaurant';", "sql_id": 437}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.dba_name, T2.results FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson' AND CAST(strftime('%Y', T2.inspection_date) AS INTEGER) = 2010;", "sql_id": 438}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y-%m', T2.inspection_date) = '2010-04' AND T1.facility_type = 'Restaurant' AND T2.results = 'Fail';", "sql_id": 439}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.employee_id\nFROM employee AS T1\nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id\nWHERE T2.results = 'Fail'\nAND strftime('%Y-%m', T2.inspection_date) = '2010-02'\nAND T1.salary > 0.7 * (SELECT AVG(salary) FROM employee);", "sql_id": 441}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.Chromosome > 10 AND T3.Chromosome > 10 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 INNER JOIN Genes AS T3 ON T3.GeneID = T2.GeneID2 WHERE T2.Expression_Corr > 0;", "sql_id": 212}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T1.note = 'posthumous' THEN 'YES' ELSE 'NO' END FROM AwardsMisc AS T1 RIGHT JOIN Master AS T2 ON T1.ID = T2.playerID WHERE T2.legendsID = 'P194502'", "sql_id": 556}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.firstName, T2.lastName, CASE WHEN T1.tmID = 'BOS' THEN 'YES' ELSE 'NO' END FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1._year = 1972 AND T1.tmID = 'BOS' AND T2.coachID IS NOT NULL AND T2.hofID IS NULL;", "sql_id": 557}
{"model": "gpt-3.5-turbo", "message": "SELECT ssn FROM employee WHERE gender = 'M' AND CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS FLOAT) > 70000", "sql_id": 611}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL) - CAST(REPLACE(SUBSTR(T2.minsalary, 4), ',', '') AS REAL) AS diff\nFROM employee AS T1\nINNER JOIN _position AS T2 ON T1.positionID = T2.positionID\nWHERE T1.lastname = 'Johnson' AND T1.firstname = 'James';", "sql_id": 612}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM employee AS T1 INNER JOIN _position AS T2 ON T1.positionID = T2.positionID WHERE CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS FLOAT) > 20000 AND T2.positiontitle = 'Trainee'", "sql_id": 613}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) AS avg FROM employee AS T1  INNER JOIN _position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee';", "sql_id": 614}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM employee WHERE performance = 'Poor' AND CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS FLOAT) > 50000", "sql_id": 617}
{"model": "gpt-3.5-turbo", "message": "SELECT firstname, lastname FROM employee WHERE CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS FLOAT) = ( SELECT MAX(CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS FLOAT)) FROM employee )", "sql_id": 618}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) FROM employee AS T1 INNER JOIN _position AS T2 ON T1.positionID = T2.positionID WHERE T2.educationrequired = '2 year degree';", "sql_id": 620}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) FROM employee AS T1 INNER JOIN _position AS T2 ON T1.positionID = T2.positionID WHERE T1.performance = 'Poor' AND T2.positiontitle = 'Manager'", "sql_id": 621}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT CAST(COUNT(CASE WHEN T1.nation = 'Sweden' THEN T1.ELITEID ELSE NULL END) OVER (PARTITION BY T2.SEASON) AS DOUBLE) * 100 / COUNT(T1.ELITEID) OVER (PARTITION BY T2.SEASON) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.SEASON IN ('1997-1998', '1998-1999', '1999-2000');", "sql_id": 507}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.IMG_ID = 1 THEN 1 ELSE 0 END), SUM(CASE WHEN T1.X = 341 AND T1.Y = 27 AND T1.W = 42 AND T1.H = 51 THEN 1 ELSE 0 END) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID", "sql_id": 553}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(occurrences) FROM words WHERE LENGTH(word) = 3;", "sql_id": 393}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE CAST(strftime('%Y', T1.air_date) AS INTEGER) = 1998 AND T2.organization = 'International Monitor Awards' AND T2.result = 'Winner';", "sql_id": 96}
{"model": "gpt-3.5-turbo", "message": "SELECT t3.name\nFROM (\n    SELECT DISTINCT T2._year AS years, T1.name, row_number() OVER (PARTITION BY T1.name ORDER BY T2._year) AS rm\n    FROM Person AS T1\n    INNER JOIN Award AS T2 ON T1.person_id = T2.person_id\n    WHERE T2.award = 'Television' AND T2.award_category = 'Silver Gavel Award' AND T2.series = 'Law and Order' AND T2.result = 'Winner' AND T2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts'\n) AS T3\nGROUP BY t3.name\nHAVING COUNT(t3.years - t3.rm) >= 2", "sql_id": 98}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM current WHERE strftime('%Y', birthday_bio) > '1960' AND google_entity_id_id IS NULL;", "sql_id": 356}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE SUBSTR(T1.created_at, 7, 1) = '4';", "sql_id": 372}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name\nFROM Dish AS T1\nINNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id\nWHERE SUBSTR(T2.created_at, 1, 4) = '2011'\nAND SUBSTR(T2.created_at, 7, 1) = '4'\nAND T1.highest_price IS NULL;", "sql_id": 373}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Menu WHERE call_number IS NULL AND CAST(strftime('%Y', _date) AS INTEGER) < 1950", "sql_id": 374}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Country, COUNT(T1.Country) FROM economy AS T1 INNER JOIN organization AS T2 ON T1.Country = T2.Country WHERE T1.GDP < 500000 AND CAST(SUBSTR(CAST(T2.Established AS VARCHAR), 1, 4) AS INTEGER) < 1999 GROUP BY T1.Country", "sql_id": 576}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Country\nFROM politics AS T1\nINNER JOIN population AS T2 ON T1.Country = T2.Country\nWHERE CAST(strftime('%Y', T1.Independence) AS INTEGER) = 1960\nORDER BY T2.Infant_Mortality DESC\nLIMIT 1", "sql_id": 577}
{"model": "gpt-3.5-turbo", "message": "SELECT River, STRING_AGG(Province) FROM geo_river GROUP BY River HAVING COUNT(DISTINCT Country) > 1", "sql_id": 578}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Name\nFROM country AS T1\nINNER JOIN organization AS T2 ON T1.Code = T2.Country\nINNER JOIN politics AS T3 ON T3.Country = T2.Country\nWHERE CAST(SUBSTR(T2.Established, 1, 4) AS INTEGER) > 1907\nAND T3.Government = 'constitutional monarchy'\nGROUP BY T1.Name\nORDER BY COUNT(DISTINCT T2.Name) DESC\nLIMIT 1", "sql_id": 582}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN \"Government\" = 'parliamentary democracy' THEN 1 ELSE 0 END) , CAST(SUM(CASE WHEN \"Government\" = 'parliamentary democracy' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM politics AS t1 WHERE STRFTIME('%Y', \"Independence\") >= '1993'", "sql_id": 583}
{"model": "gpt-3.5-turbo", "message": "SELECT Name FROM organization WHERE CAST(STRFTIME('%Y', Established) AS INTEGER) BETWEEN 1970 AND 1980", "sql_id": 584}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%Y', T4.Established) FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T2.Country = T3.Code INNER JOIN organization AS T4 ON T4.Country = T3.Code WHERE T1.Name = 'Europe' GROUP BY STRFTIME('%Y', T4.Established) ORDER BY COUNT(T4.Name) DESC LIMIT 1", "sql_id": 585}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM politics WHERE CAST(STRFTIME('%Y', Independence) AS INTEGER) BETWEEN 1950 AND 1999 AND Government = 'parliamentary democracy';", "sql_id": 586}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN CAST(EXTRACT(YEAR FROM Independence) AS INTEGER) = 1960 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(Country) FROM politics;", "sql_id": 587}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN Government = 'republic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Country) FROM politics WHERE CAST(SUBSTR(Independence, 1, 4) AS INTEGER) > 1970", "sql_id": 575}
{"model": "gpt-3.5-turbo", "message": "SELECT ((MAX(CAST(SUBSTR(T2.screentime, 3, 2) AS DOUBLE)) - MIN(CAST(SUBSTR(T2.screentime, 3, 2) AS DOUBLE)))*100 / MIN(CAST(SUBSTR(T2.screentime, 3, 2) AS DOUBLE)) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'Batman';", "sql_id": 53}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.u_gender = 'F' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.u_gender = 'M' THEN 1 ELSE 0 END) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid INNER JOIN movies2directors AS T3 ON T3.movieid = T1.movieid WHERE T3.genre = 'horror'", "sql_id": 182}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.avg_revenue > T2.d_quality THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN directors AS T2 ON T1.directorid = T2.directorid WHERE T1.genre = 'Action'", "sql_id": 184}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.rating = '1' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'USA'", "sql_id": 185}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.a_gender = 'M' THEN 1 ELSE 0 END) AS FLOAT) / SUM(CASE WHEN T3.a_gender = 'F' THEN 1 ELSE 0 END) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK';", "sql_id": 186}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.cast_num = 2 AND T1.a_quality = 2 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.actorid) FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid WHERE T2.movieid = 1672580 AND T1.a_gender = 'F'", "sql_id": 187}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN a_gender = 'M' THEN 1 ELSE 0 END) AS FLOAT) / SUM(CASE WHEN a_gender = 'F' THEN 1 ELSE 0 END) FROM actors WHERE a_quality = 0", "sql_id": 188}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.a_gender = 'F' THEN 1 ELSE 0 END), T3.country, T3.runningtime\nFROM actors AS T1\nINNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid\nINNER JOIN movies AS T3 ON T2.movieid = T3.movieid\nWHERE T2.movieid = 2312852\nGROUP BY T3.country, T3.runningtime", "sql_id": 189}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN a_gender = 'M' THEN 1 ELSE 0 END) , \n       SUM(CASE WHEN a_gender = 'F' THEN 1 ELSE 0 END) , \n       CAST(SUM(CASE WHEN a_quality = 5 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) , \n       CAST(SUM(CASE WHEN a_quality = 0 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*), \n       (SELECT directorid FROM movies2directors WHERE movieid = 1684910) , \n       (SELECT genre FROM movies2directors WHERE movieid = 1684910) \nFROM actors \nWHERE actorid IN (SELECT actorid FROM movies2actors WHERE movieid = 1684910)", "sql_id": 191}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.u_gender = 'F' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T2.userid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = '2'", "sql_id": 181}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.a_quality >= 3 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK'", "sql_id": 183}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.isEnglish = 'T' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.isEnglish = 'F' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'other' AND T1._year = 3", "sql_id": 190}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Quentin Tarantino' AND CAST(EXTRACT(YEAR FROM T1.release_date) AS INTEGER) = 1995", "sql_id": 40}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN production_country AS T2 ON T1.movie_id = T2.movie_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id WHERE T3.country_name = 'United States of America' AND CAST(EXTRACT(YEAR FROM T1.release_date) AS INTEGER) = 2006", "sql_id": 41}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CASE WHEN T3.country_name = 'United States of America' THEN T1.revenue END) - AVG(CASE WHEN T3.country_name = 'India' THEN T1.revenue END) AS CALCULATE FROM movie AS T1 INNER JOIN production_country AS T2 ON T1.movie_id = T2.movie_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id WHERE CAST(EXTRACT(YEAR FROM T1.release_date) AS INTEGER) = 2016", "sql_id": 42}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM movie WHERE CAST(EXTRACT(YEAR FROM release_date) AS INTEGER) < 2000 LIMIT 5", "sql_id": 43}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.company_id FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id WHERE CAST(EXTRACT(YEAR FROM T1.release_date) AS INTEGER) = 1916", "sql_id": 44}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM movie WHERE CAST(EXTRACT(YEAR FROM release_date) AS INTEGER) = 1945", "sql_id": 45}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Adventure' AND CAST(EXTRACT(YEAR FROM T1.release_date) AS INTEGER) = 2000", "sql_id": 46}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.title \nFROM production_company AS T1 \nINNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id \nINNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id \nWHERE T1.company_name = 'Paramount Pictures' \nAND CAST(EXTRACT(YEAR FROM T3.release_date) AS INTEGER) = 2000", "sql_id": 47}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ' AND EXTRACT(MONTH FROM T2.return_date) = 8 AND EXTRACT(YEAR FROM T2.return_date) = 2005", "sql_id": 647}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.name = 'Music' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id INNER JOIN inventory AS T4 ON T1.film_id = T4.film_id INNER JOIN customer AS T5 ON T4.store_id = T5.store_id INNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id WHERE T5.first_name = 'RUTH' AND T5.last_name = 'MARTINEZ';", "sql_id": 648}
{"model": "gpt-3.5-turbo", "message": "SELECT (SUM(CASE WHEN T2.store_id = 2 THEN T1.amount ELSE 0 END) - SUM(CASE WHEN T2.store_id = 1 THEN T1.amount ELSE 0 END))::DOUBLE * 100 / SUM(CASE WHEN T2.store_id = 1 THEN T1.amount ELSE 0 END) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN store AS T3 ON T2.store_id = T3.store_id", "sql_id": 649}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.first_name = 'GINA' AND T2.last_name = 'DEGENERES' THEN 1 ELSE 0 END) AS FLOAT) * 100 / SUM(CASE WHEN T2.first_name = 'PENELOPE' AND T2.last_name = 'GUINESS' THEN 1 ELSE 0 END) FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id", "sql_id": 651}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT rental_id) FROM rental WHERE CAST(rental_date AS DATE) BETWEEN '2005-05-26' AND '2005-05-30'", "sql_id": 654}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN active = 0 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(customer_id) FROM customer", "sql_id": 655}
{"model": "gpt-3.5-turbo", "message": "SELECT T4.title \nFROM customer AS T1 \nINNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id \nINNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id \nINNER JOIN film AS T4 ON T3.film_id = T4.film_id \nWHERE T1.first_name = 'BRIAN' \nAND T1.last_name = 'WYMAN' \nAND CAST(EXTRACT(YEAR FROM T2.rental_date) AS VARCHAR) = '2005' \nAND CAST(EXTRACT(MONTH FROM T2.rental_date) AS VARCHAR) = '07';", "sql_id": 658}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.title, T2.name \nFROM film_category AS T1 \nINNER JOIN category AS T2 ON T1.category_id = T2.category_id \nINNER JOIN film AS T3 ON T1.film_id = T3.film_id \nINNER JOIN inventory AS T4 ON T3.film_id = T4.film_id \nINNER JOIN customer AS T5 ON T4.store_id = T5.store_id \nINNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id \nWHERE T5.first_name = 'Natalie' \nAND T5.last_name = 'Meyer' \nAND STRFTIME('%Y',T3.rental_rate) = '2006' \nAND STRFTIME('%m',T3.rental_rate) = '2';", "sql_id": 659}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.country = 'India' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T4.customer_id) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id INNER JOIN address AS T3 ON T2.city_id = T3.city_id INNER JOIN customer AS T4 ON T3.address_id = T4.address_id", "sql_id": 660}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((SUM(CASE WHEN T1.first_name = 'ANGELA' AND T1.last_name = 'WITHERSPOON' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.first_name = 'MARY' AND T1.last_name = 'KEITEL' THEN 1 ELSE 0 END)) AS FLOAT) * 100 / SUM(CASE WHEN T1.first_name = 'MARY' AND T1.last_name = 'KEITEL' THEN 1 ELSE 0 END) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id", "sql_id": 661}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.rating = 'G' THEN 1 ELSE 0 END) AS DOUBLE) / COUNT(T3.film_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Elvis' AND T1.last_name = 'Marx';", "sql_id": 662}
{"model": "gpt-3.5-turbo", "message": "SELECT first_name, last_name, email FROM customer WHERE CAST(strftime('%Y', create_date) AS INTEGER) = 2006 AND active = 0", "sql_id": 663}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.name = 'horror' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T2.category_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id", "sql_id": 665}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CASE WHEN T4.country = 'Australia' THEN 1 ELSE 0 END) - AVG(CASE WHEN T4.country = 'Canada' THEN 1 ELSE 0 END) AS diff\nFROM customer AS T1\nINNER JOIN address AS T2 ON T1.address_id = T2.address_id\nINNER JOIN city AS T3 ON T2.city_id = T3.city_id\nINNER JOIN country AS T4 ON T3.country_id = T4.country_id;", "sql_id": 666}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T4.name = 'Action' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.actor_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film_category AS T3 ON T2.film_id = T3.film_id INNER JOIN category AS T4 ON T3.category_id = T4.category_id WHERE T1.first_name = 'Reese' AND T1.last_name = 'Kilmer';", "sql_id": 667}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.rental_id) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'ELLA' AND T2.last_name = 'ELLA' AND DATE_TRUNC('day', T1.rental_date) BETWEEN '2005-06-01' AND '2005-06-30'", "sql_id": 670}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.amount) FROM rental AS T1 INNER JOIN payment AS T2 ON T1.rental_id = T2.rental_id WHERE DATE_TRUNC('day', T1.rental_date) = '2005-07-29'", "sql_id": 671}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first_name FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id WHERE SUBSTR(T2.postal_code, 1, 2) = '76';", "sql_id": 672}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.length < 100 AND T3.name = 'Drama' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id", "sql_id": 673}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.name = 'Children' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.name = 'Action' THEN 1 ELSE 0 END) AS diff\nFROM film_category AS T1\nINNER JOIN category AS T2 ON T1.category_id = T2.category_id", "sql_id": 674}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.name = 'Documentary' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id", "sql_id": 675}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.name = 'Horror' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id", "sql_id": 676}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.first_name = 'MARGARET' AND T2.last_name = 'MOORE' THEN T1.amount ELSE 0 END) AS DOUBLE) * 100 / SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id", "sql_id": 677}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.name = 'Horror' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id INNER JOIN language AS T4 ON T2.language_id = T4.language_id WHERE T4.name = 'English';", "sql_id": 679}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T4.film_id = 1 THEN 1 ELSE 0 END) - SUM(CASE WHEN T4.film_id = 2 THEN 1 ELSE 0 END) AS diff\nFROM film_actor AS T1\nINNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id\nINNER JOIN film AS T3 ON T1.film_id = T3.film_id\nINNER JOIN inventory AS T4 ON T3.film_id = T4.film_id\nWHERE T2.first_name = 'Reese' AND T2.last_name = 'West';", "sql_id": 682}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.country = 'India' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.country = 'Italy' THEN 1 ELSE 0 END) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id", "sql_id": 650}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title, movie_release_year FROM movies ORDER BY LENGTH(CAST(movie_popularity AS TEXT)) DESC LIMIT 1", "sql_id": 1}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.movie_title\nFROM ratings AS T1\nINNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id\nWHERE CAST(SUBSTR(T1.rating_timestamp_utc, 1, 4) AS INTEGER) = 2020\nAND CAST(SUBSTR(T1.rating_timestamp_utc, 6, 2) AS INTEGER) > 4;", "sql_id": 2}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM reviews ORDER BY LENGTH(content) DESC LIMIT 1", "sql_id": 562}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'music' ORDER BY LENGTH(T2.title) DESC LIMIT 1", "sql_id": 563}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.steals IS NOT NULL AND T1.tmID = 'LAL' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.tmID) FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1._year = T2._year", "sql_id": 237}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.lgID = 'ABA' THEN 1970 - EXTRACT(YEAR FROM T3.birthDate) ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.lgID = 'ABA' THEN 1 ELSE 0 END) - CAST(SUM(CASE WHEN T2.lgID = 'NBA' THEN 1970 - EXTRACT(YEAR FROM T3.birthDate) ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.lgID = 'NBA' THEN 1 ELSE 0 END) FROM draft AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID INNER JOIN players AS T3 ON T2.playerID = T3.playerID WHERE T1.draftYear BETWEEN 1970 AND 1970;", "sql_id": 236}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.business_id\nFROM Business_Hours AS T1\nINNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id\nINNER JOIN Categories AS T3 ON T2.category_id = T3.category_id\nWHERE T3.category_name = 'Accessories'\nAND CAST(SUBSTR(T1.opening_time, -4, 2) AS INTEGER) < 7\nAND T1.opening_time LIKE '%AM';", "sql_id": 254}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT CASE WHEN \"Customer_Names\" LIKE '%Group%' THEN \"Customer_Names\" ELSE NULL END AS T FROM Customers ) WHERE T IS NOT NULL", "sql_id": 217}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.\"Customer_Names\"\nFROM Customers AS T1\nINNER JOIN Sales_Orders AS T2 ON T2.\"_CustomerID\" = T1.CustomerID\nINNER JOIN Products AS T3 ON T3.ProductID = T2.\"_ProductID\"\nWHERE T3.\"Product_Name\" = 'Cocktail Glasses'\nAND SUBSTR(T2.OrderDate, -2) = '20'\nAND T2.\"Discount_Applied\" = (\n    SELECT T2.\"Discount_Applied\"\n    FROM Customers AS T1\n    INNER JOIN Sales_Orders AS T2 ON T2.\"_CustomerID\" = T1.CustomerID\n    INNER JOIN Products AS T3 ON T3.ProductID = T2.\"_ProductID\"\n    WHERE T3.\"Product_Name\" = 'Cocktail Glasses'\n    AND T2.OrderDate LIKE '%/%/20'\n    ORDER BY T2.\"Discount_Applied\" DESC\n    LIMIT 1\n)", "sql_id": 218}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN OrderDate = '5/31/18' THEN 1 ELSE 0 END) FROM \"Sales_Orders\"", "sql_id": 219}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT CASE WHEN DeliveryDate = '6/13/18' THEN OrderNumber ELSE NULL END AS T FROM \"Sales_Orders\" ) WHERE T IS NOT NULL", "sql_id": 220}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT CASE WHEN StateCode = 'GA' THEN State ELSE NULL END AS T FROM Regions ) WHERE T IS NOT NULL", "sql_id": 222}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT DISTINCT CASE WHEN T2.\"Product Name\" = 'Cookware' THEN T1.DeliveryDate ELSE NULL END AS T FROM \"Sales_Orders\" T1 INNER JOIN Products T2 ON T2.ProductID = T1.\"_ProductID\" ) WHERE T IS NOT NULL", "sql_id": 224}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT DISTINCT CASE WHEN T1.\"Discount_Applied\" = 0.1 THEN T2.\"Product_Name\" ELSE NULL END AS T FROM \"Sales_Orders\" T1 INNER JOIN Products T2 ON T2.ProductID = T1.\"_ProductID\" ) WHERE T IS NOT NULL", "sql_id": 225}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT CASE WHEN OrderNumber = 'SO - 000103' THEN \"Unit Cost\" ELSE NULL END AS T FROM \"Sales_Orders\" ) WHERE T IS NOT NULL", "sql_id": 227}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN SUBSTR(T1.OrderDate, -2) IN ('18', '19', '20') AND T2.\"Customer_Names\" = 'Medsep Group' THEN 1 ELSE 0 END) FROM \"Sales_Orders\" AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1.\"_CustomerID\"", "sql_id": 229}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN WarehouseCode = 'WARE-MKL1006' THEN 1 ELSE 0 END) - SUM(CASE WHEN WarehouseCode = 'WARE-NBV1002' THEN 1 ELSE 0 END) AS difference FROM \"Sales_Orders\"", "sql_id": 230}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT OrderNumber, \"Product_Name\" FROM ( SELECT CASE WHEN T2.OrderDate = '6/6/18' THEN T2.OrderNumber ELSE NULL END AS \"OrderNumber\" , CASE WHEN T2.OrderDate = '6/6/18' THEN T1.\"Product Name\" ELSE NULL END AS \"Product_Name\" FROM Products T1 INNER JOIN Sales_Orders T2 ON T2.\"_ProductID\" = T1.ProductID ) WHERE OrderNumber IS NOT NULL AND \"Product_Name\" IS NOT NULL", "sql_id": 231}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT CASE WHEN _CustomerID = 11 THEN ProcuredDate ELSE NULL END AS T FROM \"Sales_Orders\" ) WHERE T IS NOT NULL", "sql_id": 232}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.food_type = 'mexican' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.county = 'monterey county'", "sql_id": 155}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.street_name = '11th st' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'alameda county';", "sql_id": 156}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN food_type = 'american food' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(id_restaurant) FROM generalinfo WHERE city = 'dublin'", "sql_id": 157}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.review > 4 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 RIGHT JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.region = 'bay area'", "sql_id": 158}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.region = 'bay area' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city", "sql_id": 159}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN region = 'Napa Valley' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(region) FROM geographic;", "sql_id": 160}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.food_type = 'afghani' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE 1000 <= T1.street_num AND T1.street_num <= 2000", "sql_id": 161}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'GERMANY' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey", "sql_id": 471}
{"model": "gpt-3.5-turbo", "message": "SELECT JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_custkey = '129301' AND T1.o_orderdate = DATE '1996-07-27';", "sql_id": 472}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.r_name = 'EUROPE' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.n_name) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey", "sql_id": 473}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'JAPAN' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.s_name) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0", "sql_id": 474}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE CAST(EXTRACT(year FROM l_shipdate) AS VARCHAR) = '1998';", "sql_id": 475}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_linenumber) FROM lineitem WHERE l_returnflag = 'R' AND l_shipmode = 'AIR' AND CAST(SUBSTR(l_shipdate, 1, 4) AS INTEGER) = 1994", "sql_id": 476}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.o_orderkey) FROM lineitem AS T1 INNER JOIN orders AS T2 ON T2.o_orderkey = T1.l_orderkey WHERE DATE_PART('day', T1.l_shipdate - T2.o_orderdate) = 1 AND T2.o_orderpriority = '1-URGENT';", "sql_id": 477}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN c_acctbal < 0 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(c_custkey) FROM customer", "sql_id": 478}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN p_mfgr = 'Manufacturer#3' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(p_partkey) FROM part;", "sql_id": 479}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'GERMANY' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0", "sql_id": 481}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE CAST(EXTRACT(year FROM l_shipdate) AS VARCHAR) = '1994';", "sql_id": 482}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'United States' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal < 4000", "sql_id": 483}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN ps_supplycost > 500 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(ps_suppkey) FROM partsupp", "sql_id": 484}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.c_mktsegment = 'AUTOMOBILE' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.c_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'FRANCE'", "sql_id": 485}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.r_name = 'AFRICA' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN customer AS T3 ON T1.n_nationkey = T3.c_nationkey WHERE T3.c_mktsegment = 'HOUSEHOLD';", "sql_id": 486}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(CASE WHEN STRFTIME('%Y', T2.l_shipdate) = '1995' THEN 1 ELSE 0 END) AS DOUBLE) / 12) - (CAST(SUM(CASE WHEN STRFTIME('%Y', T2.l_shipdate) = '1996' THEN 1 ELSE 0 END) AS DOUBLE) / 12) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderpriority = '5-LOW' AND T2.l_shipmode = 'TRUCK';", "sql_id": 489}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'IRAN' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T2.n_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD'", "sql_id": 490}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CASE WHEN l_shipmode = 'RAIL' THEN 1 ELSE 0 END) - SUM(CASE WHEN l_shipmode = 'MAIL' THEN 1 ELSE 0 END) <> 0 THEN 'RAIL' ELSE 'MAIL' END AS result FROM lineitem WHERE l_shipinstruct = 'DELIVER IN PERSON'", "sql_id": 491}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(o_orderkey) AS countorders FROM orders WHERE CAST(strftime('%Y', o_orderdate) AS INTEGER) = 1998 AND o_totalprice < 950", "sql_id": 492}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN l_returnflag = 'A' THEN 1 ELSE 0 END) - SUM(CASE WHEN l_returnflag = 'N' THEN 1 ELSE 0 END) AS diff FROM lineitem WHERE l_extendedprice < 16947.7", "sql_id": 493}
{"model": "gpt-3.5-turbo", "message": "SELECT JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate), T1.o_clerk FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderkey = 6;", "sql_id": 494}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.r_name = 'ASIA' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey INNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey", "sql_id": 495}
{"model": "gpt-3.5-turbo", "message": "SELECT l_linenumber FROM lineitem WHERE CAST(strftime('%Y', l_shipdate) AS INTEGER) < 1997 AND l_shipmode = 'truck';", "sql_id": 496}
{"model": "gpt-3.5-turbo", "message": "SELECT l_linenumber FROM lineitem WHERE CAST(SUBSTR(l_shipdate, 1, 4) AS INTEGER) < 1997 AND l_shipmode = 'TRUCK'", "sql_id": 497}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.c_name \nFROM orders AS T1 \nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey \nINNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey \nWHERE T2.l_discount = 0.1 \nAND CAST(SUBSTR(T1.o_orderdate, 1, 4) AS INTEGER) BETWEEN 1994 AND 1995;", "sql_id": 498}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.r_name = 'America' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T2.n_name) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey", "sql_id": 499}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.c_mktsegment = 'HOUSEHOLD' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.c_mktsegment) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'INDONESIA'", "sql_id": 500}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE CAST(EXTRACT(YEAR FROM l_shipdate) AS VARCHAR) = '1997' AND l_shipmode = 'MAIL'", "sql_id": 501}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE CAST(SUBSTR(l_shipdate, 1, 4) AS INTEGER) = 1994 AND l_returnflag = 'R' AND l_shipmode = 'TRUCK'", "sql_id": 502}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(o_orderkey) FROM orders WHERE CAST(strftime('%Y', o_orderdate) AS INTEGER) = 1997 AND o_clerk = 'Clerk#000000001' AND o_orderpriority = '1-URGENT'", "sql_id": 503}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.c_name \nFROM orders AS T1 \nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey \nINNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey \nORDER BY (JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate)) DESC \nLIMIT 1;", "sql_id": 504}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.s_acctbal < (SELECT AVG(s_acctbal) FROM supplier) THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE';", "sql_id": 488}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.sex) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE strftime('%Y', T2.Date_received) = '2016' AND T1.sex = 'Male' AND T2.Product = 'Credit card';", "sql_id": 19}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(T2.\"Complaint ID\") AS FLOAT) / 3 AS average\nFROM \"client\" AS T1\nINNER JOIN \"events\" AS T2 ON T1.client_id = T2.Client_ID\nWHERE strftime('%Y', T2.\"Date_received\") BETWEEN '2015' AND '2017'\nAND T1.city = 'New York City'\nAND T2.Product = 'Credit card';", "sql_id": 20}
{"model": "gpt-3.5-turbo", "message": "SELECT 100.0 * (SUM(CASE WHEN strftime('%Y', T2.\"Date_received\") = '2017' THEN 1 ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T2.\"Date_received\") = '2016' THEN 1 ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', T2.\"Date_received\") = '2016' THEN 1 ELSE 0 END) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City';", "sql_id": 21}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%Y', T3.\"Date_received\") , CAST(SUM(CASE WHEN T3.\"Company_response_to_consumer\" = 'Closed with explanation' THEN 1 ELSE 0 END) AS REAL) / COUNT(T3.\"Complaint_ID\") AS average FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.\"rand_client\" = T2.client_id INNER JOIN events AS T3 ON T1.\"Complaint_ID\" = T3.\"Complaint_ID\" WHERE T2.city = 'New Bedford' GROUP BY STRFTIME('%Y', T3.\"Date_received\")", "sql_id": 23}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(SUBSTR(ser_time, 4, 2) AS REAL)) FROM callcenterlogs WHERE \"Date_received\" BETWEEN '2017-01-01' AND '2017-04-01'", "sql_id": 30}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%Y', \"Date_received\"), COUNT(\"Date_received\") FROM events WHERE \"Product\" = 'Credit card' AND \"Issue\" = 'Overlimit fee' GROUP BY strftime('%Y', \"Date_received\") HAVING COUNT(\"Date_received\")", "sql_id": 31}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.priority = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"Complaint_ID\") FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.\"Complaint_ID\" = T2.\"Complaint_ID\" WHERE strftime('%Y', T1.\"Date_received\") = '2017';", "sql_id": 33}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'Omaha' AND strftime('%Y', T2.Date_received) = '2012' AND T2.Product = 'Credit card';", "sql_id": 34}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"Submitted via\") FROM events WHERE CAST(strftime('%Y', \"Date received\") AS INTEGER) = 2012 AND \"Submitted via\" = 'Email';", "sql_id": 37}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"Complaint_ID\") FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.\"Complaint_ID\" = T2.\"Complaint_ID\" WHERE strftime('%Y', T1.\"Date_received\") = '2015' AND T2.\"Timely_response_\" = 'Yes' AND T2.\"Company_response_to_consumer\" = 'Closed with explanation';", "sql_id": 38}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.\"Complaint ID\") FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.\"Complaint ID\" = T2.\"Complaint ID\" WHERE T2.\"Submitted via\" = 'Phone' AND strftime('%Y', T1.\"Date received\") = '2014';", "sql_id": 39}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE CAST(SUBSTR(T2.OrderDate, 1, 4) AS INTEGER) = 1996 AND T1.Country = 'UK'", "sql_id": 453}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.CustomerID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE CAST(EXTRACT(YEAR FROM T2.OrderDate) AS VARCHAR) = '1996' GROUP BY T1.Country", "sql_id": 455}
{"model": "gpt-3.5-turbo", "message": "SELECT T4.ProductName\nFROM Customers AS T1\nINNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID\nINNER JOIN OrderDetails AS T3 ON T2.OrderID = T3.OrderID\nINNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID\nWHERE T1.Country = 'Norway' AND CAST(strftime('%Y', T2.OrderDate) AS INTEGER) = 1996;", "sql_id": 463}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.SalesID\nFROM Sales AS T1\nINNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID\nWHERE SUBSTR(T2.FirstName, 1, 1) = 's';", "sql_id": 363}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T1.ProductID = 498 THEN 'YES' ELSE 'NO' END FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Alex'", "sql_id": 365}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE SUBSTR(T1.Name, 1, 1) = 'C'", "sql_id": 366}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CASE WHEN T1.Name = 'HL Mountain Frame - Silver, 42' THEN T2.SalesID ELSE 0 END) - SUM(CASE WHEN T1.Name = 'HL Mountain Frame - Black, 42' THEN T2.SalesID ELSE 0 END) > 0 THEN 'Silver' ELSE 'Black' END FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID", "sql_id": 367}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.FirstName = 'Albert' AND T3.MiddleInitial = 'I' AND T3.LastName = 'Ringer' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T2.CustomerID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID WHERE T1.Name = 'ML Bottom Bracket'", "sql_id": 368}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.Price = 0 THEN T2.Quantity ELSE 0 END) AS DOUBLE) * 100 / SUM(T2.Quantity)\nFROM Products AS T1\nINNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID", "sql_id": 369}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.Name = 'Blade' THEN T2.Quantity ELSE 0 END) AS FLOAT) * 100 / SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID", "sql_id": 370}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Price BETWEEN 200 AND 300 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T2.Price) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.SalesID BETWEEN 1 AND 200", "sql_id": 371}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.Act = 1 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Act = 5 THEN 1 ELSE 0 END) AS more\nFROM works AS T1\nINNER JOIN chapters AS T2 ON T1.id = T2.work_id\nWHERE T1.Title = 'Twelfth Night';", "sql_id": 238}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T4.CharName = 'Romeo' THEN 1 ELSE 0 END), \n       SUM(CASE WHEN T4.CharName = 'Juliet' THEN 1 ELSE 0 END), \n       CAST(SUM(CASE WHEN T4.CharName = 'Romeo' THEN 1 ELSE 0 END) + SUM(CASE WHEN T4.CharName = 'Juliet' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id)\nFROM works AS T1 \nINNER JOIN chapters AS T2 ON T1.id = T2.work_id \nINNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id \nINNER JOIN characters AS T4 ON T3.character_id = T4.id;", "sql_id": 240}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.Title = 'All''s Well That Ends Well' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T3.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id", "sql_id": 241}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN GenreType = 'Comedy' THEN 1 ELSE 0 END) - SUM(CASE WHEN GenreType = 'History' THEN 1 ELSE 0 END) FROM works WHERE _Date > 1593", "sql_id": 242}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.LongTitle FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'Mytilene. A street before the brothel.'", "sql_id": 244}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.Description \nFROM works AS T1 \nRIGHT JOIN chapters AS T2 ON T1.id = T2.work_id \nWHERE T1.Title = 'Venus and Adonis' \nORDER BY T2.Scene DESC \nLIMIT 1", "sql_id": 245}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T4.CharName = 'antonio' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.GenreType = 'Comedy';", "sql_id": 246}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.GenreType = 'Tragedy' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.Scene) FROM chapters AS T1 INNER JOIN works AS T2 ON T1.work_id = T2.id WHERE T2._Date = '1594'", "sql_id": 239}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.act = 5 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T2.act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Titus Andronicus'", "sql_id": 243}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T1.ship_date) = '2017' THEN 1 ELSE 0 END) AS DOUBLE ) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.state = 'TX'", "sql_id": 391}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN CAST(STRFTIME('%Y', _date) AS VARCHAR) = '2007' THEN 1 ELSE 0 END) - SUM(CASE WHEN CAST(STRFTIME('%Y', _date) AS VARCHAR) = '2008' THEN 1 ELSE 0 END) FROM incidents WHERE subject_weapon = 'Vehicle';", "sql_id": 210}
{"model": "gpt-3.5-turbo", "message": "SELECT case_number FROM incidents WHERE CAST(STRFTIME('%Y', _date) AS INTEGER) > 2011 AND subject_statuses = 'Deceased'", "sql_id": 211}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(name) FROM Person WHERE birth_region = 'New York' AND CAST(SUBSTR(birthdate, 1, 4) AS INTEGER) > 1970;", "sql_id": 255}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2009' AND T2.stars = 10 AND T2.percent > 15;", "sql_id": 257}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE CAST(SUBSTR(T1.air_date, 6, 2) AS INTEGER) BETWEEN 10 AND 11;", "sql_id": 260}
{"model": "gpt-3.5-turbo", "message": "SELECT T2._year - CAST(SUBSTR(T1.birthdate, 1, 4) AS INTEGER) AS age\nFROM Person AS T1\nINNER JOIN Award AS T2 ON T1.name = T2.person\nWHERE T2.award = 'Outstanding Voice-Over Performance'\nAND T2.organization = 'Primetime Emmy Awards'\nAND T2.result = 'Winner';", "sql_id": 261}
{"model": "gpt-3.5-turbo", "message": "SELECT award, person FROM Award WHERE result = 'Winner' AND SUBSTR(CAST(_year AS VARCHAR), 1, 4) = '2009';", "sql_id": 263}
{"model": "gpt-3.5-turbo", "message": "SELECT episode, title, rating FROM Episode WHERE SUBSTR(air_date, 1, 7) LIKE '2008-10%';", "sql_id": 264}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title, T2.episode_image, T1.award, T1.person\nFROM Award AS T1\nINNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id\nWHERE T2.rating BETWEEN 7 AND 10\nAND SUBSTR(T2.air_date, 1, 4) = '2008'\nAND T1.result = 'Nominee';", "sql_id": 265}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name, T1.birth_place, T2.role, 2022 - CAST(SUBSTRING(T1.birthdate, 1, 4) AS INTEGER) AS age\nFROM Person AS T1\nINNER JOIN Credit AS T2 ON T1.name = T2.person\nWHERE T1.birthdate IS NOT NULL\nORDER BY T1.birthdate\nLIMIT 1;", "sql_id": 266}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE person = 'Billy Kimball' AND SUBSTR(CAST(_year AS VARCHAR), 1, 4) = '2010' AND result = 'Nominee';", "sql_id": 268}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE CAST(SUBSTR(birthdate, 1, 4) AS INTEGER) < 1970;", "sql_id": 269}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE SUBSTRING(birthdate, 1, 4) = '1958' AND birth_place = 'California' AND birth_country = 'USA';", "sql_id": 270}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE SUBSTRING(birthdate, 1, 4) = '1962' AND birth_region = 'California';", "sql_id": 273}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.episode_id\nFROM Episode AS T1\nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id\nWHERE SUBSTR(T1.air_date, 1, 4) = '2008'\nORDER BY T2.votes DESC\nLIMIT 1;", "sql_id": 274}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN birth_region = 'California' AND SUBSTR(birthdate, 1, 4) > '1970' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(birthdate) FROM Person;", "sql_id": 276}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE SUBSTR(CAST(_year AS VARCHAR), 1, 4) = '2009';", "sql_id": 279}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.keyword\nFROM Episode AS T1\nINNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id\nWHERE SUBSTR(T1.air_date, 1, 4) = '2008';", "sql_id": 281}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.episode_id\nFROM Episode AS T1\nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id\nWHERE SUBSTR(T1.air_date, 1, 4) = '2008' AND T2.stars < 5;", "sql_id": 284}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.percent FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2008' AND T1.votes BETWEEN 950 AND 960;", "sql_id": 285}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.stars\nFROM Episode AS T1\nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id\nWHERE SUBSTR(T1.air_date, 1, 7) = '2008-11';", "sql_id": 286}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.credited = 'true' AND T2.person = 'Sam Im' AND SUBSTR(T1.air_date, 1, 4) = '2009' AND T2.role = 'additional timer';", "sql_id": 287}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN Win_Margin > 100 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(Match_Id) FROM \"Match\"", "sql_id": 169}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Role_Desc = 'CaptainKeeper' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.Player_Id) FROM Player_Match AS T1 INNER JOIN Rolee AS T2 ON T1.Role_Id = T2.Role_Id", "sql_id": 170}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Bowling_skill = ' Legbreak' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id", "sql_id": 171}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN T2.Win_Margin < 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Venue_Id) FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T1.Venue_Name = 'Dr DY Patil Sports Academy';", "sql_id": 173}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Country_Name = 'India' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id WHERE strftime('%Y', T1.DOB) BETWEEN '1975' AND '1985'", "sql_id": 179}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(Player_Id) FROM Player WHERE CAST(strftime('%Y', DOB) AS INTEGER) BETWEEN 1970 AND 1975", "sql_id": 180}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.school = 'occ' THEN 1.0 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.name) FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'navy'", "sql_id": 289}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T2.name IS NULL THEN 'female' ELSE 'male' END FROM male AS T1 LEFT JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.name = 'student124';", "sql_id": 290}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T.result = 0 THEN 'female' ELSE 'male' END AS re\nFROM (SELECT COUNT(name) AS result FROM male WHERE name = 'studenT1000') AS T", "sql_id": 293}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.name IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.name) FROM disabled AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T2.organ = 'foreign_legion'", "sql_id": 294}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN _month = 0 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(name) FROM longest_absense_from_school;", "sql_id": 296}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN \"bool\" = 'pos' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN \"bool\" = 'neg' THEN 1 ELSE 0 END) FROM no_payment_due", "sql_id": 297}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T2.name IS NULL THEN 'female' ELSE 'male' END AS gen, T1.school\nFROM enrolled AS T1\nLEFT JOIN male AS T2 ON T2.name = T1.name\nWHERE T1.name = 'student995';", "sql_id": 298}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(((SUM(CASE WHEN _month = 0 THEN 1 ELSE 0 END) - SUM(CASE WHEN _month = 9 THEN 1 ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN _month = 0 THEN 1 ELSE 0 END) FROM longest_absense_from_school;", "sql_id": 301}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.name) - SUM(CASE WHEN T2.name IS NULL THEN 1 ELSE 0 END) AS num FROM filed_for_bankrupcy AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name", "sql_id": 302}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST((SUM(CASE WHEN T2.name IS NOT NULL AND T1._month = 0 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.name IS NULL AND T1._month = 0 THEN 1 ELSE 0 END) AS FLOAT)) * 100 / COUNT(T1.name)) AS result, CASE WHEN SUM(CASE WHEN T2.name IS NOT NULL AND T1._month = 0 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.name IS NULL AND T1._month = 0 THEN 1 ELSE 0 END) > 0 THEN 'YES' ELSE 'NO' END AS isHigh FROM longest_absense_from_school AS T1 LEFT JOIN disabled AS T2 ON T2.name = T1.name", "sql_id": 303}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._month = 0 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.name) FROM unemployed AS T1 INNER JOIN longest_absense_from_school AS T2 ON T2.name = T1.name", "sql_id": 304}
{"model": "gpt-3.5-turbo", "message": "SELECT 100 * SUM(CASE WHEN T2._month = 0 THEN 1 ELSE 0 END) AS num FROM disabled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name", "sql_id": 305}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.school , CASE WHEN T3.name IS NULL THEN 'female' ELSE 'male' END AS gender FROM enrolled AS T1 INNER JOIN person AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T2.name = 'student34'", "sql_id": 306}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.school = 'uci' AND T4.name IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.name) FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name INNER JOIN person AS T3 ON T1.name = T3.name LEFT JOIN male AS T4 ON T3.name = T4.name", "sql_id": 307}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T3.name IS NULL THEN 1 ELSE 0 END) AS \"result\" FROM enlist AS T1 INNER JOIN person AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T1.organ = 'army';", "sql_id": 308}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.bool = 'pos' THEN 1 ELSE 0 END) AS FLOAT) * 100 / SUM(CASE WHEN T1.bool = 'neg' THEN 1 ELSE 0 END) FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'foreign_legion'", "sql_id": 288}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1._month > 5 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1._month) FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name", "sql_id": 292}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.name IS NULL THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.name), CAST(SUM(CASE WHEN T2.name IS NOT NULL THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.name) FROM enlist AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T1.organ = 'fire_department'", "sql_id": 295}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.\"Product Name\"\nFROM people AS T1\nINNER JOIN central_superstore AS T2 ON T1.\"Customer_ID\" = T2.\"Customer_ID\"\nINNER JOIN product AS T3 ON T3.\"Product ID\" = T2.\"Product_ID\"\nWHERE T1.\"Customer_Name\" = 'Aimee Bixby' AND CAST(strftime('%Y', T2.\"Ship_Date\") AS VARCHAR) = '2016';", "sql_id": 193}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.\"Product_ID\") FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.\"Product_ID\" = T2.\"Product_ID\" WHERE T2.\"Sub_Category\" = 'Art' AND T1.Region = 'East' AND CAST(STRFTIME('%Y', T1.\"Order_Date\") AS INTEGER) = 2013", "sql_id": 194}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.\"Order_ID\") FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.\"Customer_ID\" = T2.\"Customer_ID\" WHERE T2.\"Customer_Name\" = 'Maxwell Schwartz' AND CAST(strftime('%Y', T1.\"Order_Date\") AS INTEGER) = 2015", "sql_id": 195}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM((T1.Sales / (1 - T1.Discount)) * T1.Quantity - T1.Profit) AS cost\nFROM east_superstore AS T1\nINNER JOIN people AS T2 ON T1.Customer_ID = T2.Customer_ID\nINNER JOIN product AS T3 ON T1.Product_ID = T3.Product_ID AND T1.Region = T3.Region\nWHERE T1.Region = 'East' AND T2.Customer_Name = 'Brad Thomas' AND strftime('%Y', T1.Order_Date) = '2016';", "sql_id": 197}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.Sales) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.Product_ID = T2.Product_ID WHERE CAST(STRFTIME('%Y', T1.Order_Date) AS INTEGER) = 2016 AND T2.Category = 'Furniture'", "sql_id": 198}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.\"Customer Name\"\nFROM south_superstore AS T1\nINNER JOIN people AS T2 ON T1.\"Customer ID\" = T2.\"Customer ID\"\nWHERE CAST(strftime('%Y', T1.\"Order Date\") AS INTEGER) = 2015\nGROUP BY T2.\"Customer Name\"\nHAVING COUNT(T2.\"Customer Name\") > 3;", "sql_id": 199}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.\"Customer_ID\") FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.\"Customer_ID\" = T2.\"Customer_ID\" WHERE T1.\"Customer_Name\" = 'Corey Roper' AND STRFTIME('%Y', T2.\"Ship_Date\") = '2015';", "sql_id": 200}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT CAST(julianday(\"Ship_Date\") - julianday(\"Order_Date\") AS INTEGER) AS duration FROM central_superstore WHERE \"Order_ID\" = 'CA-2011-134103';", "sql_id": 202}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.\"Product Name\"\nFROM central_superstore AS T1\nINNER JOIN product AS T2 ON T1.\"Product ID\" = T2.\"Product ID\"\nWHERE strftime('%Y-%m', T1.\"Ship Date\") = '2013-03';", "sql_id": 203}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.\"Order_ID\") FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.\"Customer_ID\" = T2.\"Customer_ID\" WHERE T1.\"Customer_Name\" = 'Alan Barnes' AND CAST(STRFTIME('%Y', T2.\"Order_Date\") AS VARCHAR) = '2015'", "sql_id": 204}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"Product_Name\"\nFROM central_superstore AS T1\nINNER JOIN product AS T2 ON T1.\"Product_ID\" = T2.\"Product_ID\"\nWHERE T2.\"Region\" = 'Central' AND CAST(STRFTIME('%Y', T1.\"Order_Date\") AS INTEGER) = 2016\nORDER BY T1.\"Profit\" ASC\nLIMIT 1", "sql_id": 206}
{"model": "gpt-3.5-turbo", "message": "SELECT julianday(T2.STOP) - julianday(T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1._first = 'Elly' AND T1._last = 'Koss' AND T2.DESCRIPTION LIKE 'Acetaminophen%'", "sql_id": 100}
{"model": "gpt-3.5-turbo", "message": "SELECT julianday(T2.STOP) - julianday(T2.START) AS days FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1._first = 'Elly' AND T1._last = 'Koss' AND T2.DESCRIPTION = 'Cystitis';", "sql_id": 101}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(PATIENT) FROM conditions WHERE DESCRIPTION = 'Diabetes' AND CAST(strftime('%Y', START) AS INTEGER) = 1988", "sql_id": 105}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE DESCRIPTION = 'Pneumonia' AND CAST(SUBSTR(T1.birthdate, 1, 4) AS INTEGER) LIKE 192%;", "sql_id": 107}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.race = 'black' AND T2.DESCRIPTION = 'DTaP' AND CAST(strftime('%Y', T2._DATE) AS VARCHAR) = '2013';", "sql_id": 109}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Influenza seasonal injectable preservative free' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.patient), SUM(CASE WHEN T1.ethnicity = 'english' THEN 1 ELSE 0 END) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE strftime('%Y', T2._DATE) = '2017';", "sql_id": 114}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.marital = 'S' AND T2.REASONDESCRIPTION = 'Cystitis' AND T2.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]' AND CAST(strftime('%Y', T2.START) AS INTEGER) = 2010;", "sql_id": 119}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.REASONDESCRIPTION, T2.DESCRIPTION , julianday(T2.STOP) - julianday(T2.START) AS days , CASE WHEN T1.deathdate IS NULL THEN 'alive' ELSE 'dead' END FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.ENCOUNTER = '23c293ec-dbae-4a22-896e-f12cf3c8bac3';", "sql_id": 120}
{"model": "gpt-3.5-turbo", "message": "SELECT julianday(T2.STOP) - julianday(T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = ' Amoxicillin 250 MG / Clavulanate 125 MG [Augmentin]' AND T1._first = 'Major' AND T1._last = 'D''Amore'", "sql_id": 122}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1._first = 'Elly' AND T1._last = 'Koss' AND CAST(strftime('%Y', T2.START) AS INTEGER) = 2013;", "sql_id": 123}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1._first = 'Joye' AND T1._last = 'Homenick' AND strftime('%Y', T2.START) = '2017';", "sql_id": 128}
{"model": "gpt-3.5-turbo", "message": "SELECT julianday(T2.STOP) - julianday(T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1._first = 'Elly' AND _last = 'Koss' AND T2.DESCRIPTION = 'Acetaminophen 160 MG';", "sql_id": 129}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.race = 'hispanic' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.PATIENT) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE strftime('%Y', T1.stop) = '2011'", "sql_id": 132}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.PATIENT) AS percentage\nFROM careplans AS T1\nINNER JOIN patients AS T2 ON T1.PATIENT = T2.patient\nWHERE strftime('%Y', T1.START) = '2010';", "sql_id": 133}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.race = 'black' AND CAST(strftime('%Y', T1.STOP) AS INTEGER) = 2017", "sql_id": 134}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1._first, T1._last \nFROM patients AS T1 \nINNER JOIN medications AS T2 ON T1.patient = T2.PATIENT \nWHERE T2.DESCRIPTION = 'Penicillin V Potassium 250 MG' \nAND CAST(strftime('%Y', T2.START) AS INTEGER) >= 1948;", "sql_id": 135}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.patient WHERE CAST(SUBSTR(T1.birthdate, 1, 4) AS INTEGER) = 1935 AND T1.race = 'white' AND T2.DESCRIPTION = 'Stroke';", "sql_id": 136}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.device_model = 'Nexus 5' THEN 1 ELSE 0 END) * 100 / COUNT(T1.device_id) AS per , SUM(CASE WHEN T1.device_model = 'Nexus 5' AND T2.gender = 'M' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN T1.device_model = 'Nexus 5' AND T2.gender = 'F' THEN 1 ELSE 0 END), 0) AS r FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'LG'", "sql_id": 62}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.event_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE STRFTIME('%Y', T1._timestamp) = '2016' AND T2.phone_brand = 'vivo';", "sql_id": 65}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1._group = 'M23-26' THEN 1.0 ELSE 0 END) / COUNT(T1.device_id) AS per\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.phone_brand = 'vivo';", "sql_id": 66}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.phone_brand = 'vivo' THEN 1 ELSE 0 END) AS DOUBLE) / COUNT(T1.device_id) AS per\nFROM events AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id\nWHERE T1.event_id = '2'", "sql_id": 67}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.category = '80s Japanese comic' THEN 1 ELSE 0 END) AS DOUBLE) / COUNT(T1.label_id) AS J8,\n       CAST(SUM(CASE WHEN T1.category = '90s Japanese comic' THEN 1 ELSE 0 END) AS DOUBLE) / COUNT(T1.label_id) AS J9\nFROM label_categories AS T1\nINNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id", "sql_id": 68}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN _timestamp = '2016-05-02 7:50:28' THEN 1 ELSE 0 END) AS DOUBLE) / CAST(SUM(CASE WHEN _timestamp = '2016-05-02 7:41:03' THEN 1 ELSE 0 END) AS DOUBLE) AS num\nFROM events AS T1\nINNER JOIN app_events AS T2 ON T1.event_id = T2.event_id\nWHERE T2.is_active = '1'", "sql_id": 74}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN phone_brand = 'vivo' THEN 1 ELSE 0 END) - SUM(CASE WHEN phone_brand = 'LG' THEN 1 ELSE 0 END) AS num FROM phone_brand_device_model2", "sql_id": 75}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id WHERE STRFTIME('%Y', T2._timestamp) = '2016' AND T1.\"_group\" = 'M23-26';", "sql_id": 76}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CASE WHEN T2.category = 'Securities' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.category = 'Finance' THEN 1 ELSE 0 END) > 0 THEN 'Securities' ELSE 'Finance' END AS diff\nFROM app_labels AS T1\nINNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id", "sql_id": 77}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS FLOAT) / CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS FLOAT) AS per\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.phone_brand = 'vivo';", "sql_id": 78}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN is_active = 1 THEN 1 ELSE 0 END) AS FLOAT) / CAST(SUM(CASE WHEN is_active = 0 THEN 1 ELSE 0 END) AS FLOAT) AS per FROM app_events WHERE event_id = 58", "sql_id": 80}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.device_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' AND DATE_TRUNC('day', T1._timestamp) = '2016-05-01'", "sql_id": 82}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS FLOAT) / CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS FLOAT) AS per\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.phone_brand = 'vivo' AND T2.device_model = 'X5Pro';", "sql_id": 83}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' AND T1.age > 80 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(T1.device_id) AS per\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.phone_brand = 'HTC';", "sql_id": 84}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.age > 20 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(T1.device_id) AS per\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.phone_brand = 'SUGAR';", "sql_id": 86}
{"model": "gpt-3.5-turbo", "message": "SELECT longitude, latitude FROM events WHERE CAST(_timestamp AS DATE) = '2016-04-30'", "sql_id": 87}
{"model": "gpt-3.5-turbo", "message": "SELECT T.gender\nFROM (SELECT T1.gender, COUNT(T1.device_id) AS num\n      FROM gender_age AS T1\n               INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id\n      WHERE date(T2._timestamp) BETWEEN '2016-05-01' AND '2016-05-10'\n      GROUP BY T1.gender) AS T\nORDER BY T.num DESC\nLIMIT 1", "sql_id": 88}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS DOUBLE) / CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS DOUBLE) AS per\nFROM gender_age AS T1\nINNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id\nINNER JOIN app_events_relevant AS T3 ON T2.event_id = T3.event_id\nWHERE T3.is_installed = 0", "sql_id": 89}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN latitude != 0 AND longitude != 0 THEN 1 ELSE 0 END) - SUM(CASE WHEN latitude = 0 AND longitude = 0 THEN 1 ELSE 0 END) AS diff FROM events WHERE device_id = '-922956879900150000'", "sql_id": 90}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN is_installed = 1 AND is_active = 0 THEN 1 ELSE 0 END) AS DOUBLE) / COUNT(app_id) AS perrcent FROM app_events WHERE event_id = 6", "sql_id": 91}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) > 0 THEN 'M' ELSE 'F' END AS gender\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.device_model = 'Galaxy Note 2';", "sql_id": 92}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.gender IS NULL AND T1.age IS NULL AND T1._group IS NULL THEN 1 ELSE 0 END) AS FLOAT) / COUNT(T1.device_id) AS per\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.phone_brand = 'vivo';", "sql_id": 95}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.category = 'Academic Information' THEN 1.0 ELSE 0 END) / COUNT(T2.app_id) AS per FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id", "sql_id": 93}
{"model": "gpt-3.5-turbo", "message": "SELECT T.game_name FROM game AS T ORDER BY LENGTH(T.game_name) DESC LIMIT 1", "sql_id": 248}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(JULIANDAY(EndDate) - JULIANDAY(StartDate) AS BIGINT) AS result\nFROM BillOfMaterials\nORDER BY JULIANDAY(EndDate) - JULIANDAY(StartDate) DESC\nLIMIT 1", "sql_id": 508}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.CreditRating\nFROM ProductVendor AS T1\nINNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nWHERE T1.StandardPrice = 18.9900\nAND T1.AverageLeadTime = 16\nAND DATE_TRUNC('day', T1.LastReceiptDate) = '2011-08-27';", "sql_id": 511}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.ShipMethodID = 5 THEN T3.OrderQty ELSE 0 END) AS DOUBLE) / COUNT(T3.ProductID) FROM ShipMethod AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.ShipMethodID = T2.ShipMethodID INNER JOIN PurchaseOrderDetail AS T3 ON T2.PurchaseOrderID = T3.PurchaseOrderID;", "sql_id": 512}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.city = 'Bothell' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.city = 'Kenmore' THEN 1 ELSE 0 END), stateprovincecode\nFROM Address AS T1\nINNER JOIN StateProvince AS T2 ON T1.stateprovinceid = T2.stateprovinceid\nGROUP BY stateprovincecode", "sql_id": 513}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ListPrice - T1.StandardCost > 21.9037 AND DATE(T2.StartDate) >= '2012-10-01'", "sql_id": 514}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(T2.PasswordHash) FROM Person AS T1 INNER JOIN Password AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Catherine' AND T1.LastName = 'Ward';", "sql_id": 515}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.TransactionType \nFROM TransactionHistory AS T1 \nINNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID \nWHERE T2.Name = 'HL Road Frame - Black, 48' \nAND DATE(T1.TransactionDate) = '2013-07-31';", "sql_id": 516}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.TransactionType \nFROM TransactionHistoryArchive AS T1 \nINNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID \nWHERE T2.Name = 'LL Road Handlebars' \nAND DATE_TRUNC('day', T1.TransactionDate) = '2012-11-03';", "sql_id": 517}
{"model": "gpt-3.5-turbo", "message": "SELECT BusinessEntityID FROM SalesPerson WHERE BusinessEntityID IN ( SELECT BusinessEntityID FROM SalesPersonQuotaHistory WHERE STRFTIME('%Y', QuotaDate) = '2013' ) ORDER BY CAST(SalesLastYear AS DOUBLE) / SalesQuota DESC LIMIT 1", "sql_id": 518}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.BusinessEntityID, SUM(T1.SalesQuota) \nFROM SalesPerson AS T1 \nINNER JOIN SalesPersonQuotaHistory AS T2 \nON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE CAST(strftime('%Y', T2.QuotaDate) AS INTEGER) = 2011 \nGROUP BY T1.BusinessEntityID \nORDER BY SUM(T1.SalesYTD) DESC \nLIMIT 1", "sql_id": 520}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.BusinessEntityID\nFROM SalesPerson AS T1\nINNER JOIN SalesPersonQuotaHistory AS T2\nON T1.BusinessEntityID = T2.BusinessEntityID\nWHERE T1.TerritoryID = 1\nAND CAST(STRFTIME('%Y', QuotaDate) AS INTEGER) = 2013;", "sql_id": 521}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.SalesQuota) FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.BusinessEntityID = 275 AND CAST(STRFTIME('%Y', QuotaDate) AS INTEGER) = 2013", "sql_id": 522}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.BusinessEntityID\nFROM SalesPerson AS T1\nINNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nWHERE STRFTIME('%Y', T2.QuotaDate) = '2013'\nAND T1.SalesQuota < T1.SalesLastYearOutput;", "sql_id": 523}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(BusinessEntityID) FROM Employee WHERE MaritalStatus = 'M' AND CAST(SUBSTR(BirthDate, 1, 4) AS INTEGER) < 1960 AND Gender = 'M';", "sql_id": 526}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T3.Name) FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T1.FirstName = 'Sheela' AND T1.LastName = 'Word' AND CAST(STRFTIME('%Y', T3.ModifiedDate) AS INTEGER) BETWEEN 2011 AND 2012", "sql_id": 528}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.FirstName, T1.LastName\nFROM Person AS T1\nINNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nWHERE CAST(STRFTIME('%Y', T2.HireDate) AS INTEGER) >= 2007 AND T2.SalariedFlag = 1;", "sql_id": 534}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.FirstName, T1.LastName\nFROM Person AS T1\nINNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nINNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID\nINNER JOIN Department AS T4 ON T3.DepartmentID = T4.DepartmentID\nWHERE CAST(strftime('%Y', T2.HireDate) AS INTEGER) = 2009\nAND T4.Name = 'Shipping and Receiving';", "sql_id": 536}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Name, T3.Name FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE STRFTIME('%Y', T1.SellStartDate) = '2013';", "sql_id": 539}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.FirstName, T2.LastName\nFROM Employee AS T1\nINNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nWHERE CAST(STRFTIME('%Y', T1.BirthDate) AS INTEGER) > 1970\nORDER BY T1.SickLeaveHours\nLIMIT 1;", "sql_id": 540}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.StartTime, T3.EndTime\nFROM Employee AS T1\nINNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nINNER JOIN Shift AS T3 ON T2.ShiftID = T3.ShiftID\nWHERE CAST(STRFTIME('%Y', T1.BirthDate) AS INTEGER) < 1969\nORDER BY T1.BirthDate\nLIMIT 1 OFFSET 5;", "sql_id": 543}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.PersonType\nFROM Employee AS T1\nINNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID\nWHERE T1.Gender = 'F' AND T1.MaritalStatus = 'S' AND CAST(T1.HireDate AS DATE) BETWEEN '2008-01-01' AND '2008-12-31'\nGROUP BY T2.PersonType\nORDER BY COUNT(T2.PersonType) DESC\nLIMIT 1", "sql_id": 546}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T3.Name = 'Engineering' AND CAST(STRFTIME('%Y', T2.EndDate) AS INTEGER) > 2009 AND CAST(STRFTIME('%Y', T2.StartDate) AS INTEGER) < 2009", "sql_id": 547}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) \nFROM EmployeeDepartmentHistory AS T1 \nINNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID \nINNER JOIN Person AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID \nWHERE T3.PersonType = 'SC' \nAND T2.GroupName = 'Manufacturing' \nAND CAST(STRFTIME('%Y', T1.EndDate) AS INTEGER) >= 2007 \nAND CAST(STRFTIME('%Y', T1.StartDate) AS INTEGER) <= 2007", "sql_id": 548}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID WHERE T2.GroupName = 'Quality Assurance' AND CAST(STRFTIME('%Y', T1.StartDate) AS INTEGER) = 2007", "sql_id": 549}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T3.Rate) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN EmployeePayHistory AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T2.Name = 'Engineering' AND CAST(SUBSTR(EndDate, 1, 4) AS INTEGER) > 2007 AND CAST(SUBSTR(T1.StartDate, 1, 4) AS INTEGER) < 2007", "sql_id": 551}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Language = 'English' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode;", "sql_id": 559}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Language = 'English' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GNP > 1500", "sql_id": 560}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Language = 'Chinese' THEN T1.SurfaceArea ELSE 0 END) AS DOUBLE) * 100 / SUM(T1.SurfaceArea) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode", "sql_id": 561}

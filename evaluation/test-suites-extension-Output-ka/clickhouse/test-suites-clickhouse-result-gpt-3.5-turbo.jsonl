{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE (a, b) IN ((1, 10)); -- ROW", "sql_id": "clickhouse_1_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE (a, b) IN ((1, 10), (2, 20));", "sql_id": "clickhouse_1_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE (a, b) NOT IN ((1, 10));", "sql_id": "clickhouse_1_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE (a, b) NOT IN ((1, 10), (2, 20));", "sql_id": "clickhouse_1_9"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (ts) VALUES (toUnixTimestamp('2002-10-27 01:00'));", "sql_id": "clickhouse_100_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (ts) VALUES (toUnixTimestamp('2002-10-27 02:00'));", "sql_id": "clickhouse_100_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (ts) VALUES (toUnixTimestamp('2002-10-27 03:00'));", "sql_id": "clickhouse_100_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT ts, toDateTime(ts) FROM t1;", "sql_id": "clickhouse_100_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('2001-01-01 00:00:00');", "sql_id": "clickhouse_100_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT toRelativeDayNum(toDate('2001-01-01 00:00:00')) + 719528;", "sql_id": "clickhouse_100_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT toRelativeDayNum(toDate('2001-01-01 00:00:00')) + 719528;", "sql_id": "clickhouse_100_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('day', toDate('2007-12-30'), toDate('2007-12-31'));", "sql_id": "clickhouse_100_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('second', toDateTime('2000-01-01 00:00:00'), toDateTime('2000-01-01 00:00:00')); -- TIMEDIFF", "sql_id": "clickhouse_100_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime('2009-10-10 23:59:59', '%A %M %Y');", "sql_id": "clickhouse_100_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('2003-12-31 23:59:59'), '%H:%i:%s'); -- TIME", "sql_id": "clickhouse_100_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT addMinutes(toDateTime('2003-01-02 23:59:59'), 1);", "sql_id": "clickhouse_100_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('month', toDate('2003-02-01 23:59:59'), toDate('2003-05-01')); -- TIMESTAMPDIFF", "sql_id": "clickhouse_100_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT toRelativeSecondNum(toDateTime('2009-11-29 23:59:59')) + 62167219200;", "sql_id": "clickhouse_100_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2015-11-13 23:59:59');", "sql_id": "clickhouse_100_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(s1) FROM t1; -- HEX", "sql_id": "clickhouse_101_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(concat('*', s1, '*', s2, '*')) FROM t1;", "sql_id": "clickhouse_101_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(s1), s2 FROM t1 ORDER BY s1, s2; -- HEX", "sql_id": "clickhouse_101_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(123456789 AS UInt32);", "sql_id": "clickhouse_101_12"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (toDate(now()), 1);", "sql_id": "clickhouse_102_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT count(*) FROM t1 WHERE a = toDate(now());", "sql_id": "clickhouse_102_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (toDate(now()), 2);", "sql_id": "clickhouse_102_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT count(*) FROM t1 WHERE a = toDate(now());", "sql_id": "clickhouse_102_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT count(*) FROM t1 WHERE a = toDate(now()) AND b = 1;", "sql_id": "clickhouse_102_6"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 AS SELECT today() AS f1;", "sql_id": "clickhouse_102_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM (SELECT makeDate(2011,0)) a; -- makeDate", "sql_id": "clickhouse_102_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT ifNull(least(20010101, 20020202), NULL);", "sql_id": "clickhouse_102_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp(now());", "sql_id": "clickhouse_102_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDate(toDateTime(20110512154559.6 + 0e0)); -- DATE", "sql_id": "clickhouse_102_21"}
{"model": "gpt-3.5-turbo", "message": "WITH RECURSIVE qn AS (\n    SELECT 1 AS n, 'x' AS un\n    UNION ALL\n    SELECT 1 + n, concat(un, 'x')\n    FROM qn\n    WHERE n < 10\n) \nSELECT *\nFROM qn; -- CONCAT", "sql_id": "clickhouse_2_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(count() > 0, 'YES', 'NO') AS \"IMPLICIT COMMIT\" FROM trans; -- IF", "sql_id": "clickhouse_3_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(a = 1, a, a) AS b FROM t1 ORDER BY indexOf([b + 1, 1], b);", "sql_id": "clickhouse_39_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(a = 1, a, a) AS b FROM t1 ORDER BY indexOf([1], b);", "sql_id": "clickhouse_39_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM t1 WHERE a = 9223372036854775807 AND trimBoth(toString(a)) = b; -- TRIM", "sql_id": "clickhouse_4_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM t1 WHERE a = 9223372036854775806 AND trimBoth(toString(a)) = b; -- TRIM", "sql_id": "clickhouse_4_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM t1 WHERE a = 9223372036854775805 AND trimBoth(toString(a)) = b; -- TRIM", "sql_id": "clickhouse_4_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM t1 WHERE a = 0 AND trimBoth(toString(a)) = b; -- TRIM", "sql_id": "clickhouse_4_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE coalesce(a, 0) BETWEEN 0 AND 0.9;", "sql_id": "clickhouse_4_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE coalesce(a, 0) = 0.9;", "sql_id": "clickhouse_4_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE coalesce(a, 0) IN (0.8, 0.9);", "sql_id": "clickhouse_4_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT currentUser();", "sql_id": "clickhouse_5_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(c1) FROM t1;", "sql_id": "clickhouse_6_3"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 AS SELECT repeat('a', 4000) AS a;", "sql_id": "clickhouse_6_5"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE head AS SELECT concat(b1.b, b2.b) AS head FROM t1 b1 CROSS JOIN t1 b2; -- CONCAT", "sql_id": "clickhouse_6_12"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE tail AS SELECT concat(b1.b, b2.b) AS tail FROM t1 b1 CROSS JOIN t1 b2; -- CONCAT", "sql_id": "clickhouse_6_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM t1 WHERE a<>'' AND LENGTH(a)=2;", "sql_id": "clickhouse_6_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE lengthUTF8(a) = 2;", "sql_id": "clickhouse_6_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM t1 WHERE a<>'' AND LENGTH(a)=3;", "sql_id": "clickhouse_6_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT c1, length(c1) FROM h; -- LENGTH", "sql_id": "clickhouse_7_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT c1, replicate(' ', 20 - length(c1)) || c1 FROM h; -- LPAD", "sql_id": "clickhouse_7_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT c1, RPAD(c1, 20, '52') FROM h; -- RPAD", "sql_id": "clickhouse_7_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT position(c1, 'h') FROM h; -- position", "sql_id": "clickhouse_7_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT position(c1, '') FROM h; -- position", "sql_id": "clickhouse_7_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT position(c1, '52') FROM h; -- position", "sql_id": "clickhouse_7_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT position(c1, '54') FROM h;", "sql_id": "clickhouse_7_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT position(c1, '31') FROM h;", "sql_id": "clickhouse_7_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT c1, trimBoth(c1) FROM h; -- TRIM", "sql_id": "clickhouse_7_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime(123456789); -- FROM_UNIXTIME", "sql_id": "clickhouse_71_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime(234567890); -- FROM_UNIXTIME", "sql_id": "clickhouse_71_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime(1); -- FROM_UNIXTIME", "sql_id": "clickhouse_71_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp(toDateTime(123456789));", "sql_id": "clickhouse_71_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp(toDateTime(234567890));", "sql_id": "clickhouse_71_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2039-01-20 01:00:00');", "sql_id": "clickhouse_71_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2038-02-10 01:00:00');", "sql_id": "clickhouse_71_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('1970-01-01 01:00:00'), toUnixTimestamp('1970-01-01 01:00:01'), toUnixTimestamp('2038-01-19 04:14:07'), toUnixTimestamp('2038-01-19 04:14:08');", "sql_id": "clickhouse_71_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, toDateTime(a) FROM t1;", "sql_id": "clickhouse_71_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('3001-01-19 08:59:59');", "sql_id": "clickhouse_71_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t WHERE concat(x, x) = 'XX'; -- CONCAT", "sql_id": "clickhouse_72_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1(f1) SELECT IF(max(f1) IS NULL, '2000', max(f1)) FROM t1;", "sql_id": "clickhouse_74_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT (SELECT SUM(length(c)) FROM t1 WHERE c='13_characters') FROM t1; -- LENGTH", "sql_id": "clickhouse_74_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t2 (d)\nSELECT length((SELECT SUM(length(c)) FROM t1 WHERE c='13_characters')) FROM t1; -- LENGTH", "sql_id": "clickhouse_74_9"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t2 (d)\nSELECT length((SELECT SUM(length(c)) FROM t1 WHERE c='7_chars')) FROM t1; -- LENGTH", "sql_id": "clickhouse_74_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT *, hexString(a) FROM t1;", "sql_id": "clickhouse_74_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT *, hex(a) FROM t1 WHERE a = 'abc-def'; -- HEX", "sql_id": "clickhouse_74_17"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES('valid-string',1), (unhex('11'),2);", "sql_id": "clickhouse_75_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT pk, length(tx), length(tx) FROM t1;", "sql_id": "clickhouse_75_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, repeat('a',110), repeat('b', 210)) FORMAT Values;", "sql_id": "clickhouse_76_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT i, length(a), length(b), lengthUTF8(a), lengthUTF8(b) FROM t1;", "sql_id": "clickhouse_76_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, 'a', 'a', now()), (1, 'b', 'b', now());", "sql_id": "clickhouse_76_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    time,\n    date,\n    timestamp,\n    concat(date, ' ', time),\n    quarter + week AS quarter_week,\n    year + timestampadd AS year_timestampadd,\n    timestampdiff\nFROM t1;", "sql_id": "clickhouse_77_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|', a, '|'), concat('|', b, '|') FROM t1; -- CONCAT", "sql_id": "clickhouse_78_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT hexString(val) FROM t1;", "sql_id": "clickhouse_78_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) FROM t1;", "sql_id": "clickhouse_78_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, formatDateTime(a,'%a') as abday, CASE toDayOfWeek(toDate(a)) WHEN 1 THEN 'Monday' WHEN 2 THEN 'Tuesday' WHEN 3 THEN 'Wednesday' WHEN 4 THEN 'Thursday' WHEN 5 THEN 'Friday' WHEN 6 THEN 'Saturday' WHEN 7 THEN 'Sunday' END as day FROM t1 ORDER BY a;", "sql_id": "clickhouse_79_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, formatDateTime(a,'%b') as abmon, monthName(a) as mon FROM t1 ORDER BY a;", "sql_id": "clickhouse_79_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime('2001-01-01', '%w %a %W'); -- DATE_FORMAT", "sql_id": "clickhouse_79_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime('2001-01-01', '%c %b %M'); -- DATE_FORMAT", "sql_id": "clickhouse_79_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime('2010-03-23 11:00:00', '%l %p'); -- DATE_FORMAT", "sql_id": "clickhouse_79_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN '' = 'ae' THEN 0 WHEN '' < 'ae' THEN -1 ELSE 1 END,\n       CASE WHEN 'ae' = '' THEN 0 WHEN 'ae' < '' THEN -1 ELSE 1 END,\n       CASE WHEN 'aeq' = 'q' THEN 0 WHEN 'aeq' < 'q' THEN -1 ELSE 1 END,\n       CASE WHEN 'q' = 'aeq' THEN 0 WHEN 'q' < 'aeq' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 'ss' = '' THEN 0 WHEN 'ss' < '' THEN -1 ELSE 1 END,\n       CASE WHEN '' = 'ss' THEN 0 WHEN '' < 'ss' THEN -1 ELSE 1 END,\n       CASE WHEN 's' = 'sss' THEN 0 WHEN 's' < 'sss' THEN -1 ELSE 1 END,\n       CASE WHEN 'q' = 'ssq' THEN 0 WHEN 'q' < 'ssq' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN '' = 'af' THEN 0 WHEN '' < 'af' THEN -1 ELSE 1 END,\n       CASE WHEN 'a' = '' THEN 0 WHEN 'a' < '' THEN -1 ELSE 1 END,\n       CASE WHEN '' = 'aeq' THEN 0 WHEN '' < 'aeq' THEN -1 ELSE 1 END,\n       CASE WHEN '' = 'aeaeq' THEN 0 WHEN '' < 'aeaeq' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 'ss' = 'a' THEN 0 WHEN 'ss' < 'a' THEN -1 ELSE 1 END,\n       CASE WHEN '' = 'ssa' THEN 0 WHEN '' < 'ssa' THEN -1 ELSE 1 END,\n       CASE WHEN 'sa' = 'sssb' THEN 0 WHEN 'sa' < 'sssb' THEN -1 ELSE 1 END,\n       CASE WHEN 's' = '' THEN 0 WHEN 's' < '' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN '' = 'o' THEN 0 WHEN '' < 'o' THEN -1 ELSE 1 END, \n       CASE WHEN '' = 'u' THEN 0 WHEN '' < 'u' THEN -1 ELSE 1 END, \n       CASE WHEN '' = 'oeb' THEN 0 WHEN '' < 'oeb' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 'af' = '' THEN 0 WHEN 'af' < '' THEN -1 ELSE 1 END,\n       CASE WHEN '' = 'a' THEN 0 WHEN '' < 'a' THEN -1 ELSE 1 END,\n       CASE WHEN 'aeq' = '' THEN 0 WHEN 'aeq' < '' THEN -1 ELSE 1 END,\n       CASE WHEN 'aeaeq' = '' THEN 0 WHEN 'aeaeq' < '' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 'a' = 'ss' THEN 0 WHEN 'a' < 'ss' THEN -1 ELSE 1 END,\n       CASE WHEN 'ssa' = '' THEN 0 WHEN 'ssa' < '' THEN -1 ELSE 1 END,\n       CASE WHEN 'sssb' = 'sa' THEN 0 WHEN 'sssb' < 'sa' THEN -1 ELSE 1 END,\n       CASE WHEN '' = 's' THEN 0 WHEN '' < 's' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 'u' = 'a' THEN 0 WHEN 'u' < 'a' THEN -1 ELSE 1 END, \n       CASE WHEN 'u' = '' THEN 0 WHEN 'u' < '' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 's' = 'a' THEN 0 WHEN 's' < 'a' THEN -1 ELSE 1 END, \n       CASE WHEN 'a' = 'x' THEN 0 WHEN 'a' < 'x' THEN -1 ELSE 1 END;", "sql_id": "clickhouse_8_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT indexOf(['ue', s1], 'ue') AS result1, indexOf(['', s1], '') AS result2, s1='ue' AS result3, s1='' AS result4 FROM t1;", "sql_id": "clickhouse_8_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE length(s1) = 2 AND s1 = 'oe';", "sql_id": "clickhouse_8_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('', 5, 'x') AS result; -- LPAD", "sql_id": "clickhouse_80_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('', 0, 'x') AS result; -- LPAD", "sql_id": "clickhouse_80_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('', 0, '') AS result; -- LPAD", "sql_id": "clickhouse_80_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT replicate('x', NULL) || 'a' AS result; -- LPAD", "sql_id": "clickhouse_80_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('a', 0, '') AS result; -- LPAD", "sql_id": "clickhouse_80_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT replicate('a', 5) AS result; -- LPAD", "sql_id": "clickhouse_80_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('', 5, '') AS result; -- LPAD", "sql_id": "clickhouse_80_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT replicate('x', 0) || 'a' AS result; -- LPAD", "sql_id": "clickhouse_80_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT replicate('', 0) || 'a' AS result; -- LPAD", "sql_id": "clickhouse_80_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT replicate('x', 0) AS result; -- LPAD", "sql_id": "clickhouse_80_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('', 0, '') AS result; -- LPAD", "sql_id": "clickhouse_80_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT replicate('x', 5 - length('123')) || '123'; -- LPAD", "sql_id": "clickhouse_80_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT replicate('xy', 5) || 'a'; -- LPAD", "sql_id": "clickhouse_80_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('I LOVE SQL', 20, ' '); -- LPAD", "sql_id": "clickhouse_80_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('I LOVE SQL in the morning', 20, ' '); -- LPAD", "sql_id": "clickhouse_80_15"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (f1, f2) VALUES(repeat('a', 1024), 0), (repeat('b', 1024), 1), (repeat('c', 1024), 2), (repeat('d', 1024), 3), (repeat('e', 1024), 4), (repeat('f', 1024), 5);", "sql_id": "clickhouse_81_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(length(f1)) FROM t1; -- LENGTH", "sql_id": "clickhouse_81_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT coalesce(d, d), ifNull(d, d), if(i, d, d), if(i, d, d), greatest(d, d), least(d, d) FROM t1 ORDER BY rand();", "sql_id": "clickhouse_82_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(c1) FROM AB; -- HEX", "sql_id": "clickhouse_83_3"}
{"model": "gpt-3.5-turbo", "message": "insert into t5 values (1, formatDateTime('2001-01-01', '%W'))", "sql_id": "clickhouse_84_2"}
{"model": "gpt-3.5-turbo", "message": "insert into t5 values (2, formatDateTime('2001-01-01', '%A')); -- DATE_FORMAT", "sql_id": "clickhouse_84_3"}
{"model": "gpt-3.5-turbo", "message": "insert into t5 values (3, formatDateTime('2001-01-01', '%W'))", "sql_id": "clickhouse_84_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) from t1; -- HEX", "sql_id": "clickhouse_84_8"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, currentUser()); -- USER", "sql_id": "clickhouse_84_11"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (repeat('ManyMegaByteBlck', 123));", "sql_id": "clickhouse_85_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (repeat('ManyMegaByteBlck', 234));", "sql_id": "clickhouse_85_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (repeat('ManyMegaByteBlck', 345));", "sql_id": "clickhouse_85_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (repeat('ManyMegaByteBlck', 456));", "sql_id": "clickhouse_85_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(c1) FROM t1;", "sql_id": "clickhouse_85_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT\n    NULL,\n    isNull(NULL),\n    isNull(1/0),\n    isNull(1/0 = NULL),\n    ifNull(NULL, 1),\n    ifNull(NULL, 'TRUE'),\n    ifNull('TRUE', 'ERROR'),\n    1/0 IS NULL,\n    1 IS NOT NULL; -- ISNULL, IFNULL", "sql_id": "clickhouse_86_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT NULL=NULL, NULL<>NULL, ifNull(NULL, 1.1) + 0, ifNull(NULL, 1) | 0; -- IFNULL", "sql_id": "clickhouse_86_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 'a' = NULL THEN 0 WHEN 'a' < NULL THEN -1 ELSE 1 END, \nCASE WHEN 1 < NULL THEN -1 ELSE 1 END, \nNULL LIKE 'a%', \nNULL, \nNULL;", "sql_id": "clickhouse_86_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT repeat('a',0), repeat('ab',5+5), repeat('ab',-1), reverse(NULL); -- REPEAT", "sql_id": "clickhouse_86_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT indexOf(['a', 'b', 'c'], NULL) AS result;", "sql_id": "clickhouse_86_4"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT ifNull(a, b) AS ifNull_a_b FROM t1;", "sql_id": "clickhouse_86_9"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 SELECT ifNull(a, NULL) FROM t1; -- ifNull", "sql_id": "clickhouse_86_11"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT ifNull(NULL, b) AS ifNull_result FROM t1;", "sql_id": "clickhouse_86_13"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES ( repeat( 'a', 10 ), 1), ( repeat( 'b', 10 ), 2);", "sql_id": "clickhouse_87_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT arrayStringConcat(groupArray(a), ', ') FROM t1;", "sql_id": "clickhouse_87_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp(now());", "sql_id": "clickhouse_87_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT repeat('a', 2000);", "sql_id": "clickhouse_88_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT length('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') as len; -- LENGTH", "sql_id": "clickhouse_88_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(repeat('a',2000));", "sql_id": "clickhouse_88_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT c11, length(c12) FROM t1; -- LENGTH", "sql_id": "clickhouse_88_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) from t1 where a like 'A_'; -- HEX", "sql_id": "clickhouse_89_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(toString(a)) AS hex_a FROM t1 WHERE a LIKE 'A_';", "sql_id": "clickhouse_89_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) FROM t1; -- HEX", "sql_id": "clickhouse_89_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(0, 'ERROR', 'this'), if(1, 'is', 'ERROR'), if(NULL, 'ERROR', 'a'), if(1, 2, 3), if(1, 2.0, 3.0) + 0; -- IF", "sql_id": "clickhouse_9_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(1, st, st) AS s FROM t1 ORDER BY s;", "sql_id": "clickhouse_9_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(u = 1, st, st) AS s FROM t1 ORDER BY s;", "sql_id": "clickhouse_9_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT NULLIF(u, 1) FROM t1; -- NULLIF", "sql_id": "clickhouse_9_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(u = 1, NULL, u) AS nullif_result FROM t1;", "sql_id": "clickhouse_9_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(if(num is null, 0.00, num)) FROM t1; -- IF", "sql_id": "clickhouse_9_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT min(if(y - x > 5, y, NULL)), max(if(y - x > 5, y, NULL)) FROM t1;", "sql_id": "clickhouse_9_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(5 = 5, NULL, 5) IS NULL, if(5 = 5, 5, NULL) IS NOT NULL; -- NULLIF", "sql_id": "clickhouse_9_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT id, if(date IS NULL, '-', toDateTime(date)) AS date_ord, text FROM t1 ORDER BY date_ord ASC;", "sql_id": "clickhouse_9_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT id, if(date IS NULL, '-', toDateTime(date)) AS date_ord, text FROM t1 ORDER BY date_ord DESC;", "sql_id": "clickhouse_9_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM (SELECT MAX(IF(1, CAST(c AS UInt64), 0)) FROM t1) AS te; -- IF", "sql_id": "clickhouse_9_26"}
{"model": "gpt-3.5-turbo", "message": "SELECT max(ifNull(toUInt32(c), 0)) AS te FROM t1;", "sql_id": "clickhouse_9_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(NULLIF(toYear(toDate('2001-01-01')), 10));", "sql_id": "clickhouse_9_29"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDate('0000-01-01') + 3652499, toDate('0000-01-01') + 3652500, toDate('0000-01-01') + 3652501;", "sql_id": "clickhouse_90_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDate('0000-01-01') + 42949670, toDate('0000-01-01') + 42949671, toDate('0000-01-01') + 42949673;", "sql_id": "clickhouse_90_1"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES (0, repeat('x', 120000)), (1, repeat('z', 12000));", "sql_id": "clickhouse_91_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(b) FROM (SELECT * FROM t INTERSECT SELECT * FROM t) AS derived; -- LENGTH", "sql_id": "clickhouse_91_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT argument FROM test_log WHERE argument LIKE concat('%azun','dris%');", "sql_id": "clickhouse_92_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(10, 2, 3) IN (tuple(3, 2, 3), tuple(1, 2, 3), tuple(1, 3, 3));", "sql_id": "clickhouse_93_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, 3) IN (tuple(3, NULL, 3), tuple(1, 2, 3), tuple(1, 3, 3)); -- ROW", "sql_id": "clickhouse_93_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(10, 2, 3) IN (tuple(3, 2, 3), tuple(1, 2, 3), tuple(1, 3, 3));", "sql_id": "clickhouse_93_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('a', 0, 3) IN (tuple(3, 2, 3), tuple('a', '0', '3'), tuple(1, 3, 3)); -- ROW", "sql_id": "clickhouse_93_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('a', 1.5, 3) IN (tuple(3, NULL, 3), tuple('a', 1.5, 3), tuple(1, 3, 3)); -- ROW", "sql_id": "clickhouse_93_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('b', 1.5, 3) IN (tuple(3, NULL, 3), tuple('a', 1.5, 3), tuple(1, 3, 3)); -- ROW", "sql_id": "clickhouse_93_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('b', 1.5, 3) IN (tuple('b', NULL, 3), tuple('a', 1.5, 3), tuple(1, 3, 3)); -- ROW", "sql_id": "clickhouse_93_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('b', 1.5, 3) IN (tuple('b', NULL, 4), tuple('a', 1.5, 3), tuple(1, 3, 3)); -- ROW", "sql_id": "clickhouse_93_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, tuple(3, 4)) IN (tuple(3, 2, tuple(3, 4)), tuple(1, 2, tuple(3, NULL))); -- ROW", "sql_id": "clickhouse_93_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, tuple(3, 4)) IN (tuple(3, 2, tuple(3, 4)), tuple(1, 2, tuple(3, NULL))); -- ROW", "sql_id": "clickhouse_93_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, tuple(3, NULL)) IN (tuple(3, 2, tuple(3, 4)), tuple(1, 2, tuple(4, 5))); -- ROW", "sql_id": "clickhouse_93_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, tuple(3, NULL)) IN (tuple(3, 2, tuple(3, 4)), tuple(1, 2, tuple(3, 5))); -- ROW", "sql_id": "clickhouse_93_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, 3) = tuple(1, 2, 3); -- ROW", "sql_id": "clickhouse_93_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(2, 2, 3) = tuple(1 + 1, 2, 3); -- tuple", "sql_id": "clickhouse_93_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, 3) = tuple(1 + 1, 2, 3); -- tuple", "sql_id": "clickhouse_93_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, 3) < tuple(1+1, 2, 3); -- tuple", "sql_id": "clickhouse_93_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, 3) > tuple(1+1, 2, 3); -- tuple", "sql_id": "clickhouse_93_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1,2,3) <= tuple(1+1,2,3); -- tuple", "sql_id": "clickhouse_93_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1,2,3)>=tuple(1+1,2,3); -- tuple", "sql_id": "clickhouse_93_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, 3) != tuple(1 + 1, 2, 3); -- ROW", "sql_id": "clickhouse_93_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(NULL, 2, 3) = tuple(NULL, 2, 3); -- ROW", "sql_id": "clickhouse_93_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 2, tuple(3, 4, 5)) = tuple(1, 2, tuple(3, 4, 5)); -- ROW", "sql_id": "clickhouse_93_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('test', 2, 3.33) IN (tuple('test', 2, 3.33)); -- ROW", "sql_id": "clickhouse_93_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('test', 2, tuple(3, 33)) IN (tuple('test', 2, tuple(3, 33))); -- ROW", "sql_id": "clickhouse_93_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('test', 2, tuple(3, 33)) = tuple('test', 2, tuple(3, 3)); -- ROW", "sql_id": "clickhouse_93_26"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('test', 2, tuple(3, 33)) = tuple('test', 2, tuple(3, NULL)); -- ROW", "sql_id": "clickhouse_93_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE tuple(a, b, c) = tuple(1, 2, 3);", "sql_id": "clickhouse_94_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE tuple(0, 2, 3) = tuple(a, b, c);", "sql_id": "clickhouse_94_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE tuple(1, 2, 3) < tuple(a, b, c);", "sql_id": "clickhouse_94_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(a, b, c) IN ((3, 2, 3), (1, 2, 3), (1, 3, 3)) FROM t1;", "sql_id": "clickhouse_94_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(1, 1, 1) = tuple(1, 1, 1), tuple(1, 1, 1) = tuple(1, 2, 1), tuple(1, NULL, 1) = tuple(2, 2, 1), tuple(1, NULL, 1) = tuple(1, 2, 2), tuple(1, NULL, 1) = tuple(1, 2, 1) ; -- ROW", "sql_id": "clickhouse_94_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(a, 1) IN (SELECT SUM(b), 1 FROM t1 GROUP BY a);", "sql_id": "clickhouse_95_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(a, 1) IN (SELECT SUM(b), 3 FROM t1 GROUP BY a);", "sql_id": "clickhouse_95_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM t1 WHERE tuple(a, b) >= tuple(1, (SELECT 1 FROM t1 WHERE a > 1234)); -- ROW", "sql_id": "clickhouse_95_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(min(a), 1) IN (tuple(a, 1)) AS al FROM t1 GROUP BY a;", "sql_id": "clickhouse_95_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(min(a), 1) IN (tuple(a, 1)) AS al FROM t1 GROUP BY a;", "sql_id": "clickhouse_95_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT replicate('x', 5) AS result; -- RPAD", "sql_id": "clickhouse_96_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('', 0, 'x') AS result; -- RPAD", "sql_id": "clickhouse_96_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad(NULL, NULL, NULL) AS result; -- RPAD", "sql_id": "clickhouse_96_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('a', NULL, 'x') AS result; -- RPAD\n\n-- ClickHouse translation\nSELECT RPAD('a', CAST(NULL AS String), 'x') AS result;", "sql_id": "clickhouse_96_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('a', NULL, NULL) AS result; -- RPAD", "sql_id": "clickhouse_96_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('a', 5, '') AS result; -- RPAD", "sql_id": "clickhouse_96_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('', 5, '') AS result; -- RPAD", "sql_id": "clickhouse_96_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('a', 0, 'x') AS result; -- RPAD", "sql_id": "clickhouse_96_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('a', 0, '') AS result; -- RPAD", "sql_id": "clickhouse_96_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('', 0, 'x') AS result; -- RPAD", "sql_id": "clickhouse_96_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('', 0, '') AS result; -- RPAD", "sql_id": "clickhouse_96_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('123456787890', 1, 'x'); -- RPAD", "sql_id": "clickhouse_96_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('a', 5, 'xy'); -- RPAD", "sql_id": "clickhouse_96_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('I LOVE SQL', 20, ' '); -- RPAD", "sql_id": "clickhouse_96_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad('I LOVE SQL in the morning', 20, ' '); -- RPAD", "sql_id": "clickhouse_96_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE (t1.a IS NULL) OR (t1.a NOT IN (SELECT t3.a FROM t1 t3));", "sql_id": "clickhouse_97_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE (t1.a IN (SELECT t3.a FROM t1 t3)) IS NULL;", "sql_id": "clickhouse_97_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE (SELECT b FROM t2 WHERE CAST(generateUUIDv4() AS String) = CAST(t2.a AS String)) > 0;", "sql_id": "clickhouse_98_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT trimBoth(f1), count(*) FROM table_varchar_pad_space GROUP BY trimBoth(f1);", "sql_id": "clickhouse_99_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(concat(a1, min(c)), b) AS concat_result, a1, a2, b\nFROM t1\nWHERE a1 < 'd'\nGROUP BY a1, a2, b;", "sql_id": "clickhouse_10_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(a1, min(c)), b, max(c) FROM t1 WHERE a1 < 'd' GROUP BY a1, a2, b; -- CONCAT", "sql_id": "clickhouse_10_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(a1, a2), b, min(c), max(c) \nFROM t1 \nWHERE a1 < 'd' \nGROUP BY a1, a2, b; -- CONCAT", "sql_id": "clickhouse_10_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT Fld1, max(Fld2) \nFROM t1 \nGROUP BY Fld1 \nHAVING stddevSamp(Fld2) IS NOT NULL;", "sql_id": "clickhouse_11_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT Fld1, max(Fld2) \nFROM t1 \nGROUP BY Fld1 \nHAVING varPop(Fld2) IS NOT NULL; -- VARIANCE", "sql_id": "clickhouse_11_4"}
{"model": "gpt-3.5-turbo", "message": "insert into t3 select concat('c-', toString(1000 + A.a), '=w'), concat('c-', toString(2000 + A.a), '=w'), 'filler-1' from t2 A;", "sql_id": "clickhouse_12_8"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t3 \nSELECT concat('c-', 1000 + A.a, '=w'), \n       concat('c-', 3000 + A.a, '=w'),\n       'filler-2' \nFROM t2 A;", "sql_id": "clickhouse_12_9"}
{"model": "gpt-3.5-turbo", "message": "UPDATE t1 SET b = repeat(concat(toString(65 + a)), 20) WHERE a < 25;", "sql_id": "clickhouse_12_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE a < 10 AND b = repeat(concat(toString(65), toString(a)), 20);", "sql_id": "clickhouse_12_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE a < 10 AND b = repeat(concat(toString(65), toString(a)), 20);", "sql_id": "clickhouse_12_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, hex(b), hex(c), filler FROM t1 ORDER BY filler; -- HEX", "sql_id": "clickhouse_13_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(data) FROM t1;", "sql_id": "clickhouse_14_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (data) VALUES (repeat('a',1*1024)) FORMAT Values;", "sql_id": "clickhouse_14_7"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (data) VALUES (repeat('b',16*1024-1024)) FORMAT Values;", "sql_id": "clickhouse_14_8"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES repeat('a',18*1024);", "sql_id": "clickhouse_14_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(data) FROM t1;", "sql_id": "clickhouse_14_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2011-01-01 00:00:00') as time_t, toUnixTimestamp('2011-01-01 00:00:00') % 3 as part, 1234567890 % 3 as part2;", "sql_id": "clickhouse_15_0"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t3 (a) VALUES (now());", "sql_id": "clickhouse_15_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t2 SELECT 1 + a, concat('subq: ', b) FROM t1;", "sql_id": "clickhouse_15_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT currentUser(), currentUser(); -- USER, CURRENT_USER", "sql_id": "clickhouse_16_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a', 'abc');", "sql_id": "clickhouse_17_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('b', 'abc');", "sql_id": "clickhouse_17_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('c', 'abc');", "sql_id": "clickhouse_17_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('d', 'abc');", "sql_id": "clickhouse_17_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a', NULL); -- REGEXP_INSTR", "sql_id": "clickhouse_17_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a', 'a'); -- REGEXP_INSTR", "sql_id": "clickhouse_17_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT position(NULL, NULL); -- REGEXP_INSTR", "sql_id": "clickhouse_17_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex( concat(toString(position('a', 'a'))) );", "sql_id": "clickhouse_17_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a', '1'); -- REGEXP_INSTR", "sql_id": "clickhouse_17_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a', '1.1');", "sql_id": "clickhouse_17_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a', 'a'); -- REGEXP_INSTR", "sql_id": "clickhouse_17_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('1.1', 'a'); -- REGEXP_INSTR", "sql_id": "clickhouse_17_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT position(pattern, subject) FROM t1;", "sql_id": "clickhouse_17_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'abcabcabc'); -- REGEXP_INSTR", "sql_id": "clickhouse_17_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'abcabcabc', 2);", "sql_id": "clickhouse_17_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('b+', 'abcabcabc'); -- REGEXP_INSTR", "sql_id": "clickhouse_17_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('b+', 'abcabcabc', 2);", "sql_id": "clickhouse_17_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('b+', 'abcabcabc', 3);", "sql_id": "clickhouse_17_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'abcabcabc');", "sql_id": "clickhouse_17_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'abcabcabc');", "sql_id": "clickhouse_17_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'abcabcabc');", "sql_id": "clickhouse_17_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'abcabcabc', 4, 2); -- REGEXP_INSTR", "sql_id": "clickhouse_17_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'a');", "sql_id": "clickhouse_17_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'abcabcabc');", "sql_id": "clickhouse_17_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'abcabcabc');", "sql_id": "clickhouse_17_26"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'aaabcabcabc'); -- REGEXP_INSTR", "sql_id": "clickhouse_17_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('A+', 'aaabcabcabc');", "sql_id": "clickhouse_17_28"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('A+', 'aaabcabcabc');", "sql_id": "clickhouse_17_29"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('A+', 'aaabcabcabc');", "sql_id": "clickhouse_17_30"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('A+', 'aaabcabcabc');", "sql_id": "clickhouse_17_31"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('a+', 'a');", "sql_id": "clickhouse_17_32"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'X');", "sql_id": "clickhouse_18_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('abc', 'b', 'X');", "sql_id": "clickhouse_18_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace( NULL, 'a', 'X' ); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', NULL, 'X');", "sql_id": "clickhouse_18_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', '');", "sql_id": "clickhouse_18_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat( regexp_replace( 'aaa', 'a', 'X' ), 'x' );", "sql_id": "clickhouse_18_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'X');", "sql_id": "clickhouse_18_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', 'b+', 'X', 1, 1); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', 'b+', 'X', 2);", "sql_id": "clickhouse_18_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', '(b+)', '<$1>', 2); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', 'x+', 'x');", "sql_id": "clickhouse_18_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', 'b+', 'x');", "sql_id": "clickhouse_18_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaab', 'b', 'x', 2); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabccc', 'b', 'x', 2); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('abc', 'b', 'X');", "sql_id": "clickhouse_18_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('abcbdb', 'b', 'X');", "sql_id": "clickhouse_18_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('abcbdb', 'b', 'X', 3); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabcbdb', 'b', 'X');", "sql_id": "clickhouse_18_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabcbdb', 'b', 'X', 2); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabcbdb', 'b', 'X', 3);", "sql_id": "clickhouse_18_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'X', 2); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'XX', 2); -- REGEXP_REPLACE", "sql_id": "clickhouse_18_21"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES ( position('a', 'a'), position('a', 'a'), position('a', 'a'), position('a', 'a') );", "sql_id": "clickhouse_19_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (c) VALUES (regexp_replace('a', 'a', 'a'));", "sql_id": "clickhouse_19_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES ( repeat( 'a', 16384 ) );", "sql_id": "clickhouse_19_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT lengthUTF8(regexp_replace(a, 'a', 'b')) FROM t1;", "sql_id": "clickhouse_19_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace(a, '^([[:alpha:]]+)[[:space:]].*$', '$1') FROM t1;", "sql_id": "clickhouse_19_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(length(name)) AS s1 FROM t1;", "sql_id": "clickhouse_20_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(length(name)) AS s1 FROM t1;", "sql_id": "clickhouse_20_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(DISTINCT length(name)) FROM t1;", "sql_id": "clickhouse_20_10"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t2 VALUES (1, '18:19:29', now())", "sql_id": "clickhouse_20_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT one.id, two.val, arrayElement(['one', 'two'], two.val) \nFROM t1 AS one \nJOIN t2 AS two ON two.id = one.id \nORDER BY one.id;", "sql_id": "clickhouse_21_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(toDateTime('01-01-01'), toDateTime('01-01:02')); -- LEAST", "sql_id": "clickhouse_22_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(toDate('2001-12-10'), toDate('2001-12-11'));", "sql_id": "clickhouse_22_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(toDateTime('10:11:12'), toDateTime('10:11:13')); -- LEAST", "sql_id": "clickhouse_22_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp(now()) - toUnixTimestamp(now('UTC'));", "sql_id": "clickhouse_23_0"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES(toUnixTimestamp('2003-03-01 00:00:00'), '2003-03-01 00:00:00');", "sql_id": "clickhouse_23_3"}
{"model": "gpt-3.5-turbo", "message": "insert into t1 (i, ts) values(toUnixTimestamp('2003-03-30 01:59:59'),'2003-03-30 01:59:59'),(toUnixTimestamp('2003-03-30 02:30:00'),'2003-03-30 02:30:00'),(toUnixTimestamp('2003-03-30 03:00:00'),'2003-03-30 03:00:00');", "sql_id": "clickhouse_23_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES(toUnixTimestamp('2003-03-30 01:59:59'), '2003-03-30 01:59:59'),\n(toUnixTimestamp('2003-03-30 02:30:00'), '2003-03-30 02:30:00'),\n(toUnixTimestamp('2003-03-30 03:00:00'), '2003-03-30 03:00:00');", "sql_id": "clickhouse_23_5"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES(toUnixTimestamp('2003-05-01 00:00:00'), '2003-05-01 00:00:00');", "sql_id": "clickhouse_23_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES\n(toUnixTimestamp('2003-10-26 01:00:00'), '2003-10-26 01:00:00'),\n(toUnixTimestamp('2003-10-26 02:00:00'), '2003-10-26 02:00:00'),\n(toUnixTimestamp('2003-10-26 02:59:59'), '2003-10-26 02:59:59'),\n(toUnixTimestamp('2003-10-26 04:00:00'), '2003-10-26 04:00:00'),\n(toUnixTimestamp('2003-10-26 02:59:59'), '2003-10-26 02:59:59');", "sql_id": "clickhouse_23_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime(362793609); -- FROM_UNIXTIME", "sql_id": "clickhouse_23_10"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (ts) VALUES (now())", "sql_id": "clickhouse_23_12"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES(toDateTime('2003-03-30 01:59:59'), 'Before the gap'),(toDateTime('2003-03-30 02:30:00'), 'Inside the gap'),(toDateTime('2003-03-30 03:00:00'), 'After the gap');", "sql_id": "clickhouse_23_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2003-03-30 01:59:59') AS b; -- toUnixTimestamp", "sql_id": "clickhouse_23_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2003-03-30 02:30:00') AS a, 'Inside the gap' AS b; -- toUnixTimestamp", "sql_id": "clickhouse_23_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2003-03-30 03:00:00') AS a, 'After the gap' AS b;", "sql_id": "clickhouse_23_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime(0); -- FROM_UNIXTIME", "sql_id": "clickhouse_23_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('1969-12-31 15:59:59');", "sql_id": "clickhouse_23_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('1969-12-31 16:00:00');", "sql_id": "clickhouse_23_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('1969-12-31 16:00:01');", "sql_id": "clickhouse_23_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('1970-01-01 00:00:01');", "sql_id": "clickhouse_23_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2022-01-01 16:00:01');", "sql_id": "clickhouse_23_26"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(cast(a as String)) from t1;", "sql_id": "clickhouse_24_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(toString(a)) FROM t1;", "sql_id": "clickhouse_24_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(min(cast(a as String))) FROM t1;", "sql_id": "clickhouse_24_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(minState(b)) FROM t1;", "sql_id": "clickhouse_24_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(min(intDiv(toUInt64(a), 255))), hex(max(intDiv(toUInt64(a), 255))), hex(min(intDiv(toUInt64(b), 511))), hex(max(intDiv(toUInt64(b), 511))) FROM t1;", "sql_id": "clickhouse_24_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(minState(b)) FROM t1 WHERE a = 4;", "sql_id": "clickhouse_24_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(min(c)) FROM t1 WHERE a = 4 AND b = 0;", "sql_id": "clickhouse_24_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(toString(max(b))) FROM t1;", "sql_id": "clickhouse_24_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT arrayStringConcat(groupArray(HEX(b)), '') FROM t1 GROUP BY a;", "sql_id": "clickhouse_24_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(toString(b)), i2 FROM t1 WHERE (i2>=100 AND i2<201) AND b=1; -- HEX", "sql_id": "clickhouse_25_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(b1), i2 FROM t2 WHERE (i2>=100 AND i2<201) AND b1=1; -- HEX", "sql_id": "clickhouse_25_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(b2), i2 FROM t2 WHERE (i2>=100 AND i2<201) AND b2=0; -- HEX", "sql_id": "clickhouse_25_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT arrayStringConcat(groupArray(HEX(b)), '') FROM t1 GROUP BY a;", "sql_id": "clickhouse_25_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT hexEncode(toString(b)) FROM t2;", "sql_id": "clickhouse_25_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, hex(b) FROM t1 ORDER BY b;", "sql_id": "clickhouse_25_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) from t1 order by a; -- HEX", "sql_id": "clickhouse_26_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(concat(a, '\\0')) AS b FROM t1 ORDER BY concat(a, '\\0');", "sql_id": "clickhouse_26_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) AS hex_a FROM t1 ORDER BY a;", "sql_id": "clickhouse_26_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t (c) VALUES (repeat('3', 65535));", "sql_id": "clickhouse_26_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(c), lengthUTF8(c) FROM t;", "sql_id": "clickhouse_26_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(c) FROM t2; -- LENGTH", "sql_id": "clickhouse_26_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(-1.1111111111111111111111111, -min(1.7976931348623157E+308)) AS foo;", "sql_id": "clickhouse_27_0"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (now());", "sql_id": "clickhouse_28_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(a, '%Y %y'), toYear(a), toYear(now()) FROM t1;", "sql_id": "clickhouse_28_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('2000-01-27 23:13:41') - toDateTime('2003-05-16 23:53:29'); -- TIMESTAMP", "sql_id": "clickhouse_28_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(v), length(c), length(e), length(t) FROM t1;", "sql_id": "clickhouse_30_5"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES(substring(f1, 1, 3)); -- SUBSTR", "sql_id": "clickhouse_30_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT a,intDiv(a, 2) FROM t1 ORDER BY a;", "sql_id": "clickhouse_30_12"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (now());", "sql_id": "clickhouse_31_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(y = now(), 1, 0) FROM t1;", "sql_id": "clickhouse_31_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t4 WHERE yyyy = toYear(now());", "sql_id": "clickhouse_31_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('quarter', least(y1, y2), dbl) FROM t1;", "sql_id": "clickhouse_31_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT toHour(GREATEST(y1, y2)) FROM t1;", "sql_id": "clickhouse_31_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT y, concat('\"', c, '\"') FROM t1; -- CONCAT", "sql_id": "clickhouse_32_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(toString(b)) AS hex_b FROM t1 ORDER BY pk1;", "sql_id": "clickhouse_33_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(toString(b)) AS hex_b FROM t1 ORDER BY pk1;", "sql_id": "clickhouse_33_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('*', name, '*') FROM t1 ORDER BY 1;", "sql_id": "clickhouse_34_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT min(name), min(concat('*', name, '*')), max(name), max(concat('*', name, '*')) FROM t1; -- CONCAT", "sql_id": "clickhouse_34_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('-', a, '-', b, '-') FROM t1 WHERE a = 'hello';", "sql_id": "clickhouse_34_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('-', a, '-', b, '-') FROM t1 WHERE a = 'hello';", "sql_id": "clickhouse_34_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(col1) FROM t1; -- HEX", "sql_id": "clickhouse_34_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(col1) FROM t1; -- HEX", "sql_id": "clickhouse_34_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(col1) FROM t1; -- HEX", "sql_id": "clickhouse_34_24"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (a) VALUES (unhex('1F9480179366F2BF567E1C4B964C1EF029087575'))", "sql_id": "clickhouse_35_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (unhex('1F9480179366F2BF567E1C4B964C1EF029082020'))", "sql_id": "clickhouse_35_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (unhex('1F9480179366F2BF567E1C4B964C1EF029080707'))", "sql_id": "clickhouse_35_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) FROM t1 ORDER BY a; -- HEX", "sql_id": "clickhouse_35_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(toString(a)) AS hex_a FROM t1 ORDER BY a;", "sql_id": "clickhouse_35_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(encode(a, 'hex')) from t1 WHERE a=unhex('1F9480179366F2BF567E1C4B964C1EF029082020');", "sql_id": "clickhouse_35_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(encode(a, 'hex')) from t1 WHERE a=unhex('1F9480179366F2BF567E1C4B964C1EF02908');", "sql_id": "clickhouse_35_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(and(NULL, 1), 1, 2), if(and(1, NULL), 1, 2); -- IF", "sql_id": "clickhouse_36_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE if(a AND 1, 0, 1); -- IF", "sql_id": "clickhouse_36_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE if((1 AND a) = 1, 0, 1); -- IF", "sql_id": "clickhouse_36_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT ifNull(a, 'N') AS A, \n       ifNull(b, 'N') AS B, \n       ifNull(not a, 'N') AS nA, \n       ifNull(not b, 'N') AS nB, \n       ifNull(a AND b, 'N') AS AB, \n       ifNull(not (a AND b), 'N') AS `n(AB)`, \n       ifNull((not a OR not b), 'N') AS nAonB, \n       ifNull(a OR b, 'N') AS AoB, \n       ifNull(not (a OR b), 'N') AS `n(AoB)`, \n       ifNull(not a AND not b, 'N') AS nAnB \nFROM t1;", "sql_id": "clickhouse_36_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    ifNull(toString(a = 1), 'N') AS A, \n    ifNull(toString(b = 1), 'N') AS B, \n    ifNull(toString(not (a = 1)), 'N') AS nA, \n    ifNull(toString(not (b = 1)), 'N') AS nB, \n    ifNull(toString((a = 1) AND (b = 1)), 'N') AS AB, \n    ifNull(toString(not ((a = 1) AND (b = 1))), 'N') AS `n(AB)`, \n    ifNull(toString(not (a = 1) OR not (b = 1)), 'N') AS nAonB, \n    ifNull(toString((a = 1) OR (b = 1)), 'N') AS AoB, \n    ifNull(toString(not((a = 1) OR (b = 1))), 'N') AS `n(AoB)`, \n    ifNull(toString(not (a = 1) AND not (b = 1)), 'N') AS nAnB \nFROM t1;", "sql_id": "clickhouse_36_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST('2004-01-22 21:45:33' AS Date);", "sql_id": "clickhouse_37_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('second', toDateTime('2004-12-30 12:00:00'), toDateTime('2000-01-01 12:00:00'));", "sql_id": "clickhouse_37_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('second', toDateTime('0000-00-00 12:00:00'), toDateTime('0000-00-01 12:00:00'));", "sql_id": "clickhouse_37_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(concat('12345','6789') AS UInt64);", "sql_id": "clickhouse_37_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT toInt32(concat('12345','6789')); -- CONCAT", "sql_id": "clickhouse_37_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(repeat('1', 9)) as unsigned;", "sql_id": "clickhouse_37_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(repeat('1', 9) AS Int32);", "sql_id": "clickhouse_37_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT isNull(NULL), isNull(toDate(NULL)); -- ISNULL, DATE", "sql_id": "clickhouse_37_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(toHex('a')); -- HEX", "sql_id": "clickhouse_37_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT toInt32(toDate(d1)) FROM t1;", "sql_id": "clickhouse_37_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT toHour(f1), MINUTE(f1), toUnixTimestamp(f1) % 60 FROM t1;", "sql_id": "clickhouse_37_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT toHour(toDateTime('2007-07-19')), MINUTE(toDateTime('2007-07-19')), toUnixTimestamp(toDateTime('2007-07-19')) % 60;", "sql_id": "clickhouse_37_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT toHour(toDateTime(NULL)), MINUTE(toDateTime(NULL)), toUnixTimestamp(toDateTime(NULL)) % 60;", "sql_id": "clickhouse_37_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT toHour(NULL), MINUTE(NULL), toUnixTimestamp(NULL) % 60;", "sql_id": "clickhouse_37_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST('a' AS String);", "sql_id": "clickhouse_37_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('value=', CAST('3.4e5' AS Float)); -- CONCAT", "sql_id": "clickhouse_37_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 01:02:01.6'), '%H:%i:%s');", "sql_id": "clickhouse_37_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN a = b THEN 0 WHEN a < b THEN -1 ELSE 1 END FROM t1;", "sql_id": "clickhouse_38_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(JSONExtractString(JSONExtractRaw('{\\\"key_year\\\":1934}', 'key_year'), '') AS UInt16); -- JSON_EXTRACT", "sql_id": "clickhouse_38_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT toYear(1988) AS c1, repeat(toYear(1988), 3) AS c2;", "sql_id": "clickhouse_38_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('x', toString(1988)); -- CONCAT", "sql_id": "clickhouse_38_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUnixTimestamp('2030-01-01 00:00:00');", "sql_id": "clickhouse_38_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT addYears(toDate('1988-01-01'), 1);", "sql_id": "clickhouse_38_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT toYear(parseDateTimeBestEffort('nope'));", "sql_id": "clickhouse_38_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM t WHERE CAST(a AS UInt32) = 1 AND a = IF(TRUE, NULL, 1); -- IF", "sql_id": "clickhouse_38_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a), \nCASE WHEN a = 'a' THEN 0 WHEN a < 'a' THEN -1 ELSE 1 END, \nCASE WHEN a = 'a ' THEN 0 WHEN a < 'a ' THEN -1 ELSE 1 END \nFROM t1;", "sql_id": "clickhouse_40_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(toString(b), toString(c)), concat(toString(b), toString(c)) = '0101' FROM t1; -- CONCAT", "sql_id": "clickhouse_40_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT b, c FROM t1 WHERE b = 1 AND concat(toString(b), toString(c)) = '0101';", "sql_id": "clickhouse_40_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT b,c FROM t1 WHERE b = 1 AND concat(toString(b),toString(c)) = '0101';", "sql_id": "clickhouse_40_9"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (now()),(now()),(now());", "sql_id": "clickhouse_40_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple('1', '1') > tuple(a, '1') FROM t1; -- ROW", "sql_id": "clickhouse_40_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT tuple(a, '1') > tuple('1', '1') FROM t1; -- ROW", "sql_id": "clickhouse_40_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT count(DISTINCT if(f1 = 1, 3, f2)) FROM t1;", "sql_id": "clickhouse_41_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT IPv6NumToString(toIPv6(toUInt64('1')));", "sql_id": "clickhouse_42_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(v) FROM t1; -- HEX", "sql_id": "clickhouse_42_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(name, repeat(' ', level)), concat(name, repeat(' ', level)) FROM t1;", "sql_id": "clickhouse_43_3"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 ENGINE = MergeTree ORDER BY a AS SELECT repeat('a', 4000) AS a;", "sql_id": "clickhouse_43_5"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE head AS SELECT concat(b1.b, b2.b) AS head FROM t1 b1 CROSS JOIN t1 b2; -- CONCAT", "sql_id": "clickhouse_43_14"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE tail AS SELECT concat(b1.b, b2.b) AS tail FROM t1 b1 CROSS JOIN t1 b2; -- CONCAT", "sql_id": "clickhouse_43_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT IPv6NumToString(toIPv6(toUInt32('1')));", "sql_id": "clickhouse_43_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT arrayStringConcat(groupArray(ifNull(a, 0)), '') FROM t1;", "sql_id": "clickhouse_44_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT arrayStringConcat(groupArray(if(a, toString(a), '')), '') FROM t1;", "sql_id": "clickhouse_44_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT arrayStringConcat(groupArray(a), '') FROM t1; -- GROUP_CONCAT", "sql_id": "clickhouse_44_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT coalesce(a, '') FROM t1 GROUP BY 1; -- COALESCE", "sql_id": "clickhouse_44_6"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT concat_ws(1,2,3) FROM t1; -- CONCAT_WS", "sql_id": "clickhouse_44_8"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT lower(a) FROM t1;", "sql_id": "clickhouse_44_10"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT upper(a) AS UCASE_a FROM t1;", "sql_id": "clickhouse_44_12"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT repeat('1', 2) FROM t1; -- REPEAT", "sql_id": "clickhouse_44_14"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT arrayElement([111, 222, 333], 1) AS ELT_result FROM t1;", "sql_id": "clickhouse_44_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) FROM t1;", "sql_id": "clickhouse_45_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex(a) FROM t2; -- HEX", "sql_id": "clickhouse_45_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE a = replicate(' ', 10 - length('xxx')) || 'xxx';", "sql_id": "clickhouse_45_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT ifNull(c1, ''), ifNull(NULL, c1) FROM t1;", "sql_id": "clickhouse_45_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(1, c1, ''), if(0, c1, '') FROM t1; -- IF", "sql_id": "clickhouse_45_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT coalesce('', c1), coalesce(NULL, c1) FROM t1; -- COALESCE", "sql_id": "clickhouse_45_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(c1, ''), greatest(c1, '') FROM t1;", "sql_id": "clickhouse_45_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT position('', c1), position('', c1) FROM t1;", "sql_id": "clickhouse_45_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT indexOf(['', ''], c1) AS result1, indexOf(['', ''], c1) AS result2 FROM t1;", "sql_id": "clickhouse_45_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(c1, ''), concat('', c1) FROM t1; -- CONCAT", "sql_id": "clickhouse_45_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT arrayElement([c1, ''], 1), arrayElement(['', c1], 1) FROM t1;", "sql_id": "clickhouse_45_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD(c1, 3, 'x'), LPAD('x', 3, c1) FROM t1;", "sql_id": "clickhouse_45_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT rpad(c1, 3, 'x'), rpad('x', 3, c1) FROM t1; -- RPAD", "sql_id": "clickhouse_45_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime(d), '%d') FROM t1 ORDER BY 1;", "sql_id": "clickhouse_46_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime('2004-01-01', '%A (%a), %e %B (%b) %Y');", "sql_id": "clickhouse_46_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 24:00:00'), '%r');", "sql_id": "clickhouse_47_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('00:00:00'), '%r');", "sql_id": "clickhouse_47_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('12:00:00'), '%r');", "sql_id": "clickhouse_47_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 15:00:00'), '%r');", "sql_id": "clickhouse_47_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 01:00:00'), '%r');", "sql_id": "clickhouse_47_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 25:00:00'), '%r');", "sql_id": "clickhouse_47_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('00:00:00'), '%l %p');", "sql_id": "clickhouse_47_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 01:00:00'), '%l %p');", "sql_id": "clickhouse_47_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('12:00:00'), '%l %p');", "sql_id": "clickhouse_47_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 23:00:00'), '%l %p');", "sql_id": "clickhouse_47_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 24:00:00'), '%l %p');", "sql_id": "clickhouse_47_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 25:00:00'), '%l %p');", "sql_id": "clickhouse_47_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime(1151414896), '%Y-%m-%d %H:%i:%s');", "sql_id": "clickhouse_47_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT parseDateTimeBestEffort('04/30/2004 ');", "sql_id": "clickhouse_47_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('0000-01-01'), '%A %d %M %Y') as valid_date;", "sql_id": "clickhouse_47_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('0000-02-28'), '%A %d %M %Y') as valid_date;", "sql_id": "clickhouse_47_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime('2009-01-01', '%A %d %M %Y') as valid_date;", "sql_id": "clickhouse_47_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT JSONExtractString(JSONExtractRaw('{\"id\": \"3\", \"$name\": \"Barney\"}', '$'), 'id');", "sql_id": "clickhouse_48_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT JSONExtractString(JSONExtractRaw('{\"id\": \"3\", \"$name\": \"$Barney\"}', '$'), '$name');", "sql_id": "clickhouse_48_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|', text1, '|') as c \nFROM t1 \nWHERE text1 = 'teststring' OR text1 LIKE 'teststring_%' \nORDER BY c;", "sql_id": "clickhouse_49_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|', text1, '|') FROM t1 WHERE text1 = 'teststring' OR text1 > 'teststring\\t'; -- CONCAT", "sql_id": "clickhouse_49_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT text1, length(text1) FROM t1 ORDER BY text1; -- LENGTH", "sql_id": "clickhouse_49_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|', text1, '|') FROM t1 ORDER BY text1;", "sql_id": "clickhouse_49_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|', text1, '|') FROM t1 WHERE text1 = 'teststring' OR text1 > 'teststring\\t'; -- CONCAT", "sql_id": "clickhouse_49_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|', text1, '|') FROM t1 WHERE text1='teststring';", "sql_id": "clickhouse_49_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|', text1, '|') FROM t1 WHERE text1 = 'teststring '; -- CONCAT", "sql_id": "clickhouse_49_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('Let\\'s create some new events from the name of ', currentUser())", "sql_id": "clickhouse_50_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (2, repeat('-', 104));", "sql_id": "clickhouse_51_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, repeat('x', 104));", "sql_id": "clickhouse_51_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(f1, '') AS dummy FROM t1 ORDER BY dummy;", "sql_id": "clickhouse_51_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 ORDER BY toUnixTimestamp(f1);", "sql_id": "clickhouse_51_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' AS f1 FROM t1 WHERE a='8' GROUP BY f1 ORDER BY concat(f1); -- CONCAT", "sql_id": "clickhouse_51_15"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, repeat('x', 40001)) FORMAT Values", "sql_id": "clickhouse_51_18"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (2, repeat('x', 40002)) FORMAT Values", "sql_id": "clickhouse_51_19"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (3, repeat('x', 40003));", "sql_id": "clickhouse_51_20"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (4, repeat('x', 40005));", "sql_id": "clickhouse_51_21"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (5, repeat('x', 40008)) FORMAT Values", "sql_id": "clickhouse_51_22"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (6, repeat('x', 40013)) FORMAT Values", "sql_id": "clickhouse_51_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, length(b) FROM t1 ORDER BY a DESC; -- LENGTH", "sql_id": "clickhouse_51_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE length(vc) > 3;", "sql_id": "clickhouse_52_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE length(vc) = 3;", "sql_id": "clickhouse_52_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE length(vc) IS NULL;", "sql_id": "clickhouse_52_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE length(vc) IS NOT NULL;", "sql_id": "clickhouse_52_16"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES(repeat(repeat('0a', 500), 2));", "sql_id": "clickhouse_53_12"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES (1, repeat('2', 257)), (1, repeat('1', 257));", "sql_id": "clickhouse_53_15"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES (1, repeat('2', 255)), (1, repeat('1', 255));", "sql_id": "clickhouse_53_18"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES(1, repeat('2', 32750), repeat('1', 32750));", "sql_id": "clickhouse_53_21"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (NULL), ('A\\0\\0\\0BBBBBBBB'), (repeat(' ', 50000)), (repeat(' ', 50000));", "sql_id": "clickhouse_54_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(a) FROM t1;", "sql_id": "clickhouse_54_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE concat(a, toString(c), b, toString(d)) = 'AAAA2003-03-011051';", "sql_id": "clickhouse_55_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION ALL SELECT concat('a', toString(-4)); -- CONCAT", "sql_id": "clickhouse_55_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION ALL SELECT concat('a', toString(-4.5)); -- CONCAT", "sql_id": "clickhouse_55_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION ALL SELECT concat('a', -(4 + 1)); -- CONCAT", "sql_id": "clickhouse_55_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION ALL SELECT concat('a', 4 - 5); -- CONCAT", "sql_id": "clickhouse_55_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION ALL SELECT concat('a', toString(-0)); -- CONCAT", "sql_id": "clickhouse_55_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION ALL SELECT concat('a', toString(-0.0)); -- CONCAT", "sql_id": "clickhouse_55_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION ALL SELECT concat('a', toString(-0.0000)); -- CONCAT", "sql_id": "clickhouse_55_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(concat((select x from (select 'a' as x) as t1), (select y from (select 'b' as y) as t2)), concat((select x from (select 'a' as x) as t1), (select y from (select 'b' as y) as t2))) from (select 1 as x union all select 2 as x) as t3;", "sql_id": "clickhouse_55_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat(concat(f1, '2')) AS a FROM t1 UNION ALL SELECT 'x' AS a FROM t1;", "sql_id": "clickhouse_55_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE concat(c1, ' ', c2) REGEXP 'First.*';", "sql_id": "clickhouse_55_21"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (addDays(NULL, 1));", "sql_id": "clickhouse_56_2"}
{"model": "gpt-3.5-turbo", "message": "insert into t1 values (addDays('2000-01-04', NULL));", "sql_id": "clickhouse_56_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (addDays(NULL, 1));", "sql_id": "clickhouse_56_4"}
{"model": "gpt-3.5-turbo", "message": "insert into t1 values (addDays('2000-01-04', 1));", "sql_id": "clickhouse_56_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDate(ts) = today() + 1 AS is_tomorrow, ts\nFROM (SELECT addDays(toDateTime('00:00:00'), 1) AS ts) AS dt; -- DATE", "sql_id": "clickhouse_56_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE mydate IS NULL;", "sql_id": "clickhouse_57_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE a LIKE concat('abc', '%');", "sql_id": "clickhouse_58_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT log(exp(10)), exp(log(sqrt(10)) * 2), log(NULL); -- LN", "sql_id": "clickhouse_59_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT log2(8), log2(15), log2(NULL); -- LOG2", "sql_id": "clickhouse_59_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT pow(10, log(10)), pow(2, 4); -- POW, POWER", "sql_id": "clickhouse_59_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT ceil(0.09); -- CEIL", "sql_id": "clickhouse_59_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT ceil(0.000000000000000009); -- CEIL", "sql_id": "clickhouse_59_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES ('http://www.foo.com/', now())", "sql_id": "clickhouse_59_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT a FROM t1 WHERE a = 'http://www.foo.com/' ORDER BY abs(dateDiff('second', toDateTime('0000-00-00 00:00:00'), ts));", "sql_id": "clickhouse_59_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT mod(cast(-2 as UInt64), 3), mod(18446744073709551614, 3), mod(-2, 3); -- MOD", "sql_id": "clickhouse_59_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT mod(5, -2), mod(5, 18446744073709551614), mod(5, -2); -- MOD", "sql_id": "clickhouse_59_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT pow(cast(-2 as UInt64), 5), pow(18446744073709551614, 5), pow(-2, 5); -- POW", "sql_id": "clickhouse_59_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT intDiv(a, 254576881) FROM t1;", "sql_id": "clickhouse_59_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT round(least(15, -4939092, 0.2704)); -- LEAST, STDDEV", "sql_id": "clickhouse_60_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT intDiv(1.175494351E-37, 1.7976931348623157E+308); -- DIV", "sql_id": "clickhouse_60_1"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (log(1)); -- LN", "sql_id": "clickhouse_60_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT ceil(ceil(123456789)); -- CEIL", "sql_id": "clickhouse_60_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT toInt64(pow(2,63)-1024) as pp; -- POW", "sql_id": "clickhouse_60_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(1 - POW(2, 63) AS Int64) AS qq; -- POW", "sql_id": "clickhouse_60_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE CAST(COALESCE(t0.c0, -1) AS UInt64);", "sql_id": "clickhouse_60_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE CAST(ifNull(t0.c0, -1) AS UInt64);", "sql_id": "clickhouse_60_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT coalesce(tryCast(t0.c0, UInt64), -1) AS result FROM t0;", "sql_id": "clickhouse_60_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(coalesce(t0.c0, -1) AS UInt64) FROM t0;", "sql_id": "clickhouse_60_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT md5('a'), hex(md5('a')); -- MD5, HEX", "sql_id": "clickhouse_61_0"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 engine=TinyLog AS SELECT MD5('a') AS c1 ;", "sql_id": "clickhouse_61_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT md5('hello') as md5_hash; -- MD5", "sql_id": "clickhouse_61_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT MD5('hello') as md5_hash;", "sql_id": "clickhouse_61_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(unhex(md5('abrakadabra')));", "sql_id": "clickhouse_61_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (f1, f2) VALUES ('test', MD5('test')), ('test', MD5('test')) FORMAT Values;", "sql_id": "clickhouse_61_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE f1 = 'test' AND (f2 = SHA256('test') OR f2 = SHA256('Test')); -- MD5", "sql_id": "clickhouse_61_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t1\nWHERE f1 = 'test' AND (f2 = SHA256('TEST') OR f2 = SHA256('test')); -- MD5", "sql_id": "clickhouse_61_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT inet_ntoa(4294902271), inet_ntoa(511); -- INET_NTOA", "sql_id": "clickhouse_62_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT a FROM t1 WHERE substring(toString(a), 6, 3) IN (substring(toString(20040106123400), 6, 3));", "sql_id": "clickhouse_62_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT a FROM t1 WHERE substring(toString(a), 6, 3) = substring(toString(20040106123400), 6, 3);", "sql_id": "clickhouse_62_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT min(a) FROM t1 GROUP BY IPv4NumToString(a);", "sql_id": "clickhouse_62_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(a, (SELECT b FROM t1 LIMIT 1)) FROM t1 UNION ALL SELECT 1; -- LEAST", "sql_id": "clickhouse_62_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT greatest(a, (SELECT b FROM t1 LIMIT 1)) FROM t1 UNION ALL SELECT 1; -- GREATEST", "sql_id": "clickhouse_62_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1+1,1-1,1+1*2,8/5,8%5,8 % 5,-(1+1)*-2; -- MOD", "sql_id": "clickhouse_63_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT t1.a, t2.a, t2.b, bitCount(t2.b) FROM t1 LEFT JOIN t2 ON t1.a = t2.a;", "sql_id": "clickhouse_63_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1997-12-31 23:59:59.000002'), '%f');", "sql_id": "clickhouse_64_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('day', toDate('1997-12-30'), toDate('1997-12-31 23:59:59.000001'));", "sql_id": "clickhouse_64_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('day', NULL, toDateTime('1997-11-30 23:59:59.000001'));", "sql_id": "clickhouse_64_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT makeDate(03, 1);", "sql_id": "clickhouse_64_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT makeDate(1997, 1);", "sql_id": "clickhouse_64_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT makeDate(1997, 0);", "sql_id": "clickhouse_64_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT makeDate(9999, 365);", "sql_id": "clickhouse_64_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT makeDate(9999, 366);", "sql_id": "clickhouse_64_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT makeDate(100, 1);", "sql_id": "clickhouse_64_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT subtime(toDateTime('1997-12-31 23:59:59.000001'), 61); -- SUBTIME", "sql_id": "clickhouse_64_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT subtime(toDateTime('1997-12-31 23:59:59.999999'), 7261.000000); -- SUBTIME", "sql_id": "clickhouse_64_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT subtime(toDateTime('01:00:00.999999'), 3600); -- SUBTIME", "sql_id": "clickhouse_64_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT subtime(toDateTime('02:01:01.999999'), 3600); -- SUBTIME", "sql_id": "clickhouse_64_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('second', toDateTime('1997-01-01 23:59:59.000001'), toDateTime('1995-12-31 23:59:59.000002'));", "sql_id": "clickhouse_64_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('1997-12-31 23:59:59.000001') - toDateTime('1997-12-30 01:01:01.000002') as timediff;", "sql_id": "clickhouse_64_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('second', toDateTime('1997-12-31 23:59:59.000001'), toDateTime('23:59:59.000001')); -- TIMEDIFF", "sql_id": "clickhouse_64_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('second', toDateTime('2000-01-01 00:00:00'), toDateTime('2000-01-01 00:00:00.000001'));", "sql_id": "clickhouse_64_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('2005-01-11 15:48:49.999999') - toDateTime('2005-01-11 15:48:50'); -- TIMEDIFF", "sql_id": "clickhouse_64_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 10:11:12'), '%H:%i:%s');", "sql_id": "clickhouse_65_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 20:11:12'), '%H:%i:%s');", "sql_id": "clickhouse_65_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('2001-12-01 01:01:01.999999'); -- TIMESTAMP", "sql_id": "clickhouse_65_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('2001-10-01 01:01:01.000001');", "sql_id": "clickhouse_65_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('2001-12-01 20:01:01');", "sql_id": "clickhouse_65_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('2001-12-01');", "sql_id": "clickhouse_65_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDayOfMonth(toDateTime('1997-12-31 23:59:59.000001'));", "sql_id": "clickhouse_65_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1997-12-31 23:59:59.000001'), '%H:%i:%s'); -- TIME", "sql_id": "clickhouse_65_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime(t1) - toDateTime(t4) AS ttt, toDateTime(t2) - toDateTime(t3) AS qqq, toDateTime(t3) - toDateTime(t2) AS eee, toDateTime(t2) - toDateTime(t4) AS rrr FROM test;", "sql_id": "clickhouse_65_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT parseDateTimeBestEffort('2003-01-02 10:11:12.0012');", "sql_id": "clickhouse_65_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime('2008-09-29 20:10:10') - toDateTime('2008-09-30 20:10:10'), toDateTime('1970-01-01 00:00:00');", "sql_id": "clickhouse_65_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT dateDiff('second', toDateTime('2008-09-30 20:10:10'), toDateTime('2008-09-29 20:10:10')) > 0;", "sql_id": "clickhouse_65_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT toUInt32(dateDiff('second', toDateTime('2008-09-29 20:10:10'), toDateTime('2008-09-30 20:10:10'))) < toUInt32(toDateTime('2000-01-01 00:00:00'));", "sql_id": "clickhouse_65_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime(86399), '%H:%i:%s') = '23:59:59';", "sql_id": "clickhouse_66_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime(86399), '%H:%i:%s')='23:59:59'; -- SEC_TO_TIME", "sql_id": "clickhouse_66_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime(86399), '%H:%i:%s') = '23:59:59';", "sql_id": "clickhouse_66_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 01:00:01'), '%H:%i:%s');", "sql_id": "clickhouse_66_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT formatDateTime(toDateTime('1970-01-01 01:00:01'), '%H:%i:%s') = '01:00:01'; -- MAKETIME", "sql_id": "clickhouse_66_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT arrayElement(['a', 'b', 'c'], 2), indexOf(['a', 'b', 'c'], NULL);", "sql_id": "clickhouse_67_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT indexOf(['a', 'b', 'c'], 'c') AS result, \n       indexOf([1, 0, NULL], 1) + 0 AS result, \n       indexOf([1.0, 0.0, NULL], 1.0) + 0.0 AS result, \n       indexOf([1.0e1, 0.0e1, NULL], 1.0e1) + 0.0e1 AS result;", "sql_id": "clickhouse_67_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT indexOf(['a', 'b', 'c'], 'a') AS result, \n       indexOf([0, 0, 0], 0) AS result, \n       indexOf([0.0, 0.0, 0.0], 0.0) AS result, \n       indexOf([0.0e1, 0.0e1, 0.0e1], 0.0e1) AS result;", "sql_id": "clickhouse_67_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT one.id, arrayElement(['one', 'two'], two.val) \nFROM t1 AS one \nJOIN t2 AS two ON two.id = one.id;", "sql_id": "clickhouse_67_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT one.id, arrayElement(['one', 'two'], two.val) \nFROM t1 AS one \nJOIN t2 AS two ON two.id = one.id \nORDER BY one.id;", "sql_id": "clickhouse_67_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('\"', concat_ws('\";\"', title, toString(prio), toString(category), toString(program), bugdesc, toString(created), toString(modified), toString(bugstatus), toString(submitter)), '\"') FROM t1;", "sql_id": "clickhouse_68_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('\"', concat_ws('\";\"', title, toString(prio), toString(category), toString(program), toString(bugstatus), toString(submitter)), '\"') FROM t1;", "sql_id": "clickhouse_68_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat_ws('\";\"',title,prio,category,program,bugdesc,created,modified,bugstatus,submitter) FROM t1; -- CONCAT_WS", "sql_id": "clickhouse_68_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('</a>', replicate('.',(55-length(title))) from t1;", "sql_id": "clickhouse_68_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT 0=0, 1>0, 1>=1, 1<0, 1<=0, 1!=0, \nCASE WHEN 'abc' = 'abcd' THEN 0 WHEN 'abc' < 'abcd' THEN -1 ELSE 1 END, \nCASE WHEN 'b' = 'a' THEN 0 WHEN 'b' < 'a' THEN -1 ELSE 1 END, \nCASE WHEN 'a' = 'a' THEN 0 WHEN 'a' < 'a' THEN -1 ELSE 1 END; -- STRCMP", "sql_id": "clickhouse_69_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(d,d) FROM t1 WHERE k=2; -- GREATEST", "sql_id": "clickhouse_69_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT if(mod(12, 1) = 0, 1, 0) as col; -- MOD", "sql_id": "clickhouse_69_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT modulo(12.0, 1) AS col; -- MOD", "sql_id": "clickhouse_69_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT modulo(12, 1.0) AS col; -- MOD", "sql_id": "clickhouse_69_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(123456789, 234567890) AS g; -- GREATEST", "sql_id": "clickhouse_69_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(123456789, 234567890) as l; -- LEAST", "sql_id": "clickhouse_69_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(123456789, -1, 234567890) AS g; -- GREATEST", "sql_id": "clickhouse_69_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(123456789, -1, 234567890) as l; -- LEAST", "sql_id": "clickhouse_69_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(('11', '5', '2')); -- GREATEST", "sql_id": "clickhouse_70_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(toUInt64('11'), 5, 2); -- GREATEST", "sql_id": "clickhouse_70_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(11, 5, 2); -- GREATEST", "sql_id": "clickhouse_70_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT least('11', '5', '2'); -- LEAST", "sql_id": "clickhouse_70_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT least('11', 5, 2); -- LEAST", "sql_id": "clickhouse_70_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(11, 5, 2);", "sql_id": "clickhouse_70_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(toUInt64('11'), toUInt64('5'), toUInt64('2')) + 0; -- GREATEST", "sql_id": "clickhouse_70_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(toUInt64('11'), 5, 2) + 0; -- GREATEST", "sql_id": "clickhouse_70_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest([11, 5, 2]) + 0; -- GREATEST", "sql_id": "clickhouse_70_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(toFloat64('11'), toFloat64('5'), toFloat64('2')) + 0.00; -- GREATEST", "sql_id": "clickhouse_70_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(toUInt64('11'), 5, 2) + 0.00; -- GREATEST", "sql_id": "clickhouse_70_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest([11, 5, 2]) + 0.00;", "sql_id": "clickhouse_70_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT greatest(18446744073709551615, NULL) FROM t0017; -- GREATEST", "sql_id": "clickhouse_70_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE (greatest([c1, c2]) = 42) AND (c2 = 1);", "sql_id": "clickhouse_70_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(least(a, b)) FROM t1;", "sql_id": "clickhouse_70_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT sum(least(a, b)) FROM t2;", "sql_id": "clickhouse_70_28"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO clstr_tst (a, b, c, d) VALUES (32, 6, 'seis', repeat('xyzzy', 10000)) FORMAT Values;", "sql_id": "clickhouse_1_33"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO tidrangescan \nSELECT number AS id, repeat('x', 100) AS data \nFROM numbers(200);", "sql_id": "clickhouse_10_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT sleep(0.1); -- PG_SLEEP", "sql_id": "clickhouse_11_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT sleep(0.1); -- PG_SLEEP", "sql_id": "clickhouse_11_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT sleep(0.1); -- PG_SLEEP", "sql_id": "clickhouse_11_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT number + 1 AS n FROM numbers(3);", "sql_id": "clickhouse_12_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT number + 1 AS val1, number + 3 AS val2 FROM numbers(3);", "sql_id": "clickhouse_12_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT number + 1 AS val1, number + 1 AS val2 FROM numbers(2) CROSS JOIN numbers(4);", "sql_id": "clickhouse_12_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO cmdata VALUES(repeat('1234567890', 1000));", "sql_id": "clickhouse_2_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO cmdata1 VALUES(repeat('1234567890', 1004));", "sql_id": "clickhouse_2_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO delete_test (id, a, b) VALUES (2, 50, repeat('x', 10000)) FORMAT Values;", "sql_id": "clickhouse_3_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT toDateTime(currentDateTime()) = now(); -- NOW", "sql_id": "clickhouse_4_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT currentDatabase();", "sql_id": "clickhouse_5_0"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE simple1 ENGINE=MergeTree ORDER BY id AS SELECT number + 1 AS id FROM numbers(200);", "sql_id": "clickhouse_6_2"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE bigger_than_it_looks AS SELECT number + 1 AS id FROM numbers(200);", "sql_id": "clickhouse_6_5"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO extremely_skewed \nSELECT 42 AS id, 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' AS t \nFROM numbers(200);", "sql_id": "clickhouse_6_10"}
{"model": "gpt-3.5-turbo", "message": "create table wide as select number + 1 as id, rpad('', 320000, 'x') as t from numbers(2);", "sql_id": "clickhouse_6_12"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE join_foo AS SELECT number + 1 AS id, 'xxxxx' AS t FROM numbers(3);", "sql_id": "clickhouse_6_14"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE join_bar AS SELECT number AS id, 'xxxxx' AS t FROM numbers(10000);", "sql_id": "clickhouse_6_16"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO pagg_tab\nSELECT\n    i % 20 AS a,\n    i % 30 AS b,\n    LPAD(toString(i % 12), 4, '0') AS c,\n    i % 30 AS d\nFROM numbers(3000) AS i;", "sql_id": "clickhouse_7_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO pagg_tab_ml \nSELECT \n    i % 30 AS a, \n    i % 10 AS b, \n    LPAD(toString(i % 4), 4, '0') AS c \nFROM \n    numbers(0, 29999) AS i;", "sql_id": "clickhouse_7_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, sum(b), groupUniqArray(c), count(*)\nFROM pagg_tab_ml\nGROUP BY a\nHAVING avg(b) < 3\nORDER BY a, sum(b), groupUniqArray(c);", "sql_id": "clickhouse_7_9"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO prt1 (a, b, c)\nSELECT i, i % 25, LPAD(toString(i), 4, '0')\nFROM numbers(600)\nWHERE i % 2 = 0;", "sql_id": "clickhouse_8_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO prt2\nSELECT i % 25, i, LPAD(toString(i), 4, '0')\nFROM numbers(600)\nWHERE i % 3 = 0;", "sql_id": "clickhouse_8_7"}

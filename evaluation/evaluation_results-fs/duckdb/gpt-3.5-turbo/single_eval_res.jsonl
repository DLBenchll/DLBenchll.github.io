{"sql_id": 216, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 249, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Proceedings of the International IFIP-IEEE Conference on Broadband Communications, Global Infrastructure for the Information Age',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Proceedings of the International IFIP-IEEE Conference on Broadband Communications, Global Infrastructure for the Information Age',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 357, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 358, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 359, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 624, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 625, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((29613, 463), (118078, 334), (171382, 74947), (176836, 99993), (204767, 687), (207078, 66570), (256927, 90213), (261543, 620), (261544, 617))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((29613, 463), (118078, 334), (171382, 74947), (176836, 99993), (204767, 687), (207078, 66570), (256927, 90213), (261543, 620), (261544, 617))", "rowcount": 9, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 626, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((72411.06315789474, 291.67400318979264))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((72411.06315789474, 291.67400318979264))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 628, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('2014',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('2014',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 629, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('San Jose Diridon Caltrain Station', '8/6/2013', 'San Jose'), ('San Jose Civic Center', '8/5/2013', 'San Jose'), ('Santa Clara at Almaden', '8/6/2013', 'San Jose'), ('Adobe on Almaden', '8/5/2013', 'San Jose'), ('San Pedro Square', '8/7/2013', 'San Jose'), ('Paseo de San Antonio', '8/7/2013', 'San Jose'), ('San Salvador at 1st', '8/5/2013', 'San Jose'), ('Japantown', '8/5/2013', 'San Jose'), ('San Jose City Hall', '8/6/2013', 'San Jose'), ('MLK Library', '8/6/2013', 'San Jose'), ('SJSU 4th at San Carlos', '8/7/2013', 'San Jose'), ('St James Park', '8/6/2013', 'San Jose'), ('Arena Green / SAP Center', '8/5/2013', 'San Jose'), ('SJSU - San Salvador at 9th', '8/7/2013', 'San Jose'), ('Franklin at Maple', '8/12/2013', 'Redwood City'), ('Redwood City Caltrain Station', '8/15/2013', 'Redwood City'), ('San Mateo County Center', '8/15/2013', 'Redwood City'), ('Redwood City Public Library', '8/12/2013', 'Redwood City'), ('Stanford in Redwood City', '8/12/2013', 'Redwood City'), ('Redwood City Medical Center', '8/12/2013', 'Redwood City'), ('Mountain View City Hall', '8/16/2013', 'Mountain View'), ('Mountain View Caltrain Station', '8/15/2013', 'Mountain View'), ('San Antonio Caltrain Station', '8/15/2013', 'Mountain View'), ('Evelyn Park and Ride', '8/16/2013', 'Mountain View'), ('San Antonio Shopping Center', '12/31/2013', 'Mountain View'), ('Castro Street and El Camino Real', '12/31/2013', 'Mountain View'), ('Rengstorff Avenue / California Street', '8/16/2013', 'Mountain View'), ('Palo Alto Caltrain Station', '8/14/2013', 'Palo Alto'), ('University and Emerson', '8/15/2013', 'Palo Alto'), ('California Ave Caltrain Station', '8/14/2013', 'Palo Alto'), ('Cowper at University', '8/14/2013', 'Palo Alto'), ('Park at Olive', '8/14/2013', 'Palo Alto'), ('Powell Street BART', '8/25/2013', 'San Francisco'), ('Clay at Battery', '8/19/2013', 'San Francisco'), ('Davis at Jackson', '8/19/2013', 'San Francisco'), ('Commercial at Montgomery', '8/19/2013', 'San Francisco'), ('Washington at Kearney', '8/19/2013', 'San Francisco'), ('Post at Kearney', '8/19/2013', 'San Francisco'), ('Embarcadero at Vallejo', '8/19/2013', 'San Francisco'), ('Spear at Folsom', '8/20/2013', 'San Francisco'), ('Harry Bridges Plaza (Ferry Building)', '8/20/2013', 'San Francisco'), ('Embarcadero at Folsom', '8/20/2013', 'San Francisco'), ('Embarcadero at Bryant', '8/20/2013', 'San Francisco'), ('Temporary Transbay Terminal (Howard at Beale)', '8/20/2013', 'San Francisco'), ('Beale at Market', '8/20/2013', 'San Francisco'), ('5th at Howard', '8/21/2013', 'San Francisco'), ('San Francisco City Hall', '8/21/2013', 'San Francisco'), ('Golden Gate at Polk', '8/21/2013', 'San Francisco'), ('Embarcadero at Sansome', '8/21/2013', 'San Francisco'), ('2nd at Townsend', '8/22/2013', 'San Francisco'), ('2nd at Folsom', '8/22/2013', 'San Francisco'), ('Howard at 2nd', '8/22/2013', 'San Francisco'), ('2nd at South Park', '8/22/2013', 'San Francisco'), ('Townsend at 7th', '8/22/2013', 'San Francisco'), ('South Van Ness at Market', '8/23/2013', 'San Francisco'), ('Market at 10th', '8/23/2013', 'San Francisco'), ('Yerba Buena Center of the Arts (3rd @ Howard)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain 2 (330 Townsend)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain (Townsend at 4th)', '8/23/2013', 'San Francisco'), ('Powell at Post (Union Square)', '8/23/2013', 'San Francisco'), ('Civic Center BART (7th at Market)', '8/23/2013', 'San Francisco'), ('Grant Avenue at Columbus Avenue', '8/21/2013', 'San Francisco'), ('Steuart at Market', '8/25/2013', 'San Francisco'), ('Mechanics Plaza (Market at Battery)', '8/25/2013', 'San Francisco'), ('Market at 4th', '8/25/2013', 'San Francisco'), ('Market at Sansome', '8/25/2013', 'San Francisco'), ('Santa Clara County Civic Center', '12/31/2013', 'San Jose'))", "rowcount": 67, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('San Jose Diridon Caltrain Station', '8/6/2013', 'San Jose'), ('San Jose Civic Center', '8/5/2013', 'San Jose'), ('Santa Clara at Almaden', '8/6/2013', 'San Jose'), ('Adobe on Almaden', '8/5/2013', 'San Jose'), ('San Pedro Square', '8/7/2013', 'San Jose'), ('Paseo de San Antonio', '8/7/2013', 'San Jose'), ('San Salvador at 1st', '8/5/2013', 'San Jose'), ('Japantown', '8/5/2013', 'San Jose'), ('San Jose City Hall', '8/6/2013', 'San Jose'), ('MLK Library', '8/6/2013', 'San Jose'), ('SJSU 4th at San Carlos', '8/7/2013', 'San Jose'), ('St James Park', '8/6/2013', 'San Jose'), ('Arena Green / SAP Center', '8/5/2013', 'San Jose'), ('SJSU - San Salvador at 9th', '8/7/2013', 'San Jose'), ('Franklin at Maple', '8/12/2013', 'Redwood City'), ('Redwood City Caltrain Station', '8/15/2013', 'Redwood City'), ('San Mateo County Center', '8/15/2013', 'Redwood City'), ('Redwood City Public Library', '8/12/2013', 'Redwood City'), ('Stanford in Redwood City', '8/12/2013', 'Redwood City'), ('Redwood City Medical Center', '8/12/2013', 'Redwood City'), ('Mountain View City Hall', '8/16/2013', 'Mountain View'), ('Mountain View Caltrain Station', '8/15/2013', 'Mountain View'), ('San Antonio Caltrain Station', '8/15/2013', 'Mountain View'), ('Evelyn Park and Ride', '8/16/2013', 'Mountain View'), ('San Antonio Shopping Center', '12/31/2013', 'Mountain View'), ('Castro Street and El Camino Real', '12/31/2013', 'Mountain View'), ('Rengstorff Avenue / California Street', '8/16/2013', 'Mountain View'), ('Palo Alto Caltrain Station', '8/14/2013', 'Palo Alto'), ('University and Emerson', '8/15/2013', 'Palo Alto'), ('California Ave Caltrain Station', '8/14/2013', 'Palo Alto'), ('Cowper at University', '8/14/2013', 'Palo Alto'), ('Park at Olive', '8/14/2013', 'Palo Alto'), ('Powell Street BART', '8/25/2013', 'San Francisco'), ('Clay at Battery', '8/19/2013', 'San Francisco'), ('Davis at Jackson', '8/19/2013', 'San Francisco'), ('Commercial at Montgomery', '8/19/2013', 'San Francisco'), ('Washington at Kearney', '8/19/2013', 'San Francisco'), ('Post at Kearney', '8/19/2013', 'San Francisco'), ('Embarcadero at Vallejo', '8/19/2013', 'San Francisco'), ('Spear at Folsom', '8/20/2013', 'San Francisco'), ('Harry Bridges Plaza (Ferry Building)', '8/20/2013', 'San Francisco'), ('Embarcadero at Folsom', '8/20/2013', 'San Francisco'), ('Embarcadero at Bryant', '8/20/2013', 'San Francisco'), ('Temporary Transbay Terminal (Howard at Beale)', '8/20/2013', 'San Francisco'), ('Beale at Market', '8/20/2013', 'San Francisco'), ('5th at Howard', '8/21/2013', 'San Francisco'), ('San Francisco City Hall', '8/21/2013', 'San Francisco'), ('Golden Gate at Polk', '8/21/2013', 'San Francisco'), ('Embarcadero at Sansome', '8/21/2013', 'San Francisco'), ('2nd at Townsend', '8/22/2013', 'San Francisco'), ('2nd at Folsom', '8/22/2013', 'San Francisco'), ('Howard at 2nd', '8/22/2013', 'San Francisco'), ('2nd at South Park', '8/22/2013', 'San Francisco'), ('Townsend at 7th', '8/22/2013', 'San Francisco'), ('South Van Ness at Market', '8/23/2013', 'San Francisco'), ('Market at 10th', '8/23/2013', 'San Francisco'), ('Yerba Buena Center of the Arts (3rd @ Howard)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain 2 (330 Townsend)', '8/23/2013', 'San Francisco'), ('San Francisco Caltrain (Townsend at 4th)', '8/23/2013', 'San Francisco'), ('Powell at Post (Union Square)', '8/23/2013', 'San Francisco'), ('Civic Center BART (7th at Market)', '8/23/2013', 'San Francisco'), ('Grant Avenue at Columbus Avenue', '8/21/2013', 'San Francisco'), ('Steuart at Market', '8/25/2013', 'San Francisco'), ('Mechanics Plaza (Market at Battery)', '8/25/2013', 'San Francisco'), ('Market at 4th', '8/25/2013', 'San Francisco'), ('Market at Sansome', '8/25/2013', 'San Francisco'), ('Santa Clara County Civic Center', '12/31/2013', 'San Jose'))", "rowcount": 67, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 5}
{"sql_id": 630, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 631, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 632, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('12/2/2013', 477), ('12/2/2013', 348), ('12/2/2013', 576), ('12/2/2013', 562), ('12/2/2013', 616), ('12/2/2013', 462), ('12/2/2013', 585), ('12/2/2013', 553), ('12/2/2013', 355), ('12/2/2013', 319), ('12/2/2013', 628), ('12/2/2013', 514), ('12/2/2013', 488), ('12/2/2013', 567), ('12/2/2013', 483), ('12/2/2013', 532), ('12/2/2013', 335), ('12/2/2013', 394), ('12/2/2013', 573), ('12/2/2013', 580), ('12/2/2013', 482), ('12/2/2013', 270), ('12/2/2013', 522), ('12/2/2013', 379), ('12/2/2013', 351), ('12/2/2013', 530), ('12/2/2013', 326), ('12/2/2013', 592), ('12/2/2013', 370), ('12/2/2013', 584), ('12/2/2013', 501), ('12/2/2013', 584), ('12/2/2013', 474), ('12/2/2013', 503), ('12/2/2013', 432), ('12/2/2013', 593), ('12/2/2013', 613), ('12/2/2013', 407), ('12/2/2013', 317), ('12/2/2013', 561), ('12/2/2013', 444), ('12/2/2013', 630), ('12/2/2013', 503), ('12/2/2013', 320), ('12/2/2013', 623), ('12/2/2013', 482), ('12/2/2013', 137), ('12/2/2013', 394), ('12/2/2013', 630), ('12/2/2013', 436), ('12/2/2013', 296), ('12/2/2013', 444), ('12/2/2013', 456))", "rowcount": 53, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('12/2/2013', 477), ('12/2/2013', 348), ('12/2/2013', 576), ('12/2/2013', 562), ('12/2/2013', 616), ('12/2/2013', 462), ('12/2/2013', 585), ('12/2/2013', 553), ('12/2/2013', 355), ('12/2/2013', 319), ('12/2/2013', 628), ('12/2/2013', 514), ('12/2/2013', 488), ('12/2/2013', 567), ('12/2/2013', 483), ('12/2/2013', 532), ('12/2/2013', 335), ('12/2/2013', 394), ('12/2/2013', 573), ('12/2/2013', 580), ('12/2/2013', 482), ('12/2/2013', 270), ('12/2/2013', 522), ('12/2/2013', 379), ('12/2/2013', 351), ('12/2/2013', 530), ('12/2/2013', 326), ('12/2/2013', 592), ('12/2/2013', 370), ('12/2/2013', 584), ('12/2/2013', 501), ('12/2/2013', 584), ('12/2/2013', 474), ('12/2/2013', 503), ('12/2/2013', 432), ('12/2/2013', 593), ('12/2/2013', 613), ('12/2/2013', 407), ('12/2/2013', 317), ('12/2/2013', 561), ('12/2/2013', 444), ('12/2/2013', 630), ('12/2/2013', 503), ('12/2/2013', 320), ('12/2/2013', 623), ('12/2/2013', 482), ('12/2/2013', 137), ('12/2/2013', 394), ('12/2/2013', 630), ('12/2/2013', 436), ('12/2/2013', 296), ('12/2/2013', 444), ('12/2/2013', 456))", "rowcount": 53, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 633, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 634, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 636, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((327,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((327,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 637, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((58.736,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((58.736,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 638, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 640, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 641, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((13,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 642, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Townsend at 7th',), ('Market at Sansome',), ('Spear at Folsom',), ('Temporary Transbay Terminal (Howard at Beale)',), ('Embarcadero at Vallejo',), ('San Francisco Caltrain 2 (330 Townsend)',), ('5th at Howard',), ('Embarcadero at Bryant',), ('2nd at South Park',), ('2nd at Folsom',), ('Civic Center BART (7th at Market)',), ('Clay at Battery',), ('Castro Street and El Camino Real',), ('Powell at Post (Union Square)',), ('Embarcadero at Folsom',), ('San Francisco Caltrain (Townsend at 4th)',), ('2nd at Townsend',), ('Powell Street BART',), ('Grant Avenue at Columbus Avenue',), ('Market at 4th',), ('Harry Bridges Plaza (Ferry Building)',), ('Howard at 2nd',), ('Commercial at Montgomery',))", "rowcount": 23, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Powell at Post (Union Square)',), ('Embarcadero at Folsom',), ('San Francisco Caltrain (Townsend at 4th)',), ('2nd at Townsend',), ('Market at 4th',), ('Harry Bridges Plaza (Ferry Building)',), ('Howard at 2nd',), ('Commercial at Montgomery',), ('2nd at Folsom',), ('Civic Center BART (7th at Market)',), ('Clay at Battery',), ('Castro Street and El Camino Real',), ('Powell Street BART',), ('Grant Avenue at Columbus Avenue',), ('5th at Howard',), ('Embarcadero at Bryant',), ('2nd at South Park',), ('Temporary Transbay Terminal (Howard at Beale)',), ('Embarcadero at Vallejo',), ('San Francisco Caltrain 2 (330 Townsend)',), ('Townsend at 7th',), ('Market at Sansome',), ('Spear at Folsom',))", "rowcount": 23, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 643, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((16,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 644, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((100,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((100,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 645, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((23.333333333333332, 20.0, 16.11111111111111), (25.555555555555554, 20.555555555555554, 15.555555555555555), (21.666666666666668, 17.77777777777778, 13.88888888888889))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((23.333333333333332, 20.0, 16.11111111111111), (25.555555555555554, 20.555555555555554, 15.555555555555555), (21.666666666666668, 17.77777777777778, 13.88888888888889))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 646, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((inf,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 627, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Ryland Park',), ('1',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Ryland Park',), ('1',))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 394, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Consider the Lilies',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Consider the Lilies',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 395, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((32,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 396, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 397, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((57.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((57.1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 398, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((25.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((25.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 399, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Jennifer Government', 'Abacus'), ('Neuromancer', 'Ace'), ('Runaway', 'Alfred A. Knopf'), ('Enslaved by Ducks', 'Algonquin Books'), ('Natural Cures \"They\" Don\\'t Want You to Know about', 'Alliance Publishing'), ('Zaat', 'American University in Cairo Press'), ('Good Faith', 'Anchor Books'), ('Joel on Software', 'Apress'), ('Women Who Love Too Much', 'Arrow'), ('Lasher (Lives of the Mayfair Witches  #2)', 'Arrow Books'), ('Gloriana', 'Aspect'), ('Plain Truth', 'Atria Books'), ('The Story of Philosophy', 'AudioGO'), ('The Body in the Lighthouse', 'Avon'), ('Murder Unleashed (Jack and Jamie #2)', 'Avon Books'), ('Once Upon a Gulf Coast Summer', 'B Fiction'), ('An Unfinished Life: John F. Kennedy  1917-1963', 'Back Bay Books'), ('Four & Twenty Blackbirds (Bardic Voices  #4)', 'Baen Books'), ('Lost Boy Lost Girl', 'Ballantine Books'), ('Purgatorio (The Divine Comedy  #2)', 'Bantam Books'), ('The Devil in the White City: Murder  Magic and Madness at the Fair that Changed America', 'Bantam Press'), ('A Tale of Two Cities', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('Rereading America: Cultural Contexts for Critical Thinking and Writing', 'Bedford Books'), ('What Is Ancient Philosophy?', 'Belknap Press'), ('Physics: for Scientists and Engineers with Modern Physics', 'Benjamin-Cummings Publishing Company'), (\"Splinter Cell (Tom Clancy's Splinter Cell  #1)\", 'Berkley'), ('Master of the Night (Mageverse #1)', 'Berkley Sensation'), ('Atlantis Found (Dirk Pitt  #15)', 'Berkley Trade'), ('Architecture and Tourism: Perception  Performance and Place', 'Bloomsbury Academic'), (\"The Last Hours of Ancient Sunlight: The Fate of the World and What We Can Do Before It's Too Late\", 'Broadway Books'), ('The Origin of Species', 'Castle Books'), ('Illustrated Guide to the NEC: Based on the 2005 National Electric Code', 'Cengage Learning'), ('Katherine', 'Chicago Review Press'), ('The Letters of Vita Sackville-West and Virginia Woolf', 'Cleis Press'), ('Bioinformatics: Sequence and Genome Analysis', 'Cold Spring Harbor Laboratory Press'), ('Little Women', \"Collector's Library\"), ('O Xar\u00e1', 'Companhia das Letras'), ('Deception Point', 'Corgi Books'), ('Girl Meets Ape', 'Coronet'), ('Data Structures and Algorithms in C++', 'Course Technology'), (\"FDR's Folly: How Roosevelt and His New Deal Prolonged the Great Depression\", 'Crown Forum'), ('Expelled from Eden: A William T. Vollmann Reader', 'Da Capo Press'), ('Selected Poems of Herman Melville', 'David R. Godine Publisher'), (\"Exile's Valor (Heralds of Valdemar  #7)\", 'DAW'), ('On the Road to Perdition \u2014 Oasis  Sanctuary  and Detour \u2014 (Road to Perdition  #2)', 'DC Comics'), ('The Bloody Crown of Conan (Conan the Cimmerian  #2)', 'Del Rey Ballantine Random House'), ('Shopaholic Ties the Knot (Shopaholic  #3)', 'Dell Publishing Company'), ('Coming of Age in Mississippi: The Classic Autobiography of a Young Black Girl in the Rural South', 'Delta'), ('The Cloud Atlas', 'Dial Press'), ('The DC Comics Encyclopedia', 'DK Publishing'), ('Judas Pig', 'Do-Not Press'), ('Anna Karenina', 'Dover Publications'), ('No Second Chance', 'Dutton Books'), ('Plants and Landscapes for Summer-Dry Climates of the San Francisco Bay Region', 'East Bay Municipal Utility District'), ('The Toy Maker: The Life and Times of Inventor Frank Hornby', 'Ebury Press'), ('Harry Potter y la Orden del F\u00e9nix (Harry Potter  #5)', 'Emece Editores'), ('Sabriel (Abhorsen  #1)', 'Eos'), ('Watchfiends and Rack Screams: Works from the Final Period', 'Exact Change'), ('The Avignon Quintet: Monsieur  Livia  Constance  Sebastian and Quinx', 'Faber & Faber'), ('The Fixer', 'Farrar Straus and Giroux'), ('Triss (Redwall  #15)', 'Firebird'), ('Directing the Documentary', 'Focal Press'), ('PHP and MySQL for Dummies', 'For Dummies'), ('Reading Lolita in Tehran', 'Fourth Estate'), ('The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change', 'Free Press'), ('Monkeewrench (Monkeewrench  #1)', \"G.P. Putnam's Sons\"), ('The Big Book of Boy Stuff', 'Gibbs Smith Publishers'), ('A History of God: The 4 000-Year Quest of Judaism  Christianity  and Islam', 'Gramercy Books'), ('Layer Cake', 'Grove Press Black Cat'), (\"Jamie's Dinners: The Essential Family Cookbook\", 'Hachette Books'), ('Republic', 'Hackett Publishing Company Inc.'), ('Sylvester', 'Harlequin'), ('One Hundred Years of Solitude', 'Harper'), ('Built to Last: Successful Habits of Visionary Companies', 'Harper Business'), ('Nimitz Class (Admiral Arnold Morgan  #1)', 'Harper Paperbacks'), ('One Hundred Years of Solitude', 'Harper Perennial'), ('1421: The Year China Discovered America', 'Harper Perennial (NYC)'), ('Great Short Works of Fyodor Dostoevsky', 'Harper Perennial Modern Classics'), (\"Mary Stewart's Merlin Trilogy (Arthurian Saga  #1-3)\", 'Harper Voyager'), ('Bloodsucking Fiends (A Love Story  #1)', 'HarperCollins'), ('El reino del drag\u00f3n de oro', 'HarperCollins Espanol'), ('Quicksilver (The Baroque Cycle  #1)', 'HarperCollins Perennial'), ('Beautiful Boys (Weetzie Bat  #4-5)', 'HarperTeen'), ('Piccadilly Jim', 'Harry N. Abrams'), ('The Elements of Typographic Style', 'Hartley & Marks Publishers'), (\"Not Your Mother's Slow Cooker Cookbook\", 'Harvard Common Press'), ('Magic Circles: The Beatles in Dream and History', 'Harvard University Press'), ('The Jester', 'Headline'), ('Falling for You', 'Headline Review'), ('Think and Grow Rich', 'High Roads Media'), ('The Dark Tower (The Dark Tower #7)', 'Hodder & Stoughton'), ('The Battle Of Corrin (Legends of Dune  #3)', 'Hodder & Stoughton Ltd'), (\"Hegemony or Survival: America's Quest for Global Dominance\", 'Holt McDougal'), ('The Best American Nonrequired Reading 2004', 'Houghton Mifflin'), ('The Fellowship of the Ring (The Lord of the Rings  #1)', 'Houghton Mifflin Company'), ('The Lord of the Rings (The Lord of the Rings  #1-3)', 'Houghton Mifflin Harcourt'), ('Chop Shop (Bug Man  #2)', 'Howard Books'), ('Pledged: The Secret Life of Sororities', 'Hyperion'), ('The Complete I Ching: The Definitive Translation', 'Inner Traditions International'), ('Desiring God: Meditations of a Christian Hedonist', 'Inter-Varsity Press'), ('Slider', 'It Books'), ('Courageous Faith Through the Year', 'IVP Books'), ('Astronomy: A Self-Teaching Guide', 'John Wiley & Sons'), ('The Odyssey (New Translations from Antiquity)', 'Johns Hopkins University Press'), ('The Plot Against America', 'Jonathan Cape'), ('Bite (Anita Blake  Vampire Hunter  #8.5; Sookie Stackhouse  #5.1; Undead  #2.5; Mageverse  #1.5)', 'Jove'), ('Frankenstein', 'Kaplan Publishing'), ('Weekend Warriors (Sisterhood  #1)', 'Kensington'), ('The Best Short Stories of Edith Wharton', 'Kessinger Publishing'), (\"Lidia's Family Table\", 'Knopf Publishing Group'), ('The Lovely Bones', 'Large Print Press'), ('1000 Rings: Inspiring Adornments for the Hand', 'Lark Books'), ('Blood Moon Over Bengal', 'Leisure Books'), ('Collected Stories III: One Night in Brazil to The Death of Methuselah', 'Library of America'), ('The Season: A Candid Look at Broadway', 'Limelight'), ('The Dream Kingdom (The Morland Dynasty  #26)', 'Little Brown Book Group'), ('The Necessary Shakespeare', 'Longman Publishing Group'), (\"Aphrodite's Flame (Superhero Central #4)\", 'Love Spell'), ('The Fairy Godmother (Five Hundred Kingdoms  #1)', 'Luna Books'), ('Life of Pi', 'Mariner Books / Harvest Books'), ('Essential Monster of Frankenstein  Vol. 1', 'Marvel Comics'), ('Marvels', 'Marvel Comics Group'), ('Slim to None: A Journey Through the Wasteland of Anorexia Treatment', 'McGraw-Hill Education'), ('The Last Dance: Encountering Death and Dying', 'McGraw-Hill Humanities/Social Sciences/Languages'), (\"Harrison's Principles of Internal Medicine\", 'McGraw-Hill Medical Publishing'), (\"McSweeney's #14\", \"McSweeney's\"), ('Tuf Voyaging', 'Meisha Merlin Publishing'), ('The Criss Cross', 'Melodrama Publishing'), ('Code Complete', 'Microsoft Press'), ('The St. Paul Stories of F. Scott Fitzgerald', 'Minnesota Historical Society Press'), ('The Prize (deWarenne Dynasty  #4)', 'Mira Books'), ('Summerland', 'Miramax'), ('The Mysterious Island (Extraordinary Voyages  #12)', 'Modern Library'), ('Ahora sabr\u00e9is lo que es correr', 'Mondadori'), ('Corvette: Fifty Years', 'Motorbooks'), ('Kinfolk', 'Moyer Bell and its subsidiaries'), ('Atlas Shrugged', 'NAL'), (\"The Devil's in the Details (A Camilla MacPhee Mystery  #4)\", 'Napoleon and Co'), ('Cruelest Journey: Six Hundred Miles To Timbuktu', 'National Geographic Society'), ('On Genesis/A Refutation of the Manichees/The Unfinished Literal Meaning of Genesis (Works of St Augustine 1)', 'New City Press'), ('Write Great Code: Volume 1: Understanding the Machine', 'No Starch Press'), ('Jerusalem Inn (Richard Jury  #5)', 'Onyx'), ('Sleeping in Flame (Answered Prayers  #2)', 'Orb Books'), ('The High Lord (Black Magician Trilogy  #3)', 'Orbit'), ('Trevayne', 'Orion'), ('The Icarus Agenda', 'Orion Books'), ('The Stones of Summer', 'Overlook Press'), ('Sense and Sensibility', 'Oxford University Press'), ('The Selected Journals Of L.M. Montgomery  Vol. 5: 1935-1942', 'Oxford University Press USA'), ('Marching Powder', 'Pan MacMillan'), ('Narraciones Extraordinarias', 'Panamericana Editorial'), ('Open Secrets / Inward Prospects: Reflections on World and Soul', 'Paul Dry Books'), ('Introduction to the Philosophies of Research and Criticism in Education and the Social Sciences', 'Pearson'), ('The Teeth of the Tiger (Jack Ryan Universe  #12)', 'Penguin Books Ltd.'), ('The Normans in Sicily: The Normans in the South 1016-1130 and the Kingdom in the Sun 1130-1194', 'Penguin Global'), ('The Shadow of the Wind', 'Phoenix'), ('A Home at the End of the World', 'Picador'), ('Dry', 'Picador USA'), ('Mary Queen of Scots and the Murder of Lord Darnley', 'Pimlico'), ('Island Of Bones (Louis Kincaid  #5)', 'Pinnacle'), ('Stolen (Women of the Otherworld  #2)', 'Plume'), ('Bitten (Otherworld  #1)', 'Plume Books'), ('The Color Purple', 'Pocket'), ('Underworld: Blood Enemy (Underworld  #2)', 'Pocket Star'), ('The Footprints of God', 'Pocket Star Books'), ('iMovie 4 & iDVD: The Missing Manual: The Missing Manual', 'Pogue Press'), (\"Programming Ruby: The Pragmatic Programmers' Guide\", 'Pragmatic Bookshelf'), ('Java: An Introduction to Problem Solving and Programming', 'Prentice Hall'), ('We Were Soldiers Once... and Young: Ia Drang - The Battle that Changed the War in Vietnam', 'Presidio Press'), ('Shamanism: Archaic Techniques of Ecstasy', 'Princeton University Press'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", 'Random House'), ('Mountains Beyond Mountains: The Quest of Dr. Paul Farmer  a Man Who Would Cure the World', 'Random House Trade'), ('The Scientists: A History of Science Told Through the Lives of Its Greatest Inventors', 'Random House Trade Paperbacks'), ('City of the Beasts (Eagle and Jaguar  #1)', 'Rayo'), (\"Girls' Night In\", 'Red Dress Ink'), ('The Zanzibar Chest', 'Riverhead Books'), ('History of Beauty', 'Rizzoli'), ('The Mammoth Book of Storms  Shipwrecks and Sea Disasters', 'Running Press'), (\"PHP and MySQL Web Development (Developer's Library)\", 'Sams'), ('Robbins and Cotran Review of Pathology', 'Saunders'), ('The Origins of Totalitarianism', 'Schocken Books'), ('Harry Potter Boxed Set  Books 1-5 (Harry Potter  #1-5)', 'Scholastic'), ('Harry Potter and the Prisoner of Azkaban (Harry Potter  #3)', 'Scholastic Inc.'), ('El club Dante', 'Seix Barral'), ('The Sea-Wolf and Selected Stories', 'Signet Classics'), ('Double-Cross (Athena Force #4)', 'Silhouette Bombshell'), ('The Scarlet Pimpernel', 'Simon Schuster'), ('The Scarlet Letter', 'Simon & Schuster'), ('Nighttime Is My Time', 'Simon & Schuster Adult Publishing Group'), ('This Lullaby', 'Speak'), ('Foundation and Earth (Foundation #5)', 'Spectra'), ('Sideways', \"St. Martin's Griffin\"), ('As the Crow Flies', \"St. Martin's Paperbacks\"), ('To the Nines (Stephanie Plum  #9)', \"St. Martin's Press\"), ('The Interpreter', 'St. Martins Press'), ('New Threads in the Pattern: The Great Hunt  Part 2 (Wheel of Time  #2-2)', 'Starscape'), ('Her Smoke Rose Up Forever', 'Tachyon Publications'), ('Under the Influence: The Disinformation Guide to Drugs', 'The Disinformation Company (NYC)'), ('The Nature of Play: Great Apes and Humans', 'The Guilford Press'), ('Blink', 'Thomas Nelson'), (\"Kushiel's Avatar (Ph\u00e8dre's Trilogy  #3)\", 'Tor'), ('Wolfskin (Saga of the Light Isles  #1)', 'Tor Books'), ('Drum Into Silence (Drums of Chaos  #3)', 'Tor Fantasy'), ('Not Without My Daughter', 'Transworld Publishers Ltd'), (\"Charlie Wilson's War: The Extraordinary Story of the Largest Cover Operation in History\", 'Turtleback Books'), (\"Harrington on Hold 'em: Expert Strategy for No-Limit Tournaments  Volume I: Strategic Play\", 'Two Plus Two Publishing LLC'), ('Reunion (Redemption  #5)', 'Tyndale House Publishers'), ('Filth: Dirt  Disgust  and Modern Life', 'Univ Of Minnesota Press'), ('Pathologies of Power: Health  Human Rights and the New War on the Poor', 'University of California Press'), (\"A Gateway to Sindarin: A Grammar of an Elvish Language from J.R.R. Tolkien's Lord of the Rings\", 'University of Utah Press'), ('Tuscan Countess: The Life and Extraordinary Times of Matilda of Canossa', 'Vendome Press'), ('The Filth', 'Vertigo'), ('In the Shadow of Young Girls in Flower (In Search of Lost Time  #2)', 'Viking Adult'), ('Titan: The Life of John D. Rockefeller  Sr.', 'Vintage'), ('The Elegant Universe: Superstrings  Hidden Dimensions  and the Quest for the Ultimate Theory', 'Vintage Books USA'), ('Naked Empire (Sword of Truth  #8)', 'Voyager'), ('A History of Modern Europe  Volume 2: From the French Revolution to the Present', 'W. W. Norton & Company'), ('Will in the World: How Shakespeare Became Shakespeare', 'W.W. Norton & Company (NY/London)'), ('Dracula', 'Walker Books Ltd'), ('Henry V', 'Washington Square Press'), ('Anna Karenina', 'Wildside Press'), ('Starting an eBay Business for Dummies', 'Wiley'), (\"Lamb: The Gospel According to Biff  Christ's Childhood Pal\", 'William Morrow / HarperCollins / Harper Perennial'), ('Wicked: The Life and Times of the Wicked Witch of the West', 'William Morrow Paperbacks'), ('See How She Dies', 'Zebra Books'), ('Breach of Promise', 'Zondervan'), ('\u041c\u0430\u0441\u0442\u0435\u0440 \u0438 \u041c\u0430\u0440\u0433\u0430\u0440\u0438\u0442\u0430', '\u042d\u043a\u0441\u043c\u043e'), ('Masterpieces: The Best Science Fiction of the Twentieth Century', 'Ace Books'), ('Infants  Children  and Adolescents (MyDevelopmentLab Series)', 'Allyn & Bacon'), ('Providence of a Sparrow: Lessons from a Life Gone to the Birds', 'Anchor'), ('A Tale of Two Cities', 'Barnes & Noble Classics'), ('Cravings (Undead #1.5; Moon #3.5)', 'Berkley Books'), (\"Heart & Hands: A Midwife's Guide to Pregnancy & Birth\", 'Celestial Arts'), ('The Star Wars Trilogy', 'Del Rey'), ('Monster: The Autobiography of an L.A. Gang Member', 'Grove Press'), ('Shutter Island', 'HarperTorch'), ('After Glow (Ghost Hunters  #2)', 'Jove Books'), ('Harpo Speaks!', 'Limelight Editions'), ('El azul de la virgen', 'Punto de Lectura'), (\"Trickster's Choice (Daughter of the Lioness  #1)\", 'Scholastic Press'), ('Birds Without Wings', 'Secker'), ('Travels of Marco Polo', 'Signet'), ('The Radical Right & the Murder of John F. Kennedy: Stunning Evidence in the Assassination of the President', 'Trafford Publishing'), ('Lost Prophet: The Life and Times of Bayard Rustin', 'University of Chicago Press'), ('The English Novel: An Introduction', 'Wiley-Blackwell'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('Madame Bovary (Critical Editions)', 'W.W. Norton & Company'), ('Dragons in the Archives: The Best of Weis & Hickman (Dragonlance Anthology)', 'Wizards of the Coast'), ('Nancy Drew: Girl Detective: #1-4', 'Aladdin'), ('The Witching Hour (Lives of the Mayfair Witches  #1)', 'Arrow'), ('The Other Boleyn Girl', 'Atria Books'), (\"Since You're Leaving Anyway  Take Out the Trash (Domestic Equalizers #1)\", 'Avon'), ('The Lovely Bones', 'Back Bay Books'), ('Trump: The Art of the Deal', 'Ballantine Books'), ('Beach Girls', 'Bantam'), ('Inferno', 'Bantam Books'), ('Industrial Magic (Women of the Otherworld #4)', 'Bantam Spectra'), ('Pride and Prejudice', 'Barnes Noble Classics'), ('Anna Karenina', 'Barnes & Noble'), ('The Body Farm (Kay Scarpetta  #5)', 'Berkley'), ('Goddess of Spring (Goddess Summoning  #2)', 'Berkley Sensation'), ('Holy Cow: An Indian Adventure', 'Broadway Books'), ('A First Course in String Theory', 'Cambridge University Press'), ('The Earth and Its Peoples: A Global History  Volume C: Since 1750', 'Cengage Learning'), ('Prophet', 'Crossway Books'), ('The War of the Flowers', 'DAW'), ('El umbral de la noche', 'Debolsillo'), ('Shopaholic Takes Manhattan (Shopaholic  #2)', 'Dell Publishing Company'), ('The Philosophy of History', 'Dover Publications'), ('Dead Souls', \"Everyman's Library\"), ('The Kid Stays in the Picture', 'Faber & Faber'), ('The Iliad', 'Farrar Straus and Giroux'), ('Outcast of Redwall (Redwall  #8)', 'Firebird'), ('How to Stop Worrying and Start Living', 'Gallery Books'), ('The Shell Seekers', 'Gramercy Books'), ('Feast: Food to Celebrate Life', 'Hachette Books'), ('The Known World', 'Harper'), ('Island of the Sequined Love Nun', 'Harper Perennial'), ('Great Short Works of Herman Melville', 'Harper Perennial Modern Classics'), ('Journey Into the Void (Sovereign Stone  #3)', 'Harper Voyager'), ('Darkest Hour (The Mediator  #4)', 'HarperCollins'), ('The Collected Letters of C.S. Lewis  Volume 1: Family Letters  1905-1931', 'HarperOne'), ('The Second World War: A Complete History', 'Holt McDougal'), ('Queen of Scots: The True Life of Mary Stuart', 'Houghton Mifflin'), ('The Silmarillion', 'Houghton Mifflin Company'), ('How to Make Love Like a Porn Star: A Cautionary Tale', 'It Books'), ('Sunshine', 'Jove'), ('Lemon Meringue Pie Murder (Hannah Swensen  #4)', 'Kensington'), ('My Life', 'Knopf Publishing Group'), ('The Chase (Deed  #3)', 'Leisure Books'), ('Collected Stories I: Gimpel the Fool to The Letter Writer', 'Library of America'), ('Love Bites (Argeneau #2)', 'Love Spell'), (\"Elphame's Choice (Partholon  #4)\", 'Luna Books'), ('Natural Health  Natural Medicine', 'Mariner Books'), ('Advanced Statistics Demystified', 'McGraw-Hill Education'), ('The Red and the Black', 'Modern Library'), ('The Mother', 'Moyer Bell and its subsidiaries'), ('In Focus: National Geographic Greatest Portraits', 'National Geographic Society'), ('BSD Hacks', \"O'Reilly Media\"), ('The Dirty Duck (Richard Jury  #4)', 'Onyx'), ('Maps in a Mirror: The Short Fiction of Orson Scott Card', 'Orb Books'), ('The Novice (Black Magician Trilogy  #2)', 'Orbit'), ('The Bourne Ultimatum (Jason Bourne  #3)', 'Orion'), ('Modern Latin America', 'Oxford University Press USA'), (\"The Music of the Republic: Essays on Socrates' Conversations and Plato's Writings\", 'Paul Dry Books'), ('Freedom Evolves', 'Penguin'), ('The Well of Lost Plots (Thursday Next #3)', 'Penguin Books'), ('Anna Karenina', 'Penguin Classics'), ('Primo Levi: A Life', 'Picador'), ('Mason & Dixon', 'Picador USA'), ('Lies & the Lying Liars Who Tell Them: A Fair & Balanced Look at the Right', 'Plume Books'), ('Twisted: The Collected Short Stories', 'Pocket Books'), ('Sharp Edges', 'Pocket Star Books'), ('Criminal Investigation: The Art and the Science', 'Prentice Hall'), ('Walden', 'Princeton University Press'), ('The Birth of Venus', 'Random House'), ('Monkey Business', 'Red Dress Ink'), ('Programming in C', 'Sams'), ('Wrapped in Rainbows: The Life of Zora Neale Hurston', 'Scribner'), ('Hell House', 'Severn House Publishers'), ('Little Women', 'Signet Classics'), ('The Awakening and Selected Stories', 'Simon Schuster'), ('Certain Prey (Lucas Davenport  #10)', 'Simon & Schuster'), ('Romeo and Juliet', 'Simon Schuster'), ('Light (Kefahuchi Tract  #1)', 'Spectra'), ('All Things Wise and Wonderful', \"St. Martin's Griffin\"), ('The Firefly', \"St. Martin's Paperbacks\"), ('Little Women (Little Women  #1)', 'Sterling'), ('Africa South of the Sahara: A Geographical Interpretation (Texts In Regional Geography)', 'The Guilford Press'), ('Naked Empire (Sword of Truth  #8)', 'Tor Books'), ('Rising Sun', 'Turtleback Books'), ('Rejoice (Redemption  #4)', 'Tyndale House Publishers'), ('Living to Tell the Tale', 'Vintage'), ('The Dogs of Riga (Kurt Wallander  #2)', 'Vintage Crime/Black Lizard'), (\"Anton Chekhov's Selected Plays\", 'W. W. Norton & Company'), ('ebay Timesaving Techniques for Dummies', 'Wiley'), ('The Lust Lizard of Melancholy Cove (Pine Cove  #2)', 'William Morrow Paperbacks'), ('Cerulean Sins (Anita Blake  Vampire Hunter  #11)', 'Berkley Books'), ('Yoda: Dark Rendezvous', 'Del Rey'), ('Still Life With Crows (Pendergast  #4)', 'Grand Central Publishing'), (\"Charlie Wilson's War: The Extraordinary Story of How the Wildest Man in Congress and a Rogue CIA Agent Changed the History of our Times\", 'Grove Press'), ('Airs Above the Ground', 'HarperTorch'), ('El hombre duplicado', 'Punto de Lectura'), ('Four Past Midnight', 'Signet'), ('A Guide to the Words of My Perfect Teacher', 'Shambhala'), ('Earthly Powers', 'Vintage Classics'), ('Moneyball: The Art of Winning an Unfair Game', 'W. W. Norton Company'), ('Night of Blood (Dragonlance: The Minotaur Wars  #1)', 'Wizards of the Coast'), ('Like a Charm', 'Arrow'), (\"Zolar's Encyclopedia and Dictionary of Dreams: Fully Revised and Updated for the 21st Century\", 'Atria Books'), ('The Vampire Lestat (The Vampire Chronicles  #2)', 'Ballantine Books'), ('The Face', 'Bantam'), ('The House of Mirth', 'Barnes Noble Classics'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", \"Everyman's Library\"), ('Trojan Odyssey (Dirk Pitt  #17)', \"G.P. Putnam's Sons\"), ('Fluke: Or  I Know Why the Winged Whale Sings', 'Harper'), ('Letters from the Earth: Uncensored Writings', 'Harper Perennial Modern Classics'), ('The Deed (Deed  #1)', 'Leisure Books'), ('Dark Star Safari: Overland from Cairo to Cape Town', 'Mariner Books'), ('Selected Stories', 'Modern Library'), ('Night Over Water', 'NAL'), ('High Performance MySQL: Optimization  Backups  Replication & Load Balancing', \"O'Reilly Media\"), ('The Oresteia', 'Oxford University Press USA'), ('You Shall Know Our Velocity', 'Penguin'), ('Paris: After the Liberation 1944-1949', 'Penguin Books'), ('Galatea 2.2', 'Picador'), ('Dead I Well May Be (Dead Trilogy #1)', 'Pocket Books'), ('The Count of Monte Cristo', 'Simon Schuster'), ('The Coffin Dancer (Lincoln Rhyme  #2)', 'Simon & Schuster'), (\"Moloka'i (Moloka'i #1)\", \"St. Martin's Griffin\"), ('The Awakening (Vampire Huntress  #2)', \"St. Martin's Paperbacks\"), ('The New York Times Guide to Essential Knowledge', \"St. Martin's Press\"), ('The Illuminati', 'Thomas Nelson'), ('Song of Solomon', 'Vintage'), ('The New Annotated Sherlock Holmes: The Complete Short Stories', 'W. W. Norton & Company'), ('Iceberg (Dirk Pitt  #3)', 'Berkley Books'), ('Dead Witch Walking (The Hollows  #1)', 'HarperTorch'), ('The Complete Aubrey/Maturin Novels (5 Volumes)', 'W. W. Norton Company'), ('Time of the Twins (Dragonlance: Legends  #1)', 'Wizards of the Coast'), ('Blood Canticle (The Vampire Chronicles #10)', 'Arrow'), ('Interview with the Vampire (The Vampire Chronicles  #1)', 'Ballantine Books'), ('The Three Musketeers', 'Barnes Noble Classics'), ('Disordered Minds', 'Berkley'), ('Babyville', 'Broadway Books'), ('A Faint Cold Fear (Grant County  #3)', 'Harper'), ('The Way the Crow Flies', 'Harper Perennial'), ('Where Rainbows End', 'HarperCollins'), ('Sweet Revenge', 'Leisure Books'), ('Reefer Madness: Sex  Drugs  and Cheap Labor in the American Black Market', 'Mariner Books'), ('The Knight of Maison-Rouge', 'Modern Library'), ('Purgatorio (La Divina Commedia #2)', 'Oxford University Press USA'), ('The Portable John Adams', 'Penguin Books'), ('In the Land of Time: And Other Fantasy Tales', 'Penguin Classics'), ('The Price of Pleasure (Sutherland Brothers  #2)', 'Pocket Books'), ('Richard III', 'Simon Schuster'), ('Plan of Attack', 'Simon & Schuster'), ('Full Blast (Full #4)', \"St. Martin's Paperbacks\"), ('Dreamer of Dune: The Biography of Frank Herbert', 'Tor Books'), ('Beloved', 'Vintage'), ('Barracuda 945 (Admiral Arnold Morgan  #6)', 'HarperTorch'), ('The Annotated Brothers Grimm', 'W. W. Norton Company'), ('The Legend of Huma (Dragonlance: Heroes  #1)', 'Wizards of the Coast'), ('The Fortunate Pilgrim', 'Ballantine Books'), ('A Painted House', 'Bantam'), ('The Portrait of a Lady', 'Barnes Noble Classics'), (\"Wild Card (Tom Clancy's Power Plays  #8)\", 'Berkley'), ('10 lb Penalty', \"G.P. Putnam's Sons\"), ('Going Postal (Discworld  #33)', 'Harper'), ('The Known World', 'Harper Perennial'), ('Fabulous Small Jews', 'Mariner Books'), ('The Collected Autobiographies of Maya Angelou', 'Modern Library'), ('Stiff: The Curious Lives of Human Cadavers', 'Penguin'), ('The Life of Graham Greene  Vol. 1: 1904-1939', 'Penguin Books'), ('The Nicomachean Ethics', 'Penguin Classics'), ('The Vanished Man (Lincoln Rhyme  #5)', 'Pocket Books'), ('Othello', 'Simon Schuster'), ('Crazy For You', \"St. Martin's Paperbacks\"), ('The Guns of August', 'Ballantine Books'), ('Essential Tales and Poems', 'Barnes Noble Classics'), ('Blow Fly (Kay Scarpetta  #12)', 'Berkley'), ('A Short History of Nearly Everything', 'Broadway Books'), ('The Mediterranean Caper (Dirk Pitt  #2)', \"G.P. Putnam's Sons\"), ('Wild Swans: Three Daughters of China', 'Harper Perennial'), ('The Best American Mystery Stories 2004', 'Mariner Books'), ('The Killer Angels: A Novel of the Civil War (The Civil War Trilogy  #2)', 'Modern Library'), ('Metamorphoses', 'Penguin'), ('River of Shadows: Eadweard Muybridge and the Technological Wild West', 'Penguin Books'), ('Dead Souls', 'Penguin Classics'), ('Black Cat (Gemini  #2)', 'Pocket Books'), ('Welcome to Temptation (Dempseys  #1)', \"St. Martin's Paperbacks\"), ('The Secret History', 'Vintage'), ('The Idiot', 'Barnes Noble Classics'), (\"Death's Acre: Inside the Legendary Forensic Lab the Body Farm Where the Dead Do Tell Tales\", 'Berkley'), ('The Opposite of Fate', 'Harper Perennial'), ('The Liberated Bride', 'Mariner Books'), ('The Life and Opinions of Tristram Shandy  Gentleman', 'Modern Library'), ('Lost in a Good Book (Thursday Next  #2)', 'Penguin Books'), ('Sentimental Education', 'Penguin Classics'), ('The Second Time Around', 'Pocket Books'), ('King Lear', 'Simon Schuster'), ('Faking It (Dempseys  #2)', \"St. Martin's Paperbacks\"), ('The Probable Future', 'Ballantine Books'), ('The Brothers Karamazov', 'Barnes Noble Classics'), ('Wild Horses', \"G.P. Putnam's Sons\"), ('The Real Trial of Oscar Wilde', 'Harper Perennial'), ('The Seville Communion', 'Mariner Books'), ('Narrative of the Life of Frederick Douglass  an American Slave / Incidents in the Life of a Slave Girl', 'Modern Library'), ('Drop City', 'Penguin Books'), ('Germinal', 'Penguin Classics'), ('Othello', 'Simon Schuster'), ('Mortals', 'Vintage'), ('Standing in the Rainbow (Elmwood Springs  #2)', 'Ballantine Books'), ('Guilty Pleasures (Anita Blake  Vampire Hunter  #1)', 'Berkley'), (\"The Bonesetter's Daughter\", 'Harper Perennial'), ('The Flanders Panel', 'Mariner Books'), ('The Hunchback of Notre-Dame', 'Modern Library'), ('The Nibelungenlied', 'Penguin Classics'), ('The Path Between the Seas: The Creation of the Panama Canal  1870-1914', 'Simon Schuster'), ('Rise to Rebellion', 'Ballantine Books'), ('The Bad Place', 'Berkley'), ('Field of Thirteen', \"G.P. Putnam's Sons\"), (\"Will You Miss Me When I'm Gone? The Carter Family and Their Legacy in American Music\", 'Simon Schuster'), ('The Adolescent', 'Vintage'), ('For Kicks', \"G.P. Putnam's Sons\"), ('Sonnets', 'Simon Schuster'), ('Sons of Mississippi: A Story of Race and Its Legacy', 'Vintage'), ('Raise the Titanic! (Dirk Pitt  #4)', \"G.P. Putnam's Sons\"), ('The Time of Our Singing', 'Vintage'), ('Bringing Down The House', 'Arrow'), ('Authentic Happiness: Using the New Positive Psychology to Realize Your Potential for Lasting Fulfillment', 'Atria Books'), ('To Collar a Killer (Jack and Jamie #3)', 'Avon'), ('Back When We Were Grownups', 'Ballantine Books'), ('The Murder Stone', 'Bantam'), ('Dime Store Magic (Women of the Otherworld  #3)', 'Bantam Spectra'), ('Oliver Twist', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('Murder on the Orient Express (Hercule Poirot  #10)', 'Berkley'), (\"Jane's Warlord (Warlord #1)\", 'Berkley Sensation'), ('The Full Matilda', 'Broadway Books'), ('Joust (Dragon Jousters  #1)', 'DAW'), ('Desde mi cielo', 'Debolsillo'), ('The Plague  The Fall  Exile and the Kingdom  and Selected Essays', \"Everyman's Library\"), ('Selected Verse', 'Farrar Straus and Giroux'), ('Decider', \"G.P. Putnam's Sons\"), ('Scar Tissue', 'Hachette Books'), ('Outposts: Journeys to the Surviving Relics of the British Empire', 'Harper Perennial'), ('The Perennial Philosophy', 'Harper Perennial Modern Classics'), ('Brave New World and Brave New World Revisited', 'HarperCollins'), ('After', 'HarperTeen'), ('Cocktail Time', 'Harry N. Abrams'), ('Nightmare House (Harrow House  #1)', 'Leisure Books'), ('Kim', 'Modern Library'), ('The Agony and the Ecstasy: A Biographical Novel of Michelangelo', 'NAL'), ('The Ivory Tower', 'NYRB Classics'), ('The Anodyne Necklace (Richard Jury  #3)', 'Onyx'), (\"The Magicians' Guild (Black Magician Trilogy  #1)\", 'Orbit'), ('Pride and Prejudice', 'Oxford University Press'), ('American Legal History: Cases and Materials', 'Oxford University Press USA'), ('Citizens: A Chronicle of the French Revolution', 'Penguin'), (\"Swann's Way (In Search of Lost Time  #1)\", 'Penguin Classics'), ('The River at the Center of the World: A Journey Up the Yangtze & Back in Chinese Time', 'Picador'), ('Frankenstein  or the Modern Prometheus', 'Pocket Books'), ('Working Effectively with Legacy Code', 'Prentice Hall'), ('Slightly Settled (Slightly  #2)', 'Red Dress Ink'), ('Harry Potter and the Order of the Phoenix (Harry Potter  #5)', 'Scholastic Inc.'), ('Brick Lane', 'Scribner'), ('Wuthering Heights', 'Signet Classics'), ('A Tale of Two Cities', 'Simon Schuster'), ('Easy Prey (Lucas Davenport  #11)', 'Simon & Schuster'), (\"Marching Powder: A True Story of Friendship  Cocaine  and South America's Strangest Jail\", \"St. Martin's Griffin\"), ('The Tristan Betrayal', \"St. Martin's Paperbacks\"), ('Something Borrowed (Darcy & Rachel  #1)', \"St. Martin's Press\"), ('Wasteland of Flint', 'Tor Books'), ('Tar Baby', 'Vintage'), ('Paradise Lost', 'W. W. Norton & Company'), ('The Good Earth (House of Earth  #1)', 'Washington Square Press'), ('Behaving Like Adults', 'William Morrow Paperbacks'), ('Sailing the Wine-Dark Sea: Why the Greeks Matter', 'Anchor'), (\"Mayada  Daughter of Iraq: One Woman's Survival Under Saddam Hussein\", 'Berkley Books'), (\"Dragon's Kin (Pern  #17)\", 'Del Rey'), ('The Big Bad Wolf  (Alex Cross  #9)', 'Grand Central Publishing'), ('This Rough Magic', 'HarperTorch'), ('A Whole Lotta Love', 'Signet'), ('The Wave in the Mind: Talks and Essays on the Writer  the Reader and the Imagination', 'Shambhala'), ('The Confessions of Nat Turner', 'Vintage Classics'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('The Search for Power (Dragonlance: Tales from the War of Souls  #3)', 'Wizards of the Coast'))", "rowcount": 528, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Jennifer Government', 'Abacus'), ('Neuromancer', 'Ace'), ('Runaway', 'Alfred A. Knopf'), ('Enslaved by Ducks', 'Algonquin Books'), ('Natural Cures \"They\" Don\\'t Want You to Know about', 'Alliance Publishing'), ('Zaat', 'American University in Cairo Press'), ('Good Faith', 'Anchor Books'), ('Joel on Software', 'Apress'), ('Women Who Love Too Much', 'Arrow'), ('Lasher (Lives of the Mayfair Witches  #2)', 'Arrow Books'), ('Gloriana', 'Aspect'), ('Plain Truth', 'Atria Books'), ('The Story of Philosophy', 'AudioGO'), ('The Body in the Lighthouse', 'Avon'), ('Murder Unleashed (Jack and Jamie #2)', 'Avon Books'), ('Once Upon a Gulf Coast Summer', 'B Fiction'), ('An Unfinished Life: John F. Kennedy  1917-1963', 'Back Bay Books'), ('Four & Twenty Blackbirds (Bardic Voices  #4)', 'Baen Books'), ('Lost Boy Lost Girl', 'Ballantine Books'), ('Purgatorio (The Divine Comedy  #2)', 'Bantam Books'), ('The Devil in the White City: Murder  Magic and Madness at the Fair that Changed America', 'Bantam Press'), ('A Tale of Two Cities', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('Rereading America: Cultural Contexts for Critical Thinking and Writing', 'Bedford Books'), ('What Is Ancient Philosophy?', 'Belknap Press'), ('Physics: for Scientists and Engineers with Modern Physics', 'Benjamin-Cummings Publishing Company'), (\"Splinter Cell (Tom Clancy's Splinter Cell  #1)\", 'Berkley'), ('Master of the Night (Mageverse #1)', 'Berkley Sensation'), ('Atlantis Found (Dirk Pitt  #15)', 'Berkley Trade'), ('Architecture and Tourism: Perception  Performance and Place', 'Bloomsbury Academic'), (\"The Last Hours of Ancient Sunlight: The Fate of the World and What We Can Do Before It's Too Late\", 'Broadway Books'), ('The Origin of Species', 'Castle Books'), ('Illustrated Guide to the NEC: Based on the 2005 National Electric Code', 'Cengage Learning'), ('Katherine', 'Chicago Review Press'), ('The Letters of Vita Sackville-West and Virginia Woolf', 'Cleis Press'), ('Bioinformatics: Sequence and Genome Analysis', 'Cold Spring Harbor Laboratory Press'), ('Little Women', \"Collector's Library\"), ('O Xar\u00e1', 'Companhia das Letras'), ('Deception Point', 'Corgi Books'), ('Girl Meets Ape', 'Coronet'), ('Data Structures and Algorithms in C++', 'Course Technology'), (\"FDR's Folly: How Roosevelt and His New Deal Prolonged the Great Depression\", 'Crown Forum'), ('Expelled from Eden: A William T. Vollmann Reader', 'Da Capo Press'), ('Selected Poems of Herman Melville', 'David R. Godine Publisher'), (\"Exile's Valor (Heralds of Valdemar  #7)\", 'DAW'), ('On the Road to Perdition \u2014 Oasis  Sanctuary  and Detour \u2014 (Road to Perdition  #2)', 'DC Comics'), ('The Bloody Crown of Conan (Conan the Cimmerian  #2)', 'Del Rey Ballantine Random House'), ('Shopaholic Ties the Knot (Shopaholic  #3)', 'Dell Publishing Company'), ('Coming of Age in Mississippi: The Classic Autobiography of a Young Black Girl in the Rural South', 'Delta'), ('The Cloud Atlas', 'Dial Press'), ('The DC Comics Encyclopedia', 'DK Publishing'), ('Judas Pig', 'Do-Not Press'), ('Anna Karenina', 'Dover Publications'), ('No Second Chance', 'Dutton Books'), ('Plants and Landscapes for Summer-Dry Climates of the San Francisco Bay Region', 'East Bay Municipal Utility District'), ('The Toy Maker: The Life and Times of Inventor Frank Hornby', 'Ebury Press'), ('Harry Potter y la Orden del F\u00e9nix (Harry Potter  #5)', 'Emece Editores'), ('Sabriel (Abhorsen  #1)', 'Eos'), ('Watchfiends and Rack Screams: Works from the Final Period', 'Exact Change'), ('The Avignon Quintet: Monsieur  Livia  Constance  Sebastian and Quinx', 'Faber & Faber'), ('The Fixer', 'Farrar Straus and Giroux'), ('Triss (Redwall  #15)', 'Firebird'), ('Directing the Documentary', 'Focal Press'), ('PHP and MySQL for Dummies', 'For Dummies'), ('Reading Lolita in Tehran', 'Fourth Estate'), ('The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change', 'Free Press'), ('Monkeewrench (Monkeewrench  #1)', \"G.P. Putnam's Sons\"), ('The Big Book of Boy Stuff', 'Gibbs Smith Publishers'), ('A History of God: The 4 000-Year Quest of Judaism  Christianity  and Islam', 'Gramercy Books'), ('Layer Cake', 'Grove Press Black Cat'), (\"Jamie's Dinners: The Essential Family Cookbook\", 'Hachette Books'), ('Republic', 'Hackett Publishing Company Inc.'), ('Sylvester', 'Harlequin'), ('One Hundred Years of Solitude', 'Harper'), ('Built to Last: Successful Habits of Visionary Companies', 'Harper Business'), ('Nimitz Class (Admiral Arnold Morgan  #1)', 'Harper Paperbacks'), ('One Hundred Years of Solitude', 'Harper Perennial'), ('1421: The Year China Discovered America', 'Harper Perennial (NYC)'), ('Great Short Works of Fyodor Dostoevsky', 'Harper Perennial Modern Classics'), (\"Mary Stewart's Merlin Trilogy (Arthurian Saga  #1-3)\", 'Harper Voyager'), ('Bloodsucking Fiends (A Love Story  #1)', 'HarperCollins'), ('El reino del drag\u00f3n de oro', 'HarperCollins Espanol'), ('Quicksilver (The Baroque Cycle  #1)', 'HarperCollins Perennial'), ('Beautiful Boys (Weetzie Bat  #4-5)', 'HarperTeen'), ('Piccadilly Jim', 'Harry N. Abrams'), ('The Elements of Typographic Style', 'Hartley & Marks Publishers'), (\"Not Your Mother's Slow Cooker Cookbook\", 'Harvard Common Press'), ('Magic Circles: The Beatles in Dream and History', 'Harvard University Press'), ('The Jester', 'Headline'), ('Falling for You', 'Headline Review'), ('Think and Grow Rich', 'High Roads Media'), ('The Dark Tower (The Dark Tower #7)', 'Hodder & Stoughton'), ('The Battle Of Corrin (Legends of Dune  #3)', 'Hodder & Stoughton Ltd'), (\"Hegemony or Survival: America's Quest for Global Dominance\", 'Holt McDougal'), ('The Best American Nonrequired Reading 2004', 'Houghton Mifflin'), ('The Fellowship of the Ring (The Lord of the Rings  #1)', 'Houghton Mifflin Company'), ('The Lord of the Rings (The Lord of the Rings  #1-3)', 'Houghton Mifflin Harcourt'), ('Chop Shop (Bug Man  #2)', 'Howard Books'), ('Pledged: The Secret Life of Sororities', 'Hyperion'), ('The Complete I Ching: The Definitive Translation', 'Inner Traditions International'), ('Desiring God: Meditations of a Christian Hedonist', 'Inter-Varsity Press'), ('Slider', 'It Books'), ('Courageous Faith Through the Year', 'IVP Books'), ('Astronomy: A Self-Teaching Guide', 'John Wiley & Sons'), ('The Odyssey (New Translations from Antiquity)', 'Johns Hopkins University Press'), ('The Plot Against America', 'Jonathan Cape'), ('Bite (Anita Blake  Vampire Hunter  #8.5; Sookie Stackhouse  #5.1; Undead  #2.5; Mageverse  #1.5)', 'Jove'), ('Frankenstein', 'Kaplan Publishing'), ('Weekend Warriors (Sisterhood  #1)', 'Kensington'), ('The Best Short Stories of Edith Wharton', 'Kessinger Publishing'), (\"Lidia's Family Table\", 'Knopf Publishing Group'), ('The Lovely Bones', 'Large Print Press'), ('1000 Rings: Inspiring Adornments for the Hand', 'Lark Books'), ('Blood Moon Over Bengal', 'Leisure Books'), ('Collected Stories III: One Night in Brazil to The Death of Methuselah', 'Library of America'), ('The Season: A Candid Look at Broadway', 'Limelight'), ('The Dream Kingdom (The Morland Dynasty  #26)', 'Little Brown Book Group'), ('The Necessary Shakespeare', 'Longman Publishing Group'), (\"Aphrodite's Flame (Superhero Central #4)\", 'Love Spell'), ('The Fairy Godmother (Five Hundred Kingdoms  #1)', 'Luna Books'), ('Life of Pi', 'Mariner Books / Harvest Books'), ('Essential Monster of Frankenstein  Vol. 1', 'Marvel Comics'), ('Marvels', 'Marvel Comics Group'), ('Slim to None: A Journey Through the Wasteland of Anorexia Treatment', 'McGraw-Hill Education'), ('The Last Dance: Encountering Death and Dying', 'McGraw-Hill Humanities/Social Sciences/Languages'), (\"Harrison's Principles of Internal Medicine\", 'McGraw-Hill Medical Publishing'), (\"McSweeney's #14\", \"McSweeney's\"), ('Tuf Voyaging', 'Meisha Merlin Publishing'), ('The Criss Cross', 'Melodrama Publishing'), ('Code Complete', 'Microsoft Press'), ('The St. Paul Stories of F. Scott Fitzgerald', 'Minnesota Historical Society Press'), ('The Prize (deWarenne Dynasty  #4)', 'Mira Books'), ('Summerland', 'Miramax'), ('The Mysterious Island (Extraordinary Voyages  #12)', 'Modern Library'), ('Ahora sabr\u00e9is lo que es correr', 'Mondadori'), ('Corvette: Fifty Years', 'Motorbooks'), ('Kinfolk', 'Moyer Bell and its subsidiaries'), ('Atlas Shrugged', 'NAL'), (\"The Devil's in the Details (A Camilla MacPhee Mystery  #4)\", 'Napoleon and Co'), ('Cruelest Journey: Six Hundred Miles To Timbuktu', 'National Geographic Society'), ('On Genesis/A Refutation of the Manichees/The Unfinished Literal Meaning of Genesis (Works of St Augustine 1)', 'New City Press'), ('Write Great Code: Volume 1: Understanding the Machine', 'No Starch Press'), ('Jerusalem Inn (Richard Jury  #5)', 'Onyx'), ('Sleeping in Flame (Answered Prayers  #2)', 'Orb Books'), ('The High Lord (Black Magician Trilogy  #3)', 'Orbit'), ('Trevayne', 'Orion'), ('The Icarus Agenda', 'Orion Books'), ('The Stones of Summer', 'Overlook Press'), ('Sense and Sensibility', 'Oxford University Press'), ('The Selected Journals Of L.M. Montgomery  Vol. 5: 1935-1942', 'Oxford University Press USA'), ('Marching Powder', 'Pan MacMillan'), ('Narraciones Extraordinarias', 'Panamericana Editorial'), ('Open Secrets / Inward Prospects: Reflections on World and Soul', 'Paul Dry Books'), ('Introduction to the Philosophies of Research and Criticism in Education and the Social Sciences', 'Pearson'), ('The Teeth of the Tiger (Jack Ryan Universe  #12)', 'Penguin Books Ltd.'), ('The Normans in Sicily: The Normans in the South 1016-1130 and the Kingdom in the Sun 1130-1194', 'Penguin Global'), ('The Shadow of the Wind', 'Phoenix'), ('A Home at the End of the World', 'Picador'), ('Dry', 'Picador USA'), ('Mary Queen of Scots and the Murder of Lord Darnley', 'Pimlico'), ('Island Of Bones (Louis Kincaid  #5)', 'Pinnacle'), ('Stolen (Women of the Otherworld  #2)', 'Plume'), ('Bitten (Otherworld  #1)', 'Plume Books'), ('The Color Purple', 'Pocket'), ('Underworld: Blood Enemy (Underworld  #2)', 'Pocket Star'), ('The Footprints of God', 'Pocket Star Books'), ('iMovie 4 & iDVD: The Missing Manual: The Missing Manual', 'Pogue Press'), (\"Programming Ruby: The Pragmatic Programmers' Guide\", 'Pragmatic Bookshelf'), ('Java: An Introduction to Problem Solving and Programming', 'Prentice Hall'), ('We Were Soldiers Once... and Young: Ia Drang - The Battle that Changed the War in Vietnam', 'Presidio Press'), ('Shamanism: Archaic Techniques of Ecstasy', 'Princeton University Press'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", 'Random House'), ('Mountains Beyond Mountains: The Quest of Dr. Paul Farmer  a Man Who Would Cure the World', 'Random House Trade'), ('The Scientists: A History of Science Told Through the Lives of Its Greatest Inventors', 'Random House Trade Paperbacks'), ('City of the Beasts (Eagle and Jaguar  #1)', 'Rayo'), (\"Girls' Night In\", 'Red Dress Ink'), ('The Zanzibar Chest', 'Riverhead Books'), ('History of Beauty', 'Rizzoli'), ('The Mammoth Book of Storms  Shipwrecks and Sea Disasters', 'Running Press'), (\"PHP and MySQL Web Development (Developer's Library)\", 'Sams'), ('Robbins and Cotran Review of Pathology', 'Saunders'), ('The Origins of Totalitarianism', 'Schocken Books'), ('Harry Potter Boxed Set  Books 1-5 (Harry Potter  #1-5)', 'Scholastic'), ('Harry Potter and the Prisoner of Azkaban (Harry Potter  #3)', 'Scholastic Inc.'), ('El club Dante', 'Seix Barral'), ('The Sea-Wolf and Selected Stories', 'Signet Classics'), ('Double-Cross (Athena Force #4)', 'Silhouette Bombshell'), ('The Scarlet Pimpernel', 'Simon Schuster'), ('The Scarlet Letter', 'Simon & Schuster'), ('Nighttime Is My Time', 'Simon & Schuster Adult Publishing Group'), ('This Lullaby', 'Speak'), ('Foundation and Earth (Foundation #5)', 'Spectra'), ('Sideways', \"St. Martin's Griffin\"), ('As the Crow Flies', \"St. Martin's Paperbacks\"), ('To the Nines (Stephanie Plum  #9)', \"St. Martin's Press\"), ('The Interpreter', 'St. Martins Press'), ('New Threads in the Pattern: The Great Hunt  Part 2 (Wheel of Time  #2-2)', 'Starscape'), ('Her Smoke Rose Up Forever', 'Tachyon Publications'), ('Under the Influence: The Disinformation Guide to Drugs', 'The Disinformation Company (NYC)'), ('The Nature of Play: Great Apes and Humans', 'The Guilford Press'), ('Blink', 'Thomas Nelson'), (\"Kushiel's Avatar (Ph\u00e8dre's Trilogy  #3)\", 'Tor'), ('Wolfskin (Saga of the Light Isles  #1)', 'Tor Books'), ('Drum Into Silence (Drums of Chaos  #3)', 'Tor Fantasy'), ('Not Without My Daughter', 'Transworld Publishers Ltd'), (\"Charlie Wilson's War: The Extraordinary Story of the Largest Cover Operation in History\", 'Turtleback Books'), (\"Harrington on Hold 'em: Expert Strategy for No-Limit Tournaments  Volume I: Strategic Play\", 'Two Plus Two Publishing LLC'), ('Reunion (Redemption  #5)', 'Tyndale House Publishers'), ('Filth: Dirt  Disgust  and Modern Life', 'Univ Of Minnesota Press'), ('Pathologies of Power: Health  Human Rights and the New War on the Poor', 'University of California Press'), (\"A Gateway to Sindarin: A Grammar of an Elvish Language from J.R.R. Tolkien's Lord of the Rings\", 'University of Utah Press'), ('Tuscan Countess: The Life and Extraordinary Times of Matilda of Canossa', 'Vendome Press'), ('The Filth', 'Vertigo'), ('In the Shadow of Young Girls in Flower (In Search of Lost Time  #2)', 'Viking Adult'), ('Titan: The Life of John D. Rockefeller  Sr.', 'Vintage'), ('The Elegant Universe: Superstrings  Hidden Dimensions  and the Quest for the Ultimate Theory', 'Vintage Books USA'), ('Naked Empire (Sword of Truth  #8)', 'Voyager'), ('A History of Modern Europe  Volume 2: From the French Revolution to the Present', 'W. W. Norton & Company'), ('Will in the World: How Shakespeare Became Shakespeare', 'W.W. Norton & Company (NY/London)'), ('Dracula', 'Walker Books Ltd'), ('Henry V', 'Washington Square Press'), ('Anna Karenina', 'Wildside Press'), ('Starting an eBay Business for Dummies', 'Wiley'), (\"Lamb: The Gospel According to Biff  Christ's Childhood Pal\", 'William Morrow / HarperCollins / Harper Perennial'), ('Wicked: The Life and Times of the Wicked Witch of the West', 'William Morrow Paperbacks'), ('See How She Dies', 'Zebra Books'), ('Breach of Promise', 'Zondervan'), ('\u041c\u0430\u0441\u0442\u0435\u0440 \u0438 \u041c\u0430\u0440\u0433\u0430\u0440\u0438\u0442\u0430', '\u042d\u043a\u0441\u043c\u043e'), ('Masterpieces: The Best Science Fiction of the Twentieth Century', 'Ace Books'), ('Infants  Children  and Adolescents (MyDevelopmentLab Series)', 'Allyn & Bacon'), ('Providence of a Sparrow: Lessons from a Life Gone to the Birds', 'Anchor'), ('A Tale of Two Cities', 'Barnes & Noble Classics'), ('Cravings (Undead #1.5; Moon #3.5)', 'Berkley Books'), (\"Heart & Hands: A Midwife's Guide to Pregnancy & Birth\", 'Celestial Arts'), ('The Star Wars Trilogy', 'Del Rey'), ('Monster: The Autobiography of an L.A. Gang Member', 'Grove Press'), ('Shutter Island', 'HarperTorch'), ('After Glow (Ghost Hunters  #2)', 'Jove Books'), ('Harpo Speaks!', 'Limelight Editions'), ('El azul de la virgen', 'Punto de Lectura'), (\"Trickster's Choice (Daughter of the Lioness  #1)\", 'Scholastic Press'), ('Birds Without Wings', 'Secker'), ('Travels of Marco Polo', 'Signet'), ('The Radical Right & the Murder of John F. Kennedy: Stunning Evidence in the Assassination of the President', 'Trafford Publishing'), ('Lost Prophet: The Life and Times of Bayard Rustin', 'University of Chicago Press'), ('The English Novel: An Introduction', 'Wiley-Blackwell'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('Madame Bovary (Critical Editions)', 'W.W. Norton & Company'), ('Dragons in the Archives: The Best of Weis & Hickman (Dragonlance Anthology)', 'Wizards of the Coast'), ('Nancy Drew: Girl Detective: #1-4', 'Aladdin'), ('The Witching Hour (Lives of the Mayfair Witches  #1)', 'Arrow'), ('The Other Boleyn Girl', 'Atria Books'), (\"Since You're Leaving Anyway  Take Out the Trash (Domestic Equalizers #1)\", 'Avon'), ('The Lovely Bones', 'Back Bay Books'), ('Trump: The Art of the Deal', 'Ballantine Books'), ('Beach Girls', 'Bantam'), ('Inferno', 'Bantam Books'), ('Industrial Magic (Women of the Otherworld #4)', 'Bantam Spectra'), ('Pride and Prejudice', 'Barnes Noble Classics'), ('Anna Karenina', 'Barnes & Noble'), ('The Body Farm (Kay Scarpetta  #5)', 'Berkley'), ('Goddess of Spring (Goddess Summoning  #2)', 'Berkley Sensation'), ('Holy Cow: An Indian Adventure', 'Broadway Books'), ('A First Course in String Theory', 'Cambridge University Press'), ('The Earth and Its Peoples: A Global History  Volume C: Since 1750', 'Cengage Learning'), ('Prophet', 'Crossway Books'), ('The War of the Flowers', 'DAW'), ('El umbral de la noche', 'Debolsillo'), ('Shopaholic Takes Manhattan (Shopaholic  #2)', 'Dell Publishing Company'), ('The Philosophy of History', 'Dover Publications'), ('Dead Souls', \"Everyman's Library\"), ('The Kid Stays in the Picture', 'Faber & Faber'), ('The Iliad', 'Farrar Straus and Giroux'), ('Outcast of Redwall (Redwall  #8)', 'Firebird'), ('How to Stop Worrying and Start Living', 'Gallery Books'), ('The Shell Seekers', 'Gramercy Books'), ('Feast: Food to Celebrate Life', 'Hachette Books'), ('The Known World', 'Harper'), ('Island of the Sequined Love Nun', 'Harper Perennial'), ('Great Short Works of Herman Melville', 'Harper Perennial Modern Classics'), ('Journey Into the Void (Sovereign Stone  #3)', 'Harper Voyager'), ('Darkest Hour (The Mediator  #4)', 'HarperCollins'), ('The Collected Letters of C.S. Lewis  Volume 1: Family Letters  1905-1931', 'HarperOne'), ('The Second World War: A Complete History', 'Holt McDougal'), ('Queen of Scots: The True Life of Mary Stuart', 'Houghton Mifflin'), ('The Silmarillion', 'Houghton Mifflin Company'), ('How to Make Love Like a Porn Star: A Cautionary Tale', 'It Books'), ('Sunshine', 'Jove'), ('Lemon Meringue Pie Murder (Hannah Swensen  #4)', 'Kensington'), ('My Life', 'Knopf Publishing Group'), ('The Chase (Deed  #3)', 'Leisure Books'), ('Collected Stories I: Gimpel the Fool to The Letter Writer', 'Library of America'), ('Love Bites (Argeneau #2)', 'Love Spell'), (\"Elphame's Choice (Partholon  #4)\", 'Luna Books'), ('Natural Health  Natural Medicine', 'Mariner Books'), ('Advanced Statistics Demystified', 'McGraw-Hill Education'), ('The Red and the Black', 'Modern Library'), ('The Mother', 'Moyer Bell and its subsidiaries'), ('In Focus: National Geographic Greatest Portraits', 'National Geographic Society'), ('BSD Hacks', \"O'Reilly Media\"), ('The Dirty Duck (Richard Jury  #4)', 'Onyx'), ('Maps in a Mirror: The Short Fiction of Orson Scott Card', 'Orb Books'), ('The Novice (Black Magician Trilogy  #2)', 'Orbit'), ('The Bourne Ultimatum (Jason Bourne  #3)', 'Orion'), ('Modern Latin America', 'Oxford University Press USA'), (\"The Music of the Republic: Essays on Socrates' Conversations and Plato's Writings\", 'Paul Dry Books'), ('Freedom Evolves', 'Penguin'), ('The Well of Lost Plots (Thursday Next #3)', 'Penguin Books'), ('Anna Karenina', 'Penguin Classics'), ('Primo Levi: A Life', 'Picador'), ('Mason & Dixon', 'Picador USA'), ('Lies & the Lying Liars Who Tell Them: A Fair & Balanced Look at the Right', 'Plume Books'), ('Twisted: The Collected Short Stories', 'Pocket Books'), ('Sharp Edges', 'Pocket Star Books'), ('Criminal Investigation: The Art and the Science', 'Prentice Hall'), ('Walden', 'Princeton University Press'), ('The Birth of Venus', 'Random House'), ('Monkey Business', 'Red Dress Ink'), ('Programming in C', 'Sams'), ('Wrapped in Rainbows: The Life of Zora Neale Hurston', 'Scribner'), ('Hell House', 'Severn House Publishers'), ('Little Women', 'Signet Classics'), ('The Awakening and Selected Stories', 'Simon Schuster'), ('Certain Prey (Lucas Davenport  #10)', 'Simon & Schuster'), ('Romeo and Juliet', 'Simon Schuster'), ('Light (Kefahuchi Tract  #1)', 'Spectra'), ('All Things Wise and Wonderful', \"St. Martin's Griffin\"), ('The Firefly', \"St. Martin's Paperbacks\"), ('Little Women (Little Women  #1)', 'Sterling'), ('Africa South of the Sahara: A Geographical Interpretation (Texts In Regional Geography)', 'The Guilford Press'), ('Naked Empire (Sword of Truth  #8)', 'Tor Books'), ('Rising Sun', 'Turtleback Books'), ('Rejoice (Redemption  #4)', 'Tyndale House Publishers'), ('Living to Tell the Tale', 'Vintage'), ('The Dogs of Riga (Kurt Wallander  #2)', 'Vintage Crime/Black Lizard'), (\"Anton Chekhov's Selected Plays\", 'W. W. Norton & Company'), ('ebay Timesaving Techniques for Dummies', 'Wiley'), ('The Lust Lizard of Melancholy Cove (Pine Cove  #2)', 'William Morrow Paperbacks'), ('Cerulean Sins (Anita Blake  Vampire Hunter  #11)', 'Berkley Books'), ('Yoda: Dark Rendezvous', 'Del Rey'), ('Still Life With Crows (Pendergast  #4)', 'Grand Central Publishing'), (\"Charlie Wilson's War: The Extraordinary Story of How the Wildest Man in Congress and a Rogue CIA Agent Changed the History of our Times\", 'Grove Press'), ('Airs Above the Ground', 'HarperTorch'), ('El hombre duplicado', 'Punto de Lectura'), ('Four Past Midnight', 'Signet'), ('A Guide to the Words of My Perfect Teacher', 'Shambhala'), ('Earthly Powers', 'Vintage Classics'), ('Moneyball: The Art of Winning an Unfair Game', 'W. W. Norton Company'), ('Night of Blood (Dragonlance: The Minotaur Wars  #1)', 'Wizards of the Coast'), ('Like a Charm', 'Arrow'), (\"Zolar's Encyclopedia and Dictionary of Dreams: Fully Revised and Updated for the 21st Century\", 'Atria Books'), ('The Vampire Lestat (The Vampire Chronicles  #2)', 'Ballantine Books'), ('The Face', 'Bantam'), ('The House of Mirth', 'Barnes Noble Classics'), (\"The Prime of Miss Jean Brodie / The Girls of Slender Means / The Driver's Seat / The Only Problem\", \"Everyman's Library\"), ('Trojan Odyssey (Dirk Pitt  #17)', \"G.P. Putnam's Sons\"), ('Fluke: Or  I Know Why the Winged Whale Sings', 'Harper'), ('Letters from the Earth: Uncensored Writings', 'Harper Perennial Modern Classics'), ('The Deed (Deed  #1)', 'Leisure Books'), ('Dark Star Safari: Overland from Cairo to Cape Town', 'Mariner Books'), ('Selected Stories', 'Modern Library'), ('Night Over Water', 'NAL'), ('High Performance MySQL: Optimization  Backups  Replication & Load Balancing', \"O'Reilly Media\"), ('The Oresteia', 'Oxford University Press USA'), ('You Shall Know Our Velocity', 'Penguin'), ('Paris: After the Liberation 1944-1949', 'Penguin Books'), ('Galatea 2.2', 'Picador'), ('Dead I Well May Be (Dead Trilogy #1)', 'Pocket Books'), ('The Count of Monte Cristo', 'Simon Schuster'), ('The Coffin Dancer (Lincoln Rhyme  #2)', 'Simon & Schuster'), (\"Moloka'i (Moloka'i #1)\", \"St. Martin's Griffin\"), ('The Awakening (Vampire Huntress  #2)', \"St. Martin's Paperbacks\"), ('The New York Times Guide to Essential Knowledge', \"St. Martin's Press\"), ('The Illuminati', 'Thomas Nelson'), ('Song of Solomon', 'Vintage'), ('The New Annotated Sherlock Holmes: The Complete Short Stories', 'W. W. Norton & Company'), ('Iceberg (Dirk Pitt  #3)', 'Berkley Books'), ('Dead Witch Walking (The Hollows  #1)', 'HarperTorch'), ('The Complete Aubrey/Maturin Novels (5 Volumes)', 'W. W. Norton Company'), ('Time of the Twins (Dragonlance: Legends  #1)', 'Wizards of the Coast'), ('Blood Canticle (The Vampire Chronicles #10)', 'Arrow'), ('Interview with the Vampire (The Vampire Chronicles  #1)', 'Ballantine Books'), ('The Three Musketeers', 'Barnes Noble Classics'), ('Disordered Minds', 'Berkley'), ('Babyville', 'Broadway Books'), ('A Faint Cold Fear (Grant County  #3)', 'Harper'), ('The Way the Crow Flies', 'Harper Perennial'), ('Where Rainbows End', 'HarperCollins'), ('Sweet Revenge', 'Leisure Books'), ('Reefer Madness: Sex  Drugs  and Cheap Labor in the American Black Market', 'Mariner Books'), ('The Knight of Maison-Rouge', 'Modern Library'), ('Purgatorio (La Divina Commedia #2)', 'Oxford University Press USA'), ('The Portable John Adams', 'Penguin Books'), ('In the Land of Time: And Other Fantasy Tales', 'Penguin Classics'), ('The Price of Pleasure (Sutherland Brothers  #2)', 'Pocket Books'), ('Richard III', 'Simon Schuster'), ('Plan of Attack', 'Simon & Schuster'), ('Full Blast (Full #4)', \"St. Martin's Paperbacks\"), ('Dreamer of Dune: The Biography of Frank Herbert', 'Tor Books'), ('Beloved', 'Vintage'), ('Barracuda 945 (Admiral Arnold Morgan  #6)', 'HarperTorch'), ('The Annotated Brothers Grimm', 'W. W. Norton Company'), ('The Legend of Huma (Dragonlance: Heroes  #1)', 'Wizards of the Coast'), ('The Fortunate Pilgrim', 'Ballantine Books'), ('A Painted House', 'Bantam'), ('The Portrait of a Lady', 'Barnes Noble Classics'), (\"Wild Card (Tom Clancy's Power Plays  #8)\", 'Berkley'), ('10 lb Penalty', \"G.P. Putnam's Sons\"), ('Going Postal (Discworld  #33)', 'Harper'), ('The Known World', 'Harper Perennial'), ('Fabulous Small Jews', 'Mariner Books'), ('The Collected Autobiographies of Maya Angelou', 'Modern Library'), ('Stiff: The Curious Lives of Human Cadavers', 'Penguin'), ('The Life of Graham Greene  Vol. 1: 1904-1939', 'Penguin Books'), ('The Nicomachean Ethics', 'Penguin Classics'), ('The Vanished Man (Lincoln Rhyme  #5)', 'Pocket Books'), ('Othello', 'Simon Schuster'), ('Crazy For You', \"St. Martin's Paperbacks\"), ('The Guns of August', 'Ballantine Books'), ('Essential Tales and Poems', 'Barnes Noble Classics'), ('Blow Fly (Kay Scarpetta  #12)', 'Berkley'), ('A Short History of Nearly Everything', 'Broadway Books'), ('The Mediterranean Caper (Dirk Pitt  #2)', \"G.P. Putnam's Sons\"), ('Wild Swans: Three Daughters of China', 'Harper Perennial'), ('The Best American Mystery Stories 2004', 'Mariner Books'), ('The Killer Angels: A Novel of the Civil War (The Civil War Trilogy  #2)', 'Modern Library'), ('Metamorphoses', 'Penguin'), ('River of Shadows: Eadweard Muybridge and the Technological Wild West', 'Penguin Books'), ('Dead Souls', 'Penguin Classics'), ('Black Cat (Gemini  #2)', 'Pocket Books'), ('Welcome to Temptation (Dempseys  #1)', \"St. Martin's Paperbacks\"), ('The Secret History', 'Vintage'), ('The Idiot', 'Barnes Noble Classics'), (\"Death's Acre: Inside the Legendary Forensic Lab the Body Farm Where the Dead Do Tell Tales\", 'Berkley'), ('The Opposite of Fate', 'Harper Perennial'), ('The Liberated Bride', 'Mariner Books'), ('The Life and Opinions of Tristram Shandy  Gentleman', 'Modern Library'), ('Lost in a Good Book (Thursday Next  #2)', 'Penguin Books'), ('Sentimental Education', 'Penguin Classics'), ('The Second Time Around', 'Pocket Books'), ('King Lear', 'Simon Schuster'), ('Faking It (Dempseys  #2)', \"St. Martin's Paperbacks\"), ('The Probable Future', 'Ballantine Books'), ('The Brothers Karamazov', 'Barnes Noble Classics'), ('Wild Horses', \"G.P. Putnam's Sons\"), ('The Real Trial of Oscar Wilde', 'Harper Perennial'), ('The Seville Communion', 'Mariner Books'), ('Narrative of the Life of Frederick Douglass  an American Slave / Incidents in the Life of a Slave Girl', 'Modern Library'), ('Drop City', 'Penguin Books'), ('Germinal', 'Penguin Classics'), ('Othello', 'Simon Schuster'), ('Mortals', 'Vintage'), ('Standing in the Rainbow (Elmwood Springs  #2)', 'Ballantine Books'), ('Guilty Pleasures (Anita Blake  Vampire Hunter  #1)', 'Berkley'), (\"The Bonesetter's Daughter\", 'Harper Perennial'), ('The Flanders Panel', 'Mariner Books'), ('The Hunchback of Notre-Dame', 'Modern Library'), ('The Nibelungenlied', 'Penguin Classics'), ('The Path Between the Seas: The Creation of the Panama Canal  1870-1914', 'Simon Schuster'), ('Rise to Rebellion', 'Ballantine Books'), ('The Bad Place', 'Berkley'), ('Field of Thirteen', \"G.P. Putnam's Sons\"), (\"Will You Miss Me When I'm Gone? The Carter Family and Their Legacy in American Music\", 'Simon Schuster'), ('The Adolescent', 'Vintage'), ('For Kicks', \"G.P. Putnam's Sons\"), ('Sonnets', 'Simon Schuster'), ('Sons of Mississippi: A Story of Race and Its Legacy', 'Vintage'), ('Raise the Titanic! (Dirk Pitt  #4)', \"G.P. Putnam's Sons\"), ('The Time of Our Singing', 'Vintage'), ('Bringing Down The House', 'Arrow'), ('Authentic Happiness: Using the New Positive Psychology to Realize Your Potential for Lasting Fulfillment', 'Atria Books'), ('To Collar a Killer (Jack and Jamie #3)', 'Avon'), ('Back When We Were Grownups', 'Ballantine Books'), ('The Murder Stone', 'Bantam'), ('Dime Store Magic (Women of the Otherworld  #3)', 'Bantam Spectra'), ('Oliver Twist', 'Barnes Noble Classics'), ('Sense and Sensibility', 'Barnes & Noble'), ('Murder on the Orient Express (Hercule Poirot  #10)', 'Berkley'), (\"Jane's Warlord (Warlord #1)\", 'Berkley Sensation'), ('The Full Matilda', 'Broadway Books'), ('Joust (Dragon Jousters  #1)', 'DAW'), ('Desde mi cielo', 'Debolsillo'), ('The Plague  The Fall  Exile and the Kingdom  and Selected Essays', \"Everyman's Library\"), ('Selected Verse', 'Farrar Straus and Giroux'), ('Decider', \"G.P. Putnam's Sons\"), ('Scar Tissue', 'Hachette Books'), ('Outposts: Journeys to the Surviving Relics of the British Empire', 'Harper Perennial'), ('The Perennial Philosophy', 'Harper Perennial Modern Classics'), ('Brave New World and Brave New World Revisited', 'HarperCollins'), ('After', 'HarperTeen'), ('Cocktail Time', 'Harry N. Abrams'), ('Nightmare House (Harrow House  #1)', 'Leisure Books'), ('Kim', 'Modern Library'), ('The Agony and the Ecstasy: A Biographical Novel of Michelangelo', 'NAL'), ('The Ivory Tower', 'NYRB Classics'), ('The Anodyne Necklace (Richard Jury  #3)', 'Onyx'), (\"The Magicians' Guild (Black Magician Trilogy  #1)\", 'Orbit'), ('Pride and Prejudice', 'Oxford University Press'), ('American Legal History: Cases and Materials', 'Oxford University Press USA'), ('Citizens: A Chronicle of the French Revolution', 'Penguin'), (\"Swann's Way (In Search of Lost Time  #1)\", 'Penguin Classics'), ('The River at the Center of the World: A Journey Up the Yangtze & Back in Chinese Time', 'Picador'), ('Frankenstein  or the Modern Prometheus', 'Pocket Books'), ('Working Effectively with Legacy Code', 'Prentice Hall'), ('Slightly Settled (Slightly  #2)', 'Red Dress Ink'), ('Harry Potter and the Order of the Phoenix (Harry Potter  #5)', 'Scholastic Inc.'), ('Brick Lane', 'Scribner'), ('Wuthering Heights', 'Signet Classics'), ('A Tale of Two Cities', 'Simon Schuster'), ('Easy Prey (Lucas Davenport  #11)', 'Simon & Schuster'), (\"Marching Powder: A True Story of Friendship  Cocaine  and South America's Strangest Jail\", \"St. Martin's Griffin\"), ('The Tristan Betrayal', \"St. Martin's Paperbacks\"), ('Something Borrowed (Darcy & Rachel  #1)', \"St. Martin's Press\"), ('Wasteland of Flint', 'Tor Books'), ('Tar Baby', 'Vintage'), ('Paradise Lost', 'W. W. Norton & Company'), ('The Good Earth (House of Earth  #1)', 'Washington Square Press'), ('Behaving Like Adults', 'William Morrow Paperbacks'), ('Sailing the Wine-Dark Sea: Why the Greeks Matter', 'Anchor'), (\"Mayada  Daughter of Iraq: One Woman's Survival Under Saddam Hussein\", 'Berkley Books'), (\"Dragon's Kin (Pern  #17)\", 'Del Rey'), ('The Big Bad Wolf  (Alex Cross  #9)', 'Grand Central Publishing'), ('This Rough Magic', 'HarperTorch'), ('A Whole Lotta Love', 'Signet'), ('The Wave in the Mind: Talks and Essays on the Writer  the Reader and the Imagination', 'Shambhala'), ('The Confessions of Nat Turner', 'Vintage Classics'), ('The 9/11 Commission Report: Final Report of the National Commission on Terrorist Attacks Upon the United States', 'W. W. Norton Company'), ('The Search for Power (Dragonlance: Tales from the War of Souls  #3)', 'Wizards of the Coast'))", "rowcount": 528, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 400, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Saints',), ('Lovelock (Mayflower Trilogy  #1)',), ('Legends',), ('Sarah (Women of Genesis  #1)',), ('Shadow of the Hegemon (The Shadow Series  #2)',), ('How to Write Science Fiction & Fantasy',), (\"X\u00e9nocide (Ender's Saga  #3)\",))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Saints',), ('Lovelock (Mayflower Trilogy  #1)',), ('Legends',), ('Sarah (Women of Genesis  #1)',), ('Shadow of the Hegemon (The Shadow Series  #2)',), ('How to Write Science Fiction & Fantasy',), (\"X\u00e9nocide (Ender's Saga  #3)\",))", "rowcount": 7, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 401, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 402, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 403, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((25.26095962524414,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((25.26095962524414,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 404, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('2020',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('2020',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 3}
{"sql_id": 405, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Witness for the Prosecution and Selected Plays',), ('She Came to Stay',), ('The Collection: The Outsiders / Rumble Fish / That Was Then  This Is Now',), ('The Love of the Last Tycoon',), ('Heart Songs and Other Stories',), ('Reason in History',), ('Tyranny of the Majority: Fundamental Fairness in Representative Democracy',), ('Mrs. Piggle-Wiggle Treasury (Mrs. Piggle Wiggle  #1-2  #4)',), ('Embracing the Love of God: The Path and Promise of Christian Life',), ('Cathedral  Forge  and Waterwheel: Technology and Invention in the Middle Ages',), (\"Laura Ingalls Wilder Country: The People and places in Laura Ingalls Wilder's life and books\",), ('Imajica: The Reconciliation',), ('The Pilgrimage: A Contemporary Quest for Ancient Wisdom',), ('Betsy and Joe (Betsy-Tacy  #8)',), ('Betsy Was a Junior (Betsy-Tacy  #7)',), ('Crazy Lady!',), ('Seven Spiders Spinning (The Hamlet Chronicles  #1)',), ('American Dragons: Twenty-five Asian American Voices',), ('Winter Days in the Big Woods',), ('The Professor of Desire',), ('The Rings of Saturn',), ('Slow Learner: Early Stories',), (\"Midnight's Children\",), ('Five Patients',), (\"Love's Executioner  And Other Tales Of Psychotherapy\",), ('The Assault',), (\"The Monkey's Wrench\",), ('Six Characters in Search of an Author and Other Plays',), ('Harvesting the Heart',), ('The Basketball Diaries',), ('The Making of Pride and Prejudice',), ('Great Expectations',), ('Anne Frank Beyond the Diary: A Photographic Remembrance',), ('Oddballs',), ('What is Art?',), ('The Railway Children',), ('Billy Budd  Sailor',), ('Fire: From A Journal of Love - The Unexpurgated Diary of Ana\u00efs Nin (1934-1937)',), ('How to Travel with a Salmon and Other Essays',), ('The Metamorphoses of Ovid',), ('Winterdance: The Fine Madness of Running the Iditarod',), ('Roald Dahl: A Biography',), ('This Is the Way the World Ends',), ('View With a Grain of Sand: Selected Poems',), (\"Paul Revere's Ride\",), ('Justice Oliver Wendell Holmes: Law and the Inner Self',), ('Aristophanes and Athens: An Introduction to the Plays',), ('The Mythical Man-Month: Essays on Software Engineering',), ('Bengal Nights',), ('A Dance to the Music of Time: 1st Movement (A Dance to the Music of Time  #1-3)',), ('A Dance to the Music of Time: 2nd Movement (A Dance to the Music of Time  #4-6)',), ('A Dance to the Music of Time: 3rd Movement (A Dance to the Music of Time  #7-9)',), ('A Dance to the Music of Time: 4th Movement (A Dance to the Music of Time  #10-12)',), (\"Dante's Inferno\",), ('The Shaping of America: A Geographical Perspective on 500 Years of History: Volume 2: Continental America  1800-1867',), (\"White Man's Grave\",), ('Isak Dinesen: The Life of a Storyteller',), ('The Wild Shore (Three Californias Triptych  #1)',), ('The Gold Coast (Three Californias Triptych  #2)',), ('Pacific Edge (Three Californias Triptych  #3)',), ('Earthborn (Homecoming Saga #5)',), ('The Edge of Honor',), (\"The Scold's Bridle\",), ('Rose in Bloom (Eight Cousins  #2)',), ('Cry to Heaven',), ('The Vampire Companion',), ('The Shockwave Rider',), ('The Age of Extremes: The Short Twentieth Century  1914-1991',), ('P.S. I Love You (Sealed with a Kiss #4)',), ('First Love  Second Chance',), ('The Night of Wishes',), ('The Sixteen Pleasures',), ('Running from Safety: An Adventure of the Spirit',), (\"Black Holes & Time Warps: Einstein's Outrageous Legacy\",), ('Excellence',), ('Frankenstein',), ('Jesus the Son of Man',), (\"Revenge of the Lawn / The Abortion / So the Wind Won't Blow it All Away\",), ('The Old Way of Seeing: How Architecture Lost Its Magic - And How to Get It Back',), (\"McNally's Caper (Archy McNally  #4)\",), ('The Key to Midnight',), ('Debt of Honor (Jack Ryan  #7)',), ('A Pinch of Poison (Hemlock Falls Mysteries  #3)',), ('Escape from Fire Mountain (World of Adventure  #3)',), ('A Ring of Endless Light (Austin Family  #4)',), ('Fantastic Alice',), ('Nothing Lasts Forever',), ('Prime Time',), ('Death of a Charming Man (Hamish Macbeth  #10)',), ('Season of the Machete',), ('Charade',), ('Night Train to Memphis (Vicky Bliss  #5)',), (\"Fannie Flagg's Original Whistle Stop Cafe Cookbook\",), ('Four Past Midnight: Featuring \"The Langoliers\"',), ('Nightfall',), ('Angel Christmas',), ('The Forest House (Avalon  #2)',), ('Here I Stand: A Life of Martin Luther',), ('The Armies of the Night: History as a Novel  the Novel as History',), ('Holiday Romance and Other Writings for Children',), ('Extraordinary Popular Delusions and the Madness of Crowds/Confusi\u00f3n de Confusiones (Marketplace Book)',), ('The Oil Jar and Other Stories',), ('The Birth of Tragedy',), ('Arms and Armor: A Pictorial Archive from Nineteenth-Century Sources',), ('Three Complete Xanth Novels (Xanth  #1-3)',), ('Children of the Thunder / The Tides of Time / The Crucible of Time',), (\"Cat's Cradle/God Bless You Mr. Rosewater/Breakfast of Champions\",), ('Setting Free the Bears / The Water-Method Man / The 158-Pound Marriage',), ('The Complete Novels',), ('Fine Lines (One-Eyed Mack  #6)',), ('Of Love and Other Demons',), ('The Orion Mystery: Unlocking the Secrets of the Pyramids',), (\"Foucault's Virginity: Ancient Erotic Fiction & the History of Sexuality (Stanford Memorial Lecture)\",), ('The New Knighthood: A History of the Order of the Temple',), ('The Hot Zone: The Chilling True Story of an Ebola Outbreak',), ('Feersum Endjinn',), ('Judge Dredd (Audio Cassette)',), ('The Celestine Prophecy: An Experiential Guide',), ('I. Asimov',), (\"Heaven's Price\",), ('Lords of the Sky',), ('The Seventh Gate (The Death Gate Cycle  #7)',), (\"Finnegan's Week\",), ('Lines and Shadows',), (\"The Goon Show  Volume 11: He's Fallen in the Water!\",), ('The Last Temptation',), ('If I Die In A Combat Zone',), ('How Much is That Guinea Pig in the Window?',), ('The Leader In You: How to Win Friends  Influence People and Succeed in a Changing World',), ('Sahara (Dirk Pitt  #11)',), ('Star Trek: Logs 7-10',), ('A Place Where the Sea Remembers',), ('New Worlds  Ancient Texts: The Power of Tradition and the Shock of Discovery',), ('The Roman Empire',), ('Children of Heracles / Hippolytus / Andromache / Hecuba',), ('The Divine Comedy',), ('Rabbit Angstrom: The Four Novels',), ('Cancer Ward',), ('The Great American Novel',), ('Democracy',), ('A Book of Common Prayer',), ('The Death of Virgil',), ('The Son Avenger (The Master of Hestviken  #4)',), ('Open Secrets',), (\"The Reed Cutter & Captain Shigemoto's Mother\",), ('When She Was Good',), ('Quicksand',), (\"In Pharaoh's Army: Memories of the Lost War\",), ('The Makioka Sisters',), ('Blues for Mister Charlie',), ('Going to Meet the Man',), ('Aman: The Story of a Somali Girl',), ('Three Plays: Desire Under the Elms / Strange Interlude / Mourning Becomes Electra',), (\"Corelli's Mandolin\",), ('Resistance  Rebellion and Death: Essays',), ('Selected Stories',), ('Les Miserables (Stepping Stones)',), ('Daisy-Head Mayzie',), ('A Frolic of His Own',), ('The Great Gatsby',), ('A Life in Letters',), ('The Pat Hobby Stories',), ('No Ordinary Time: Franklin and Eleanor Roosevelt: The Home Front in World War II',), ('Achilles in Vietnam: Combat Trauma and the Undoing of Character',), ('The Reawakening',), ('Survival in Auschwitz',), ('Trapped in the Mirror: Adult Children of Narcissists in Their Struggle for Self',), ('Julius  the Baby of the World',), ('The Fourth of July Story',), ('Come a Stranger (Tillerman Cycle  #5)',), ('The Moon Lady',), ('Unpainted to the Last: \"Moby Dick\" and Twentieth-century American Art',), ('Mondrian',), ('The Painter of Modern Life and Other Essays (Phaidon Arts and Letters)',), ('Red Phoenix',), ('Different Seasons',), (\"The Wealthy Barber: Everyone's Common-Sense Guide to Becoming Financially Independent\",), ('Something Borrowed',), ('Bad Dreams',), ('Sparrow Hawk Red',), ('Love',), ('Bob Marley - Songs of Freedom',), ('Lectures on the History of Philosophy 1: Greek Philosophy to Plato',), ('The Complete Stories',), ('The Forgotten',), ('Anti-Semite and Jew: An Exploration of the Etiology of Hate',), ('The Trial of God: (as it was held on February 25  1649  in Shamgorod)',), ('The Complete Stories',), ('Warfare in the Classical World: An Illustrated Encyclopedia of Weapons  Warriors  and Warfare in the Ancient Civilizations of Greece and Rome',), (\"The Last Book of Swords: Shieldbreaker's Story (Lost Swords  #8)\",), ('Lord of Chaos (The Wheel of Time  #6)',), ('The Ships of Earth (Homecoming Saga #3)',), ('Harpy Thyme (Xanth #17)',), ('Geis of the Gargoyle (Xanth #18)',), ('The Little Baby Snoogle-Fleejer',), ('Practice! Practice!: A Latin Via Ovid Workbook',), ('You Can Never Go Home Again',), ('The Camera (Ansel Adams Photography  #1)',), ('The Negative (Ansel Adams Photography  #2)',), ('The Print (Ansel Adams Photography  #3)',), ('Six Degrees of Separation',), ('Cigarettes Are Sublime',), ('The Calvin and Hobbes Tenth Anniversary Book',), (\"Romanee Conti: The World's Most Fabled Wine\",), ('Moon in a Dewdrop: Writings of Zen Master Dogen',), ('Fire in the Sky (Diadem: Shadowsong  #1)',), ('Storm Warning (Valdemar: Mage Storms #1)',), ('Walking the Rez Road',), ('Dalit: The Black Untaouchables of India',), ('Ghosts of Gettysburg III: Spirits  Apparitions  and Haunted Places of the Battlefield',), ('Novels and Stories',), ('The Ethics of Rhetoric',), ('Pyramids of Montauk: Explorations in Consciousness',), (\"Cook's Illustrated 1995 (Cook's Illustrated Annuals)\",), ('When the World Was Steady',), ('From Far Away',), ('The Belly of Paris (Les Rougon-Macquart  #3)',), ('Keeping Faith: Memoirs of a President',), ('Intimate Communion: Awakening Your Sexual Essence',), ('East Wind: West Wind',), ('A Guided Tour of 5 Works by Plato: Euthyphro/Apology/Crito/Phaedo/Cave',), (\"Meditations for Manifesting: Morning and Evening Meditations to Literally Create Your Heart's Desire\",), ('The Mystery Play',), ('Prince of the City',), ('Lies My Teacher Told Me: Everything Your History Textbook Got Wrong',), ('World War 3 Illustrated: Confrontational Comics',), ('Arcadia',), ('The Azathoth Cycle: Tales of the Blind Idiot God',), ('The Return of Lum  Volume 1: Urusei Yatsura (Urusei Yatsura  #2)',), ('Gunslinger and Nine Other Action-Packed Stories of the Wild West',), ('Desolation Angels',), ('The Western Canon: The Books and School of the Ages',), ('Illuminata: A Return to Prayer',), ('Fantastic Mr. Fox (Cover to Cover)',), ('One Hundred Years Of Solitude',), ('The Bridge over the Drina',), ('The Transit of Venus',), ('Collected Poems  Prose  and Plays',), ('Stories and Early Novels: Pulp Stories / The Big Sleep / Farewell  My Lovely / The High Window',), ('Later Novels and Other Writings: The Lady in the Lake / The Little Sister / The Long Goodbye / Playback / Double Indemnity (screenplay) / Selected Essays and Letters',), (\"Edward Lear's Book of Nonsense: With Lear's Original Illustrations\",), ('En attendant Godot',), ('Premi\u00e8res Histoires',), ('The Art of Richard P. Feynman',), ('April  May und June',), ('Homo faber: Ein Bericht.',), ('La m\u00e1quina de follar',), ('El Hotel New Hampshire',), ('Relato de Um N\u00e1ufrago',))", "rowcount": 249, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Witness for the Prosecution and Selected Plays',), ('She Came to Stay',), ('The Collection: The Outsiders / Rumble Fish / That Was Then  This Is Now',), ('The Love of the Last Tycoon',), ('Heart Songs and Other Stories',), ('Reason in History',), ('Tyranny of the Majority: Fundamental Fairness in Representative Democracy',), ('Mrs. Piggle-Wiggle Treasury (Mrs. Piggle Wiggle  #1-2  #4)',), ('Embracing the Love of God: The Path and Promise of Christian Life',), ('Cathedral  Forge  and Waterwheel: Technology and Invention in the Middle Ages',), (\"Laura Ingalls Wilder Country: The People and places in Laura Ingalls Wilder's life and books\",), ('Imajica: The Reconciliation',), ('The Pilgrimage: A Contemporary Quest for Ancient Wisdom',), ('Betsy and Joe (Betsy-Tacy  #8)',), ('Betsy Was a Junior (Betsy-Tacy  #7)',), ('Crazy Lady!',), ('Seven Spiders Spinning (The Hamlet Chronicles  #1)',), ('American Dragons: Twenty-five Asian American Voices',), ('Winter Days in the Big Woods',), ('The Professor of Desire',), ('The Rings of Saturn',), ('Slow Learner: Early Stories',), (\"Midnight's Children\",), ('Five Patients',), (\"Love's Executioner  And Other Tales Of Psychotherapy\",), ('The Assault',), (\"The Monkey's Wrench\",), ('Six Characters in Search of an Author and Other Plays',), ('Harvesting the Heart',), ('The Basketball Diaries',), ('The Making of Pride and Prejudice',), ('Great Expectations',), ('Anne Frank Beyond the Diary: A Photographic Remembrance',), ('Oddballs',), ('What is Art?',), ('The Railway Children',), ('Billy Budd  Sailor',), ('Fire: From A Journal of Love - The Unexpurgated Diary of Ana\u00efs Nin (1934-1937)',), ('How to Travel with a Salmon and Other Essays',), ('The Metamorphoses of Ovid',), ('Winterdance: The Fine Madness of Running the Iditarod',), ('Roald Dahl: A Biography',), ('This Is the Way the World Ends',), ('View With a Grain of Sand: Selected Poems',), (\"Paul Revere's Ride\",), ('Justice Oliver Wendell Holmes: Law and the Inner Self',), ('Aristophanes and Athens: An Introduction to the Plays',), ('The Mythical Man-Month: Essays on Software Engineering',), ('Bengal Nights',), ('A Dance to the Music of Time: 1st Movement (A Dance to the Music of Time  #1-3)',), ('A Dance to the Music of Time: 2nd Movement (A Dance to the Music of Time  #4-6)',), ('A Dance to the Music of Time: 3rd Movement (A Dance to the Music of Time  #7-9)',), ('A Dance to the Music of Time: 4th Movement (A Dance to the Music of Time  #10-12)',), (\"Dante's Inferno\",), ('The Shaping of America: A Geographical Perspective on 500 Years of History: Volume 2: Continental America  1800-1867',), (\"White Man's Grave\",), ('Isak Dinesen: The Life of a Storyteller',), ('The Wild Shore (Three Californias Triptych  #1)',), ('The Gold Coast (Three Californias Triptych  #2)',), ('Pacific Edge (Three Californias Triptych  #3)',), ('Earthborn (Homecoming Saga #5)',), ('The Edge of Honor',), (\"The Scold's Bridle\",), ('Rose in Bloom (Eight Cousins  #2)',), ('Cry to Heaven',), ('The Vampire Companion',), ('The Shockwave Rider',), ('The Age of Extremes: The Short Twentieth Century  1914-1991',), ('P.S. I Love You (Sealed with a Kiss #4)',), ('First Love  Second Chance',), ('The Night of Wishes',), ('The Sixteen Pleasures',), ('Running from Safety: An Adventure of the Spirit',), (\"Black Holes & Time Warps: Einstein's Outrageous Legacy\",), ('Excellence',), ('Frankenstein',), ('Jesus the Son of Man',), (\"Revenge of the Lawn / The Abortion / So the Wind Won't Blow it All Away\",), ('The Old Way of Seeing: How Architecture Lost Its Magic - And How to Get It Back',), (\"McNally's Caper (Archy McNally  #4)\",), ('The Key to Midnight',), ('Debt of Honor (Jack Ryan  #7)',), ('A Pinch of Poison (Hemlock Falls Mysteries  #3)',), ('Escape from Fire Mountain (World of Adventure  #3)',), ('A Ring of Endless Light (Austin Family  #4)',), ('Fantastic Alice',), ('Nothing Lasts Forever',), ('Prime Time',), ('Death of a Charming Man (Hamish Macbeth  #10)',), ('Season of the Machete',), ('Charade',), ('Night Train to Memphis (Vicky Bliss  #5)',), (\"Fannie Flagg's Original Whistle Stop Cafe Cookbook\",), ('Four Past Midnight: Featuring \"The Langoliers\"',), ('Nightfall',), ('Angel Christmas',), ('The Forest House (Avalon  #2)',), ('Here I Stand: A Life of Martin Luther',), ('The Armies of the Night: History as a Novel  the Novel as History',), ('Holiday Romance and Other Writings for Children',), ('Extraordinary Popular Delusions and the Madness of Crowds/Confusi\u00f3n de Confusiones (Marketplace Book)',), ('The Oil Jar and Other Stories',), ('The Birth of Tragedy',), ('Arms and Armor: A Pictorial Archive from Nineteenth-Century Sources',), ('Three Complete Xanth Novels (Xanth  #1-3)',), ('Children of the Thunder / The Tides of Time / The Crucible of Time',), (\"Cat's Cradle/God Bless You Mr. Rosewater/Breakfast of Champions\",), ('Setting Free the Bears / The Water-Method Man / The 158-Pound Marriage',), ('The Complete Novels',), ('Fine Lines (One-Eyed Mack  #6)',), ('Of Love and Other Demons',), ('The Orion Mystery: Unlocking the Secrets of the Pyramids',), (\"Foucault's Virginity: Ancient Erotic Fiction & the History of Sexuality (Stanford Memorial Lecture)\",), ('The New Knighthood: A History of the Order of the Temple',), ('The Hot Zone: The Chilling True Story of an Ebola Outbreak',), ('Feersum Endjinn',), ('Judge Dredd (Audio Cassette)',), ('The Celestine Prophecy: An Experiential Guide',), ('I. Asimov',), (\"Heaven's Price\",), ('Lords of the Sky',), ('The Seventh Gate (The Death Gate Cycle  #7)',), (\"Finnegan's Week\",), ('Lines and Shadows',), (\"The Goon Show  Volume 11: He's Fallen in the Water!\",), ('The Last Temptation',), ('If I Die In A Combat Zone',), ('How Much is That Guinea Pig in the Window?',), ('The Leader In You: How to Win Friends  Influence People and Succeed in a Changing World',), ('Sahara (Dirk Pitt  #11)',), ('Star Trek: Logs 7-10',), ('A Place Where the Sea Remembers',), ('New Worlds  Ancient Texts: The Power of Tradition and the Shock of Discovery',), ('The Roman Empire',), ('Children of Heracles / Hippolytus / Andromache / Hecuba',), ('The Divine Comedy',), ('Rabbit Angstrom: The Four Novels',), ('Cancer Ward',), ('The Great American Novel',), ('Democracy',), ('A Book of Common Prayer',), ('The Death of Virgil',), ('The Son Avenger (The Master of Hestviken  #4)',), ('Open Secrets',), (\"The Reed Cutter & Captain Shigemoto's Mother\",), ('When She Was Good',), ('Quicksand',), (\"In Pharaoh's Army: Memories of the Lost War\",), ('The Makioka Sisters',), ('Blues for Mister Charlie',), ('Going to Meet the Man',), ('Aman: The Story of a Somali Girl',), ('Three Plays: Desire Under the Elms / Strange Interlude / Mourning Becomes Electra',), (\"Corelli's Mandolin\",), ('Resistance  Rebellion and Death: Essays',), ('Selected Stories',), ('Les Miserables (Stepping Stones)',), ('Daisy-Head Mayzie',), ('A Frolic of His Own',), ('The Great Gatsby',), ('A Life in Letters',), ('The Pat Hobby Stories',), ('No Ordinary Time: Franklin and Eleanor Roosevelt: The Home Front in World War II',), ('Achilles in Vietnam: Combat Trauma and the Undoing of Character',), ('The Reawakening',), ('Survival in Auschwitz',), ('Trapped in the Mirror: Adult Children of Narcissists in Their Struggle for Self',), ('Julius  the Baby of the World',), ('The Fourth of July Story',), ('Come a Stranger (Tillerman Cycle  #5)',), ('The Moon Lady',), ('Unpainted to the Last: \"Moby Dick\" and Twentieth-century American Art',), ('Mondrian',), ('The Painter of Modern Life and Other Essays (Phaidon Arts and Letters)',), ('Red Phoenix',), ('Different Seasons',), (\"The Wealthy Barber: Everyone's Common-Sense Guide to Becoming Financially Independent\",), ('Something Borrowed',), ('Bad Dreams',), ('Sparrow Hawk Red',), ('Love',), ('Bob Marley - Songs of Freedom',), ('Lectures on the History of Philosophy 1: Greek Philosophy to Plato',), ('The Complete Stories',), ('The Forgotten',), ('Anti-Semite and Jew: An Exploration of the Etiology of Hate',), ('The Trial of God: (as it was held on February 25  1649  in Shamgorod)',), ('The Complete Stories',), ('Warfare in the Classical World: An Illustrated Encyclopedia of Weapons  Warriors  and Warfare in the Ancient Civilizations of Greece and Rome',), (\"The Last Book of Swords: Shieldbreaker's Story (Lost Swords  #8)\",), ('Lord of Chaos (The Wheel of Time  #6)',), ('The Ships of Earth (Homecoming Saga #3)',), ('Harpy Thyme (Xanth #17)',), ('Geis of the Gargoyle (Xanth #18)',), ('The Little Baby Snoogle-Fleejer',), ('Practice! Practice!: A Latin Via Ovid Workbook',), ('You Can Never Go Home Again',), ('The Camera (Ansel Adams Photography  #1)',), ('The Negative (Ansel Adams Photography  #2)',), ('The Print (Ansel Adams Photography  #3)',), ('Six Degrees of Separation',), ('Cigarettes Are Sublime',), ('The Calvin and Hobbes Tenth Anniversary Book',), (\"Romanee Conti: The World's Most Fabled Wine\",), ('Moon in a Dewdrop: Writings of Zen Master Dogen',), ('Fire in the Sky (Diadem: Shadowsong  #1)',), ('Storm Warning (Valdemar: Mage Storms #1)',), ('Walking the Rez Road',), ('Dalit: The Black Untaouchables of India',), ('Ghosts of Gettysburg III: Spirits  Apparitions  and Haunted Places of the Battlefield',), ('Novels and Stories',), ('The Ethics of Rhetoric',), ('Pyramids of Montauk: Explorations in Consciousness',), (\"Cook's Illustrated 1995 (Cook's Illustrated Annuals)\",), ('When the World Was Steady',), ('From Far Away',), ('The Belly of Paris (Les Rougon-Macquart  #3)',), ('Keeping Faith: Memoirs of a President',), ('Intimate Communion: Awakening Your Sexual Essence',), ('East Wind: West Wind',), ('A Guided Tour of 5 Works by Plato: Euthyphro/Apology/Crito/Phaedo/Cave',), (\"Meditations for Manifesting: Morning and Evening Meditations to Literally Create Your Heart's Desire\",), ('The Mystery Play',), ('Prince of the City',), ('Lies My Teacher Told Me: Everything Your History Textbook Got Wrong',), ('World War 3 Illustrated: Confrontational Comics',), ('Arcadia',), ('The Azathoth Cycle: Tales of the Blind Idiot God',), ('The Return of Lum  Volume 1: Urusei Yatsura (Urusei Yatsura  #2)',), ('Gunslinger and Nine Other Action-Packed Stories of the Wild West',), ('Desolation Angels',), ('The Western Canon: The Books and School of the Ages',), ('Illuminata: A Return to Prayer',), ('Fantastic Mr. Fox (Cover to Cover)',), ('One Hundred Years Of Solitude',), ('The Bridge over the Drina',), ('The Transit of Venus',), ('Collected Poems  Prose  and Plays',), ('Stories and Early Novels: Pulp Stories / The Big Sleep / Farewell  My Lovely / The High Window',), ('Later Novels and Other Writings: The Lady in the Lake / The Little Sister / The Long Goodbye / Playback / Double Indemnity (screenplay) / Selected Essays and Letters',), (\"Edward Lear's Book of Nonsense: With Lear's Original Illustrations\",), ('En attendant Godot',), ('Premi\u00e8res Histoires',), ('The Art of Richard P. Feynman',), ('April  May und June',), ('Homo faber: Ein Bericht.',), ('La m\u00e1quina de follar',), ('El Hotel New Hampshire',), ('Relato de Um N\u00e1ufrago',))", "rowcount": 249, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 406, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('amazonaws.com',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('amazonaws.com',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 407, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 409, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 410, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 411, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 413, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('The Landmark Thucydides: A Comprehensive Guide to the Peloponnesian War',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('The Landmark Thucydides: A Comprehensive Guide to the Peloponnesian War',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 414, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3.84,), (4.82,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3.84,), (4.82,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 415, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 416, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 417, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 9, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 10, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('But Is It User Friendly?', \"A survey of software for the naive user, focusing on the 'friendliness' of each.\", 'Algodata Infosystems'), ('Emotional Security: A New Algorithm', 'Protecting yourself and your loved ones from undue emotional stress in the modern world. Use of computer and nutritional aids emphasized.', 'New Moon Books'), ('Sushi, Anyone?', 'Detailed instructions on how to make authentic Japanese sushi in your spare time.', 'Binnet & Hardley'), ('Straight Talk About Computers', 'Annotated analysis of what computers can do for you: a no-hype guide for the critical user.', 'Algodata Infosystems'), ('Prolonged Data Deprivation: Four Case Studies', 'What happens when the data runs dry?  Searching evaluations of information-shortage effects.', 'New Moon Books'), ('Fifty Years in Buckingham Palace Kitchens', \"More anecdotes from the Queen's favorite cook describing life among English royalty. Recipes, techniques, tender vignettes.\", 'Binnet & Hardley'), ('Cooking with Computers: Surreptitious Balance Sheets', 'Helpful hints on how to use your electronic resources to the best advantage.', 'Algodata Infosystems'), ('Life Without Fear', 'New exercise, meditation, and nutritional techniques that can reduce the shock of daily interactions. Popular audience. Sample menus included, exercise video available separately.', 'New Moon Books'), ('Computer Phobic AND Non-Phobic Individuals: Behavior Variations', \"A must for the specialist, this book examines the difference between those who hate and fear computers and those who don't.\", 'Binnet & Hardley'), (\"The Busy Executive's Database Guide\", 'An overview of available database systems with emphasis on common business applications. Illustrated.', 'Algodata Infosystems'), ('Is Anger the Enemy?', 'Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.', 'New Moon Books'), ('The Gourmet Microwave', 'Traditional French gourmet recipes adapted for modern microwave cooking.', 'Binnet & Hardley'), ('You Can Combat Computer Stress!', 'The latest medical and psychological techniques for living with the electronic office. Easy-to-understand explanations.', 'New Moon Books'), ('Silicon Valley Gastronomic Treats', 'Favorite recipes for quick, easy, and elegant meals.', 'Binnet & Hardley'), ('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean', 'Profusely illustrated in color, this makes a wonderful gift book for a cuisine-oriented friend.', 'Binnet & Hardley'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('But Is It User Friendly?', \"A survey of software for the naive user, focusing on the 'friendliness' of each.\", 'Algodata Infosystems'), ('Emotional Security: A New Algorithm', 'Protecting yourself and your loved ones from undue emotional stress in the modern world. Use of computer and nutritional aids emphasized.', 'New Moon Books'), ('Sushi, Anyone?', 'Detailed instructions on how to make authentic Japanese sushi in your spare time.', 'Binnet & Hardley'), ('Straight Talk About Computers', 'Annotated analysis of what computers can do for you: a no-hype guide for the critical user.', 'Algodata Infosystems'), ('Prolonged Data Deprivation: Four Case Studies', 'What happens when the data runs dry?  Searching evaluations of information-shortage effects.', 'New Moon Books'), ('Fifty Years in Buckingham Palace Kitchens', \"More anecdotes from the Queen's favorite cook describing life among English royalty. Recipes, techniques, tender vignettes.\", 'Binnet & Hardley'), ('Cooking with Computers: Surreptitious Balance Sheets', 'Helpful hints on how to use your electronic resources to the best advantage.', 'Algodata Infosystems'), ('Life Without Fear', 'New exercise, meditation, and nutritional techniques that can reduce the shock of daily interactions. Popular audience. Sample menus included, exercise video available separately.', 'New Moon Books'), ('Computer Phobic AND Non-Phobic Individuals: Behavior Variations', \"A must for the specialist, this book examines the difference between those who hate and fear computers and those who don't.\", 'Binnet & Hardley'), (\"The Busy Executive's Database Guide\", 'An overview of available database systems with emphasis on common business applications. Illustrated.', 'Algodata Infosystems'), ('Is Anger the Enemy?', 'Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.', 'New Moon Books'), ('The Gourmet Microwave', 'Traditional French gourmet recipes adapted for modern microwave cooking.', 'Binnet & Hardley'), ('You Can Combat Computer Stress!', 'The latest medical and psychological techniques for living with the electronic office. Easy-to-understand explanations.', 'New Moon Books'), ('Silicon Valley Gastronomic Treats', 'Favorite recipes for quick, easy, and elegant meals.', 'Binnet & Hardley'), ('Onions, Leeks, and Garlic: Cooking Secrets of the Mediterranean', 'Profusely illustrated in color, this makes a wonderful gift book for a cuisine-oriented friend.', 'Binnet & Hardley'))", "rowcount": 15, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 11, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Carlos', 'Hernadez'), ('Gary', 'Thomas'), ('Helen', 'Bennett'), ('Howard', 'Snyder'), ('Manuel', 'Pereira'), ('Margaret', 'Smith'), ('Maria', 'Pontes'), ('Patricia', 'McKenna'), ('Philip', 'Cramer'), ('Timothy', \"O'Rourke\"), ('Yoshi', 'Latimer'))", "rowcount": 11, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 12, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('1990',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('1990',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 13, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Binnet & Hardley',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Binnet & Hardley',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 14, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',), ('An overview of available database systems with emphasis on common business applications. Illustrated.',), ('Traditional French gourmet recipes adapted for modern microwave cooking.',), ('Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.',))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 1: ... T2 ON T1.title_id = T2.title_id WHERE DATE(T2.ord_date) = '1994-09-14';\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 15, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('psychology',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 1: ... T2 ON T1.title_id = T2.title_id WHERE DATE(T2.ord_date) = '1993-05-29';\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 16, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8.333333015441895,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name nullifzero does not exist!\nDid you mean \"nullif\"?\nLINE 1: ... THEN qty ELSE 0 END) AS REAL) * 100 / NULLIFZERO(SUM(CASE WHEN T2.city = 'Fre...\n                                                  ^", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 17, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Francisco', '', 'Chang'), ('Matti', 'G', 'Karttunen'), ('Ann', 'M', 'Devon'), ('Rita', 'B', 'Muller'), ('Palle', 'D', 'Ibsen'), ('Diego', 'W', 'Roel'), ('Laurence', 'A', 'Lebihan'), ('Mary', 'M', 'Saveley'), ('Janine', 'Y', 'Labrune'), ('Karla', 'J', 'Jablonski'), ('Martin', 'F', 'Sommer'), ('Paul', 'X', 'Henriot'), ('Annette', '', 'Roulet'), ('Roland', '', 'Mendel'), ('Sven', 'K', 'Ottlieb'), ('Victoria', 'P', 'Ashworth'), ('Maria', '', 'Larsson'), ('Paula', 'S', 'Parente'), ('Helvetius', 'A', 'Nagy'), ('Lesley', '', 'Brown'), ('Miguel', 'A', 'Paolino'), ('Anabela', 'R', 'Domingues'), ('Karin', 'F', 'Josephs'), ('Pedro', 'S', 'Afonso'), ('Aria', '', 'Cruz'), ('Pirkko', 'O', 'Koskitalo'), ('Daniel', 'B', 'Tonini'), ('Martine', '', 'Rance'), ('Peter', 'H', 'Franken'), ('Carine', 'G', 'Schmitt'), ('Elizabeth', 'N', 'Lincoln'), ('Paolo', 'M', 'Accorti'))", "rowcount": 32, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Francisco', '', 'Chang'), ('Matti', 'G', 'Karttunen'), ('Ann', 'M', 'Devon'), ('Rita', 'B', 'Muller'), ('Palle', 'D', 'Ibsen'), ('Diego', 'W', 'Roel'), ('Laurence', 'A', 'Lebihan'), ('Mary', 'M', 'Saveley'), ('Janine', 'Y', 'Labrune'), ('Karla', 'J', 'Jablonski'), ('Martin', 'F', 'Sommer'), ('Paul', 'X', 'Henriot'), ('Annette', '', 'Roulet'), ('Roland', '', 'Mendel'), ('Sven', 'K', 'Ottlieb'), ('Victoria', 'P', 'Ashworth'), ('Maria', '', 'Larsson'), ('Paula', 'S', 'Parente'), ('Helvetius', 'A', 'Nagy'), ('Lesley', '', 'Brown'), ('Miguel', 'A', 'Paolino'), ('Anabela', 'R', 'Domingues'), ('Karin', 'F', 'Josephs'), ('Pedro', 'S', 'Afonso'), ('Aria', '', 'Cruz'), ('Pirkko', 'O', 'Koskitalo'), ('Daniel', 'B', 'Tonini'), ('Martine', '', 'Rance'), ('Peter', 'H', 'Franken'), ('Carine', 'G', 'Schmitt'), ('Elizabeth', 'N', 'Lincoln'), ('Paolo', 'M', 'Accorti'))", "rowcount": 32, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 140, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4825.44,), (2757.3999999999996,), (3315.2599999999998,), (3863.02,), (3002.44,), (3222.73,), (1732.59,), (2798.0,), (1846.0,), (2156.5499999999997,), (1395.42,), (2831.54,), (2552.7000000000003,), (3390.48,), (3644.8,), (3344.0,), (3375.84,), (2097.6000000000004,), (4373.53,), (2484.0,), (4039.2000000000003,), (1432.3400000000001,), (3941.0299999999997,), (3081.32,), (1591.52,), (2694.52,), (2618.12,), (1623.51,), (2279.16,), (925.97,), (1064.3400000000001,), (2268.9500000000003,), (1249.5,), (2056.7799999999997,))", "rowcount": 34, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4825.44,), (2757.3999999999996,), (3315.2599999999998,), (3863.02,), (3002.44,), (3222.73,), (1732.59,), (2798.0,), (1846.0,), (2156.5499999999997,), (1395.42,), (2831.54,), (2552.7000000000003,), (3390.48,), (3644.8,), (3344.0,), (3375.84,), (2097.6000000000004,), (4373.53,), (2484.0,), (4039.2000000000003,), (1432.3400000000001,), (3941.0299999999997,), (3081.32,), (1591.52,), (2694.52,), (2618.12,), (1623.51,), (2279.16,), (925.97,), (1064.3400000000001,), (2268.9500000000003,), (1249.5,), (2056.7799999999997,))", "rowcount": 34, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 141, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 142, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((65, 'Handji Gifts& Co'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((65, 'Handji Gifts& Co'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 143, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((99,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((99,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 144, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3638.630243902439,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3638.630243902439,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 145, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 146, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 147, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('24, place Kl\u00e9ber', None, '88.60.1555'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('24, place Kl\u00e9ber', None, '88.60.1555'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 148, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((datetime.date(2005, 4, 8),))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 4: WHERE DATE(T2.orderDate) = '2005-04-08' OR DATE(T2.orderDate) = '2005-04-10'\nORDER BY T1.quantityOrdered * T1.priceEach DESC\nLIMIT 1;...\n              ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 149, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT COUNT(CASE WHEN JULIANDAY(t1.shippeddate) - JULIANDAY(t...\n                               ^", "exec_able": false}}, "TP": 0, "FP": 5, "FN": 2}
{"sql_id": 150, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Euro+ Shopping Channel',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Euro+ Shopping Channel',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 151, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.17951149440110425,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.17951149440110425,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 152, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 153, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('2005', 6), ('2003', 15), ('2004', 21))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('2003', 15), ('2004', 21), ('2005', 6))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 154, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('1992 Ferrari 360 Spider red', 624), ('1964 Mercedes Tour Bus', 384), ('1936 Mercedes-Benz 500K Special Roadster', 381))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('1992 Ferrari 360 Spider red', 624), ('1964 Mercedes Tour Bus', 384), ('1936 Mercedes-Benz 500K Special Roadster', 381))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 588, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T2\" does not have a column named \"date\"\nLINE 1: ..._code_no = T2.fbi_code_no WHERE SUBSTR(T2.date, 1, 1) = '1' AND SUBSTR(T2.date...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 591, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((493,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((493,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 593, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Glenn White',), ('Robert A. Rubio',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T2\" does not have a column named \"date\"\nLINE 1: ...t A. Rubio', 'Glenn White') AND SUBSTR(T2.date, 1, 1) = '1' AND SUBSTR(T2.date...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 443, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('12:44:28', '23:09:25', datetime.date(2016, 8, 1)), ('17:34:25', '00:04:25', datetime.date(2016, 8, 2)), ('19:49:25', '13:34:25', datetime.date(2016, 8, 3)), ('04:39:24', '19:54:25', datetime.date(2016, 8, 4)), ('21:34:25', '07:04:24', datetime.date(2016, 8, 5)), ('01:29:25', '17:09:25', datetime.date(2016, 8, 6)), ('15:09:25', '21:54:25', datetime.date(2016, 8, 7)), ('02:29:25', '15:54:24', datetime.date(2016, 8, 8)), ('20:09:26', '01:04:25', datetime.date(2016, 8, 9)), ('02:54:25', '01:04:25', datetime.date(2016, 8, 10)), ('01:24:25', '20:44:25', datetime.date(2016, 8, 11)), ('17:24:25', '11:34:25', datetime.date(2016, 8, 12)), ('16:54:24', '04:19:15', datetime.date(2016, 8, 13)), ('23:59:24', '22:19:25', datetime.date(2016, 8, 14)), ('22:24:25', '03:24:24', datetime.date(2016, 8, 15)), ('01:44:25', '20:04:25', datetime.date(2016, 8, 16)), ('00:19:25', '20:39:25', datetime.date(2016, 8, 17)), ('06:09:27', '23:29:25', datetime.date(2016, 8, 18)), ('23:19:24', '18:09:25', datetime.date(2016, 8, 19)), ('11:39:24', '08:49:25', datetime.date(2016, 8, 20)), ('15:14:24', '04:04:25', datetime.date(2016, 8, 21)), ('19:54:25', '08:49:24', datetime.date(2016, 8, 22)), ('14:29:25', '00:24:25', datetime.date(2016, 8, 23)), ('00:24:25', '22:24:25', datetime.date(2016, 8, 24)), ('07:24:25', '16:29:25', datetime.date(2016, 8, 25)), ('23:19:26', '07:19:25', datetime.date(2016, 8, 26)), ('00:04:26', '14:34:25', datetime.date(2016, 8, 27)), ('12:19:25', '15:39:25', datetime.date(2016, 8, 28)), ('16:14:26', '23:54:25', datetime.date(2016, 8, 29)), ('00:04:25', '06:29:25', datetime.date(2016, 8, 30)), ('17:54:26', '20:49:26', datetime.date(2016, 8, 31)))", "rowcount": 31, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T2\" does not have a column named \"date\"\nLINE 1: ...T1.name = 'WARP' AND STRFTIME('%Y-%m', T2.date) = '2016-08';\n                                                  ^", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 445, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((568.492413380107,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((568.492413380107,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 446, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((257.4744598327145,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((257.4744598327145,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 448, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Novacoin',), ('Mincoin',), ('Freicoin',), ('BitBar',), ('WorldCoin',), ('Digitalcoin',), ('Goldcoin',), ('Argentum',), ('Fastcoin',), ('Megacoin',), ('Infinitecoin',), ('Primecoin',), ('Anoncoin',), ('CasinoCoin',), ('Bullion',), ('Emerald Crypto',), ('Quark',), ('Zetacoin',), ('SecureCoin',), ('Sexcoin',), ('TagCoin',), ('I0Coin',), ('FLO',), ('Joulecoin',), ('Datacoin',), ('BetaCoin',), ('GrandCoin',), ('Deutsche eMark',), ('NetCoin',), ('HoboNickels',), ('Tigercoin',), ('Orbitcoin',), ('Catcoin',), ('RonPaulCoin',), ('Mooncoin',), ('Dimecoin',), ('RedCoin',), ('TeslaCoin',), ('NobleCoin',), ('Nyancoin',), ('UltraCoin',), ('PotCoin',), ('Blakecoin',), ('HunterCoin',), ('CacheCoin',), ('Aricoin',), ('Auroracoin',), ('Pesetacoin',), ('Marscoin',), ('Cashcoin',), ('Pandacoin',), ('MAZA',), ('Uniform Fiscal Object',), ('LiteBar',), ('Photon',), ('Myriad',), ('DNotes',), ('Skeincoin',), ('Einsteinium',), ('Bitcoin Scrypt',), ('Coin(O)',), ('FlutterCoin',), ('OctoCoin',), ('e-Gulden',), ('PLNcoin',), ('AsiaCoin',), ('PopularCoin',), ('CannaCoin',), ('BlueCoin',), ('Canada eCoin',), ('Guncoin',), ('Pinkcoin',), ('Energycoin',), ('VeriCoin',), ('TEKcoin',), ('Litecoin Plus',), ('UnbreakableCoin',), ('CryptCoin',), ('SuperCoin',), ('BoostCoin',), ('Hyper',), ('BitQuark',), ('CloakCoin',), ('Fantomcoin',), ('ArtByte',), ('Donationcoin',), ('Piggycoin',), ('Startcoin',), ('Boolberry',), ('SHACoin',), ('BritCoin',), ('Quatloo',), ('Viacoin',), ('Triangles',), ('I/O Coin',), ('Cryptonite',), ('Carboncoin',), ('Titcoin',), ('Virtacoin',), ('Joincoin',), ('Bitmark',), ('Halcyon',), ('Donu',), ('Emercoin',), ('NativeCoin',), ('BunnyCoin',), ('Acoin',), ('FoldingCoin',), ('bitCNY',), ('Sterlingcoin',), ('Magi',), ('ExclusiveCoin',), ('Trollcoin',), ('GlobalBoost-Y',), ('Prime-XI',), ('Dashcoin',), ('Sativacoin',), ('SpreadCoin',), ('Blocknet',), ('Gapcoin',), ('GCN Coin',), ('Bitcoin Fast',), ('PayCoin',), ('Unitus',), ('IncaKoin',), ('SmileyCoin',), ('Bean Cash',), ('Wild Beast Block',), ('Gridcoin',), ('Sharkcoin',), ('SongCoin',), ('Crave',), ('Pura',), ('Neutron',), ('Xaurum',), ('Californium',), ('Advanced Internet Blocks',), ('Universal Currency',), ('Bata',), ('FujiCoin',), ('EuropeCoin',), ('The Cypherfunks',), ('GravityCoin',), ('IrishCoin',), ('Bitzeny',), ('BowsCoin',), ('AnarchistsPrime',), ('CompuCoin',), ('Hellenic Coin',), ('TransferCoin',), ('AmsterdamCoin',), ('Eurocoin',), ('VectorAI',), ('SpaceCoin',), ('Pakcoin',), ('Influxcoin',), ('Expanse',), ('Swing',), ('ParallelCoin',), ('Save and Gain',), ('Elite',), ('SOILcoin',), ('Adzcoin',), ('RussiaCoin',), ('EverGreenCoin',), ('Creditbit',), ('Litecred',), ('Yocoin',), ('Francs',), ('Evil Coin',), ('Asiadigicoin',), ('TrumpCoin',), ('C-Bit',), ('Independent Money System',), ('HOdlcoin',), ('BERNcash',), ('DigixDAO',), ('Fantasy Cash',), ('FuzzBalls',), ('HiCoin',), ('Zurcoin',), ('SixEleven',), ('2GIVE',), ('PlatinumBAR',), ('MarteXcoin',), ('Nullex',), ('Citadel',), ('RevolverCoin',), ('GoldBlocks',), ('Breakout',), ('Debitcoin',), ('Comet',), ('Rise',), ('LBRY Credits',), ('PutinCoin',), ('Syndicate',), ('Cryptojacks',), ('Steem Dollars',), ('Ardor',), ('808Coin',), ('VapersCoin',), ('TajCoin',), ('Experience Points',), ('B3Coin',), ('Neo',), ('Bitcloud',), ('Zayedcoin',), ('Tao',), ('Tellurion',), ('Dollarcoin',), ('MustangCoin',), ('PROUD Money',), ('Sequence',), ('Atomic Coin',), ('JobsCoin',), ('Sakuracoin',), ('Cubits',), ('BipCoin',), ('Zoin',), ('Lykke',), ('Golem',), ('Internet of People',), ('Nexium',), ('Vault Coin',), ('Pabyosi Coin (Special)',), ('Alias',), ('BenjiRolls',), ('iBank',), ('FirstCoin',), ('Solarflarecoin',), ('Eryllium',), ('Elysium',), ('Centurion',), ('Marijuanacoin',), ('PRCoin',), ('Argus',), ('MarxCoin',), ('Pascal Lite',), ('MiloCoin',), ('Musicoin',), ('ZSEcoin',), ('Impact',), ('DubaiCoin',), ('Darsek',), ('Matchpool',), ('Ultimate Secure Cash',), ('BlazerCoin',), ('HappyPay',), ('Coinonat',), ('Lunyr',), ('Qtum',), ('Aeternity',), ('Metaverse ETP',), ('MobileGo',), ('Neuro',), ('More Coin',), ('TenX',), ('Ecobit',), ('Gas',), ('Santiment Network Token',), ('CVCoin',), ('SkinCoin',), ('OracleChain',), ('Shadow Token',), ('BlockCAT',), ('Nebulas',), ('Achain',), ('Loopring',), ('Monetha',), ('Agrello',), ('Elixir',), ('VIBE',), ('Voise',), ('RChain',), ('FLiK',), ('BridgeCoin',), ('ALIS',), ('HelloGold',), ('Enigma',), ('Change',), ('Bitcoin Gold',), ('KuCoin Token',), ('EXRNchain',), ('LATOKEN',), ('NULS',), ('JavaScript Token',), ('Etherparty',), ('Revain',), ('Electroneum',), ('Raiden Network Token',), ('Ties.DB',), ('Upfiring',), ('bitJob',), ('Viuly',), ('EncrypGen',), ('Bodhi',), ('Quantstamp',), ('QASH',), ('Bitcoin Diamond',), ('Divi Exchange Token',), ('Flixxo',), ('Presearch',), ('CyberMiles',), ('IoT Chain',), ('Wabi',), ('Verify',), ('Uquid Coin',), ('ProChain',), ('Ignis',), ('Playkey',), ('Datum',), ('LockTrip',), ('Genaro Network',), ('aelf',), ('Bibox Token',), ('Single Collateral DAI ',), ('SophiaTX',), ('HTMLCOIN',), ('Utrust',), ('AppCoins',), ('Mixin',), ('GameChain System',), ('Coinlancer',), ('AI Doctor',), ('Show',), ('United Traders Token',), ('Spectre.ai Dividend Token',), ('Vezt',), ('ugChain',), ('Bottos',), ('Selfkey',), ('MOAC',), ('IOST',), ('Nitro',), ('Aurora DAO',), ('SingularityNET',), ('Scry.info',), ('Mobius',), ('Hydro Protocol',), ('Maggie',), ('Trinity Network Credit',), ('DATA',), ('Matrix AI Network',), ('CoinFi',), ('Zeepin',), ('CPChain',), ('Zilla',), ('EtherSportz',), ('LOCIcoin',), ('Dether',), ('Fusion',), ('Neurotoken',), ('Concensum',), ('Insights Network',), ('Ravencoin',), ('Sharpe Platform Token',), ('Loom Network',), ('Noah Coin',), ('Mithril',), ('PolySwarm',), ('Stakenet',), ('U Network',), ('AdHive',), ('DeviantCoin',), ('Auctus',), ('Zebi Token',), ('Nexo',), ('Hydro',), ('Sharder',), ('Digitex',), ('Plian',), ('XMax',), ('Project Pai',), ('Karatgold Coin',), ('BitZ Token',), ('Everipedia',), ('Blue Whale EXchange',), ('NIX',), ('Apollo Currency',), ('Vexanium',), ('Maximine Coin',), ('Birake',), ('Gemini Dollar',), ('Paxos Standard',), ('FREE Coin',), ('USD Coin',), ('MMOCoin',), ('Italian Lira',), ('SINOVATE',), ('CWV Chain',), ('MXC',), ('Aergo',), ('HedgeTrade',), ('RSK Infrastructure Framework',), ('v.systems',), ('Grin',), ('Stably USD',), ('SOLVE',), ('PlayChip',), ('Constant',), ('Fetch.ai',), ('BORA',), ('Flexacoin',), ('Theta Fuel',), ('Japan Content Token',), ('Nash',), ('OTOCASH',), ('Locus Chain',), ('Newton',), ('ThoreNext',), ('Diamond Platform Token',), ('Artfinity',), ('Origo',), ('StakeCubeCoin',), ('Bitsdaq',), ('EOSDT',), ('Contentos',), ('MovieBloc',), ('MX Token',), ('USDK',), ('Silverway',), ('Dusk Network',), ('ChainX',), ('Oasis City',), ('GateToken',), ('Cocos-BCX',), ('BHEX Token',), ('BitForex Token',), ('Ladder Network Token',), ('Netbox Coin',), ('VideoCoin',), ('Streamit Coin',), ('MineBee',), ('Lightyears',), ('NuCypher',), ('1irstGold',), ('Ultragate',), ('Beyondcoin',), ('Waves Enterprise',), ('Bitcoin Vault',), ('Jarvis Network',), ('Ghost',), ('Xaya',), ('DXdao',), ('Secret',), ('Simple Software Solutions',), ('MATH',), ('Orion Protocol',), ('Kadena',), ('Sylo',), ('renBTC',), ('Sora',), ('sDEFI',), ('MCDEX',), ('Blocery',), ('ECOMI',), ('Kulupu',), ('Hakka.Finance',), ('UniLayer',), ('NFT',), ('YAMv2',), ('Lien',), ('Falconswap',), ('Polkaswap',), ('DataHighway',), ('BUILD Finance',), ('REVV',), ('Empty Set Dollar',), ('Wing',), ('Percent',), ('Defi Shopping Stake',), ('Rotten',), ('yAxis',), ('DeFiner',), ('DerivaDAO',), ('Nsure.Network',), ('Celo Dollar',), ('cVault.finance',), ('Persistence',), ('Polyient Games Governance Token',), ('Wrapped Origin Axie',), ('CoFiX',), ('Atari Token',), ('Value Liquidity',), ('UniLend',), ('DAOFi',), ('Akash Network',), ('Pepemon Pepeballs',), ('ETG Finance',), ('UnFederalReserve',), ('CryptoFrog.Finance',), ('Gameswap',), ('Unifi Protocol DAO',), ('88mph',), ('Vanilla Network',), ('Pancake Bunny',), ('Bifrost (BFC)',), ('Zoracles',), ('Plasma Finance',), ('Honey',), ('Unit Protocol Duck',), ('AnRKey X',), ('SafePal',), ('MAPS',), ('COVER Protocol',), ('Shabu Shabu Finance',), ('BSCEX',), ('NFTX',), ('ZKSwap',), ('CheeseSwap',), ('Poolz Finance',), ('Paralink Network',), ('Mdex',), ('Onooks',), ('Umbrella Network',), ('Lotto',), ('APYSwap',), ('Goose Finance',), ('Premia',), ('DAOventures',), ('Midas Dollar',), ('Vesper',), ('AC Milan Fan Token',), ('RamenSwap',), ('Polkacity',), ('PRCY Coin',), ('SOTA Finance',), ('Wault Finance (OLD)',), ('FileStar',), ('xToken',), ('Bounce Token',), ('BSCPAD',), ('Vortex Defi',), ('Konomi Network',), ('Playcent',), ('Space Cow Boy',), ('Illuvium',), ('Inverse Finance',), ('Belt',), ('LABS Group',), ('Splyt',), ('Oracle Top 5 Tokens Index',), ('StakerDAO',), ('Ellipsis',), ('Uhive',), ('Scaleswap',), ('WHEAT Token',), ('UniFarm',), ('Refinable',), ('Chainswap',), ('DAIN',), ('Vulcan Forged PYR',), ('Crowny',), ('Phuture',), ('Synthetify',), ('Wault [New]',), ('Smaugs NFT',), ('ETHERLAND',), ('Cubiex Power',), ('MemePad',), ('CrossFi',), ('Coldstack',), ('JaguarSwap',), ('DinoExchange',), ('SingularityDAO',), ('Don-key',), ('My DeFi Pet',), ('Frenchie Network',), ('Sleepy Sloth Finance',), ('Bakery Tools',), ('xxxNifty',), ('Oviex',), ('YooShi',), ('HODL',), ('Netvrk',), ('Dotmoovs',), ('Lean',), ('Elk Finance',), ('Rabbit Finance',), ('Vega Protocol',), ('Convex CRV',), ('EthereumPay',), ('Alpha Impact',), ('Dina',), ('Waivlength',), ('Whale Fall',), ('Pornstar',), ('AirNFTs',), ('PureFi Protocol',))", "rowcount": 589, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Novacoin',), ('Mincoin',), ('Freicoin',), ('BitBar',), ('WorldCoin',), ('Digitalcoin',), ('Goldcoin',), ('Argentum',), ('Fastcoin',), ('Megacoin',), ('Infinitecoin',), ('Primecoin',), ('Anoncoin',), ('CasinoCoin',), ('Bullion',), ('Emerald Crypto',), ('Quark',), ('Zetacoin',), ('SecureCoin',), ('Sexcoin',), ('TagCoin',), ('I0Coin',), ('FLO',), ('Joulecoin',), ('Datacoin',), ('BetaCoin',), ('GrandCoin',), ('Deutsche eMark',), ('NetCoin',), ('HoboNickels',), ('Tigercoin',), ('Orbitcoin',), ('Catcoin',), ('RonPaulCoin',), ('Mooncoin',), ('Dimecoin',), ('RedCoin',), ('TeslaCoin',), ('NobleCoin',), ('Nyancoin',), ('UltraCoin',), ('PotCoin',), ('Blakecoin',), ('HunterCoin',), ('CacheCoin',), ('Aricoin',), ('Auroracoin',), ('Pesetacoin',), ('Marscoin',), ('Cashcoin',), ('Pandacoin',), ('MAZA',), ('Uniform Fiscal Object',), ('LiteBar',), ('Photon',), ('Myriad',), ('DNotes',), ('Skeincoin',), ('Einsteinium',), ('Bitcoin Scrypt',), ('Coin(O)',), ('FlutterCoin',), ('OctoCoin',), ('e-Gulden',), ('PLNcoin',), ('AsiaCoin',), ('PopularCoin',), ('CannaCoin',), ('BlueCoin',), ('Canada eCoin',), ('Guncoin',), ('Pinkcoin',), ('Energycoin',), ('VeriCoin',), ('TEKcoin',), ('Litecoin Plus',), ('UnbreakableCoin',), ('CryptCoin',), ('SuperCoin',), ('BoostCoin',), ('Hyper',), ('BitQuark',), ('CloakCoin',), ('Fantomcoin',), ('ArtByte',), ('Donationcoin',), ('Piggycoin',), ('Startcoin',), ('Boolberry',), ('SHACoin',), ('BritCoin',), ('Quatloo',), ('Viacoin',), ('Triangles',), ('I/O Coin',), ('Cryptonite',), ('Carboncoin',), ('Titcoin',), ('Virtacoin',), ('Joincoin',), ('Bitmark',), ('Halcyon',), ('Donu',), ('Emercoin',), ('NativeCoin',), ('BunnyCoin',), ('Acoin',), ('FoldingCoin',), ('bitCNY',), ('Sterlingcoin',), ('Magi',), ('ExclusiveCoin',), ('Trollcoin',), ('GlobalBoost-Y',), ('Prime-XI',), ('Dashcoin',), ('Sativacoin',), ('SpreadCoin',), ('Blocknet',), ('Gapcoin',), ('GCN Coin',), ('Bitcoin Fast',), ('PayCoin',), ('Unitus',), ('IncaKoin',), ('SmileyCoin',), ('Bean Cash',), ('Wild Beast Block',), ('Gridcoin',), ('Sharkcoin',), ('SongCoin',), ('Crave',), ('Pura',), ('Neutron',), ('Xaurum',), ('Californium',), ('Advanced Internet Blocks',), ('Universal Currency',), ('Bata',), ('FujiCoin',), ('EuropeCoin',), ('The Cypherfunks',), ('GravityCoin',), ('IrishCoin',), ('Bitzeny',), ('BowsCoin',), ('AnarchistsPrime',), ('CompuCoin',), ('Hellenic Coin',), ('TransferCoin',), ('AmsterdamCoin',), ('Eurocoin',), ('VectorAI',), ('SpaceCoin',), ('Pakcoin',), ('Influxcoin',), ('Expanse',), ('Swing',), ('ParallelCoin',), ('Save and Gain',), ('Elite',), ('SOILcoin',), ('Adzcoin',), ('RussiaCoin',), ('EverGreenCoin',), ('Creditbit',), ('Litecred',), ('Yocoin',), ('Francs',), ('Evil Coin',), ('Asiadigicoin',), ('TrumpCoin',), ('C-Bit',), ('Independent Money System',), ('HOdlcoin',), ('BERNcash',), ('DigixDAO',), ('Fantasy Cash',), ('FuzzBalls',), ('HiCoin',), ('Zurcoin',), ('SixEleven',), ('2GIVE',), ('PlatinumBAR',), ('MarteXcoin',), ('Nullex',), ('Citadel',), ('RevolverCoin',), ('GoldBlocks',), ('Breakout',), ('Debitcoin',), ('Comet',), ('Rise',), ('LBRY Credits',), ('PutinCoin',), ('Syndicate',), ('Cryptojacks',), ('Steem Dollars',), ('Ardor',), ('808Coin',), ('VapersCoin',), ('TajCoin',), ('Experience Points',), ('B3Coin',), ('Neo',), ('Bitcloud',), ('Zayedcoin',), ('Tao',), ('Tellurion',), ('Dollarcoin',), ('MustangCoin',), ('PROUD Money',), ('Sequence',), ('Atomic Coin',), ('JobsCoin',), ('Sakuracoin',), ('Cubits',), ('BipCoin',), ('Zoin',), ('Lykke',), ('Golem',), ('Internet of People',), ('Nexium',), ('Vault Coin',), ('Pabyosi Coin (Special)',), ('Alias',), ('BenjiRolls',), ('iBank',), ('FirstCoin',), ('Solarflarecoin',), ('Eryllium',), ('Elysium',), ('Centurion',), ('Marijuanacoin',), ('PRCoin',), ('Argus',), ('MarxCoin',), ('Pascal Lite',), ('MiloCoin',), ('Musicoin',), ('ZSEcoin',), ('Impact',), ('DubaiCoin',), ('Darsek',), ('Matchpool',), ('Ultimate Secure Cash',), ('BlazerCoin',), ('HappyPay',), ('Coinonat',), ('Lunyr',), ('Qtum',), ('Aeternity',), ('Metaverse ETP',), ('MobileGo',), ('Neuro',), ('More Coin',), ('TenX',), ('Ecobit',), ('Gas',), ('Santiment Network Token',), ('CVCoin',), ('SkinCoin',), ('OracleChain',), ('Shadow Token',), ('BlockCAT',), ('Nebulas',), ('Achain',), ('Loopring',), ('Monetha',), ('Agrello',), ('Elixir',), ('VIBE',), ('Voise',), ('RChain',), ('FLiK',), ('BridgeCoin',), ('ALIS',), ('HelloGold',), ('Enigma',), ('Change',), ('Bitcoin Gold',), ('KuCoin Token',), ('EXRNchain',), ('LATOKEN',), ('NULS',), ('JavaScript Token',), ('Etherparty',), ('Revain',), ('Electroneum',), ('Raiden Network Token',), ('Ties.DB',), ('Upfiring',), ('bitJob',), ('Viuly',), ('EncrypGen',), ('Bodhi',), ('Quantstamp',), ('QASH',), ('Bitcoin Diamond',), ('Divi Exchange Token',), ('Flixxo',), ('Presearch',), ('CyberMiles',), ('IoT Chain',), ('Wabi',), ('Verify',), ('Uquid Coin',), ('ProChain',), ('Ignis',), ('Playkey',), ('Datum',), ('LockTrip',), ('Genaro Network',), ('aelf',), ('Bibox Token',), ('Single Collateral DAI ',), ('SophiaTX',), ('HTMLCOIN',), ('Utrust',), ('AppCoins',), ('Mixin',), ('GameChain System',), ('Coinlancer',), ('AI Doctor',), ('Show',), ('United Traders Token',), ('Spectre.ai Dividend Token',), ('Vezt',), ('ugChain',), ('Bottos',), ('Selfkey',), ('MOAC',), ('IOST',), ('Nitro',), ('Aurora DAO',), ('SingularityNET',), ('Scry.info',), ('Mobius',), ('Hydro Protocol',), ('Maggie',), ('Trinity Network Credit',), ('DATA',), ('Matrix AI Network',), ('CoinFi',), ('Zeepin',), ('CPChain',), ('Zilla',), ('EtherSportz',), ('LOCIcoin',), ('Dether',), ('Fusion',), ('Neurotoken',), ('Concensum',), ('Insights Network',), ('Ravencoin',), ('Sharpe Platform Token',), ('Loom Network',), ('Noah Coin',), ('Mithril',), ('PolySwarm',), ('Stakenet',), ('U Network',), ('AdHive',), ('DeviantCoin',), ('Auctus',), ('Zebi Token',), ('Nexo',), ('Hydro',), ('Sharder',), ('Digitex',), ('Plian',), ('XMax',), ('Project Pai',), ('Karatgold Coin',), ('BitZ Token',), ('Everipedia',), ('Blue Whale EXchange',), ('NIX',), ('Apollo Currency',), ('Vexanium',), ('Maximine Coin',), ('Birake',), ('Gemini Dollar',), ('Paxos Standard',), ('FREE Coin',), ('USD Coin',), ('MMOCoin',), ('Italian Lira',), ('SINOVATE',), ('CWV Chain',), ('MXC',), ('Aergo',), ('HedgeTrade',), ('RSK Infrastructure Framework',), ('v.systems',), ('Grin',), ('Stably USD',), ('SOLVE',), ('PlayChip',), ('Constant',), ('Fetch.ai',), ('BORA',), ('Flexacoin',), ('Theta Fuel',), ('Japan Content Token',), ('Nash',), ('OTOCASH',), ('Locus Chain',), ('Newton',), ('ThoreNext',), ('Diamond Platform Token',), ('Artfinity',), ('Origo',), ('StakeCubeCoin',), ('Bitsdaq',), ('EOSDT',), ('Contentos',), ('MovieBloc',), ('MX Token',), ('USDK',), ('Silverway',), ('Dusk Network',), ('ChainX',), ('Oasis City',), ('GateToken',), ('Cocos-BCX',), ('BHEX Token',), ('BitForex Token',), ('Ladder Network Token',), ('Netbox Coin',), ('VideoCoin',), ('Streamit Coin',), ('MineBee',), ('Lightyears',), ('NuCypher',), ('1irstGold',), ('Ultragate',), ('Beyondcoin',), ('Waves Enterprise',), ('Bitcoin Vault',), ('Jarvis Network',), ('Ghost',), ('Xaya',), ('DXdao',), ('Secret',), ('Simple Software Solutions',), ('MATH',), ('Orion Protocol',), ('Kadena',), ('Sylo',), ('renBTC',), ('Sora',), ('sDEFI',), ('MCDEX',), ('Blocery',), ('ECOMI',), ('Kulupu',), ('Hakka.Finance',), ('UniLayer',), ('NFT',), ('YAMv2',), ('Lien',), ('Falconswap',), ('Polkaswap',), ('DataHighway',), ('BUILD Finance',), ('REVV',), ('Empty Set Dollar',), ('Wing',), ('Percent',), ('Defi Shopping Stake',), ('Rotten',), ('yAxis',), ('DeFiner',), ('DerivaDAO',), ('Nsure.Network',), ('Celo Dollar',), ('cVault.finance',), ('Persistence',), ('Polyient Games Governance Token',), ('Wrapped Origin Axie',), ('CoFiX',), ('Atari Token',), ('Value Liquidity',), ('UniLend',), ('DAOFi',), ('Akash Network',), ('Pepemon Pepeballs',), ('ETG Finance',), ('UnFederalReserve',), ('CryptoFrog.Finance',), ('Gameswap',), ('Unifi Protocol DAO',), ('88mph',), ('Vanilla Network',), ('Pancake Bunny',), ('Bifrost (BFC)',), ('Zoracles',), ('Plasma Finance',), ('Honey',), ('Unit Protocol Duck',), ('AnRKey X',), ('SafePal',), ('MAPS',), ('COVER Protocol',), ('Shabu Shabu Finance',), ('BSCEX',), ('NFTX',), ('ZKSwap',), ('CheeseSwap',), ('Poolz Finance',), ('Paralink Network',), ('Mdex',), ('Onooks',), ('Umbrella Network',), ('Lotto',), ('APYSwap',), ('Goose Finance',), ('Premia',), ('DAOventures',), ('Midas Dollar',), ('Vesper',), ('AC Milan Fan Token',), ('RamenSwap',), ('Polkacity',), ('PRCY Coin',), ('SOTA Finance',), ('Wault Finance (OLD)',), ('FileStar',), ('xToken',), ('Bounce Token',), ('BSCPAD',), ('Vortex Defi',), ('Konomi Network',), ('Playcent',), ('Space Cow Boy',), ('Illuvium',), ('Inverse Finance',), ('Belt',), ('LABS Group',), ('Splyt',), ('Oracle Top 5 Tokens Index',), ('StakerDAO',), ('Ellipsis',), ('Uhive',), ('Scaleswap',), ('WHEAT Token',), ('UniFarm',), ('Refinable',), ('Chainswap',), ('DAIN',), ('Vulcan Forged PYR',), ('Crowny',), ('Phuture',), ('Synthetify',), ('Wault [New]',), ('Smaugs NFT',), ('ETHERLAND',), ('Cubiex Power',), ('MemePad',), ('CrossFi',), ('Coldstack',), ('JaguarSwap',), ('DinoExchange',), ('SingularityDAO',), ('Don-key',), ('My DeFi Pet',), ('Frenchie Network',), ('Sleepy Sloth Finance',), ('Bakery Tools',), ('xxxNifty',), ('Oviex',), ('YooShi',), ('HODL',), ('Netvrk',), ('Dotmoovs',), ('Lean',), ('Elk Finance',), ('Rabbit Finance',), ('Vega Protocol',), ('Convex CRV',), ('EthereumPay',), ('Alpha Impact',), ('Dina',), ('Waivlength',), ('Whale Fall',), ('Pornstar',), ('AirNFTs',), ('PureFi Protocol',))", "rowcount": 589, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 449, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Freicoin',), ('CHNCoin',), ('BBQCoin',), ('Ixcoin',), ('BitBar',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',))", "rowcount": 28, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Freicoin',), ('CHNCoin',), ('BBQCoin',), ('Ixcoin',), ('BitBar',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',), ('CHNCoin',))", "rowcount": 28, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 450, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 447, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('9',), ('Feathercoin',), ('Mincoin',), ('Freicoin',), ('CHNCoin',), ('BBQCoin',), ('Ixcoin',), ('BitBar',), ('Bytecoin',), ('WorldCoin',))", "rowcount": 10, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Could not choose a best candidate function for the function call \"strftime(STRING_LITERAL, VARCHAR)\". In order to select one, please add explicit type casts.\n\tCandidate functions:\n\tstrftime(TIMESTAMP, VARCHAR) -> VARCHAR\n\tstrftime(TIMESTAMP_NS, VARCHAR) -> VARCHAR\n\tstrftime(TIMESTAMP WITH TIME ZONE, VARCHAR) -> VARCHAR\n\tstrftime(DATE, VARCHAR) -> VARCHAR\n\nLINE 1: ...LECT COUNT(id) AS num FROM coins WHERE STRFTIME('%Y-%m', date_added) = '2013-0...\n                                                  ^", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 609, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((31.81818199157715,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((31.818181818181817,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 610, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.7037036418914795,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3.7037037037037037,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 309, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 311, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((\"Ev'rybody Wants to Be a Cat\",))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((\"Ev'rybody Wants to Be a Cat\",))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 4, "FN": 2}
{"sql_id": 312, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('101 Dalmatians',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('101 Dalmatians',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 313, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 314, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 315, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 316, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Gary Trousdale',), ('Mark Dindal',), ('Barry Cook',), ('Chris Buck',), ('Roger Allers',), ('Ron Clements',), ('Mike Gabriel',), ('Ralph Zondag',), ('Wolfgang Reitherman',))", "rowcount": 9, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Mike Gabriel',), ('Gary Trousdale',), ('Mark Dindal',), ('Ralph Zondag',), ('Wolfgang Reitherman',), ('Roger Allers',), ('Ron Clements',), ('Barry Cook',), ('Chris Buck',))", "rowcount": 9, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 317, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 319, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Moana',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 322, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Star Wars Ep. VII: The Force Awakens', 1.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Star Wars Ep. VII: The Force Awakens', 1.0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 323, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('The Many Adventures of Winnie the Pooh', 'Winnie the Pooh', 'Winnie the Pooh'), ('The Rescuers', 'Bernard and Miss Bianca', 'The Journey'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('The Many Adventures of Winnie the Pooh', 'Winnie the Pooh', 'Winnie the Pooh'), ('The Rescuers', 'Bernard and Miss Bianca', 'The Journey'))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 325, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Roger Allers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Roger Allers',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 326, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 328, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 329, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((12,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 330, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Saludos Amigos',), ('Make Mine Music',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Saludos Amigos',), ('Make Mine Music',))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 332, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Circle of Life',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Circle of Life',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 335, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Dinosaur',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 336, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 338, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('The Avengers',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('The Avengers',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 339, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Pinocchio',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Pinocchio',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 342, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1.933452309817398,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1.933452309817398,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 247, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('f',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('f',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 595, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((523,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((523,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 596, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((\"J.B.'S PLACE\",), ('Just Wonton',), (\"Ben & Jerry's\",), ('CORSAGNA',), ('SUBWAY',), ('PACIFIC CATCH',), ('HAAGEN-DAZS #561',), ('Yuet Lee Restaurant',), ('Franchino',), (\"Loi's Vietnamese Restaurant\",), ('Caffe Del Sole',), ('BEN WAH RESTAURANT',), ('MOZZARELLA DI BUFALA PIZZERIA II',), ('MARIPOSA HUNTERS POINT YACHT CLUB',), ('B & J QUARTER POUNDER BURGERS',), ('MING TAI WUN TUN NOODLE, INC.',), ('PORK STORE CAFE',), ('UNIVERSAL CAFE',), ('Zona Rosa',), (\"ORPHAN ANDY'S\",), ('Beanery',), ('EXIT THEATRE',), ('La Copa Loca',), (\"ZEKE'S DIAMOND BAR\",), ('Cafe Niebaum Coppola',), ('Asia Chinese Food #2',), ('Bistro Burger',), ('Emporio Rulli Il Caffe at Union Square',), ('ATLAS CAFE',), ('TAL-Y-TARA TEA & POLO SHOPPE',), ('The Old Ship Saloon',), (\"Ma's Dim Sum & Cafe\",), ('GEARY STREET BELLA PIZZA',), ('TARAVAL OKAZU YA',), ('Han Bat Korean Restaurant',), ('T C PASTRY',), ('GENEVA STEAK HOUSE',), (\"Elaine's Kitchen\",), ('CHEESE STEAK SHOP, THE',), ('ZUSHI-PUZZLE',), (\"NOAH'S BAGELS\",), ('KENTUCKY FRIED CHICKEN #50',), ('KEZAR PUB',), ('BULLSHEAD RESTAURANT',), ('MARTHA & BROS. COFFEE CO',), ('OMNI S.F. Hotel - 2nd Floor Pantry',), (\"DINO'S UNCLE VITO\",), ('Silver Star Cafe and Deli',), ('COURTYARD BY MARRIOTT-STAFF KITCHEN',), ('BEANERY INC.',), ('REINA RESTAURANT',), ('Rose Pistola',), ('Garden of Eden',), (\"Mara's\",), ('Quickly',), ('A-1 BAKERY',), ('SUBWAY SANDWICHES & SALADS',), ('Golden Coffee',), ('BRAZEN HEAD RESTAURANT',), ('Kitchen Kura',), ('Hunan Restaurant',), (\"Courtyard by Marriott at Fisherman's Wharf\",), ('DELFINA RESTAURANT',), (\"MARCELLO'S PIZZA\",), ('VANIDA THAI KITCHEN',), (\"The Sunset's Best Seafood Restaurant\",), ('POMELO ON CHURCH',), ('JAVA SUPREME',), ('NORTH BEACH PIZZA',), ('Cordon Bleu',), ('BAZAAR CAFE',), ('A2 CAFE',), (\"CITY'S CHOICE\",), (\"Uncle Vito's Pizza\",), ('Zazie',), ('COURTYARD BY MARRIOTT-RESTAURANT',), ('Lanna Restaurant',), ('KFC/TACO BELL',), ('Academy Bar & Kitchen',), ('Nob Hill Cafe',), (\"Murphy's\",), ('Allstar Donuts',), ('S.F. Pizza',), ('BURMA SUPERSTAR RESTAURANT',), ('Hook a Cook',), ('SANPPO RESTAURANT',), ('Amarena',), ('Street Restaurant',), ('Starbucks Coffee Company',), (\"Peet's Coffee & Tea\",), ('HOWARD STREET COFFEE ROASTERY CAFE',), ('BISTRO AIX',), ('Tiramisu Kitchen',), ('CONSTANS GROCERY',), ('PROGRESSIVE GROUNDS',), ('YUKOL PLACE THAI CUISINE',), ('The Posh Bagel',), ('RINCONSITO SALVADORENO',), ('SF MARRIOTT HOTEL PANTRY 4/F',), ('Orale Orale Inc',), (\"Mo's Grill\",), (\"MELISA'S CHINESE CUISINE\",), ('ASHOKA Indian Cuisine',), ('Cafe Bellini',), ('APERTO RESTAURANT',), ('BAY VIEW BOAT CLUB',), ('LA SANTANECA',), (\"BABY'S EATERY AND PALABOK\",), ('Molinari Delicatessen',), ('Estia Restaurant',), ('BUFFALO BURGERS RESTAURANT',), ('HEUNG YUEN RESTAURANT',), (\"PEET'S COFFEES & TEAS\",), ('Starbucks Coffee Company #6765',), ('CLUB WAZIEMA',), ('AT&T - FIELD CLUB KITCHEN [145082]',), ('TANPOPO',), ('LE ZINC',), ('NORDSTROM CAFE BISTRO',), ('PRIMO PATIO CAFE',), ('New Lun Ting Cafe, Inc',), ('Spiazzo',), ('Bocadillos',), ('QUEEN ANNE HOTEL',), ('ZA',), ('Zarzuela',), ('ATAMI SUSHI BAR & GRILL',), ('A La Turca',), ('HARD KNOX CAFE',), ('PANDA EXPRESS',), ('CAFE MUMS',), ('BARBARY COAST PASTRY & COFFEE',), (\"CHARLIE'S DELI CAFE\",), ('OMNI S.F. Hotel - Employee Cafeteria',), ('Broadway Dim Sum',), ('SECRET GARDEN TEA HOUSE',), ('RADIO HABANA',), ('BAYSIDE COFFEE SHOP',), ('Caffe Puccini',), ('Toy Boat Dessert Cafe',), ('GORDO TAQUERIA #2',), ('HOUSE OF HUNAN',), ('Michelangelo Caffe',), ('The Stinking Rose',), ('Taqueria Zorro',), ('Silverhat Bar, Inc',), ('Caffe Trieste',), ('CAJUN PACIFIC',), (\"MUFFIN'S MUFFIN\",), ('TACO LOS ALTOS',), ('BURRITO EXPRESS',), ('LOS PLANES DE RENDEROS',), ('SHANGRILA VEGETARIAN REST',), ('GOLDEN ISLAND CAFE',), ('BEAN THERE COFFEE & TEA',), ('HOANG DAT COFFEE SHOP',), ('Star Bagels',), ('Boudin Petit Cafe',), ('THANH THANH',), ('SAN MIGUEL RESTAURANT #2',), ('SWEET DELIGHT BAKERY',), ('Waterfront Bakery',), ('Starbucks Coffee',), ('BURGERMEISTER',), (\"WORKING GIRLS' CAFE III\",), ('Plouf',), ('Raintree Cafe',), ('RED BALLOON',), ('Dar Bar Pakistani/Indian Cusine',), ('Rogue Ales Public House',), ('Cafe Tiramisu',), ('LINCOLN PARK BAR AND GRILL',), ('Sunrise Deli',), ('KENTUCKY FRIED CHICKEN',), (\"Joanie's Diner Inc.\",), ('Hyde Street Seafood House & Raw Bar, Inc',), ('CAFE LOMBARD',), ('Aux Delices Vietnam',), (\"ART'S CAFE\",), ('STARBUCKS',), ('OMNI S.F. Hotel - 3rd Floor Pantry',), ('Vega',), ('Akikos Sushi',), ('New Moon Restaurant',), ('Gelato Classico Italian Ice',), ('Inga Donuts',), ('Miyako',), (\"Calzone's\",), ('Vieni-Vieni',), ('Il Pollaio',), ('San Francisco Athletic Club',), ('SAN FRANCISCO SOUP COMPANY',), ('EL BURRITO EXPRESS #2',), ('MARINA SUBMARINE',), ('TAQUERIA EL FAROLITO NO. 2',), ('Firenze By Night',), ('Delicious Dim Sum',), ('House of Nanking',), ('Town & Country Club',), ('Cafe Ethiopia',), ('JAVA BEACH CAFE',), ('CREPE EXPRESS',), ('ANCHOR OYSTER BAR INC.',), ('LA TORTILLA',), (\"GASPARE'S PIZZA HOUSE & REST.\",), ('Neiman Marcus On The Square',), (\"Nick's Lighthouse\",), ('LUPA TRATTORIA',), ('Casa Mexicana Restaurant',), ('AXUM',), ('Just For You Cafe Inc.',), ('Osha Thai Noodle Cafe',), (\"Fisherman's Pizzeria Inc [#50]\",), ('Cesario',), ('Cafe Bastille',), (\"Diller's Delicatessen\",), ('Latte Express #3',), ('Pasquales',), (\"MAI'S VIETNAMESE RESTAURANT\",), ('SIMPLE PLEASURES CAFE',), ('EL POLLO SUPREMO',), ('THE GROVE FILLMORE',), ('Olympic Flame Cafe',), ('Kim Thanh Restaurant',), ('Columbus Cafe',), ('STARBUCKS COFFEE #509',), (\"Pete's Deli & Cafe\",), ('THE BITTER END',), (\"AFC SUSHI @ MOLLIE STONE'S 2\",), ('ARLEQUIN',), (\"Grumpy's American Pub\",), ('VIKINGS GIANT SUBMARINE',), ('ON THE BRIDGE',), ('HAI SUN RESTAURANT',), ('Polkers',), (\"ADELITA'S CAKES\",), (\"Buster's\",), ('The House',), ('Roxanne Cafe',), ('Gordo Taqueria #1',), ('YOU SEE SUSHI',), ('TSING TAO RESTAURANT',), ('Piperade',), ('Boudin Bakery',), ('TRIPTYCH',), ('Golden Boy Pizza',), ('New Hollywood Bakery & Restaurant',), ('PATPONG THAI CUISINE, INC.',), ('Sabra Restaurant',), ('Ritz-Carlton SF - Club Lounge',), (\"L'AVENIDA\",), ('RINCON PERUANO RESTAURANT',), ('CABLE CAR COFFEE CO',), ('CAFE V',), (\"CHOUQUET'S\",), ('SF Bay Club - Court Cafe',), ('CLADDAGH COFFEE',), ('Tung Sing Restaurant',), ('CLEMENT BBQ RESTAURANT',), ('CHEVRON #1512',), ('Cafe Venue',), ('Sorabol-Stonestown Galleria',), ('JITRA THAI CUISINE',), ('AL-MASRI EGYPTIAN RESTAURANT',), ('EXTREME  PIZZA',), ('ISUMIYA',), ('Chestnut Diner',), ('Sun Kwong Restaurant',), ('KENTUCKY FRIED CHICKEN #249',), ('Original Perfect Hamburger',), (\"Akiko's Sushi Bar\",), ('North Beach Restaurant',), ('BIO',), ('PRESIDIO GOLF CLUB',), (\"CARL'S JUNIOR\",), ('C & Y Cafe',), ('LOS HERMANOS',), ('Bamboo Restaurant',), ('FIRST CUP',), ('NAPOLI PIZZA RESTAURANT',), ('Cafe Madeleine',), ('Bohemian Cigar Store',), ('Ristorante Ideale',), (\"Viking's Giant Sub\",), ('Donut Time',), (\"Nizario's Pizza\",), ('RAILROAD EXPRESSO CAFE',), (\"CHAVITA'S MEXICAN RESTAURANT\",), (\"TULLY'S  COFFEE\",), (\"TAWAN'S THAI FOOD\",), ('ZAOH RESTAURANT',), ('KABABAYAN FAST FOOD',), (\"KD'S GROG & GROCERY\",), ('GORDO TAQUERIA #6',), ('HIGHER GROUNDS',), ('901 Columbus Cafe',), ('SEA BREEZE CAFE',), ('FLORIO',), ('GARDEN HOUSE CAFE',), ('MOONLIGHT CAFE',), ('Sushi on North Beach',), ('Battery Street Coffee Roastery',), ('Clement Street Bar & Grill',), ('MY FAVORITE CAFE',), ('Thai Spice Restaurant',), ('FRINGALE',), ('CAFE X + O',), ('Maykadeh Restaurant',), ('PEKING WOK RESTAURANT',), ('Nonna Rose Restaurant',), ('DRAGON WELL',), ('Chowders',), ('NENAS RESTAURANT',), (\"JIM'S SMOKE SHOP\",), ('NOODLE EXPRESS',), ('MIKI RESTAURANT',), ('Marche Club of S.F.',), ('MOULIN ROUGE',), ('GIANT SCOOP',), ('SUPER STAR RESTAURANT',), ('COW HOLLOW CATERING',), ('Caffe Roma Coffee Roasting Co',), ('CHATZ',), (\"Sam's Pizza\",), ('Dol-Ho Restaurant',), ('COURTYARD BY MARRIOTT-COFFEE SHOP',), ('SHERATON PALACE - EMP.  CAFETERIA',), ('Marnee Thai Restaurant',), ('Hamburger Haven',), ('VIKINGS GIANT SUBMARINE SANDWICHES',), ('Sushi Rapture',), ('BIG MOUTH BURGERS',), ('IL BORGO',), (\"Peet's Coffee & Tea, Inc\",), ('TEKKA JAPANESE RESTAURANT',), ('STARBUCKS COFFEE CO.',), (\"YUMMA'S MED GRILL\",), ('MIFUNE DON',), ('KISS SEAFOOD',), ('Whole Foods Steep Brew',), ('AT&T - Cognac Bar/ KITCHEN Room3232 [145080]',), ('OMNI S.F. Hotel - Food & Beverage Storeroom',), ('ESPERPENTO RESTAURANT',), (\"Pat's Cafe\",), ('Escape From New York Pizza',), ('GOLDEN CHARIOT BAKERY & REST',), ('MONROE RESIDENCE CLUB',), ('Cocotte',), ('ANH HONG PHU-NHUAN RESTAURANT',), (\"LITTLE HENRY'S RESTAURANT\",), ('B & M MEI SING RESTAURANT',), ('Caffe Sapore',), ('YUMMY YUMMY VIETNAMESE RESTAURANT',))", "rowcount": 353, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Tiramisu Kitchen',), ('CONSTANS GROCERY',), ('PROGRESSIVE GROUNDS',), ('YUKOL PLACE THAI CUISINE',), ('The Posh Bagel',), ('RINCONSITO SALVADORENO',), ('SF MARRIOTT HOTEL PANTRY 4/F',), ('Orale Orale Inc',), (\"Mo's Grill\",), (\"MELISA'S CHINESE CUISINE\",), ('ASHOKA Indian Cuisine',), ('Cafe Bellini',), ('APERTO RESTAURANT',), ('BAY VIEW BOAT CLUB',), ('LA SANTANECA',), (\"BABY'S EATERY AND PALABOK\",), ('Molinari Delicatessen',), ('Estia Restaurant',), ('BUFFALO BURGERS RESTAURANT',), ('HEUNG YUEN RESTAURANT',), (\"PEET'S COFFEES & TEAS\",), ('Starbucks Coffee Company #6765',), ('CLUB WAZIEMA',), ('AT&T - FIELD CLUB KITCHEN [145082]',), ('TANPOPO',), ('LE ZINC',), ('NORDSTROM CAFE BISTRO',), ('PRIMO PATIO CAFE',), ('New Lun Ting Cafe, Inc',), ('Spiazzo',), ('Bocadillos',), ('QUEEN ANNE HOTEL',), ('ZA',), ('Zarzuela',), ('ATAMI SUSHI BAR & GRILL',), ('A La Turca',), ('HARD KNOX CAFE',), ('PANDA EXPRESS',), ('CAFE MUMS',), ('BARBARY COAST PASTRY & COFFEE',), ('C & Y Cafe',), ('LOS HERMANOS',), ('Bamboo Restaurant',), ('FIRST CUP',), ('NAPOLI PIZZA RESTAURANT',), ('Cafe Madeleine',), ('Bohemian Cigar Store',), ('Ristorante Ideale',), (\"Viking's Giant Sub\",), ('Donut Time',), (\"Nizario's Pizza\",), ('RAILROAD EXPRESSO CAFE',), (\"CHAVITA'S MEXICAN RESTAURANT\",), (\"TULLY'S  COFFEE\",), (\"TAWAN'S THAI FOOD\",), ('ZAOH RESTAURANT',), ('KABABAYAN FAST FOOD',), (\"KD'S GROG & GROCERY\",), ('GORDO TAQUERIA #6',), ('HIGHER GROUNDS',), ('901 Columbus Cafe',), ('SEA BREEZE CAFE',), ('FLORIO',), ('GARDEN HOUSE CAFE',), ('MOONLIGHT CAFE',), ('Sushi on North Beach',), ('Battery Street Coffee Roastery',), ('Clement Street Bar & Grill',), ('MY FAVORITE CAFE',), ('Thai Spice Restaurant',), ('FRINGALE',), ('CAFE X + O',), ('Maykadeh Restaurant',), ('PEKING WOK RESTAURANT',), ('Nonna Rose Restaurant',), ('DRAGON WELL',), (\"J.B.'S PLACE\",), ('Just Wonton',), (\"Ben & Jerry's\",), ('CORSAGNA',), ('SUBWAY',), ('PACIFIC CATCH',), ('HAAGEN-DAZS #561',), ('Yuet Lee Restaurant',), ('Franchino',), (\"Loi's Vietnamese Restaurant\",), ('Caffe Del Sole',), ('BEN WAH RESTAURANT',), ('MOZZARELLA DI BUFALA PIZZERIA II',), ('MARIPOSA HUNTERS POINT YACHT CLUB',), ('B & J QUARTER POUNDER BURGERS',), ('MING TAI WUN TUN NOODLE, INC.',), ('PORK STORE CAFE',), ('UNIVERSAL CAFE',), ('Zona Rosa',), (\"ORPHAN ANDY'S\",), ('Beanery',), ('EXIT THEATRE',), ('La Copa Loca',), (\"ZEKE'S DIAMOND BAR\",), ('Cafe Niebaum Coppola',), ('Asia Chinese Food #2',), ('Bistro Burger',), ('Emporio Rulli Il Caffe at Union Square',), ('ATLAS CAFE',), ('TAL-Y-TARA TEA & POLO SHOPPE',), ('The Old Ship Saloon',), (\"Ma's Dim Sum & Cafe\",), ('GEARY STREET BELLA PIZZA',), ('TARAVAL OKAZU YA',), ('Han Bat Korean Restaurant',), ('T C PASTRY',), ('GENEVA STEAK HOUSE',), (\"Elaine's Kitchen\",), ('CHEESE STEAK SHOP, THE',), ('ZUSHI-PUZZLE',), (\"NOAH'S BAGELS\",), ('KENTUCKY FRIED CHICKEN #50',), ('KEZAR PUB',), ('BULLSHEAD RESTAURANT',), ('MARTHA & BROS. COFFEE CO',), ('Chowders',), ('NENAS RESTAURANT',), (\"JIM'S SMOKE SHOP\",), ('NOODLE EXPRESS',), ('MIKI RESTAURANT',), ('Marche Club of S.F.',), ('MOULIN ROUGE',), ('GIANT SCOOP',), ('SUPER STAR RESTAURANT',), ('COW HOLLOW CATERING',), ('Caffe Roma Coffee Roasting Co',), ('CHATZ',), (\"Sam's Pizza\",), ('Dol-Ho Restaurant',), ('COURTYARD BY MARRIOTT-COFFEE SHOP',), ('SHERATON PALACE - EMP.  CAFETERIA',), ('Marnee Thai Restaurant',), ('Hamburger Haven',), ('VIKINGS GIANT SUBMARINE SANDWICHES',), ('Sushi Rapture',), ('BIG MOUTH BURGERS',), ('IL BORGO',), (\"Peet's Coffee & Tea, Inc\",), ('TEKKA JAPANESE RESTAURANT',), ('STARBUCKS COFFEE CO.',), (\"YUMMA'S MED GRILL\",), ('MIFUNE DON',), ('KISS SEAFOOD',), ('Whole Foods Steep Brew',), ('AT&T - Cognac Bar/ KITCHEN Room3232 [145080]',), ('OMNI S.F. Hotel - Food & Beverage Storeroom',), ('ESPERPENTO RESTAURANT',), (\"Pat's Cafe\",), ('Escape From New York Pizza',), ('GOLDEN CHARIOT BAKERY & REST',), ('MONROE RESIDENCE CLUB',), ('Cocotte',), ('ANH HONG PHU-NHUAN RESTAURANT',), (\"LITTLE HENRY'S RESTAURANT\",), ('B & M MEI SING RESTAURANT',), ('Caffe Sapore',), ('YUMMY YUMMY VIETNAMESE RESTAURANT',), (\"AFC SUSHI @ MOLLIE STONE'S 2\",), ('ARLEQUIN',), (\"Grumpy's American Pub\",), ('VIKINGS GIANT SUBMARINE',), ('ON THE BRIDGE',), ('HAI SUN RESTAURANT',), ('Polkers',), (\"ADELITA'S CAKES\",), (\"Buster's\",), ('The House',), ('Roxanne Cafe',), ('Gordo Taqueria #1',), ('YOU SEE SUSHI',), ('TSING TAO RESTAURANT',), ('Piperade',), ('Boudin Bakery',), ('TRIPTYCH',), ('Golden Boy Pizza',), ('New Hollywood Bakery & Restaurant',), ('PATPONG THAI CUISINE, INC.',), ('Sabra Restaurant',), ('Ritz-Carlton SF - Club Lounge',), (\"L'AVENIDA\",), ('RINCON PERUANO RESTAURANT',), ('CABLE CAR COFFEE CO',), ('CAFE V',), (\"CHOUQUET'S\",), ('SF Bay Club - Court Cafe',), ('CLADDAGH COFFEE',), ('Tung Sing Restaurant',), ('CLEMENT BBQ RESTAURANT',), ('CHEVRON #1512',), ('Cafe Venue',), ('Sorabol-Stonestown Galleria',), ('JITRA THAI CUISINE',), ('AL-MASRI EGYPTIAN RESTAURANT',), ('EXTREME  PIZZA',), ('ISUMIYA',), ('Chestnut Diner',), ('Sun Kwong Restaurant',), ('KENTUCKY FRIED CHICKEN #249',), ('Original Perfect Hamburger',), (\"Akiko's Sushi Bar\",), ('North Beach Restaurant',), ('BIO',), ('PRESIDIO GOLF CLUB',), (\"CARL'S JUNIOR\",), (\"ART'S CAFE\",), ('STARBUCKS',), ('OMNI S.F. Hotel - 3rd Floor Pantry',), ('Vega',), ('Akikos Sushi',), ('New Moon Restaurant',), ('Gelato Classico Italian Ice',), ('Inga Donuts',), ('Miyako',), (\"Calzone's\",), ('Vieni-Vieni',), ('Il Pollaio',), ('San Francisco Athletic Club',), ('SAN FRANCISCO SOUP COMPANY',), ('EL BURRITO EXPRESS #2',), ('MARINA SUBMARINE',), ('TAQUERIA EL FAROLITO NO. 2',), ('Firenze By Night',), ('Delicious Dim Sum',), ('House of Nanking',), ('Town & Country Club',), ('Cafe Ethiopia',), ('JAVA BEACH CAFE',), ('CREPE EXPRESS',), ('ANCHOR OYSTER BAR INC.',), ('LA TORTILLA',), (\"GASPARE'S PIZZA HOUSE & REST.\",), ('Neiman Marcus On The Square',), (\"Nick's Lighthouse\",), ('LUPA TRATTORIA',), ('Casa Mexicana Restaurant',), ('AXUM',), ('Just For You Cafe Inc.',), ('Osha Thai Noodle Cafe',), (\"Fisherman's Pizzeria Inc [#50]\",), ('Cesario',), ('Cafe Bastille',), (\"Diller's Delicatessen\",), ('Latte Express #3',), ('Pasquales',), (\"MAI'S VIETNAMESE RESTAURANT\",), ('SIMPLE PLEASURES CAFE',), ('EL POLLO SUPREMO',), ('THE GROVE FILLMORE',), ('Olympic Flame Cafe',), ('Kim Thanh Restaurant',), ('Columbus Cafe',), ('STARBUCKS COFFEE #509',), (\"Pete's Deli & Cafe\",), ('THE BITTER END',), (\"CHARLIE'S DELI CAFE\",), ('OMNI S.F. Hotel - Employee Cafeteria',), ('Broadway Dim Sum',), ('SECRET GARDEN TEA HOUSE',), ('RADIO HABANA',), ('BAYSIDE COFFEE SHOP',), ('Caffe Puccini',), ('Toy Boat Dessert Cafe',), ('GORDO TAQUERIA #2',), ('HOUSE OF HUNAN',), ('Michelangelo Caffe',), ('The Stinking Rose',), ('Taqueria Zorro',), ('Silverhat Bar, Inc',), ('Caffe Trieste',), ('CAJUN PACIFIC',), (\"MUFFIN'S MUFFIN\",), ('TACO LOS ALTOS',), ('BURRITO EXPRESS',), ('LOS PLANES DE RENDEROS',), ('SHANGRILA VEGETARIAN REST',), ('GOLDEN ISLAND CAFE',), ('BEAN THERE COFFEE & TEA',), ('HOANG DAT COFFEE SHOP',), ('Star Bagels',), ('Boudin Petit Cafe',), ('THANH THANH',), ('SAN MIGUEL RESTAURANT #2',), ('SWEET DELIGHT BAKERY',), ('Waterfront Bakery',), ('Starbucks Coffee',), ('BURGERMEISTER',), (\"WORKING GIRLS' CAFE III\",), ('Plouf',), ('Raintree Cafe',), ('RED BALLOON',), ('Dar Bar Pakistani/Indian Cusine',), ('Rogue Ales Public House',), ('Cafe Tiramisu',), ('LINCOLN PARK BAR AND GRILL',), ('Sunrise Deli',), ('KENTUCKY FRIED CHICKEN',), (\"Joanie's Diner Inc.\",), ('Hyde Street Seafood House & Raw Bar, Inc',), ('CAFE LOMBARD',), ('Aux Delices Vietnam',), ('OMNI S.F. Hotel - 2nd Floor Pantry',), (\"DINO'S UNCLE VITO\",), ('Silver Star Cafe and Deli',), ('COURTYARD BY MARRIOTT-STAFF KITCHEN',), ('BEANERY INC.',), ('REINA RESTAURANT',), ('Rose Pistola',), ('Garden of Eden',), (\"Mara's\",), ('Quickly',), ('A-1 BAKERY',), ('SUBWAY SANDWICHES & SALADS',), ('Golden Coffee',), ('BRAZEN HEAD RESTAURANT',), ('Kitchen Kura',), ('Hunan Restaurant',), (\"Courtyard by Marriott at Fisherman's Wharf\",), ('DELFINA RESTAURANT',), (\"MARCELLO'S PIZZA\",), ('VANIDA THAI KITCHEN',), (\"The Sunset's Best Seafood Restaurant\",), ('POMELO ON CHURCH',), ('JAVA SUPREME',), ('NORTH BEACH PIZZA',), ('Cordon Bleu',), ('BAZAAR CAFE',), ('A2 CAFE',), (\"CITY'S CHOICE\",), (\"Uncle Vito's Pizza\",), ('Zazie',), ('COURTYARD BY MARRIOTT-RESTAURANT',), ('Lanna Restaurant',), ('KFC/TACO BELL',), ('Academy Bar & Kitchen',), ('Nob Hill Cafe',), (\"Murphy's\",), ('Allstar Donuts',), ('S.F. Pizza',), ('BURMA SUPERSTAR RESTAURANT',), ('Hook a Cook',), ('SANPPO RESTAURANT',), ('Amarena',), ('Street Restaurant',), ('Starbucks Coffee Company',), (\"Peet's Coffee & Tea\",), ('HOWARD STREET COFFEE ROASTERY CAFE',), ('BISTRO AIX',))", "rowcount": 353, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 597, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((374,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((374,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 599, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 600, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('SF',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SF',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 601, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 602, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 606, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 607, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 608, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 418, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Vicky', 'Coleman'), ('Joshua', 'Rosa'), ('Randall', 'Curtis'), ('Jessica', 'Anthony'), ('Ruth', 'Noble'), ('Sarah', 'Lindsey'), ('Robert', 'Morin'), ('Rosemary', 'Kennedy'), ('David', 'Hodges'), ('Arnold', 'Holder'), ('Bob', 'Benson'), ('Anastasia', 'Hansen'), ('Zach', 'Barber'), ('Lisa', 'Tillman'), ('Mark', 'Atkins'), ('Standard', 'Murray'), ('Craig', 'Kerr'))", "rowcount": 17, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Vicky', 'Coleman'), ('Ruth', 'Noble'), ('Sarah', 'Lindsey'), ('Robert', 'Morin'), ('Rosemary', 'Kennedy'), ('Arnold', 'Holder'), ('Bob', 'Benson'), ('Joshua', 'Rosa'), ('Randall', 'Curtis'), ('Jessica', 'Anthony'), ('Standard', 'Murray'), ('Craig', 'Kerr'), ('Anastasia', 'Hansen'), ('Zach', 'Barber'), ('Lisa', 'Tillman'), ('Mark', 'Atkins'), ('David', 'Hodges'))", "rowcount": 17, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 419, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((68,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 420, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((108,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((108,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 421, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((11,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 422, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SMOTHER BROTHERS',), ('EL CONCORDIA',), ('THE PARTHENON RESTAURANT INC',), ('GOLDEN CRUST PIZZERIA',), ('JALISCO RESTAURANT',), (\"CHICAGO'S HOME OF CHICKEN & WAFFLES\",), ('STARFRUIT CAFE',), ('LA HACIENDITA TAQUERIA INC',), ('EL MEZQUITE GRILL',), (\"TONY'S BURRITO MEX, INC\",), ('McDonalds',), ('COMPUTER AND NETWORK SOLUTIONS',), ('DUKS RED HOTS',), ('Southern Grill',), ('FOREVER YOGURT',), ('ORANGE GARDEN RESTAURANT LLC',), ('COALFIRE',), ('LAS ISLAS MARIAS',), ('EL SALVADOR RESTAURANT',), ('ROCKIN  TACO',), ('SAN JOSE RESTAURANT, INC.',), ('THE WORM HOLE',), (\"PIZZARO'S\",), ('PR CAFETERIA INCORPORATED',), ('TAQUERIA JAMAY',))", "rowcount": 25, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SMOTHER BROTHERS',), ('EL CONCORDIA',), ('DUKS RED HOTS',), ('THE PARTHENON RESTAURANT INC',), ('GOLDEN CRUST PIZZERIA',), ('JALISCO RESTAURANT',), (\"CHICAGO'S HOME OF CHICKEN & WAFFLES\",), ('STARFRUIT CAFE',), ('LA HACIENDITA TAQUERIA INC',), ('SAN JOSE RESTAURANT, INC.',), ('THE WORM HOLE',), (\"PIZZARO'S\",), ('PR CAFETERIA INCORPORATED',), ('TAQUERIA JAMAY',), ('EL MEZQUITE GRILL',), (\"TONY'S BURRITO MEX, INC\",), ('McDonalds',), ('COMPUTER AND NETWORK SOLUTIONS',), ('Southern Grill',), ('FOREVER YOGURT',), ('ORANGE GARDEN RESTAURANT LLC',), ('COALFIRE',), ('LAS ISLAS MARIAS',), ('EL SALVADOR RESTAURANT',), ('ROCKIN  TACO',))", "rowcount": 25, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 423, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 424, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 425, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 426, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 427, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 428, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 429, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 430, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 431, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 433, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((125.125,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((125.125,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 434, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 435, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 436, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 437, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 438, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('COALFIRE', 'Fail'), (\"MCDONALD'S CORPORATION\", 'Pass'), ('MR CAJAKES SANDWICH SHOP', 'Pass w/ Conditions'), (\"BANANA JOE'S\", 'Pass'), ('AMEER KABOB', 'Pass'), (\"TONY'S SUB\", 'Pass'), (\"MARY'S SNACK SHOP\", 'Pass w/ Conditions'), ('LOS CANDILES', 'Pass'), ('RIB PLACE INC.', 'Pass'), ('AL BAR B QUE', 'Pass'))", "rowcount": 10, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((\"MCDONALD'S CORPORATION\", 'Pass'), ('MR CAJAKES SANDWICH SHOP', 'Pass w/ Conditions'), ('COALFIRE', 'Fail'), ('AMEER KABOB', 'Pass'), (\"TONY'S SUB\", 'Pass'), ('AL BAR B QUE', 'Pass'), (\"MARY'S SNACK SHOP\", 'Pass w/ Conditions'), ('LOS CANDILES', 'Pass'), ('RIB PLACE INC.', 'Pass'), (\"BANANA JOE'S\", 'Pass'))", "rowcount": 10, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 439, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 441, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 212, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.34222936630249,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6.342229199372056,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 556, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('NO',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('NO',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 557, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 611, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('222-23-2222',), ('444-45-4444',), ('500-50-0505',), ('925-45-7116',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('222-23-2222',), ('444-45-4444',), ('500-50-0505',), ('925-45-7116',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 612, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((22500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((22500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 613, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 614, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 617, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 618, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('David', 'Whitehead'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('David', 'Whitehead'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 620, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((20333.333333333332,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 621, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((55250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((55250.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 507, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.0,), (8.026030540466309,), (11.946049690246582,))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (0.0,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (11.946050096339114,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,), (8.026030368763557,))", "rowcount": 1000, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 553, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((27, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((27, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 393, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1206408,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1206408,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 96, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 98, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Constantine Makris',), ('Rene Balcer',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T2\" does not have a column named \"year\"\nLINE 3:     SELECT DISTINCT T2.year AS years,...\n                            ^", "exec_able": false}}, "TP": 0, "FP": 4, "FN": 1}
{"sql_id": 356, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 372, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Radishes',), ('Celery',), ('Sardines',), ('Sliced Bananas',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges sliced',), ('Large pot of coffee',), ('Large pot of Oolong tea',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Mohren Suppe mit Sago',), ('French rolls',), ('Milk rolls',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Food',), ('Oyster cocktail',), ('Little Neck clams',), ('Stuffed olives',), ('Malaga grapes',), ('Oatmeal',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Fruits in Season',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Canape, Martha',), ('Puree of beans',), ('Fried Flounders',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('Bouillon in cup',), ('Queen olives',), ('Chow chow',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Assorted cakes',), ('Irish stew',), ('Potato salad',), ('Chicken salad',), ('Spinach with egg',), ('Baba au rhum',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Chicken',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Rolls',), ('Griddle cakes',), ('Porterhouse Steak',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Sandwiches of all Kinds',), ('Hamburger Steak',), ('Pork Chops',), ('Ham & Eggs',), ('Fried Liver',), ('German Pancake',), ('Oysters & Clams',), ('Hominy',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Lyonnaise Potatoes',), ('Baked Weakfish',), ('Pork Chops Piquante Sauce',), ('Broiled Kidney with Bacon',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Hot Cakes',), ('Smelts Meuniere',), ('Findon Haddock',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Fried Flounder',), ('Fillet Steaks aux Champignon',), ('broiled shad',), ('Saratoga Chips',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Sausage',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Sliced Pineapples',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Stewed Tripe',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Consomme Benoiton',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Consomme Maceo',), ('Puree Mongol',), ('Consomme Printanier',), ('Chicken Mulligatawny',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Tomato Soup',), ('Filet of sole a la Horly',), ('Fried Plaice - Meuniere',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Diamond stew',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('Broiled Spring Chicken',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn Meal Mush',), ('Boiled',), ('Scotch grouse en casserole',), ('Broiled Blue Fish',), ('Chicken Liver on Toast with Bacon',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Passion Fruit',), ('Curried Pork and Rice',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Consomme Macaroni',), ('Hard Boiled Egg',), ('Cream Cheese',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Apfel',), ('Maisgries',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Fillet Steads with Mushrooms',), ('Curried Prawns and Rice, Bombay Duck',), ('Lamb Chops, Broiled Plain',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sirloin Steak - Fried Onions',), (\"Lambs' Liver Saute\",), ('Jambon Grille',), ('Mutton Chops - Saute Potatoes',), ('Cold Smoked Tongue and Ham',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Salt Cod, Egg Sauce',), ('Rice Cakes',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('liver and bacon',), ('Fillet de Boeuf a la Parisienne',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Pork Sausage and Lyonnaise Potatoes',), (\"Potato a la Maitre d'Hotel\",), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Lettuce',), ('Cum-quats',), ('Orange',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('Stewed Tripe Spanish',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Germea',), ('Kraftsuppe, Prinzessin Art',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Blumenkohl, hollandische Sauce',), ('Gratinierter Eierkuchen nach Mornay',), ('Entenbraten, Bordeaux Sauce',), ('Pork Sausages, Snowflake Potatoes',), (\"Lambs' Liver with Bacon\",), ('Mutton Chops & Potato Chips',), ('Cape Horn Hash',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Flannel Cakes',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Fillet Steak Fried Potatoes',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Wheat Cakes',), ('Beef Steak & onions',), ('Fried Bananas',), ('Boiled potato',), ('Currant Buns',), ('Waffle',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Mutton Chops',), ('Potato Chips',), ('Curried Veal and Rice',), ('Cold: Ox Tongue',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Sausages, Mashed Potatoes',), ('Devilled Kidney',), ('Pettijohn',), ('Fried Ham & Eggs',), ('Boiled Cracked Wheat',), ('Spanish Omelettes',), ('Calves Liver and Onions',), ('Mutton Chops (to order)',), ('Jacket Potatoes',), ('Boiled Corn Meal with Cream',), ('Maple Syrup',), ('Curried Shrimps and Rice',), ('Honey',), ('Fillet Steaks with Mushrooms',), ('Tongues and Sounds',), ('Cornmeal Mush',), ('Breakfast Delight',), ('Fresh Comb Honey',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fried Country Sausages and Lima Beans',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Fried Liver & Bacon',), ('Potatoes',), ('Potatoes Saute',), ('Eclairs',), ('Pies',), ('Baked Shad Wine Sauce',), ('Hot Biscuits',), ('Broiled Lamb Kidneys and Bacon',), ('Toast',), (\"Frogs' legs in every style\",), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), ('Sauterne 1ere',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Hochheimer',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Irroy Brut',), ('Apollinaris',), ('Johannis',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('Sherbert Roman',), ('Red Head Duck',), ('Fancy Ice Cream',), ('Cakes',), ('Cheese',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Curried Lamb and Rice',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Fried Gar fish',), ('Batter Cakes',), ('Oat Meal Porridge',), ('Pork Cutlets',), (\"Roast Phil'a Chicken\",), ('Baked Potatoes',), ('Obst',), ('Nachtisch',), ('Waffles',), ('French fried potatoes',), ('Veal Chops',), ('Raisin cake',), ('Fried Ham',), ('Mock turtle soup',), ('Oysters, Boston stew',), ('Clear green turtle soup',), ('rice pudding',), ('Boiled Salt Mackerel',), ('Plain Omelet',), ('Philadelphia Cream Cheese',), ('Two Eggs Boiled',), ('Flaked Rice',), ('Rye Bread',), ('Smoked Schnapper Butter Sce',), ('Baked fish, wine sauce',), ('Cold Roast Lamb',), ('Pork Sausage and Mashed Potatoes',), ('Raw Oysters',), ('Wheat Cakes, with Maple Syrup',), ('Fried Indian Mush',), ('Oysters, Roast in Shell',), ('China Teas',), ('Oysters, Box Stew',), ('Oysters, Fry',), ('Potatoes Boiled',), ('Gemischtes Rahmeis',), ('Cape Cods oysters',), ('Rockaways oysters',), ('Lynnhavens oysters',), ('Corn Meal Fritters',), ('Lalla Rookh Sorbet',), ('Oysters stewed',), ('Liver & Bacon',), ('Boiled Potatos',), ('Oysters box stew',), ('Calfs Liver and Onions',), ('Oysters, Milk Stew',), ('Mirabellen',), ('Fricassee of Turkey Wings Celery Sauce',), ('Cream of Cauliflower Soup',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Cold German Sausage',), ('Bacon to order',), ('Lammkoteletten nach Villeroi',), ('Veal Cuttlets Lyonnaise',), ('Boiled Fish',), ('Cherrystones clams',), ('Fried New Potatoes',), ('Beef Steak, fried onions',), ('Panfish, Meuniere, German fried potatoes',), ('Oysters, Raw on the shell',), ('Oxtail Ragout and Vegetables',), ('Hot ribs of beef',), ('York Ham, Grilled',), ('Clicquot Sec',), ('Oysters, Crumb Fry',), ('Oysters, Raw on the Half Shell',), ('Sirloin Steak, Fried French Chips',), ('Cold Veal and Ham Pie',), ('Oysters, Blue Point Fry',), ('Oysters, Blue Point Stew',), ('Cold Roast Beef',), ('Coffee ',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Onions plain or fried',), ('Scrambled Eggs and bacon',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Cold Steak Pie',), ('English Beef soup',), ('Consomm\u00e9 in cup',), ('St. Julien Sup\u00e8rieur',), ('Perrier Jou\u00ebt Special and Brut',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Apple Sauce',), ('Strawberries',), ('Grape fruit',), ('Clam Fritters',), ('Doucette salad',), ('Old fashioned rice pudding',), ('Stewed tomatoes',), ('Cup of coffee (served in small pot)',), ('Pot of chocolate',), ('Sliced Bananas and Cream',), ('Milk rice',), ('Shreaded Wheat',), ('Martineaus',), ('Strawberry',), ('Oyster Bay asparagus',), ('Plain Omelette',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Scollops en caisse, Supreme',), ('Marrow on toast, Bordelaise',), ('Hot buns',), ('Tongue',), ('Pommes de Terre a la Creme',), ('Half and Half Scallops & Oysters',), ('Grillirte Kuken',), ('Oyster Omelette',), ('Filet Steaks aux Champignon',), ('Consomme San Remo',), ('Beef Stew',), ('Sausage & Mashed Potatoes',), ('Egg, to order',), ('English Mutton Chops',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Kippered Herrings',), ('Stewed Tripe with Cream sauce',), ('Snowflakes',), ('Whiting - Meuniere',), ('Calfs Liver + Bacon',), ('Frizzled Breakfast Bacon (to order)',), ('Saute of Kidney',), ('Fried Chicken a la Maryland',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Baked Apple Dumpling, Hard Sauce',), ('Cracked Wheat with Fresh Milk',), ('Swiss Rolls',), ('Butter Cakes with Maple Syrup',), ('Hot Rolls',), ('Cotelettes de Veau, Sauce Tomate',), ('Citronen-Auflauf',), ('Pikelets',), ('Beef Steak and Champignons',), ('Broiled Rashers of Bacon',), ('Coffee Cake',), ('Fried Fresh Fish',), ('Porterhouse Steak and Lamb Chops',), ('Frankfurter Sausages and Sauerkraut',), ('Mashed Turnips',), ('Pontet Canet',), ('Niersteiner',), ('New Asparagus, Cream Sauce',), ('Fried Potatoes',), ('Saute Potatoes',), ('Omelettes',), ('Potatoes stewed in Cream',), ('Vegetable Soup',), ('Cold Mutton',), ('Oysters, Fry with Bacon',), ('Broiled Mullet',), ('Broiled Rashers of Ham',), ('Asparagus Omelette ',), ('Oysters, Boston Box Stew',), ('Boiled Cod',), ('Pork Chops, Sage & Onions',), ('Mo\u00ebt & Chandon, White Seal',), ('Fillet Steak ',), ('Rissoles a la Merrill',), ('New beets',), ('Stewed prunes',), ('Clam cocktail',), ('Lobster salad',), ('Boiled potatoes',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Diamond back terrapin',), ('Tripe Fritters',), ('English Muffins',), ('Bisque of Crawfish',), (\"Broiled Shad Maitre d'Hotel\",), ('Broiled Chicken on Toast',), ('Hamburg Steak with Onions',), ('Hafergrutze',), ('Roast beef',), ('Small Steak',), ('Bacon & Eggs',), ('Celery Salad',), ('Mo\u00ebt & Chandon, Brut',), ('Breakfast',), ('Egg to Order',), ('Curried Chicken with Rice',), ('Celery',), ('Sardines',), ('SALTED ALMONDS',), ('Cracked Wheat',), ('Pears',), ('Apfelsinen',), ('Oranges',), ('Mashed potatoes',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Milk',), ('Rolled Oats',), ('Kippered Herring',), ('Bananas',), ('Fruit',), ('Apples',), ('Quaker Oats',), ('French rolls',), ('Corn muffins',), ('Boiled eggs',), ('Fish cakes',), ('Oyster cocktail',), ('Oatmeal',), ('Charlotte Russe',), ('Hoot Mon Mush',), ('Chicken broth',), ('Fruits in Season',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Fried smelts',), ('Fried fish',), ('Chocolate',), ('Fried Eggs',), ('Broiled Ham',), ('Griddle cakes',), ('Sirloin Steak',), ('Pork Chops',), ('Hominy',), ('Eggs au Beurre Noir',), ('Sirloin Steak with Mushrooms',), ('Calves Liver & Bacon',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Minced Veal a la Zingari',), ('Lyonnaise Potatoes',), ('Dry Toast',), ('Findon Haddock',), ('broiled shad',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Buckwheat Cakes',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Stewed Tripe',), ('Corned Beef Hash',), ('Tripe, Spanish Style',), ('Eggs to order',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Fruit in Season',), ('Ham omelette',), ('Diamond stew',), (\"Calf's Liver and Bacon\",), ('Broiled Spring Chicken',), ('Chicken Liver on Toast with Bacon',), ('Passion Fruit',), ('Yarmouth Bloaters',), ('Broiled Rashers of Bacon with Fried Bananas',), (\"Lambs' Liver Saute\",), ('Rice Cakes',), ('Honey in the Comb',), ('liver and bacon',), ('Pork Sausage and Lyonnaise Potatoes',), ('Cold Ham',), ('Stewed Tripe Spanish',), ('Breakfast Rolls',), ('Boiled Mackerel',), ('Fried Whiting',), ('Flannel Cakes',), ('Fried Bananas',), ('Mutton Chops',), ('Roast Leg of English Mutton',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Toast',), ('Smoked Snapper',), (\"Roast Phil'a Chicken\",), ('Baked Potatoes',), ('Waffles',), ('French fried potatoes',), ('Fried Ham',), ('Potatoes Boiled',), ('Liver & Bacon',), ('Strawberries',), ('Grape fruit',), ('Stewed tomatoes',), ('Plain Omelette',), ('Kippered Herrings',), ('Hot Rolls',), ('Fried Potatoes',), ('Broiled Rashers of Ham',), ('Stewed prunes',), ('Clam cocktail',), ('Boiled potatoes',), ('Tripe Fritters',), ('English Muffins',), ('Broiled Chicken on Toast',), ('Hafergrutze',), ('Cracked Wheat',), ('Oranges',), ('Mashed potatoes',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Rolled Oats',), ('Kippered Herring',), ('Bananas',), ('Fruit',), ('Apples',), ('Quaker Oats',), ('Fish cakes',), ('Fruits in Season',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Chocolate',), ('Fried Eggs',), ('Broiled Ham',), ('Griddle cakes',), ('Sirloin Steak',), ('Hominy',), ('Eggs au Beurre Noir',), ('Calves Liver & Bacon',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Oat Meal',), ('Minced Veal a la Zingari',), ('Dry Toast',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Corned Beef Hash',), ('Eggs to order',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Fruit in Season',), ('Yarmouth Bloaters',), (\"Lambs' Liver Saute\",), ('Rice Cakes',), ('Honey in the Comb',), ('Cold Ham',), ('Breakfast Rolls',), ('Fried Whiting',), ('Fried Bananas',), ('Strawberries',), ('Grape fruit',), ('Stewed tomatoes',), ('Plain Omelette',), ('Hot Rolls',), ('Stewed prunes',), ('Boiled potatoes',), ('English Muffins',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Rolled Oats',), ('Bananas',), ('Fruit',), ('Apples',), ('Quaker Oats',), ('Fish cakes',), ('Fruits in Season',), ('Oatmeal Porridge',), ('Chocolate',), ('Broiled Ham',), ('Griddle cakes',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Oat Meal',), ('Dry Toast',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Corned Beef Hash',), ('Eggs to order',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Yarmouth Bloaters',), ('Rice Cakes',), ('Strawberries',), ('Grape fruit',), ('Hot Rolls',), ('Boiled potatoes',), ('English Muffins',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Rolled Oats',), ('Fruit',), ('Apples',), ('Quaker Oats',), ('Fish cakes',), ('Fruits in Season',), ('Oatmeal Porridge',), ('Chocolate',), ('Broiled Ham',), ('Griddle cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Corned Beef Hash',), ('Eggs to order',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Yarmouth Bloaters',), ('Hot Rolls',), ('Boiled potatoes',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Rolled Oats',), ('Fruit',), ('Apples',), ('Fish cakes',), ('Fruits in Season',), ('Oatmeal Porridge',), ('Chocolate',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Corn bread',), ('Hot Rolls',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Fruit',), ('Oatmeal Porridge',), ('Chocolate',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Corn bread',), ('Hot Rolls',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Fruit',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('Corn bread',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Fruit',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('Corn bread',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Fruit',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('Oranges',), ('Coffee',), ('Tea',), ('Fruit',), ('Marmalade',), ('Jam',), ('Corned Beef Hash',), ('Eggs to order',), ('Oranges',), ('Coffee',), ('Tea',), ('Fruit',), ('Marmalade',), ('Jam',), ('Coffee',), ('Tea',), ('Fruit',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Marmalade',), ('Coffee',), ('Coffee',), ('Coffee',), ('Coffee',), ('Coffee',))", "rowcount": 1001, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Radishes',), ('Celery',), ('Sardines',), ('Sliced Bananas',), ('Preserved figs',), ('BLUE POINTS',), ('CONSOMME ANGLAISE',), (\"BROILED SHAD, A LA MAITRE D'HOTEL\",), ('SLICED CUCUMBERS',), ('SALTED ALMONDS',), ('POTATOES, JULIEN',), ('Cracked Wheat',), ('Malt Breakfast Food',), ('BOILED BEEF TONGUE, ITALIAN SAUCE',), ('Young Onions',), ('Pears',), ('ROAST SIRLOIN OF BEEF, YORKSHIRE PUDDING',), ('Huhnerbruhe',), ('ROAST EASTER LAMB, MINT SAUCE',), ('BROWNED POTATOES',), ('Pampelmuse',), ('Apfelsinen',), ('Ananas',), ('Milchreis',), ('Oranges',), ('Filet v. Schildkrote m. Truffeln',), ('Bouillon, en Tasse',), ('Spargel Suppe',), ('Kraftsuppe, konigliche Art',), ('S. Julien',), ('Chambertin',), ('St. Julien',), ('Mashed potatoes',), ('Breaded veal cutlet with peas',), ('Hind-quarter of spring lamb with stuffed tomatoes',), ('Salisbury steak au cresson',), ('Boiled rice',), ('Stewed oyster plant',), ('Boiled onions, cream sauce',), ('Ice cream',), ('Coffee',), ('Tea',), ('Milk',), ('Mush',), ('Rolled Oats',), ('Small Hominy',), ('Broiled Mackerel',), ('Kippered Herring',), ('Strawberries with cream',), ('Compote of fruits',), ('Orange marmalade',), ('Baked apples with cream',), ('Bananas',), ('Bananas with cream',), ('Austern in der Schale',), ('Fruit',), ('Grapes',), ('Honey in comb',), ('Apples',), ('Oranges sliced',), ('Large pot of coffee',), ('Large pot of Oolong tea',), ('Pitcher of milk',), ('Pot of broma',), ('Suppe, Schlossherrin Art',), ('Eggs, boiled [2]',), ('Baked Apples and Cream',), ('Pettijohn Breakfast Food',), ('Quaker Oats',), ('Hotch potch von Ochsenschwanazen',), ('Sugar Cured Ham',), ('PINE APPLE FRITTERS, SAUCE MARASCHINO',), ('Planked shad',), ('Baked bluefish, Duxelle',), (\"Consomme aux Quenelle's\",), ('Mohren Suppe mit Sago',), ('French rolls',), ('Milk rolls',), ('Corn muffins',), ('Omelette aux fines herbes',), ('Boiled eggs',), ('Bacon and eggs',), ('Fish cakes',), ('Food',), ('Oyster cocktail',), ('Little Neck clams',), ('Stuffed olives',), ('Malaga grapes',), ('Oatmeal',), ('hominy with milk',), ('Baked apples',), ('PATTIES OF SWEET BREADS, A LA TOULOUSE',), ('Chicken broth, per cup',), ('Terrapin, Maryland',), ('Sardines on toast',), ('English snipe',), ('Charlotte Russe',), ('Tutti frutti',), ('Lady fingers',), ('Marrow bones on toast',), ('Fresh mushrooms on toast',), ('Farm Sausage',), ('Club sandwich',), ('Baked Stuffed Mullet & Sauce Pomard',), ('Thon marine',), ('Croquettes of sweetbreads',), ('Teal duck',), ('Demi-tasse',), ('SMALL TENDERLOIN STEAK, A LA STANLEY',), ('Hoot Mon Mush',), ('Apollinoris',), ('Vve Cliquot',), ('Chicken broth',), ('Fruits in Season',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Mashed Hominy',), ('Canape, Martha',), ('Puree of beans',), ('Fried Flounders',), ('Strawberry short cake',), ('Fried smelts',), ('Fried fish',), ('Oxford Sausage',), ('Bouillon in cup',), ('Queen olives',), ('Chow chow',), ('Ribs of prime beef',), (\"Calf's tongue, caper sauce\",), ('Assorted cakes',), ('Irish stew',), ('Potato salad',), ('Chicken salad',), ('Spinach with egg',), ('Baba au rhum',), ('Lemon ice cream',), (\"Pickled lambs' tongues\",), ('Blackberry tarts',), ('Apricots',), ('Red currant jam',), ('Chipped beef',), ('Turkey',), ('Crackers',), ('Chocolate',), ('Corned beef',), ('Boned capon',), ('Lamb',), ('Cumberland ham',), ('Chicken',), ('Fried Eggs',), ('Broiled Ham',), ('Roast veal',), ('Rolls',), ('Griddle cakes',), ('Porterhouse Steak',), ('Tenderloin Steak',), ('Sirloin Steak',), ('Filet mignon, Lyonnaise',), ('All Kinds of Pies per cut',), ('Sandwiches of all Kinds',), ('Hamburger Steak',), ('Pork Chops',), ('Ham & Eggs',), ('Fried Liver',), ('German Pancake',), ('Oysters & Clams',), ('Hominy',), (\"Omelette a l'Oseille\",), ('Eggs au Beurre Noir',), ('Smelts - Remoulade',), ('Sirloin Steak with Mushrooms',), ('Grilled Ham',), ('Calves Liver & Bacon',), ('Lamb Hash - en Bordure',), ('Mutton Chops - Mashed Potatoes',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Chicken Liver with Bacon',), ('Minced Veal a la Zingari',), ('Lyonnaise Potatoes',), ('Baked Weakfish',), ('Pork Chops Piquante Sauce',), ('Broiled Kidney with Bacon',), ('Dry Toast',), ('Bunns',), ('Graham Muffins',), ('Hot Cakes',), ('Smelts Meuniere',), ('Findon Haddock',), ('Boiled Whiting and Parsley Sauce',), ('Haricot Mutton',), ('Sausages and Mashed Potatoes',), ('Fried Flounder',), ('Fillet Steaks aux Champignon',), ('broiled shad',), ('Saratoga Chips',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Sausage',), ('Porto-Rico',), ('Buckwheat Cakes',), ('Sliced Pineapples',), ('Soles Normandy',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Tripe Fricassee',), ('Minced scallops on toast',), ('Stewed Tripe',), ('Corned Beef Hash',), ('Broiled Mackerel, Butter Sauce',), ('Consomme Benoiton',), ('Puree of Tomatoes',), ('Consomme Plain',), ('Minced Chicken, Creamed Rice',), ('Schmorbraten a la bourgeoise',), ('Kartoffelmus',), ('Tripe, Spanish Style',), ('Gebackene Kartoffeln',), ('Calves\u2019 Liver & Bacon',), ('Eggs to order',), ('Consomme Maceo',), ('Puree Mongol',), ('Consomme Printanier',), ('Chicken Mulligatawny',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Tomato Soup',), ('Filet of sole a la Horly',), ('Fried Plaice - Meuniere',), ('Fried Jew Fish, Sauce Tartare',), ('Fruit in Season',), ('GREEN PEAS',), ('Fried country sausage and buckwheat cakes',), ('Stewed california prunes',), ('Ham omelette',), ('Fried hominy',), ('Broiled bluefish',), ('Diamond stew',), ('Whitefish',), (\"Shad, Maitre d'Hotel\",), ('Codfish in Cream',), ('Fried Scollops',), ('Breakfast Bacon',), (\"Calf's Liver and Bacon\",), ('Pork Spare Ribs',), ('Broiled Spring Chicken',), ('Corned Beef Hash, Browned',), ('Veal Cutlets, Breaded, Tomato Sauce',), ('Stewed Honeycomb Tripe, Lyonnaise',), ('Frizzled Beef, in Cream',), ('Eggs as Ordered',), ('Shredded Wheat Biscuits',), ('Vienna Rolls',), ('Papovers',), ('Corn Meal Mush',), ('Boiled',), ('Scotch grouse en casserole',), ('Broiled Blue Fish',), ('Chicken Liver on Toast with Bacon',), ('PUNCH, REPUBLICAN',), ('Puff over',), ('Passion Fruit',), ('Curried Pork and Rice',), ('Eggs, boiled',), ('Fillets of Beef with Mushrooms',), ('Consomme Macaroni',), ('Hard Boiled Egg',), ('Cream Cheese',), (\"Broiled Mackerel - Maitre d'Hotel\",), ('Sirloin Steak -- Fried Onions',), ('Devilled Chicken',), ('Lamb Hash en Bordure',), ('Apfel',), ('Maisgries',), ('Gebratene Seezunge',), ('Fried Halibut, Sauce Tartare',), ('Yarmouth Bloaters',), ('Fillet Steads with Mushrooms',), ('Curried Prawns and Rice, Bombay Duck',), ('Lamb Chops, Broiled Plain',), ('Broiled Rashers of Bacon with Fried Bananas',), ('Sirloin Steak - Fried Onions',), (\"Lambs' Liver Saute\",), ('Jambon Grille',), ('Mutton Chops - Saute Potatoes',), ('Cold Smoked Tongue and Ham',), ('Fried & Boiled Potatoes',), ('Sirloin Steaks aux Cepes',), ('Beefsteaks with Horseradish',), ('Dry and buttered Toast',), ('Salt Cod, Egg Sauce',), ('Rice Cakes',), ('Honey in the Comb',), ('Ris de Veau aux Epinards',), ('Quail on Toast',), ('Broiled Green Bluefish, Drawn Butter',), ('Roast Leg of Mutton & Black Currant',), ('French Fried Potatoes with Dinner Orders',), ('Beefsteak and Onions',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Knuckle of Veal, Bacon & Parsely Sauce',), ('liver and bacon',), ('Fillet de Boeuf a la Parisienne',), ('Fried sole',), ('Salt mackerel',), ('Bouchees aux Macaroni',), ('Cold Ham with Potato Salad',), ('Roast Goose & Apple Sauce',), ('Oyster Stew',), ('Hot Breads',), ('Pork Sausage and Lyonnaise Potatoes',), (\"Potato a la Maitre d'Hotel\",), ('Boiled Cabbage',), ('Strawberries and Cream',), ('Chicken Liver with Mushrooms',), ('Mashed Pumpkins',), ('Bread Pudding, Hard Sauce',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Fruit Pie',), ('Chocolate Pudding with Cream',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Corn Starch Pudding with Cream',), ('Cold Ham',), ('Cup Custard',), ('Codfish Cakes',), ('Lettuce',), ('Cum-quats',), ('Orange',), (\"Calf's Liver Saute\",), ('Brazil Nuts',), ('Almonds & Raisins',), ('Cheshire Cheese',), ('Stilton Cheese',), ('Broiled Lambs Kidney',), ('MacLaren Cheese',), ('Stewed Tripe Spanish',), ('Breakfast Jem',), ('Breakfast Rolls',), ('Germea',), ('Kraftsuppe, Prinzessin Art',), ('Boiled Mackerel',), ('Gekochter Steinbutt, Granatsauce, zerlassene Butter',), ('Findon Haddocks',), ('Cromesquis von Schinken',), ('Curried Pork & Rice',), ('Fillet Steaks and Mushrooms',), ('Blumenkohl, hollandische Sauce',), ('Gratinierter Eierkuchen nach Mornay',), ('Entenbraten, Bordeaux Sauce',), ('Pork Sausages, Snowflake Potatoes',), (\"Lambs' Liver with Bacon\",), ('Mutton Chops & Potato Chips',), ('Cape Horn Hash',), ('A. A. Oats with Fresh Milk',), ('Fried Whiting',), ('Flannel Cakes',), ('Saute of Sheeps Kidney',), ('Smoked Schnapper, Butter Sauce',), ('Fillet Steak Fried Potatoes',), ('Finnon Haddock Butter Sauce',), ('Mutton Stew',), ('Broiled Lamb Chops',), ('Wheat Cakes',), ('Beef Steak & onions',), ('Fried Bananas',), ('Boiled potato',), ('Currant Buns',), ('Waffle',), ('Sirloin Steaks with Onions',), ('Dipped Toast',), ('Tripe a la Bordelaise',), ('Mutton Chops',), ('Potato Chips',), ('Curried Veal and Rice',), ('Cold: Ox Tongue',), ('Tripe, Stewed in Cream',), ('Egg Muffins',), ('Devilled Mutton Kidneys and Bacon',), ('Fried Sausages, Mashed Potatoes',), ('Devilled Kidney',), ('Pettijohn',), ('Fried Ham & Eggs',), ('Boiled Cracked Wheat',), ('Spanish Omelettes',), ('Calves Liver and Onions',), ('Mutton Chops (to order)',), ('Jacket Potatoes',), ('Boiled Corn Meal with Cream',), ('Maple Syrup',), ('Curried Shrimps and Rice',), ('Honey',), ('Fillet Steaks with Mushrooms',), ('Tongues and Sounds',), ('Cornmeal Mush',), ('Breakfast Delight',), ('Fresh Comb Honey',), ('Broiled Boned Smelts',), ('Blue Points on the Shell',), ('Broiled Lobster',), ('Fried Country Sausages and Lima Beans',), ('Oyster Pan Roast on Toast',), ('Mutton Chops Bratonne',), ('Broiled Chicken with Petit Pois',), ('Roast Leg of English Mutton',), ('Hamburger Steak and Onions',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Little Neck Clams on the Shell',), ('Curried Prawns and Rice with Bombay Duck',), ('Hamburg Steak with Fried Onions',), ('Fried Liver & Bacon',), ('Potatoes',), ('Potatoes Saute',), ('Eclairs',), ('Pies',), ('Baked Shad Wine Sauce',), ('Hot Biscuits',), ('Broiled Lamb Kidneys and Bacon',), ('Toast',), (\"Frogs' legs in every style\",), ('Jelly omelette',), ('Broiled Lamb Chops and Bacon',), ('Sauterne 1ere',), ('Haut Sauternes',), ('Sherry',), ('Laubenheimer',), ('Smoked Tongue',), ('Hochheimer',), (\"Mumm's Ex. Dry\",), ('Pommery Sec',), ('Irroy Brut',), ('Apollinaris',), ('Johannis',), ('Blue Point Oysters',), ('Consomme Daumont',), ('Timbales Warsaw',), ('Fillet of Beef with Fresh Mushrooms',), ('Trevise Tomatoes',), ('Poularde Stuffed with Chestnuts',), ('French Peas with Butter',), ('Sherbert Roman',), ('Red Head Duck',), ('Fancy Ice Cream',), ('Cakes',), ('Cheese',), ('Mutton chops fried potatoes',), ('ROAST SQUAB ON TOAST, WITH APRICOTS',), ('ASPARAGUS, BROWN BUTTER',), ('Beef Steak & fried onions',), ('BAKED SWEET POTATOES',), ('Smoked Snapper',), ('Fillets of Steak with Champignons',), ('Curried Lamb and Rice',), ('Curried Shrimps & Rice',), ('Stewed Tripe, Cream sauce',), ('Mutton Chops with Fried Potatoes',), ('Kaffee',), ('Fried Gar fish',), ('Batter Cakes',), ('Oat Meal Porridge',), ('Pork Cutlets',), (\"Roast Phil'a Chicken\",), ('Baked Potatoes',), ('Obst',), ('Nachtisch',), ('Waffles',), ('French fried potatoes',), ('Veal Chops',), ('Raisin cake',), ('Fried Ham',), ('Mock turtle soup',), ('Oysters, Boston stew',), ('Clear green turtle soup',), ('rice pudding',), ('Boiled Salt Mackerel',), ('Plain Omelet',), ('Philadelphia Cream Cheese',), ('Two Eggs Boiled',), ('Flaked Rice',), ('Rye Bread',), ('Smoked Schnapper Butter Sce',), ('Baked fish, wine sauce',), ('Cold Roast Lamb',), ('Pork Sausage and Mashed Potatoes',), ('Raw Oysters',), ('Wheat Cakes, with Maple Syrup',), ('Fried Indian Mush',), ('Oysters, Roast in Shell',), ('China Teas',), ('Oysters, Box Stew',), ('Oysters, Fry',), ('Potatoes Boiled',), ('Gemischtes Rahmeis',), ('Cape Cods oysters',), ('Rockaways oysters',), ('Lynnhavens oysters',), ('Corn Meal Fritters',), ('Lalla Rookh Sorbet',), ('Oysters stewed',), ('Liver & Bacon',), ('Boiled Potatos',), ('Oysters box stew',), ('Calfs Liver and Onions',), ('Oysters, Milk Stew',), ('Mirabellen',), ('Fricassee of Turkey Wings Celery Sauce',), ('Cream of Cauliflower Soup',), ('Oysters Half Shell per plate',), ('Oysters Half Shell per doz.',), ('Oysters Small Fry',), ('Oysters Large fry',), ('Cold German Sausage',), ('Bacon to order',), ('Lammkoteletten nach Villeroi',), ('Veal Cuttlets Lyonnaise',), ('Boiled Fish',), ('Cherrystones clams',), ('Fried New Potatoes',), ('Beef Steak, fried onions',), ('Panfish, Meuniere, German fried potatoes',), ('Oysters, Raw on the shell',), ('Oxtail Ragout and Vegetables',), ('Hot ribs of beef',), ('York Ham, Grilled',), ('Clicquot Sec',), ('Oysters, Crumb Fry',), ('Oysters, Raw on the Half Shell',), ('Sirloin Steak, Fried French Chips',), ('Cold Veal and Ham Pie',), ('Oysters, Blue Point Fry',), ('Oysters, Blue Point Stew',), ('Cold Roast Beef',), ('Coffee ',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Onions plain or fried',), ('Scrambled Eggs and bacon',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Cold Steak Pie',), ('English Beef soup',), ('Consomm\u00e9 in cup',), ('St. Julien Sup\u00e8rieur',), ('Perrier Jou\u00ebt Special and Brut',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Apple Sauce',), ('Strawberries',), ('Grape fruit',), ('Clam Fritters',), ('Doucette salad',), ('Old fashioned rice pudding',), ('Stewed tomatoes',), ('Cup of coffee (served in small pot)',), ('Pot of chocolate',), ('Sliced Bananas and Cream',), ('Milk rice',), ('Shreaded Wheat',), ('Martineaus',), ('Strawberry',), ('Oyster Bay asparagus',), ('Plain Omelette',), ('BUZZARD BAY OYSTERS',), ('Strained gumbo',), ('Scollops en caisse, Supreme',), ('Marrow on toast, Bordelaise',), ('Hot buns',), ('Tongue',), ('Pommes de Terre a la Creme',), ('Half and Half Scallops & Oysters',), ('Grillirte Kuken',), ('Oyster Omelette',), ('Filet Steaks aux Champignon',), ('Consomme San Remo',), ('Beef Stew',), ('Sausage & Mashed Potatoes',), ('Egg, to order',), ('English Mutton Chops',), (\"Soup \u00e1 l'\u00e9cossaise\",), ('Kippered Herrings',), ('Stewed Tripe with Cream sauce',), ('Snowflakes',), ('Whiting - Meuniere',), ('Calfs Liver + Bacon',), ('Frizzled Breakfast Bacon (to order)',), ('Saute of Kidney',), ('Fried Chicken a la Maryland',), ('mutton chops with potato chips',), ('Tenderloin of pork, Robert sauce',), ('Baked Apple Dumpling, Hard Sauce',), ('Cracked Wheat with Fresh Milk',), ('Swiss Rolls',), ('Butter Cakes with Maple Syrup',), ('Hot Rolls',), ('Cotelettes de Veau, Sauce Tomate',), ('Citronen-Auflauf',), ('Pikelets',), ('Beef Steak and Champignons',), ('Broiled Rashers of Bacon',), ('Coffee Cake',), ('Fried Fresh Fish',), ('Porterhouse Steak and Lamb Chops',), ('Frankfurter Sausages and Sauerkraut',), ('Mashed Turnips',), ('Pontet Canet',), ('Niersteiner',), ('New Asparagus, Cream Sauce',), ('Fried Potatoes',), ('Saute Potatoes',), ('Omelettes',), ('Potatoes stewed in Cream',), ('Vegetable Soup',), ('Cold Mutton',), ('Oysters, Fry with Bacon',), ('Broiled Mullet',), ('Broiled Rashers of Ham',), ('Asparagus Omelette ',), ('Oysters, Boston Box Stew',), ('Boiled Cod',), ('Pork Chops, Sage & Onions',), ('Mo\u00ebt & Chandon, White Seal',), ('Fillet Steak ',), ('Rissoles a la Merrill',), ('New beets',), ('Stewed prunes',), ('Clam cocktail',), ('Lobster salad',), ('Boiled potatoes',), ('Ponche de huevo, sambayon, frolada, con pan',), ('Diamond back terrapin',), ('Tripe Fritters',), ('English Muffins',), ('Bisque of Crawfish',), (\"Broiled Shad Maitre d'Hotel\",), ('Broiled Chicken on Toast',), ('Hamburg Steak with Onions',), ('Hafergrutze',), ('Roast beef',), ('Small Steak',), ('Bacon & Eggs',), ('Celery Salad',), ('Mo\u00ebt & Chandon, Brut',), ('Breakfast',), ('Egg to Order',), ('Curried Chicken with Rice',), ('Celery',), ('Sardines',), ('SALTED ALMONDS',), ('Cracked Wheat',), ('Pears',), ('Apfelsinen',), ('Oranges',), ('Mashed potatoes',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Milk',), ('Rolled Oats',), ('Kippered Herring',), ('Bananas',), ('Fruit',), ('Apples',), ('Quaker Oats',), ('French rolls',), ('Corn muffins',), ('Boiled eggs',), ('Fish cakes',), ('Oyster cocktail',), ('Oatmeal',), ('Charlotte Russe',), ('Hoot Mon Mush',), ('Chicken broth',), ('Fruits in Season',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Fried smelts',), ('Fried fish',), ('Chocolate',), ('Fried Eggs',), ('Broiled Ham',), ('Griddle cakes',), ('Sirloin Steak',), ('Pork Chops',), ('Hominy',), ('Eggs au Beurre Noir',), ('Sirloin Steak with Mushrooms',), ('Calves Liver & Bacon',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Oat Meal',), ('Scrambled Eggs',), ('Poached Eggs on Toast',), ('Broiled Fresh Mackerel',), ('Minced Veal a la Zingari',), ('Lyonnaise Potatoes',), ('Dry Toast',), ('Findon Haddock',), ('broiled shad',), ('Grilled Mutton Chops',), ('Dried Hash',), ('Buckwheat Cakes',), ('Broiled Salt Mackerel',), ('Shad roe and bacon',), ('Stewed Tripe',), ('Corned Beef Hash',), ('Tripe, Spanish Style',), ('Eggs to order',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Fruit in Season',), ('Ham omelette',), ('Diamond stew',), (\"Calf's Liver and Bacon\",), ('Broiled Spring Chicken',), ('Chicken Liver on Toast with Bacon',), ('Passion Fruit',), ('Yarmouth Bloaters',), ('Broiled Rashers of Bacon with Fried Bananas',), (\"Lambs' Liver Saute\",), ('Rice Cakes',), ('Honey in the Comb',), ('liver and bacon',), ('Pork Sausage and Lyonnaise Potatoes',), ('Cold Ham',), ('Stewed Tripe Spanish',), ('Breakfast Rolls',), ('Boiled Mackerel',), ('Fried Whiting',), ('Flannel Cakes',), ('Fried Bananas',), ('Mutton Chops',), ('Roast Leg of English Mutton',), ('Pork Sausages',), ('Veal Cutlets Breaded',), ('Toast',), ('Smoked Snapper',), (\"Roast Phil'a Chicken\",), ('Baked Potatoes',), ('Waffles',), ('French fried potatoes',), ('Fried Ham',), ('Potatoes Boiled',), ('Liver & Bacon',), ('Strawberries',), ('Grape fruit',), ('Stewed tomatoes',), ('Plain Omelette',), ('Kippered Herrings',), ('Hot Rolls',), ('Fried Potatoes',), ('Broiled Rashers of Ham',), ('Stewed prunes',), ('Clam cocktail',), ('Boiled potatoes',), ('Tripe Fritters',), ('English Muffins',), ('Broiled Chicken on Toast',), ('Hafergrutze',), ('Cracked Wheat',), ('Oranges',), ('Mashed potatoes',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Rolled Oats',), ('Kippered Herring',), ('Bananas',), ('Fruit',), ('Apples',), ('Quaker Oats',), ('Fish cakes',), ('Fruits in Season',), ('Salt Codfish, Spanish Style',), ('Oatmeal Porridge',), ('Chocolate',), ('Fried Eggs',), ('Broiled Ham',), ('Griddle cakes',), ('Sirloin Steak',), ('Hominy',), ('Eggs au Beurre Noir',), ('Calves Liver & Bacon',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Oat Meal',), ('Minced Veal a la Zingari',), ('Dry Toast',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Corned Beef Hash',), ('Eggs to order',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Fruit in Season',), ('Yarmouth Bloaters',), (\"Lambs' Liver Saute\",), ('Rice Cakes',), ('Honey in the Comb',), ('Cold Ham',), ('Breakfast Rolls',), ('Fried Whiting',), ('Fried Bananas',), ('Strawberries',), ('Grape fruit',), ('Stewed tomatoes',), ('Plain Omelette',), ('Hot Rolls',), ('Stewed prunes',), ('Boiled potatoes',), ('English Muffins',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Rolled Oats',), ('Bananas',), ('Fruit',), ('Apples',), ('Quaker Oats',), ('Fish cakes',), ('Fruits in Season',), ('Oatmeal Porridge',), ('Chocolate',), ('Broiled Ham',), ('Griddle cakes',), ('Sirloin Steak',), ('Calves Liver & Bacon',), ('Corn Cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Oat Meal',), ('Dry Toast',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Corned Beef Hash',), ('Eggs to order',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Yarmouth Bloaters',), ('Rice Cakes',), ('Strawberries',), ('Grape fruit',), ('Hot Rolls',), ('Boiled potatoes',), ('English Muffins',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Rolled Oats',), ('Fruit',), ('Apples',), ('Quaker Oats',), ('Fish cakes',), ('Fruits in Season',), ('Oatmeal Porridge',), ('Chocolate',), ('Broiled Ham',), ('Griddle cakes',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Grilled Mutton Chops',), ('Buckwheat Cakes',), ('Corned Beef Hash',), ('Eggs to order',), ('Split Rolls',), ('French bread',), ('Corn bread',), ('Yarmouth Bloaters',), ('Hot Rolls',), ('Boiled potatoes',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Rolled Oats',), ('Fruit',), ('Apples',), ('Fish cakes',), ('Fruits in Season',), ('Oatmeal Porridge',), ('Chocolate',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Corn bread',), ('Hot Rolls',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Fruit',), ('Oatmeal Porridge',), ('Chocolate',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('French bread',), ('Corn bread',), ('Hot Rolls',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Fruit',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('Corn bread',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Fruit',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('Corn bread',), ('Oranges',), ('Boiled rice',), ('Coffee',), ('Tea',), ('Fruit',), ('Broiled Ham',), ('Marmalade',), ('Jam',), ('Cocoa',), ('Corned Beef Hash',), ('Eggs to order',), ('Oranges',), ('Coffee',), ('Tea',), ('Fruit',), ('Marmalade',), ('Jam',), ('Corned Beef Hash',), ('Eggs to order',), ('Oranges',), ('Coffee',), ('Tea',), ('Fruit',), ('Marmalade',), ('Jam',), ('Coffee',), ('Tea',), ('Fruit',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Tea',), ('Marmalade',), ('Coffee',), ('Marmalade',), ('Coffee',), ('Coffee',), ('Coffee',), ('Coffee',), ('Coffee',))", "rowcount": 1001, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 373, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Apfelsinen',), ('Milchreis',), (\"Consomme aux Quenelle's\",), ('Baked Stuffed Mullet & Sauce Pomard',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Eggs as Ordered',), ('Fried & Boiled Potatoes',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Fillet de Boeuf a la Parisienne',), ('Bouchees aux Macaroni',), ('Roast Goose & Apple Sauce',), ('Mashed Pumpkins',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Cum-quats',), ('MacLaren Cheese',), ('A. A. Oats with Fresh Milk',), ('Batter Cakes',), ('Pork Cutlets',), ('Obst',), ('Nachtisch',), ('Pork Sausage and Mashed Potatoes',), ('China Teas',), ('Gemischtes Rahmeis',), ('Hot ribs of beef',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Scrambled Eggs and bacon',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Cold Steak Pie',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Milk rice',), ('Swiss Rolls',), ('Cotelettes de Veau, Sauce Tomate',), ('Fillet Steak ',), (\"Broiled Shad Maitre d'Hotel\",), ('Hafergrutze',), ('Egg to Order',), ('Apfelsinen',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Hafergrutze',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',))", "rowcount": 60, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Apfelsinen',), ('Milchreis',), (\"Consomme aux Quenelle's\",), ('Baked Stuffed Mullet & Sauce Pomard',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Eggs as Ordered',), ('Fried & Boiled Potatoes',), ('Roast (Vancouver) Suckling Pig & Bread Sauce',), ('Fillet de Boeuf a la Parisienne',), ('Bouchees aux Macaroni',), ('Roast Goose & Apple Sauce',), ('Mashed Pumpkins',), ('Indo Curry & Rice',), ('Steamed Apple Pudding & Hard Sauce',), ('Scotch Sandwiches',), ('Chocolate Cream & Sauce',), ('Cum-quats',), ('MacLaren Cheese',), ('A. A. Oats with Fresh Milk',), ('Batter Cakes',), ('Pork Cutlets',), ('Obst',), ('Nachtisch',), ('Pork Sausage and Mashed Potatoes',), ('China Teas',), ('Gemischtes Rahmeis',), ('Hot ribs of beef',), ('Smelts, Tartare sauce',), ('Beef Steak, Saratoga chips',), ('Scrambled Eggs and bacon',), ('Parmentier au Cerfeuil Soup',), ('Paysanne Soup',), ('Cold Half Chicken and Ham ',), ('Cold Steak Pie',), ('Pur\u00e9e of split peas aux croutons',), (\"Broiled shad, Ma\u00eetre d'h\u00f4tel\",), ('Milk rice',), ('Swiss Rolls',), ('Cotelettes de Veau, Sauce Tomate',), ('Fillet Steak ',), (\"Broiled Shad Maitre d'Hotel\",), ('Hafergrutze',), ('Egg to Order',), ('Apfelsinen',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Hafergrutze',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Grilled Mutton Chops',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',), ('Eggs to order',))", "rowcount": 60, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 374, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1000,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"date\" not found in FROM clause!\nCandidate bindings: \"Menu._date\", \"Menu.name\", \"Menu.place\", \"Menu.notes\", \"Menu.id\"\nLINE 1: ...l_number IS NULL AND EXTRACT(year FROM date) < 1950;\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 576, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('A', 5), ('CI', 2), ('CL', 1), ('RCH', 1), ('RT', 1), ('SF', 1), ('THA', 1), ('AUS', 1), ('EAU', 1), ('MA', 1), ('NEP', 1), ('RB', 1), ('B', 10), ('ET', 1), ('PE', 1), ('SUD', 1), ('UAE', 1), ('WL', 1), ('YV', 1), ('ETH', 2), ('GUY', 1), ('NCA', 1), ('RP', 1), ('SGP', 1), ('FJI', 1), ('G', 1), ('GCA', 1), ('H', 1), ('SA', 3), ('WAN', 1), ('JOR', 2), ('S', 1), ('SYR', 1), ('DJI', 1), ('HCA', 1), ('RA', 1), ('RCA', 1), ('RCB', 1), ('ROU', 1), ('BY', 1), ('CH', 17), ('CZ', 1), ('IL', 1), ('IR', 1), ('L', 1), ('RSA', 1))", "rowcount": 46, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('A', 5), ('CI', 2), ('CL', 1), ('RCH', 1), ('RT', 1), ('SF', 1), ('THA', 1), ('AUS', 1), ('EAU', 1), ('MA', 1), ('NEP', 1), ('RB', 1), ('B', 10), ('ET', 1), ('PE', 1), ('SUD', 1), ('UAE', 1), ('WL', 1), ('YV', 1), ('JOR', 2), ('S', 1), ('SYR', 1), ('DJI', 1), ('ETH', 2), ('GUY', 1), ('NCA', 1), ('RP', 1), ('SGP', 1), ('FJI', 1), ('HCA', 1), ('RA', 1), ('RCA', 1), ('RCB', 1), ('ROU', 1), ('BY', 1), ('CH', 17), ('CZ', 1), ('IL', 1), ('IR', 1), ('L', 1), ('RSA', 1), ('G', 1), ('GCA', 1), ('H', 1), ('SA', 3), ('WAN', 1))", "rowcount": 46, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 577, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('SP',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SP',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 578, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Amazonas', 'Amapa,Amazonas,Amazonas,Cuzco,Ucayali,Loreto,Para'), ('Bani', 'Cote dIvoire,Mali'), ('Chire', 'Malawi,Tete,Zambezia'), ('Douro', 'Aveiro,Guarda,Porto,Viseu,Castile and Leon,Vila Real,Braganca'), ('Elbe', 'Brandenburg,Niedersachsen,Mecklenburg Vorpommern,Hamburg,Sachsen Anhalt,Severocesky,Vychodocesky,Praha,Schleswig Holstein,Sachsen'), ('Luapula', 'Luapula,Shaba/Katanga'), ('Nile', 'al Khartum,Kafr el Sheikh,Dumyat,El Daqahliya,Asyut,El Buhayra,El Minya,Beni Suef,El Qalubiya,Sohag,El Qahira,Sharqiya,El Minufiya,El Gharbiya,ash Shamaliyah,Aswan,El Giza,Qena'), ('Rio Madeira', 'Amazonas,Rondonia,Bolivia'), ('Saar', 'Alsace,Saarland,Lorraine,Rheinland Pfalz'), ('Schatt al Arab', 'Al Basrah,Khuzestan'), ('Senegal', 'Guinea,Mauritania,Mali,Saint Louis,Tambacounda'), ('Syrdarja', 'Khujand,Toshkent,Ongtustik Qazaqstan,Namangan,Qyzylorda'), ('Volta', 'Burkina Faso,Ghana'), ('Black Drin', 'Albania,Macedonia'), ('Bomu', 'Central African Republic,Haut Zaire'), ('Drau', 'Baranya,Slovenia,Trentino Alto Adige,Somogy,Carinthia,Croatia,Zala'), ('Kura', 'Azerbaijan,Georgia,Kars'), ('Maas', 'Champagne Ardenne,Lorraine,Limburg,Noord Brabant,Limburg,Zuid Holland,Liege,Namur,Gelderland'), ('Niger', 'Guinea,Mali,Niger,Nigeria'), ('Pjandsh', 'Afghanistan,Kulob,Khatlon,Badakhshoni Kuni'), ('Raab', 'Burgenland,Gyor Sopron,Vas,Veszprem,Gyor (munic.),Styria'), ('Rhone', 'GE,Languedoc Roussillon,VD,Provence Cote dAzur,Rhone Alpes,VS'), ('Rio Grande', 'Chihuahua,Tamaulipas,Texas,New Mexico,Colorado,Nuevo Leon,Coahuila'), ('Uruguay', 'Corrientes,Uruguay,Rio Grande do Sul,Misiones,Entre Rios'), ('Western Dwina', 'Belarus,Smolenskaya oblast,Latvia'), ('Akagera', 'Mwanza,Rwanda'), ('Atbara', 'ash Shamaliyah,Ethiopia,ash Sharqiyah'), ('Bahr el-Djebel/Albert-Nil', 'Aali an Nil,Bahr al Ghazal,al Istiwaiyah,Uganda'), ('Colorado', 'Arizona,Utah,Colorado,Baja California,Nevada,California,Sonora'), ('Irawaddy', 'Ayeyarwady,Tibet,Sagaing,Yunnan,Magway,Yangon,Mandalay,Bago,Kachin'), ('Lech', 'Bayern,Tyrol,Vorarlberg'), ('Schari', 'Central African Republic,Nord extreme,Chad'), ('Zaire', 'Bandundu,Haut Zaire,Congo,Bas Zaire,Kinshasa,Equateur'), ('Argun', 'Chitinskaya oblast,Heilongjiang'), ('Dnepr', 'Belarus,Kirovohradska,Chernihivska,Khersonska,Poltavska,Zaporizka,Dnipropetrovska,Cherkaska,Smolenskaya oblast,Kyyivska'), ('Garonne', 'Aquitaine,Midi Pyrenees,Catalonia,Languedoc Roussillon'), ('Indus', 'Jammu and Kashmir,Pakistan,Tibet'), ('Irtysch', 'Omskaya oblast,Semey,Shyghys Qazaqstan,Tyumenskaya oblast,Xinjiang Uygur,Pavlodar'), ('Kasai', 'Bandundu,Shaba/Katanga,Lunda Norte,Kasai Occidental,Lunda Sul,Moxico'), ('March', 'Jihomoravsky,Severomoravsky,Lower Austria,Slovakia'), ('Naryn', 'Kyrgyzstan,Toshkent'), ('Orinoco', 'Amazonas,Delta Amacuro,Anzoategui,Apure,Bolivar,Guarico,Guainia,Monagas,Vichada'), ('Rio San Juan', 'Alajuela,Heredia,Nicaragua,Limon'), ('Tigris', 'Ad Tamim,Babil,Salah ad Din,Syria,Baghdad,Ninawa,Arbil,Wasit,Al Basrah,Maysan,Batman,Siirt,Mardin,Sirnak,Dahuk,Diyarbakir'), ('White Drin', 'Albania,Kosovo'), ('Yukon River', 'Alaska,Yukon Territory'), ('Amudarja', 'Afghanistan,Khatlon,Dashhowuz,Samarqand,Leban,Qaraqalpoghiston'), ('Brahmaputra', 'Arunachal Pradesh,Assam,Bangladesh,Tibet'), ('Columbia River', 'British Columbia,Oregon,Washington'), ('Cuango', 'Bandundu,Uige,Malanje,Bas Zaire,Lunda Norte,Lunda Sul'), ('Cuilo', 'Bandundu,Cuando Cubango,Bie,Moxico'), ('Dnjestr', 'Chernivetska,Lvivska,Ivano Frankivska,Odeska,Moldova,Khmelnytska,Ternopilska,Vinnytska'), ('Ganges', 'Bangladesh,Bihar,Uttar Pradesh,West Bengal'), ('Inn', 'Bayern,Tyrol,GR'), ('Jubba', 'Ethiopia,Somalia'), ('Klaraelv', 'Hedmark,Varmland'), ('Limpopo', 'Botswana,Gaza,Limpopo,Zimbabwe,Gauteng'), ('Paraguay', 'Bolivia,Mato Grosso,Paraguay,Chaco,Formosa,Mato Grosso do Sul'), ('Pruth', 'Botosani,Ivano Frankivska,Chernivetska,Moldova,Iasi,Vaslui,Galati'), ('Salzach', 'Bayern,Salzburg'), ('Save', 'Bosnia and Herzegovina,Croatia,Slovenia,Serbia'), ('Southern Morava', 'Kosovo,Macedonia,Serbia'), ('Tajo', 'Castelo Branco,Estremadura,Santarem,Castile La Mancha,Lisbon,Portalegre'), ('Benue', 'Nigeria,Nord'), ('Detroit River', 'Michigan,Ontario'), ('Doubs', 'Bourgogne,Franche Comte,JU'), ('Guadiana', 'Algarve,Castile La Mancha,Evora,Estremadura,Beja,Portalegre,Andalusia'), ('Ischim', 'Omskaya oblast,Tyumenskaya oblast,Qaraghandy,Soltustik Qazaqstan'), ('Niagara River', 'New York,Ontario'), ('Paatsjoki', 'Finnmark,Murmanskaya oblast,Lappia'), ('Parana', 'Buenos Aires,Mato Grosso do Sul,Goias,Sao Paulo,Santa Fe,Corrientes,Entre Rios,Paraguay,Minas Gerais,Misiones,Distrito Federal,Parana,Chaco'), ('Sanga', 'Central African Republic,Congo,Est'), ('Shabelle', 'Ethiopia,Somalia'), ('Theiss', 'Borsod Abauj Zemplen,Hajdu Bihar,Csongrad,Heves,Ivano Frankivska,Szabolcs Szatmar,Szolnok,Zakarpatska,Serbia,Chernivetska,Szeged (munic.)'), ('Gambia', 'Gambia,Tambacounda,Guinea,Kolda'), ('Oder', 'Brandenburg,Severomoravsky,Wroclawskie,Gorzowskie,Zielonogorskie,Opolskie,Mecklenburg Vorpommern,Legnickie,Sachsen,Szczecinskie'), ('Oranje', 'Free State,Lesotho,Namibia,Northern Cape'), ('Rio Negro', 'Amazonas,Guainia,Roraima'), ('Semliki', 'Haut Zaire,Kivu,Uganda'), ('Sobat', 'Aali an Nil,Ethiopia'), ('Ubangi', 'Central African Republic,Equateur,Congo'), ('Zambezi', 'Central,Tete,Northwestern,Zimbabwe,Lusaka,Western,Moxico,Southern,Manica,Zambezia'), ('Amur', 'Amurskaya oblast,Yevreyskaya avt. oblast,Heilongjiang,Khabarovskiy kray,Chitinskaya oblast'), ('Blue Nile', 'al Khartum,Nil al Asraq,Ethiopia'), ('Donau', 'Bacs Kiskun,Slovakia,Mehedinti,Odeska,Baden Wurttemberg,Upper Austria,Teleorman,Croatia,Baranya,Bulgaria,Pest,Olt,Tolna,Caras Severin,Bayern,Ialomita,Fejer,Galati,Vienna,Calarasi,Serbia,Moldova,Lower Austria,Dolj,Tulcea,Giurgiu,Komarom Esztergom,Braila,Constanta,Budapest (munic.)'), ('Euphrat', 'Adiyaman,Al Muthanna,Al Anbar,Gaziantep,Al Qadisiyah,An Najaf,Dhi Qar,Babil,Karbala,Syria,Malatya,Sanliurfa,Al Basrah,Ninawa'), ('Iller', 'Baden Wurttemberg,Vorarlberg,Bayern'), ('Isar', 'Bayern,Tyrol'), ('Jordan', 'Jordan,West Bank,North,Lebanon,Syria'), ('Mekong', 'Cambodia,Yunnan,Thailand,Tibet,Vietnam,Laos'), ('Mosel', 'Lorraine,Saarland,Luxembourg,Rheinland Pfalz'), ('Mur', 'Croatia,Styria,Slovenia,Zala,Salzburg'), ('Narva', 'Estonia,Pskovskaya oblast'), ('Rhein', 'AG,TG,Baden Wurttemberg,SH,BL,Vorarlberg,Liechtenstein,ZH,Nordrhein Westfalen,Hessen,Rheinland Pfalz,Gelderland,Alsace,Zuid Holland,SG,BS,GR'), ('Ruzizi', 'Burundi,Kivu,Rwanda'), ('Saint Lawrence River', 'New York,Quebec'), ('Saluen', 'Kayah,Mon,Shan,Yunnan,Kayin,Tibet'), ('Ticino', 'Lombardia,Piemonte,TI'), ('Tobol', 'Kurganskaya oblast,Orenburgskaya oblast,Qostanay,Tyumenskaya oblast'), ('Ural', 'Atyrau,Batys Qazaqstan,Orenburgskaya oblast,Chelyabinskaya oblast,Rep. of Bashkortostan'), ('Vuoksi', 'Kuopio,Rep. of Karelia,Kymi'))", "rowcount": 101, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Akagera', 'Mwanza,Rwanda'), ('Atbara', 'ash Shamaliyah,Ethiopia,ash Sharqiyah'), ('Bahr el-Djebel/Albert-Nil', 'Aali an Nil,Bahr al Ghazal,al Istiwaiyah,Uganda'), ('Colorado', 'Arizona,Utah,Colorado,Baja California,Nevada,California,Sonora'), ('Irawaddy', 'Ayeyarwady,Tibet,Sagaing,Yunnan,Magway,Yangon,Mandalay,Bago,Kachin'), ('Lech', 'Bayern,Tyrol,Vorarlberg'), ('Schari', 'Central African Republic,Nord extreme,Chad'), ('Zaire', 'Bandundu,Haut Zaire,Congo,Bas Zaire,Kinshasa,Equateur'), ('Amazonas', 'Amapa,Amazonas,Amazonas,Cuzco,Ucayali,Loreto,Para'), ('Bani', 'Cote dIvoire,Mali'), ('Chire', 'Malawi,Tete,Zambezia'), ('Douro', 'Aveiro,Guarda,Porto,Viseu,Castile and Leon,Vila Real,Braganca'), ('Elbe', 'Brandenburg,Niedersachsen,Mecklenburg Vorpommern,Hamburg,Sachsen Anhalt,Severocesky,Vychodocesky,Praha,Schleswig Holstein,Sachsen'), ('Luapula', 'Luapula,Shaba/Katanga'), ('Nile', 'al Khartum,Kafr el Sheikh,Dumyat,El Daqahliya,Asyut,El Buhayra,El Minya,Beni Suef,El Qalubiya,Sohag,El Qahira,Sharqiya,El Minufiya,El Gharbiya,ash Shamaliyah,Aswan,El Giza,Qena'), ('Rio Madeira', 'Amazonas,Rondonia,Bolivia'), ('Saar', 'Alsace,Saarland,Lorraine,Rheinland Pfalz'), ('Schatt al Arab', 'Al Basrah,Khuzestan'), ('Senegal', 'Guinea,Mauritania,Mali,Saint Louis,Tambacounda'), ('Syrdarja', 'Khujand,Toshkent,Ongtustik Qazaqstan,Namangan,Qyzylorda'), ('Volta', 'Burkina Faso,Ghana'), ('Black Drin', 'Albania,Macedonia'), ('Bomu', 'Central African Republic,Haut Zaire'), ('Drau', 'Baranya,Slovenia,Trentino Alto Adige,Somogy,Carinthia,Croatia,Zala'), ('Kura', 'Azerbaijan,Georgia,Kars'), ('Maas', 'Champagne Ardenne,Lorraine,Limburg,Noord Brabant,Limburg,Zuid Holland,Liege,Namur,Gelderland'), ('Niger', 'Guinea,Mali,Niger,Nigeria'), ('Pjandsh', 'Afghanistan,Kulob,Khatlon,Badakhshoni Kuni'), ('Raab', 'Burgenland,Gyor Sopron,Vas,Veszprem,Gyor (munic.),Styria'), ('Rhone', 'GE,Languedoc Roussillon,VD,Provence Cote dAzur,Rhone Alpes,VS'), ('Rio Grande', 'Chihuahua,Tamaulipas,Texas,New Mexico,Colorado,Nuevo Leon,Coahuila'), ('Uruguay', 'Corrientes,Uruguay,Rio Grande do Sul,Misiones,Entre Rios'), ('Western Dwina', 'Belarus,Smolenskaya oblast,Latvia'), ('Amur', 'Amurskaya oblast,Yevreyskaya avt. oblast,Heilongjiang,Khabarovskiy kray,Chitinskaya oblast'), ('Blue Nile', 'al Khartum,Nil al Asraq,Ethiopia'), ('Donau', 'Bacs Kiskun,Slovakia,Mehedinti,Odeska,Baden Wurttemberg,Upper Austria,Teleorman,Croatia,Baranya,Bulgaria,Pest,Olt,Tolna,Caras Severin,Bayern,Ialomita,Fejer,Galati,Vienna,Calarasi,Serbia,Moldova,Lower Austria,Dolj,Tulcea,Giurgiu,Komarom Esztergom,Braila,Constanta,Budapest (munic.)'), ('Euphrat', 'Adiyaman,Al Muthanna,Al Anbar,Gaziantep,Al Qadisiyah,An Najaf,Dhi Qar,Babil,Karbala,Syria,Malatya,Sanliurfa,Al Basrah,Ninawa'), ('Iller', 'Baden Wurttemberg,Vorarlberg,Bayern'), ('Isar', 'Bayern,Tyrol'), ('Jordan', 'Jordan,West Bank,North,Lebanon,Syria'), ('Mekong', 'Cambodia,Yunnan,Thailand,Tibet,Vietnam,Laos'), ('Mosel', 'Lorraine,Saarland,Luxembourg,Rheinland Pfalz'), ('Mur', 'Croatia,Styria,Slovenia,Zala,Salzburg'), ('Narva', 'Estonia,Pskovskaya oblast'), ('Rhein', 'AG,TG,Baden Wurttemberg,SH,BL,Vorarlberg,Liechtenstein,ZH,Nordrhein Westfalen,Hessen,Rheinland Pfalz,Gelderland,Alsace,Zuid Holland,SG,BS,GR'), ('Ruzizi', 'Burundi,Kivu,Rwanda'), ('Saint Lawrence River', 'New York,Quebec'), ('Saluen', 'Kayah,Mon,Shan,Yunnan,Kayin,Tibet'), ('Ticino', 'Lombardia,Piemonte,TI'), ('Tobol', 'Kurganskaya oblast,Orenburgskaya oblast,Qostanay,Tyumenskaya oblast'), ('Ural', 'Atyrau,Batys Qazaqstan,Orenburgskaya oblast,Chelyabinskaya oblast,Rep. of Bashkortostan'), ('Vuoksi', 'Kuopio,Rep. of Karelia,Kymi'), ('Argun', 'Chitinskaya oblast,Heilongjiang'), ('Dnepr', 'Belarus,Kirovohradska,Chernihivska,Khersonska,Poltavska,Zaporizka,Dnipropetrovska,Cherkaska,Smolenskaya oblast,Kyyivska'), ('Garonne', 'Aquitaine,Midi Pyrenees,Catalonia,Languedoc Roussillon'), ('Indus', 'Jammu and Kashmir,Pakistan,Tibet'), ('Irtysch', 'Omskaya oblast,Semey,Shyghys Qazaqstan,Tyumenskaya oblast,Xinjiang Uygur,Pavlodar'), ('Kasai', 'Bandundu,Shaba/Katanga,Lunda Norte,Kasai Occidental,Lunda Sul,Moxico'), ('March', 'Jihomoravsky,Severomoravsky,Lower Austria,Slovakia'), ('Naryn', 'Kyrgyzstan,Toshkent'), ('Orinoco', 'Amazonas,Delta Amacuro,Anzoategui,Apure,Bolivar,Guarico,Guainia,Monagas,Vichada'), ('Rio San Juan', 'Alajuela,Heredia,Nicaragua,Limon'), ('Tigris', 'Ad Tamim,Babil,Salah ad Din,Syria,Baghdad,Ninawa,Arbil,Wasit,Al Basrah,Maysan,Batman,Siirt,Mardin,Sirnak,Dahuk,Diyarbakir'), ('White Drin', 'Albania,Kosovo'), ('Yukon River', 'Alaska,Yukon Territory'), ('Amudarja', 'Afghanistan,Khatlon,Dashhowuz,Samarqand,Leban,Qaraqalpoghiston'), ('Brahmaputra', 'Arunachal Pradesh,Assam,Bangladesh,Tibet'), ('Columbia River', 'British Columbia,Oregon,Washington'), ('Cuango', 'Bandundu,Uige,Malanje,Bas Zaire,Lunda Norte,Lunda Sul'), ('Cuilo', 'Bandundu,Cuando Cubango,Bie,Moxico'), ('Dnjestr', 'Chernivetska,Lvivska,Ivano Frankivska,Odeska,Moldova,Khmelnytska,Ternopilska,Vinnytska'), ('Ganges', 'Bangladesh,Bihar,Uttar Pradesh,West Bengal'), ('Inn', 'Bayern,Tyrol,GR'), ('Jubba', 'Ethiopia,Somalia'), ('Klaraelv', 'Hedmark,Varmland'), ('Limpopo', 'Botswana,Gaza,Limpopo,Zimbabwe,Gauteng'), ('Paraguay', 'Bolivia,Mato Grosso,Paraguay,Chaco,Formosa,Mato Grosso do Sul'), ('Pruth', 'Botosani,Ivano Frankivska,Chernivetska,Moldova,Iasi,Vaslui,Galati'), ('Salzach', 'Bayern,Salzburg'), ('Save', 'Bosnia and Herzegovina,Croatia,Slovenia,Serbia'), ('Southern Morava', 'Kosovo,Macedonia,Serbia'), ('Tajo', 'Castelo Branco,Estremadura,Santarem,Castile La Mancha,Lisbon,Portalegre'), ('Gambia', 'Gambia,Tambacounda,Guinea,Kolda'), ('Oder', 'Brandenburg,Severomoravsky,Wroclawskie,Gorzowskie,Zielonogorskie,Opolskie,Mecklenburg Vorpommern,Legnickie,Sachsen,Szczecinskie'), ('Oranje', 'Free State,Lesotho,Namibia,Northern Cape'), ('Rio Negro', 'Amazonas,Guainia,Roraima'), ('Semliki', 'Haut Zaire,Kivu,Uganda'), ('Sobat', 'Aali an Nil,Ethiopia'), ('Ubangi', 'Central African Republic,Equateur,Congo'), ('Zambezi', 'Central,Tete,Northwestern,Zimbabwe,Lusaka,Western,Moxico,Southern,Manica,Zambezia'), ('Benue', 'Nigeria,Nord'), ('Detroit River', 'Michigan,Ontario'), ('Doubs', 'Bourgogne,Franche Comte,JU'), ('Guadiana', 'Algarve,Castile La Mancha,Evora,Estremadura,Beja,Portalegre,Andalusia'), ('Ischim', 'Omskaya oblast,Tyumenskaya oblast,Qaraghandy,Soltustik Qazaqstan'), ('Niagara River', 'New York,Ontario'), ('Paatsjoki', 'Finnmark,Murmanskaya oblast,Lappia'), ('Parana', 'Buenos Aires,Mato Grosso do Sul,Goias,Sao Paulo,Santa Fe,Corrientes,Entre Rios,Paraguay,Minas Gerais,Misiones,Distrito Federal,Parana,Chaco'), ('Sanga', 'Central African Republic,Congo,Est'), ('Shabelle', 'Ethiopia,Somalia'), ('Theiss', 'Borsod Abauj Zemplen,Hajdu Bihar,Csongrad,Heves,Ivano Frankivska,Szabolcs Szatmar,Szolnok,Zakarpatska,Serbia,Chernivetska,Szeged (munic.)'))", "rowcount": 101, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 582, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Belgium',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Belgium',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 583, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5, 62.5))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5, 62.5))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 3, "FN": 0}
{"sql_id": 584, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('African, Caribbean, and Pacific Countries',), ('South Pacific Forum',), ('Caribbean Community and Common Market',), ('Central African States Development Bank',), ('Latin American Integration Association',), ('West African Development Bank',), ('Nordic Investment Bank',), ('Arab Bank for Economic Development in Africa',), ('United Nations Disengagement Observer Force',), ('Arab Monetary Fund',), ('Economic Community of West African States',), ('Latin American Economic System',), ('Agency for Cultural and Technical Cooperation',), ('Economic Community of the Great Lakes Countries',), ('European Space Agency',), ('Economic and Social Commission for Western Asia',), ('Group of 19',), ('Group of 24',), ('Group of 8',), ('Islamic Development Bank',), ('International Energy Agency',), ('International Fund for Agricultural Development',), ('International Mobile Satellite Organization',), ('International Telecommunications Satellite Organization',), ('United Nations Interim Force in Lebanon',), ('United Nations University',), ('World Tourism Organization',))", "rowcount": 27, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('African, Caribbean, and Pacific Countries',), ('South Pacific Forum',), ('Caribbean Community and Common Market',), ('Central African States Development Bank',), ('Latin American Integration Association',), ('West African Development Bank',), ('Nordic Investment Bank',), ('Arab Bank for Economic Development in Africa',), ('United Nations Disengagement Observer Force',), ('Arab Monetary Fund',), ('Economic Community of West African States',), ('Latin American Economic System',), ('Agency for Cultural and Technical Cooperation',), ('Economic Community of the Great Lakes Countries',), ('European Space Agency',), ('Economic and Social Commission for Western Asia',), ('Group of 19',), ('Group of 24',), ('Group of 8',), ('Islamic Development Bank',), ('International Energy Agency',), ('International Fund for Agricultural Development',), ('International Mobile Satellite Organization',), ('International Telecommunications Satellite Organization',), ('United Nations Interim Force in Lebanon',), ('United Nations University',), ('World Tourism Organization',))", "rowcount": 27, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 585, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('1949',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('1949',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 586, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('AG', datetime.date(1981, 11, 1), None, 'parliamentary democracy'), ('BZ', datetime.date(1981, 9, 21), None, 'parliamentary democracy'), ('CZ', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('HR', datetime.date(1991, 6, 25), None, 'parliamentary democracy'), ('PNG', datetime.date(1975, 9, 16), None, 'parliamentary democracy'), ('SK', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('SLB', datetime.date(1978, 7, 7), None, 'parliamentary democracy'), ('WD', datetime.date(1978, 11, 3), None, 'parliamentary democracy'), ('WG', datetime.date(1974, 2, 7), None, 'parliamentary democracy'), ('WL', datetime.date(1979, 2, 22), None, 'parliamentary democracy'), ('ZW', datetime.date(1980, 4, 18), None, 'parliamentary democracy'), ('BDS', datetime.date(1966, 11, 30), None, 'parliamentary democracy'), ('JA', datetime.date(1962, 8, 6), None, 'parliamentary democracy'), ('M', datetime.date(1964, 9, 21), None, 'parliamentary democracy'), ('MS', datetime.date(1968, 3, 12), None, 'parliamentary democracy'), ('TT', datetime.date(1962, 8, 31), None, 'parliamentary democracy'))", "rowcount": 16, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('AG', datetime.date(1981, 11, 1), None, 'parliamentary democracy'), ('BZ', datetime.date(1981, 9, 21), None, 'parliamentary democracy'), ('CZ', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('HR', datetime.date(1991, 6, 25), None, 'parliamentary democracy'), ('PNG', datetime.date(1975, 9, 16), None, 'parliamentary democracy'), ('SK', datetime.date(1993, 1, 1), None, 'parliamentary democracy'), ('SLB', datetime.date(1978, 7, 7), None, 'parliamentary democracy'), ('WD', datetime.date(1978, 11, 3), None, 'parliamentary democracy'), ('WG', datetime.date(1974, 2, 7), None, 'parliamentary democracy'), ('WL', datetime.date(1979, 2, 22), None, 'parliamentary democracy'), ('ZW', datetime.date(1980, 4, 18), None, 'parliamentary democracy'), ('BDS', datetime.date(1966, 11, 30), None, 'parliamentary democracy'), ('JA', datetime.date(1962, 8, 6), None, 'parliamentary democracy'), ('M', datetime.date(1964, 9, 21), None, 'parliamentary democracy'), ('MS', datetime.date(1968, 3, 12), None, 'parliamentary democracy'), ('TT', datetime.date(1962, 8, 31), None, 'parliamentary democracy'))", "rowcount": 16, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 587, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7.563024997711182,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7.563024997711182,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 575, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((43.33333206176758,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((43.33333206176758,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 53, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1500.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Parser Error: syntax error at or near \")\"", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 3}
{"sql_id": 182, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 184, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((31.871837615966797,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((31.871837615966797,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 185, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 186, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.257328987121582,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.257328987121582,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 187, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 188, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 189, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 191, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None, None, None, None, 273045, 'Documentary'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None, None, None, None, 273045, 'Documentary'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 0, "FN": 0}
{"sql_id": 181, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((24.200000762939453,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((24.200000762939453,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 183, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((98.4000015258789,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((98.4000015258789,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 190, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-35.63218307495117,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-35.63218307495117,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 40, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 41, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((82677500.47867298,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: No function matches the given name and argument types 'substr(DATE, INTEGER_LITERAL, INTEGER_LITERAL)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tsubstr(VARCHAR, BIGINT, BIGINT) -> VARCHAR\n\tsubstr(VARCHAR, BIGINT) -> VARCHAR\n\nLINE 1: ... = 'United States of America' AND CAST(SUBSTR(T1.release_date, 1, 4) AS INTEGE...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 42, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((61641217.33333334,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: No function matches the given name and argument types 'substr(DATE, INTEGER_LITERAL, INTEGER_LITERAL)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tsubstr(VARCHAR, BIGINT, BIGINT) -> VARCHAR\n\tsubstr(VARCHAR, BIGINT) -> VARCHAR\n\nLINE 5: WHERE CAST(SUBSTR(T1.release_date, 1, 4) AS INTEGER) = 2016;...\n                   ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 43, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Four Rooms',), ('Star Wars',), ('Forrest Gump',), ('American Beauty',), ('The Fifth Element',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Four Rooms',), ('Star Wars',), ('Forrest Gump',), ('American Beauty',), ('The Fifth Element',))", "rowcount": 5, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 44, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1307,), (1308,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1307,), (1308,))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 45, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Spellbound',), ('State Fair',), ('The Lost Weekend',), ('The Valley of Decision',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Spellbound',), ('State Fair',), ('The Lost Weekend',), ('The Valley of Decision',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 46, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: No function matches the given name and argument types 'substr(DATE, INTEGER_LITERAL, INTEGER_LITERAL)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tsubstr(VARCHAR, BIGINT, BIGINT) -> VARCHAR\n\tsubstr(VARCHAR, BIGINT) -> VARCHAR\n\nLINE 1: ...E T3.genre_name = 'Adventure' AND CAST(SUBSTR(T1.release_date, 1, 4) AS INTEGE...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 47, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Shaft',), ('Mission: Impossible II',), ('The Next Best Thing',), ('What Women Want',), ('Bless the Child',), ('Lucky Numbers',), ('Wonder Boys',), ('Snow Day',), ('Rugrats in Paris: The Movie',), ('The Next Best Thing',), ('Rugrats in Paris: The Movie',))", "rowcount": 11, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Shaft',), ('Mission: Impossible II',), ('The Next Best Thing',), ('What Women Want',), ('Bless the Child',), ('Lucky Numbers',), ('Wonder Boys',), ('Snow Day',), ('Rugrats in Paris: The Movie',), ('The Next Best Thing',), ('Rugrats in Paris: The Movie',))", "rowcount": 11, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 647, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 648, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.699999809265137,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6.7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 649, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7.703747619741146,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7.703747619741146,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 651, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 654, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((421,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 1: ...(DISTINCT rental_id) FROM rental WHERE date(rental_date) BETWEEN '2005-05-26' ...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 655, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.504173517227173,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.504173517227173,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 658, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 659, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: No function matches the given name and argument types 'substr(DOUBLE, INTEGER_LITERAL, INTEGER_LITERAL)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tsubstr(VARCHAR, BIGINT, BIGINT) -> VARCHAR\n\tsubstr(VARCHAR, BIGINT) -> VARCHAR\n\nLINE 9: AND CAST(SUBSTR(T3.rental_rate, 1, 4) AS INTEGER) = 2006\nAND CAST(SUBSTR(T3.rental_rate, 6, 2) AS INTEGER) = 2;...\n                 ^", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 2}
{"sql_id": 660, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10.016694068908691,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10.016694068908691,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 661, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((nan,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 662, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 663, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('SANDRA', 'MARTIN', 'SANDRA.MARTIN@sakilacustomer.org'), ('JUDITH', 'COX', 'JUDITH.COX@sakilacustomer.org'), ('SHEILA', 'WELLS', 'SHEILA.WELLS@sakilacustomer.org'), ('ERICA', 'MATTHEWS', 'ERICA.MATTHEWS@sakilacustomer.org'), ('HEIDI', 'LARSON', 'HEIDI.LARSON@sakilacustomer.org'), ('PENNY', 'NEAL', 'PENNY.NEAL@sakilacustomer.org'), ('KENNETH', 'GOODEN', 'KENNETH.GOODEN@sakilacustomer.org'), ('HARRY', 'ARCE', 'HARRY.ARCE@sakilacustomer.org'), ('NATHAN', 'RUNYON', 'NATHAN.RUNYON@sakilacustomer.org'), ('THEODORE', 'CULP', 'THEODORE.CULP@sakilacustomer.org'), ('MAURICE', 'CRAWLEY', 'MAURICE.CRAWLEY@sakilacustomer.org'), ('BEN', 'EASTER', 'BEN.EASTER@sakilacustomer.org'), ('CHRISTIAN', 'JUNG', 'CHRISTIAN.JUNG@sakilacustomer.org'), ('JIMMIE', 'EGGLESTON', 'JIMMIE.EGGLESTON@sakilacustomer.org'), ('TERRANCE', 'ROUSH', 'TERRANCE.ROUSH@sakilacustomer.org'))", "rowcount": 15, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SANDRA', 'MARTIN', 'SANDRA.MARTIN@sakilacustomer.org'), ('JUDITH', 'COX', 'JUDITH.COX@sakilacustomer.org'), ('SHEILA', 'WELLS', 'SHEILA.WELLS@sakilacustomer.org'), ('ERICA', 'MATTHEWS', 'ERICA.MATTHEWS@sakilacustomer.org'), ('HEIDI', 'LARSON', 'HEIDI.LARSON@sakilacustomer.org'), ('PENNY', 'NEAL', 'PENNY.NEAL@sakilacustomer.org'), ('KENNETH', 'GOODEN', 'KENNETH.GOODEN@sakilacustomer.org'), ('HARRY', 'ARCE', 'HARRY.ARCE@sakilacustomer.org'), ('NATHAN', 'RUNYON', 'NATHAN.RUNYON@sakilacustomer.org'), ('THEODORE', 'CULP', 'THEODORE.CULP@sakilacustomer.org'), ('MAURICE', 'CRAWLEY', 'MAURICE.CRAWLEY@sakilacustomer.org'), ('BEN', 'EASTER', 'BEN.EASTER@sakilacustomer.org'), ('CHRISTIAN', 'JUNG', 'CHRISTIAN.JUNG@sakilacustomer.org'), ('JIMMIE', 'EGGLESTON', 'JIMMIE.EGGLESTON@sakilacustomer.org'), ('TERRANCE', 'ROUSH', 'TERRANCE.ROUSH@sakilacustomer.org'))", "rowcount": 15, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 665, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 666, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-0.008347245409015025,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-0.008347245409015025,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 667, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 670, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 671, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 672, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('MARIE',), ('DAWN',), ('SYLVIA',), ('MICHELE',), ('LYNN',), ('JACKIE',), ('STANLEY',))", "rowcount": 7, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 673, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.0999999046325684,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.0999999046325684,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 674, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 675, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((6.800000190734863,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6.800000190734863,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 676, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.599999904632568,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 677, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2.1715098488385878,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.1715098488385878,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 679, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.599999904632568,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 682, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 650, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8.571428298950195,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8.571428298950195,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 1, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('A Clockwork Orange', 1971))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('A Clockwork Orange', 1971))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 2, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 562, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Omg please the heck fix it',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Omg please the heck fix it',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 563, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Classical Minutes: Musical Skills and Motivation | Tips and Insights | Instrumental Coaching | Onlin...',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Classical Minutes: Musical Skills and Motivation | Tips and Insights | Instrumental Coaching | Onlin...',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 237, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3.112449884414673,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3.112449884414673,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 236, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-13.370914459228516,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-13.3709135055542,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 2, "FN": 0}
{"sql_id": 254, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 217, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Medsep Group',), ('Ole Group',), ('Pure Group',), ('Prasco Group',), ('Wuxi Group',), ('S.S.S. Group',), ('Uriel Group',), ('Amylin Group',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Medsep Group',), ('Ole Group',), ('Pure Group',), ('Prasco Group',), ('Wuxi Group',), ('S.S.S. Group',), ('Uriel Group',), ('Amylin Group',))", "rowcount": 8, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 218, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Linde ',), ('Prasco Group',), ('Elorac, Corp',), ('Dharma Ltd',), ('O.E. Ltd',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Prasco Group',), ('Linde ',), ('Elorac, Corp',), ('Dharma Ltd',), ('O.E. Ltd',))", "rowcount": 5, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 219, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 220, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SO - 000163',), ('SO - 000165',), ('SO - 000136',), ('SO - 000106',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('SO - 000136',), ('SO - 000106',), ('SO - 000163',), ('SO - 000165',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 222, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Georgia',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Georgia',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 224, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('6/13/18',), ('12/8/18',), ('7/3/18',), ('1/13/19',), ('10/9/18',), ('10/13/18',), ('6/16/18',), ('11/13/18',), ('6/21/18',), ('1/3/19',), ('1/4/19',), ('1/18/19',), ('10/12/18',), ('11/4/18',), ('11/27/18',), ('12/22/18',), ('7/4/18',), ('10/15/18',), ('10/19/18',), ('10/18/18',), ('10/26/18',), ('11/10/18',), ('11/15/18',), ('11/23/18',), ('12/11/18',), ('12/28/18',), ('12/29/18',))", "rowcount": 27, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T2\" does not have a column named \"Product Name\"\nLINE 1: ...ECT T FROM ( SELECT DISTINCT CASE WHEN T2.\"Product Name\" = 'Cookware' THEN T1....\n                                                  ^", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 225, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Pendants',), ('Accessories',), ('Table Lamps',), ('Floral',), ('Floor Lamps',), ('Cocktail Glasses',), ('Bakeware',), ('Serveware',), ('Table Linens',), ('Basketball',), ('Outdoor Decor',), ('Stemware',), ('Candles',), ('Bar Tools',), ('Clocks',), ('Photo Frames',), ('Wreaths',), ('Wall Coverings',), ('Ornaments',), ('Baseball',), ('TV and video',), ('Phones',), ('Cookware',), ('Wine Storage',), ('Dinnerware',), ('Candleholders',), ('Computers',), ('Festive',), ('Home Fragrances',), ('Audio',), ('Wall Frames',), ('Furniture Cushions',), ('Platters',), ('Vases',), ('Dining Furniture',), ('Wardrobes',), ('Pillows',), ('Bedroom Furniture',), ('Vanities',), ('Bean Bags',), ('Mirrors',), ('Blankets',), ('Collectibles',), ('Sculptures',))", "rowcount": 44, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T1\" does not have a column named \"Discount Applied\"\nLINE 1: ...ECT T FROM ( SELECT DISTINCT CASE WHEN T1.\"Discount Applied\" = 0.1 THEN T2.\"Pr...\n                                                  ^", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 227, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('781.22',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"Unit Cost\" not found in FROM clause!\nCandidate bindings: \"Sales_Orders.Unit_Cost\", \"Sales_Orders.Unit_Price\"\nLINE 1: ... WHEN OrderNumber = 'SO - 000103' THEN \"Unit Cost\" ELSE NULL END AS T FROM \"Sa...\n                                                  ^", "exec_able": false}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 229, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((22,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((22,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 230, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((30,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((30,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 231, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('SO - 000156', 'Outdoor Decor'), ('SO - 000157', 'Home Fragrances'), ('SO - 000158', 'Home Fragrances'), ('SO - 000159', 'Cookware'))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T1\" does not have a column named \"Product Name\"\nLINE 1: ...SE WHEN T2.\"OrderDate\" = '6/6/18' THEN T1.\"Product Name\" ELSE NULL END AS \"Pro...\n                                                  ^", "exec_able": false}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 232, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('4/10/18',), ('12/31/17',), ('7/19/18',), ('10/27/18',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('7/19/18',), ('4/10/18',), ('12/31/17',), ('10/27/18',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 155, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((12.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 156, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.30000001192092896,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.30000001192092896,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 157, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 158, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.21344716846942902,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.21344717182497333,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 159, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 160, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 161, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 471, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.5964035987854004,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3.5964035964035963,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 472, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-32.0,), (93.0,), (49.0,), (-25.0,), (-23.0,), (111.0,))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT JULIANDAY(T2.l_receiptdate) - JULIANDAY...\n               ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 473, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((20.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 474, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.714912414550781,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4.714912280701754,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 475, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((995,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((995,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 476, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 477, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 478, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((9.49050949050949,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((9.49050949050949,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 479, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((19.600000381469727,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((19.6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 481, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.495614051818848,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4.495614035087719,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 482, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 483, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 484, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((48.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((48.5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 485, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((26.829267501831055,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((26.829268292682926,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 486, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((23.35025405883789,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((23.3502538071066,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 489, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 490, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.091370582580566,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6.091370558375634,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 491, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('RAIL',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('RAIL',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 492, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 493, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-229,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-229,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 494, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT JULIANDAY(T2.l_receiptdate) - JULIANDAY...\n               ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 495, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((18.481517791748047,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((18.48151848151848,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 496, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 497, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 498, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 499, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 500, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((25.64102554321289,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((25.641025641025642,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 501, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 502, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 503, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 504, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 5: ORDER BY (JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate)) DESC\nLIMIT 1;...\n                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 488, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((67.3992691040039,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((67.3992673992674,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 19, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((981,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((981,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 20, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((47.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T2\" does not have a column named \"Complaint ID\"\nLINE 1: SELECT CAST(COUNT(T2.\"Complaint ID\") AS FLOAT) / 3 AS ave...\n                          ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 21, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-96.96969696969697,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-96.96969696969697,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 3}
{"sql_id": 23, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Parser Error: syntax error at or near \"`\"", "exec_able": false}}, "TP": 1, "FP": 0, "FN": 1}
{"sql_id": 30, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((11.353982300884956,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((11.353982300884956,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 31, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('2016', 1))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('2016', 1))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 2}
{"sql_id": 33, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 34, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 37, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"Date received\" not found in FROM clause!\nCandidate bindings: \"events.Date_received\", \"events.Date_sent_to_company\", \"events.Timely_response_\", \"events.Consumer_consent_provided_\"\nLINE 1: ...via\") FROM events WHERE strftime('%Y', \"Date received\") = '2012' AND \"Submitte...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 38, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 39, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T1\" does not have a column named \"Complaint ID\"\nLINE 1: ...rlogs AS T1 INNER JOIN events AS T2 ON T1.\"Complaint ID\" = T2.\"Complaint ID\" W...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 453, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 455, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6,), (4,), (10,), (14,), (3,), (3,), (1,), (3,), (8,), (8,), (2,), (9,), (4,), (24,), (5,), (6,), (14,), (22,), (5,), (1,))", "rowcount": 20, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6,), (4,), (6,), (14,), (22,), (5,), (1,), (10,), (14,), (3,), (3,), (1,), (3,), (8,), (8,), (2,), (9,), (4,), (24,), (5,))", "rowcount": 20, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 463, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Guaran\u00e1 Fant\u00e1stica',), ('R\u00f6ssle Sauerkraut',), ('Raclette Courdavault',), ('Fl\u00f8temysost',))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Guaran\u00e1 Fant\u00e1stica',), ('R\u00f6ssle Sauerkraut',), ('Raclette Courdavault',), ('Fl\u00f8temysost',))", "rowcount": 4, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 363, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 365, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('YES',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('YES',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 366, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((19073,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((19073,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 367, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Black',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Black',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 368, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 369, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((4.278838157653809,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4.278838342810723,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 370, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 371, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 238, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 240, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0, 0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0, 0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 4, "FP": 0, "FN": 0}
{"sql_id": 241, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 242, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((4,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 244, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Pericles, Prince of Tyre',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Pericles, Prince of Tyre',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 245, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Venus and Adonis.',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Venus and Adonis.',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 0}
{"sql_id": 246, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 239, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((44.82758712768555,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((44.82758712768555,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 243, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((21.428571701049805,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((21.428571701049805,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 391, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((57.25190734863281,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Could not choose a best candidate function for the function call \"strftime(STRING_LITERAL, VARCHAR)\". In order to select one, please add explicit type casts.\n\tCandidate functions:\n\tstrftime(TIMESTAMP, VARCHAR) -> VARCHAR\n\tstrftime(TIMESTAMP_NS, VARCHAR) -> VARCHAR\n\tstrftime(TIMESTAMP WITH TIME ZONE, VARCHAR) -> VARCHAR\n\tstrftime(DATE, VARCHAR) -> VARCHAR\n\nLINE 1: SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T1.ship_date) = '2017' T...\n                                  ^", "exec_able": false}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 210, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"date\" not found in FROM clause!\nCandidate bindings: \"incidents._date\", \"incidents.location\", \"incidents.case_number\"\nLINE 1: SELECT SUM(CASE WHEN STRFTIME('%Y', date) = '2007' THEN 1 ELSE 0 END) - SUM...\n                                            ^", "exec_able": false}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 211, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('031347-2015',), ('216145-2014',), ('912B',), ('134472-2015',), ('182199A',), ('154184-2014',), ('219229-2015',), ('183313Z',), ('155523Z',), ('204701-2014',), ('155466-2015',), ('125333Z',), ('135680Z',), ('192550-2014',), ('302115Z',), ('45802Z',), ('94757B',), ('248051A',), ('56628A',), ('165193-2016',), ('203639-2016',), ('308643Z',), ('206124-2014',), ('79223B',), ('32587A',), ('192024-2014',), ('130254Z',), ('280218A',), ('143473-2014',), ('199250-2015',), ('36192Z',), ('60045A',))", "rowcount": 32, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"date\" not found in FROM clause!\nCandidate bindings: \"incidents._date\", \"incidents.location\", \"incidents.case_number\"\nLINE 1: ...OM incidents WHERE CAST(STRFTIME('%Y', date) AS INTEGER) > 2011 AND subject_st...\n                                                  ^", "exec_able": false}}, "TP": 1, "FP": 3, "FN": 0}
{"sql_id": 255, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 257, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((7,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 260, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Heliodoro Salvatierra',), ('Tom Klein',), ('Will Anderson',), ('Nikki Isordia',), ('Alexander Duke',), ('Peter Gomez',), ('Matt Marshall',), ('T.J. Kim',), ('Debbie Mahan',), ('Eric Koenig',), ('Viorel Voronca',), ('John Frink',), ('Michael Price',), ('Dell Hake',), ('David Silverman',), ('Don Payne',), ('Norm MacLeod',), ('Chris Ledesma',), ('Steven L. Smith',), ('Tim Long',), ('Tom Gammill',), ('Matt Warburton',), ('Tim Lauber',), ('Yeardley Smith',), ('Shohreh Aghdashloo',), ('Billy Theriot',), ('Charles Ragins',), ('Steve Pilapil',), ('Ben Lane',), ('Jeanne Erickson',), ('Orlando Baeza',), ('Paul Newman',), ('Javier Pineda',), ('Jason Bikowski',), ('William Bemiller',), ('Desiree E. Craig',), ('Larry Smith',), ('Larry Miravalles',), ('Caroline Cruikshank',), ('Erick T. Tran',), ('Maeve McGrath',), ('Kevin Curran',), ('Brian Kelley',), ('Joe Zimmerman',), ('Victor Pesavento',), ('Don Barrozo',), ('Jefferson R. Weekley',), ('Bonita Pietila',), ('Brian J. Kaufman',), ('Mike Reiss',), ('Scott Alberts',), ('Drew McPhail',), ('Valentina Garza',), ('Nancy Cartwright',), ('Felix Sanchez',), ('Adam Kuhlman',), ('Oscar Cervantes',), ('Alex Que',), ('Dane Romley',), ('Ernie Elicanal',), ('Grant Lee',), ('Jennie Hoffer',), ('Jung A. Yoo',), ('Mike Morris',), ('Tricia Benson',), ('John Berman',), ('Merl Reagle',), ('Michael Miller',), ('Brooks Stonestreet',), ('Kurtis Kunsak',), ('Jesse D. Miller',), ('Karolina Waclawiak',), ('Michael D. Mitchell',), ('John Liu',), ('Sam Ho',), ('Mary Orario-Natale',), ('Rob LaZebnik',), ('Danny Elfman',), ('Carolyn Omine',), ('Robyn Anderson',), ('Sally Stevens',), ('Rick Riccio',), ('Scott Clausen',), ('Heejin Kim',), ('Mike Scully',), ('Alan Decker',), ('Joe Saunders',), ('Denise Sirkot',), ('Glen Wuthrich',), ('Pamela Hayden',), ('Julie Kavner',), ('Robert Ingram',), ('Sam Im',), ('Daniel Chiu',), ('Ian Wilcox',), ('Mike Pettengill',), ('Rene Vega',), ('Adam Klein',), ('Chance Raspberry',), ('Eddie Rosas',), ('Eric Lara',), ('Julia Fitzmaurice',), ('Norman P. Auble',), ('Bill Higley',), ('Eric Loudon',), ('Kent Rice',), ('Amanda Byrnes',), ('Michael G. Mahan',), ('Rick Polizzi',), ('Ray Miceli',), ('Angela Wixtrom',), ('N. Vyolet Diaz',), ('John Pattison',), ('Joel H. Cohen',), ('Ron Hauge',), ('Chris Bolden',), ('Bobby Mackston',), ('Richard Hinds Jr.',), ('Dominique Braud',), ('Patrick Buchanan',), ('Matthew Schofield',), ('Paul Wee',), ('Alfred Cruz',), ('Jay Robinson',), ('Jonathan Gebhart',), ('Oscar Pangestu',), ('Silvia Pompei',), ('Jennifer Dolce',), ('Cameron Porter',), ('Myung Nam Chang',), ('Esther H. Lee',), ('Scott D. Greenberg',), ('Ashley Brooke Cooper',), ('Deanna Asato',), ('Sergio Guerra',), ('Lisa Walder',), ('Debbie Peterson',), ('Lauren Biller',), ('Lance Wilder',), ('Lynna Blankenship',), ('Christianna Lang Daley',), ('Jeff Johnson',), ('Liz Climo',), ('Matthew Herbert',), ('Anne Legge',), ('Eli Balser',), ('Steve Mills',), ('Steven Dean Moore',), ('Tom Boyd',), ('Richard Sakai',), ('Ronny Cox',), ('David Mirkin',), ('Louise Jaffe',), ('Karl Wiedergott',), ('Scott Brutz',), ('Chris Clements',), ('Jabu Henderson',), ('William L. Arance',), ('Alex Ruiz',), ('Jennifer Moeller',), ('John Achenbach',), ('Luis Escobar',), ('Manny DeGuzman',), ('Matthew Faughnan',), ('Tom Mazzocco',), ('Laurie Biernacki',), ('Elizabeth Ableson',), ('Colin Contreary',), ('Felicia Nalivansky-Caplan',), ('Andrea Schell',), ('Michael Nobori',), ('Eric S. Keyes',), ('Kevin N. Moore',), ('Matt Groening',), ('Ed Ghertner',), ('Marc Wilmore',), ('Charles McCaskill',), ('Ian Maxtone-Graham',), ('Richard Raynis',), ('John Krause',), ('Utit Choomuang',), ('Rudi Berden',), ('Jeff Westbrook',), ('Mark Linden',), ('Harry Shearer',), ('Tress MacNeille',), ('Russi Taylor',), ('Jack Dyer',), ('Carlton Batten',), ('Gabriel DeFrancesco',), ('Istvan Majoros',), ('J.C. Wegman',), ('Yelena Geodakyan',), ('Bob Anderson',), ('Jarod Daetwiler',), ('Leasa Epps-Eisele',), ('Martin Alvarez',), ('Richard K. Chung',), ('Michael Wolf',), ('Lisa S. Cervantes',), ('Mike Battle',), ('Dean Scammahorn',), ('David Salvador',), ('Greg Checketts',), ('Mark Ervin',), ('Karen Bauer',), ('Alf Clausen',), ('Terry Greene',), ('Matt Selman',), ('Jim Reardon',), ('Robert Nichols II',), ('Dan Castellaneta',), ('Larry Field',), ('Laurie Wetzler',), ('Denise Donatelli',), ('Hank Azaria',), ('Ray Claffey',), ('John W. Hyde',), ('Richard Manginsay',), ('Rick Salonga',), ('Richard Gasparian',), ('Derek Casari',), ('Stephenie Moffatt',), ('Trista H. Navarro',), ('Mindi Lee',), ('Kevin M. Newman',), ('Sam Simon',), ('Sooan Kim',), ('Bill Odenkirk',), ('J. Stewart Burns',), ('James L. Brooks',), ('Rosanna Lyons',), ('Al Jean',), ('Michael Bridge',), ('Nelson Shin',), ('Dan Greaney',), ('Daniel Chun',), ('Max Pross',), ('John Mathot',), ('Mike B. Anderson',), ('Larina Jean Adamson',), (\"Shannon O'Connor\",), ('Joe Wack',), ('Cynthia Jill French',), ('Dante Fabiero',), ('Edwin E. Aguilar',), ('Fill Marc Sagadraca',), ('Jason D. Warnesky',), ('Josh Taback',), ('Lena Podesta',), ('Ryan Rivette',), ('Tom Madrid Jr.',), ('Victor E. Almaguer',), ('Young Yoo',), ('Michael Polcino',), ('Nancy Kruse',), ('Raymond S. Persi',))", "rowcount": 257, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Heliodoro Salvatierra',), ('Tom Klein',), ('Will Anderson',), ('Nikki Isordia',), ('Alexander Duke',), ('Peter Gomez',), ('Matt Marshall',), ('T.J. Kim',), ('Debbie Mahan',), ('Eric Koenig',), ('Viorel Voronca',), ('John Frink',), ('Michael Price',), ('Dell Hake',), ('David Silverman',), ('Don Payne',), ('Norm MacLeod',), ('Chris Ledesma',), ('Steven L. Smith',), ('Tim Long',), ('Tom Gammill',), ('Matt Warburton',), ('Tim Lauber',), ('Yeardley Smith',), ('Shohreh Aghdashloo',), ('Billy Theriot',), ('Charles Ragins',), ('Steve Pilapil',), ('Ben Lane',), ('Jeanne Erickson',), ('Orlando Baeza',), ('Paul Newman',), ('Javier Pineda',), ('Jason Bikowski',), ('William Bemiller',), ('Desiree E. Craig',), ('Larry Smith',), ('Larry Miravalles',), ('Caroline Cruikshank',), ('Erick T. Tran',), ('Maeve McGrath',), ('Kevin Curran',), ('Brian Kelley',), ('Joe Zimmerman',), ('Victor Pesavento',), ('Don Barrozo',), ('Jefferson R. Weekley',), ('Bonita Pietila',), ('Brian J. Kaufman',), ('Mike Reiss',), ('Scott Alberts',), ('Drew McPhail',), ('Valentina Garza',), ('Nancy Cartwright',), ('Felix Sanchez',), ('Adam Kuhlman',), ('Oscar Cervantes',), ('Alex Que',), ('Dane Romley',), ('Ernie Elicanal',), ('Grant Lee',), ('Jennie Hoffer',), ('Jung A. Yoo',), ('Mike Morris',), ('Tricia Benson',), ('John Berman',), ('Merl Reagle',), ('Bill Higley',), ('Eric Loudon',), ('Kent Rice',), ('Amanda Byrnes',), ('Michael G. Mahan',), ('Rick Polizzi',), ('Ray Miceli',), ('Angela Wixtrom',), ('N. Vyolet Diaz',), ('John Pattison',), ('Joel H. Cohen',), ('Ron Hauge',), ('Chris Bolden',), ('Bobby Mackston',), ('Richard Hinds Jr.',), ('Dominique Braud',), ('Patrick Buchanan',), ('Matthew Schofield',), ('Paul Wee',), ('Alfred Cruz',), ('Jay Robinson',), ('Jonathan Gebhart',), ('Oscar Pangestu',), ('Silvia Pompei',), ('Jennifer Dolce',), ('Cameron Porter',), ('Myung Nam Chang',), ('Michael Miller',), ('Brooks Stonestreet',), ('Kurtis Kunsak',), ('Jesse D. Miller',), ('Karolina Waclawiak',), ('Michael D. Mitchell',), ('John Liu',), ('Sam Ho',), ('Mary Orario-Natale',), ('Rob LaZebnik',), ('Danny Elfman',), ('Carolyn Omine',), ('Robyn Anderson',), ('Sally Stevens',), ('Rick Riccio',), ('Scott Clausen',), ('Heejin Kim',), ('Mike Scully',), ('Alan Decker',), ('Joe Saunders',), ('Denise Sirkot',), ('Glen Wuthrich',), ('Pamela Hayden',), ('Julie Kavner',), ('Robert Ingram',), ('Sam Im',), ('Daniel Chiu',), ('Ian Wilcox',), ('Mike Pettengill',), ('Rene Vega',), ('Adam Klein',), ('Chance Raspberry',), ('Eddie Rosas',), ('Eric Lara',), ('Julia Fitzmaurice',), ('Norman P. Auble',), ('Tom Mazzocco',), ('Laurie Biernacki',), ('Elizabeth Ableson',), ('Colin Contreary',), ('Felicia Nalivansky-Caplan',), ('Andrea Schell',), ('Michael Nobori',), ('Eric S. Keyes',), ('Kevin N. Moore',), ('Matt Groening',), ('Ed Ghertner',), ('Marc Wilmore',), ('Charles McCaskill',), ('Ian Maxtone-Graham',), ('Richard Raynis',), ('John Krause',), ('Utit Choomuang',), ('Rudi Berden',), ('Jeff Westbrook',), ('Mark Linden',), ('Harry Shearer',), ('Tress MacNeille',), ('Russi Taylor',), ('Jack Dyer',), ('Carlton Batten',), ('Gabriel DeFrancesco',), ('Istvan Majoros',), ('J.C. Wegman',), ('Yelena Geodakyan',), ('Bob Anderson',), ('Jarod Daetwiler',), ('Leasa Epps-Eisele',), ('Esther H. Lee',), ('Scott D. Greenberg',), ('Ashley Brooke Cooper',), ('Deanna Asato',), ('Sergio Guerra',), ('Lisa Walder',), ('Debbie Peterson',), ('Lauren Biller',), ('Lance Wilder',), ('Lynna Blankenship',), ('Christianna Lang Daley',), ('Jeff Johnson',), ('Liz Climo',), ('Matthew Herbert',), ('Anne Legge',), ('Eli Balser',), ('Steve Mills',), ('Steven Dean Moore',), ('Tom Boyd',), ('Richard Sakai',), ('Ronny Cox',), ('David Mirkin',), ('Louise Jaffe',), ('Karl Wiedergott',), ('Scott Brutz',), ('Chris Clements',), ('Jabu Henderson',), ('William L. Arance',), ('Alex Ruiz',), ('Jennifer Moeller',), ('John Achenbach',), ('Luis Escobar',), ('Manny DeGuzman',), ('Matthew Faughnan',), ('Martin Alvarez',), ('Richard K. Chung',), ('Michael Wolf',), ('Lisa S. Cervantes',), ('Mike Battle',), ('Dean Scammahorn',), ('David Salvador',), ('Greg Checketts',), ('Mark Ervin',), ('Karen Bauer',), ('Alf Clausen',), ('Terry Greene',), ('Matt Selman',), ('Jim Reardon',), ('Robert Nichols II',), ('Dan Castellaneta',), ('Larry Field',), ('Laurie Wetzler',), ('Denise Donatelli',), ('Hank Azaria',), ('Ray Claffey',), ('John W. Hyde',), ('Richard Manginsay',), ('Rick Salonga',), ('Richard Gasparian',), ('Derek Casari',), ('Stephenie Moffatt',), ('Trista H. Navarro',), ('Mindi Lee',), ('Kevin M. Newman',), ('Sam Simon',), ('Sooan Kim',), ('Bill Odenkirk',), ('J. Stewart Burns',), ('James L. Brooks',), ('Rosanna Lyons',), ('Al Jean',), ('Michael Bridge',), ('Nelson Shin',), ('Dan Greaney',), ('Daniel Chun',), ('Max Pross',), ('John Mathot',), ('Mike B. Anderson',), ('Larina Jean Adamson',), (\"Shannon O'Connor\",), ('Joe Wack',), ('Cynthia Jill French',), ('Dante Fabiero',), ('Edwin E. Aguilar',), ('Fill Marc Sagadraca',), ('Jason D. Warnesky',), ('Josh Taback',), ('Lena Podesta',), ('Ryan Rivette',), ('Tom Madrid Jr.',), ('Victor E. Almaguer',), ('Young Yoo',), ('Michael Polcino',), ('Nancy Kruse',), ('Raymond S. Persi',))", "rowcount": 257, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 261, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((52,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((52,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 263, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Outstanding Voice-Over Performance', 'Dan Castellaneta'), ('Best Animated Series', None), ('Best Voice-Over Performance', 'Hank Azaria'), ('Favorite Animated Comedy', None))", "rowcount": 4, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"year\" not found in FROM clause!\nCandidate bindings: \"Award._year\", \"Award.award\", \"Award.person\", \"Award.season\", \"Award.award_id\"\nLINE 1: ...HERE result = 'Winner' AND SUBSTR(CAST(year AS TEXT), 1, 4) = '2009';\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 264, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2, 'Lost Verizon', 7.0), (3, 'Double, Double, Boy in Trouble', 7.0))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 265, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Treehouse of Horror XIX', 'https://m.media-amazon.com/images/M/MV5BMTgzOTYyNTc2OF5BMl5BanBnXkFtZTgwNjc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Best Directing in an Animated Television Production or Short Form', 'Bob Anderson'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Outstanding Writing in a Comedy Series', 'Marc Wilmore'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('Homer and Lisa Exchange Cross Words', 'https://m.media-amazon.com/images/M/MV5BMTQ2MzcyOTMyMl5BMl5BanBnXkFtZTgwNDc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Animation', 'Tim Long'))", "rowcount": 6, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Treehouse of Horror XIX', 'https://m.media-amazon.com/images/M/MV5BMTgzOTYyNTc2OF5BMl5BanBnXkFtZTgwNjc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Best Directing in an Animated Television Production or Short Form', 'Bob Anderson'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Outstanding Writing in a Comedy Series', 'Marc Wilmore'), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('MyPods and Boomsticks', 'https://m.media-amazon.com/images/M/MV5BNTE5NzY3NjU3OV5BMl5BanBnXkFtZTgwODc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Favorite Cartoon', None), ('Homer and Lisa Exchange Cross Words', 'https://m.media-amazon.com/images/M/MV5BMTQ2MzcyOTMyMl5BMl5BanBnXkFtZTgwNDc5MTQ2MjE@._V1_UX224_CR0,0,224,126_AL_.jpg', 'Animation', 'Tim Long'))", "rowcount": 6, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 266, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Paul Newman', 'Shaker Heights', 'dedicated to the memory of', 97))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Paul Newman', 'Shaker Heights', 'dedicated to the memory of', 97))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 268, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"year\" not found in FROM clause!\nCandidate bindings: \"Award._year\", \"Award.award\", \"Award.person\", \"Award.season\", \"Award.award_id\"\nLINE 1: ...rson = 'Billy Kimball' AND SUBSTR(CAST(year AS VARCHAR), 1, 4) = '2010' AND re...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 269, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Dan Castellaneta',), ('Paul Newman',), ('Marc Wilmore',), ('J. Stewart Burns',), ('Stephanie Gillis',), ('James L. Brooks',), ('Matt Groening',), ('Ian Maxtone-Graham',), ('Kevin Curran',), ('Hank Azaria',), ('Michael Price',), ('Harry Shearer',), ('John Frink',), ('Don Payne',), ('Al Jean',), ('Tim Long',), ('Alf Clausen',), ('Billy Kimball',), ('Bobby Mackston',), ('Colm Meaney',), ('Larina Jean Adamson',), ('Nancy Kruse',), ('Eric S. Keyes',), ('Lance Kramer',), ('Richard Sakai',), ('Chuck Sheetz',), ('Karl Wiedergott',), ('Pamela Hayden',), ('Max Pross',), ('Jefferson R. Weekley',), ('Patty Shinagawa',), ('Lynna Blankenship',), ('Mike Reiss',), ('Jeff Topping',), ('Carolyn Omine',), ('Sooan Kim',), ('Michael Polcino',), ('Joe Montana',), ('Jodie Foster',), ('Sam Simon',), ('Robert Forster',), ('Russi Taylor',), ('Brian Grazer',), ('Mike Scully',), ('Maurice LaMarche',), ('Marv Albert',), ('Maggie Roswell',), ('Ed Begley Jr.',), ('Nancy Cartwright',), ('Tress MacNeille',), ('Robert Nichols II',), ('Tom Mazzocco',), ('Kelsey Grammer',), ('Danny Elfman',), ('Joe Mantegna',), ('Julie Kavner',), ('Jeff Bezos',), ('Marcia Wallace',), ('Denis Leary',), ('Mark Cuban',), ('Dell Hake',), ('Mark Kirkland',), ('David Silverman',), ('Chris Ledesma',), ('Julia Louis-Dreyfus',), ('William Bemiller',), ('Richard Raynis',), ('Dean Scammahorn',), ('Glen Wuthrich',), ('Merl Reagle',), ('Kipp Lennon',), ('Don Vanderbeek',), ('John Mathot',), ('Denise Sirkot',), ('Bill Odenkirk',), ('Dan Greaney',), ('Matthew Nastuk',), ('Orlando Gumatay',), ('David Mirkin',), ('Karen Bauer',), ('John Achenbach',), ('Anna Pagan',), ('Sally Stevens',), ('Alex Dilts',), ('Scott Thompson',), ('Rob LaZebnik',), ('John Berman',), ('Yeardley Smith',), ('Shohreh Aghdashloo',), ('Tom Gammill',), ('Bonita Pietila',), ('Will Shortz',), ('Grant Lee',))", "rowcount": 93, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Dan Castellaneta',), ('Paul Newman',), ('Marc Wilmore',), ('J. Stewart Burns',), ('Stephanie Gillis',), ('James L. Brooks',), ('Matt Groening',), ('Ian Maxtone-Graham',), ('Kevin Curran',), ('Hank Azaria',), ('Michael Price',), ('Harry Shearer',), ('John Frink',), ('Don Payne',), ('Al Jean',), ('Tim Long',), ('Alf Clausen',), ('Billy Kimball',), ('Bobby Mackston',), ('Colm Meaney',), ('Larina Jean Adamson',), ('Nancy Kruse',), ('Eric S. Keyes',), ('Lance Kramer',), ('Richard Sakai',), ('Chuck Sheetz',), ('Karl Wiedergott',), ('Pamela Hayden',), ('Max Pross',), ('Jefferson R. Weekley',), ('Patty Shinagawa',), ('Lynna Blankenship',), ('Mike Reiss',), ('Jeff Topping',), ('Carolyn Omine',), ('Sooan Kim',), ('Michael Polcino',), ('Joe Montana',), ('Jodie Foster',), ('Sam Simon',), ('Robert Forster',), ('Russi Taylor',), ('Brian Grazer',), ('Mike Scully',), ('Maurice LaMarche',), ('Marv Albert',), ('Maggie Roswell',), ('Ed Begley Jr.',), ('Nancy Cartwright',), ('Tress MacNeille',), ('Robert Nichols II',), ('Tom Mazzocco',), ('Kelsey Grammer',), ('Danny Elfman',), ('Joe Mantegna',), ('Julie Kavner',), ('Jeff Bezos',), ('Marcia Wallace',), ('Denis Leary',), ('Mark Cuban',), ('Dell Hake',), ('Mark Kirkland',), ('David Silverman',), ('Chris Ledesma',), ('Julia Louis-Dreyfus',), ('William Bemiller',), ('Richard Raynis',), ('Dean Scammahorn',), ('Glen Wuthrich',), ('Merl Reagle',), ('Kipp Lennon',), ('Don Vanderbeek',), ('John Mathot',), ('Denise Sirkot',), ('Bill Odenkirk',), ('Dan Greaney',), ('Matthew Nastuk',), ('Orlando Gumatay',), ('David Mirkin',), ('Karen Bauer',), ('John Achenbach',), ('Anna Pagan',), ('Sally Stevens',), ('Alex Dilts',), ('Scott Thompson',), ('Rob LaZebnik',), ('John Berman',), ('Yeardley Smith',), ('Shohreh Aghdashloo',), ('Tom Gammill',), ('Bonita Pietila',), ('Will Shortz',), ('Grant Lee',))", "rowcount": 93, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 270, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 273, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Jodie Foster',), ('Rob LaZebnik',))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Jodie Foster',), ('Rob LaZebnik',))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 274, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('S20-E1',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('S20-E1',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 276, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((12.878787994384766,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12.878787878787879,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 279, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((61,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"year\" not found in FROM clause!\nCandidate bindings: \"Award._year\", \"Award.award\", \"Award.person\", \"Award.season\", \"Award.award_id\"\nLINE 1: ...award_id) FROM Award WHERE SUBSTR(CAST(year AS TEXT), 1, 4) = '2009';\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 3, "FN": 1}
{"sql_id": 281, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('1930s to 2020s',), ('erotic bakery',), ('cake',), ('bullet',), (\"st. patrick's day\",), ('riot',), ('bounty hunter',), ('bail bondsman',), ('2d animation',), ('twin',), ('slow motion scene',), ('punched in the face',), ('cigar smoking',), ('phallus shaped cake',), ('reference to the fantastic four',), ('taser',), ('female slaps male',), ('wet cement',), ('wanted poster',), ('twin sister',), ('suffocation',), ('shot in the arm',), ('shillelagh',), ('secret from husband',), ('school principal',), ('ricochet',), ('prison',), ('prayer',), ('police arrest',), ('plastic bag',), ('partnership',), ('parade float',), ('montage with pop song',), (\"man in woman's clothes\",), ('man in drag',), ('male in female clothes',), ('male in drag',), ('male bonding',), ('leprechaun',), ('irish joke',), ('gun',), ('gratitude',), ('flashback',), ('fistfight',), ('fantastic four spoof',), ('face slap',), ('construction site',), ('concrete',), ('coffee',), ('catholic priest',), ('catholic joke',), ('buddy cop spoof',), ('bleeding arm',), ('biblical reference',), ('biblical quote',), ('bulletproof glass',), ('1930s to 2020s',), ('cell phone',), ('machu picchu',), ('2d animation',), ('tracking device',), ('peru',), ('overprotective mother',), ('pun in title',), ('lottery',), ('lottery ticket',), ('1930s to 2020s',), ('bad behavior',), ('party',), ('identity swap',), ('2d animation',), ('rich kid',), ('lottery winner',), ('halloween episode',), ('reference to the great pumpkin',), ('reference to barack obama',), ('reference to john mccain',), ('reference to dwight d. eisenhower',), ('year 2008',), ('reference to john wayne',), ('reference to jimmy stewart',), ('reference to prince',), ('reference to golda meir',), ('reference to george clooney',), ('reference to kate winslet',), ('reference to edward g. robinson',), ('reference to rip taylor',), ('reference to charlton heston',), ('reference to george washington',), ('reference to abraham lincoln',), ('reference to pontius pilate',), ('1930s to 2020s',), ('transformer',), ('christmas',), ('halloween',), ('alien',), ('halloween party',), ('princess costume',), ('skeleton costume',), ('frankenstein costume',), ('ghost costume',), ('pumpkin patch',), ('witch costume',), ('halloween costume',), ('reference to charlie brown',), ('dead celebrity',), ('celebrity death',), ('reference to mad men',), ('transformer toy',), ('toy car',), ('voting booth',), ('halloween spoof',), ('giant pumpkin',), ('2d animation',), ('roman numeral in title',), ('turkey the bird',), ('body in chipper',), ('advertising campaign',), (\"jack o'lantern\",), ('premarital sex',), ('body in a trunk',), ('1930s to 2020s',), ('steamer trunk',), ('limbo dancing',), ('bear trap',), ('1930s to 2020s',), ('crossword puzzle',), ('2d animation',), ('lemonade stand',), ('getting dumped',), ('gay bar',), ('disco',), ('1930s to 2020s',), ('time machine',), ('2d animation',), ('ipod',), ('arab stereotype',), ('arab culture',), ('1930s to 2020s',), ('stadium',), ('poker game',), ('greenhouse',), ('town meeting',), ('demolition',), ('construction site',), ('secret handshake',), ('bagpipes',), ('dare',), ('prank',), ('2d animation',), ('surrealism',), ('skinny dipping',), ('wetting pants',), ('male bonding',), ('eskimo indian',), ('colony collapse disorder',), ('billionaire',), ('beekeeper',), ('beehive',), ('killer bee',), ('boston celtics',))", "rowcount": 161, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('1930s to 2020s',), ('erotic bakery',), ('cake',), ('bullet',), (\"st. patrick's day\",), ('riot',), ('bounty hunter',), ('bail bondsman',), ('2d animation',), ('twin',), ('slow motion scene',), ('punched in the face',), ('cigar smoking',), ('phallus shaped cake',), ('reference to the fantastic four',), ('taser',), ('female slaps male',), ('wet cement',), ('wanted poster',), ('twin sister',), ('suffocation',), ('shot in the arm',), ('shillelagh',), ('secret from husband',), ('school principal',), ('ricochet',), ('prison',), ('prayer',), ('police arrest',), ('plastic bag',), ('partnership',), ('parade float',), ('montage with pop song',), (\"man in woman's clothes\",), ('man in drag',), ('male in female clothes',), ('male in drag',), ('male bonding',), ('leprechaun',), ('irish joke',), ('gun',), ('gratitude',), ('flashback',), ('fistfight',), ('fantastic four spoof',), ('face slap',), ('construction site',), ('concrete',), ('coffee',), ('catholic priest',), ('catholic joke',), ('buddy cop spoof',), ('bleeding arm',), ('biblical reference',), ('biblical quote',), ('bulletproof glass',), ('1930s to 2020s',), ('cell phone',), ('machu picchu',), ('2d animation',), ('tracking device',), ('peru',), ('overprotective mother',), ('pun in title',), ('lottery',), ('lottery ticket',), ('1930s to 2020s',), ('bad behavior',), ('party',), ('identity swap',), ('2d animation',), ('rich kid',), ('lottery winner',), ('halloween episode',), ('reference to the great pumpkin',), ('reference to barack obama',), ('reference to john mccain',), ('reference to dwight d. eisenhower',), ('year 2008',), ('reference to john wayne',), ('reference to jimmy stewart',), ('reference to prince',), ('reference to golda meir',), ('reference to george clooney',), ('reference to kate winslet',), ('reference to edward g. robinson',), ('reference to rip taylor',), ('reference to charlton heston',), ('reference to george washington',), ('reference to abraham lincoln',), ('reference to pontius pilate',), ('1930s to 2020s',), ('transformer',), ('christmas',), ('halloween',), ('alien',), ('halloween party',), ('princess costume',), ('skeleton costume',), ('frankenstein costume',), ('ghost costume',), ('pumpkin patch',), ('witch costume',), ('halloween costume',), ('reference to charlie brown',), ('dead celebrity',), ('celebrity death',), ('reference to mad men',), ('transformer toy',), ('toy car',), ('voting booth',), ('halloween spoof',), ('giant pumpkin',), ('2d animation',), ('roman numeral in title',), ('turkey the bird',), ('body in chipper',), ('advertising campaign',), (\"jack o'lantern\",), ('premarital sex',), ('body in a trunk',), ('1930s to 2020s',), ('steamer trunk',), ('limbo dancing',), ('bear trap',), ('1930s to 2020s',), ('crossword puzzle',), ('2d animation',), ('lemonade stand',), ('getting dumped',), ('gay bar',), ('disco',), ('1930s to 2020s',), ('time machine',), ('2d animation',), ('ipod',), ('arab stereotype',), ('arab culture',), ('1930s to 2020s',), ('stadium',), ('poker game',), ('greenhouse',), ('town meeting',), ('demolition',), ('construction site',), ('secret handshake',), ('bagpipes',), ('dare',), ('prank',), ('2d animation',), ('surrealism',), ('skinny dipping',), ('wetting pants',), ('male bonding',), ('eskimo indian',), ('colony collapse disorder',), ('billionaire',), ('beekeeper',), ('beehive',), ('killer bee',), ('boston celtics',))", "rowcount": 161, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 284, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('S20-E2',), ('S20-E7',), ('S20-E6',), ('S20-E1',), ('S20-E4',), ('S20-E3',), ('S20-E5',), ('S20-E8',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('S20-E2',), ('S20-E7',), ('S20-E1',), ('S20-E4',), ('S20-E5',), ('S20-E8',), ('S20-E3',), ('S20-E6',))", "rowcount": 8, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 285, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((5.9,), (11.6,), (13.5,), (22.0,), (23.2,), (6.9,), (15.1,), (15.4,), (17.4,), (29.0,), (5.2,), (11.6,), (14.4,), (19.1,), (24.7,), (2.1,), (2.6,), (3.7,), (6.5,), (0.7,), (2.2,), (2.6,), (4.6,), (2.4,), (2.9,), (4.4,), (6.0,), (8.9,), (6.1,), (9.2,), (15.4,), (15.4,), (2.9,), (2.6,), (5.9,), (6.0,))", "rowcount": 36, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((5.9,), (11.6,), (13.5,), (22.0,), (23.2,), (6.9,), (15.1,), (15.4,), (17.4,), (29.0,), (5.2,), (11.6,), (14.4,), (19.1,), (24.7,), (2.1,), (2.6,), (3.7,), (6.5,), (0.7,), (2.2,), (2.6,), (4.6,), (2.4,), (2.9,), (4.4,), (6.0,), (8.9,), (6.1,), (9.2,), (15.4,), (15.4,), (2.9,), (2.6,), (5.9,), (6.0,))", "rowcount": 36, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 286, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((9,), (6,), (8,), (10,), (7,), (9,), (8,), (10,), (6,), (7,), (9,), (10,), (6,), (8,), (7,), (9,), (6,), (8,), (10,), (7,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (5,), (5,), (5,), (5,), (10,), (6,), (6,), (6,), (2,), (9,))", "rowcount": 46, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((9,), (6,), (8,), (10,), (7,), (9,), (8,), (10,), (6,), (7,), (9,), (10,), (6,), (8,), (7,), (9,), (6,), (8,), (10,), (7,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (2,), (3,), (4,), (1,), (3,), (2,), (4,), (1,), (5,), (5,), (5,), (5,), (10,), (6,), (6,), (6,), (2,), (9,))", "rowcount": 46, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 287, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 169, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.00016902285278774798,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 170, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0.02370692603290081,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1.6983016729354858,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 171, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 173, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((11.11111068725586,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((100.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 179, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.472573846578598,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.472573846578598,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 180, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((37,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((37,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 289, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((16.363636016845703,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((16.363636016845703,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 290, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 293, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('female',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 294, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 296, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 297, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1.801120400428772,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1.801120400428772,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 298, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('female', 'uci'), ('female', 'ucsd'))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('female', 'uci'), ('female', 'ucsd'))", "rowcount": 2, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 301, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Parser Error: syntax error at or near \"AS\"", "exec_able": false}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 302, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 303, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((-7.0, 'NO'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Parser Error: syntax error at or near \"AS\"", "exec_able": false}}, "TP": 4, "FP": 2, "FN": 0}
{"sql_id": 304, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((12.244897842407227,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((12.244897842407227,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 305, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1500,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1500,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 306, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('ucla', 'female'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('ucla', 'female'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 307, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.10526315867900848,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.10526315867900848,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 308, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((24,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 288, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((54.16666793823242,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((54.16666793823242,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 292, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((37.75510025024414,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((37.75510025024414,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 295, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((52.66666793823242, 47.33333206176758))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((52.66666793823242, 47.33333206176758))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 193, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Xerox 1901',), ('Xerox 1952',), ('Telescoping Adjustable Floor Lamp',), ('Acme Elite Stainless Steel Scissors',), ('Boston School Pro Electric Pencil Sharpener, 1670',))", "rowcount": 5, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T3\" does not have a column named \"Product ID\"\nLINE 4: INNER JOIN product AS T3 ON T3.\"Product ID\" = T2.\"Product_ID\"\n                                    ^", "exec_able": false}}, "TP": 1, "FP": 5, "FN": 0}
{"sql_id": 194, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((42,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((42,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 195, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 197, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((739.0306,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((739.0306,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 198, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((353210.087000001,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((353210.087000001,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 199, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Clytie Kelty',), ('Elpida Rittenbach',), ('Greg Maxwell',), ('Herbert Flentye',), ('James Galang',), ('Michael Moore',), ('Natalie DeCherney',), ('Raymond Buch',), ('Maxwell Schwartz',), ('Corey Catlett',), ('Gary McGarr',), ('Joe Kamberova',), ('Roy Franz\u00f6sisch',), ('Sean Miller',), ('Vivek Sundaresam',), ('Shirley Daniels',), ('Anna Andreadi',), ('Chris Selesnick',), ('Craig Carreira',), ('Cynthia Arntzen',), ('Harold Pawlan',), ('Jonathan Doherty',), ('Mitch Willingham',), ('Sally Hughsby',), ('Sheri Gordon',), ('Thomas Boland',), ('Ben Ferrer',), ('Allen Armold',), (\"Jack O'Briant\",), ('Jay Fein',), ('Randy Ferguson',), ('Tony Sayre',), ('Alejandro Ballentine',), ('Jay Kimmel',), ('Kristen Hastings',), ('Lindsay Castell',), ('Maria Etezadi',), ('Roy Collins',), ('Ruben Ausman',), ('Shahid Hopkins',), ('Steven Roelle',), ('Patrick Gardner',), ('Brian Dahlen',), ('Denise Leinenbach',), ('Joe Elijah',), ('Lena Hernandez',), ('Laurel Elliston',), ('Aaron Smayling',), ('Delfina Latchford',), ('Frank Hawley',), ('Giulietta Weimer',), ('Ken Heidel',), ('Kimberly Carter',), ('Mark Haberlin',), ('Russell Applegate',))", "rowcount": 55, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Table \"T1\" does not have a column named \"Customer ID\"\nLINE 3: INNER JOIN people AS T2 ON T1.\"Customer ID\" = T2.\"Customer ID\"\n                                   ^", "exec_able": false}}, "TP": 1, "FP": 4, "FN": 0}
{"sql_id": 200, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 202, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((5.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT DISTINCT CAST(julianday(\"Ship_Date\") - julianday(\"Ord...\n                             ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 203, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Memo Book, 100 Message Capacity, 5 3/8_ x 11_',), ('Xerox 1967',), ('DAX Black Cherry Wood-Tone Poster Frame',), ('Novimex Swivel Fabric Task Chair',), ('Avery Non-Stick Heavy Duty View Round Locking Ring Binders',), ('RSVP Cards & Envelopes, Blank White, 8-1/2\" X 11\", 24 Cards/25 Envelopes/Set',), ('Plymouth Boxed Rubber Bands by Plymouth',), ('3.6 Cubic Foot Counter Height Office Refrigerator',), ('Geographics Note Cards, Blank, White, 8 1/2\" x 11\"',), ('Hewlett-Packard Deskjet 6540 Color Inkjet Printer',), ('Newell 333',), ('Black Print Carbonless 8 1/2\" x 8 1/4\" Rapid Memo Book',), ('Xerox 1963',), ('Newell 35',), ('Harbour Creations Steel Folding Chair',), ('Recycled Steel Personal File for Hanging File Folders',), ('Wilson Jones 14 Line Acrylic Coated Pressboard Data Binders',), ('Bionaire Personal Warm Mist Humidifier/Vaporizer',), ('Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack',), ('Bevis Round Conference Room Tables and Bases',), ('Fellowes Bankers Box Recycled Super Stor/Drawer',), ('Xerox 1966',))", "rowcount": 22, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack',), ('Bevis Round Conference Room Tables and Bases',), ('DAX Black Cherry Wood-Tone Poster Frame',), ('Novimex Swivel Fabric Task Chair',), ('Avery Non-Stick Heavy Duty View Round Locking Ring Binders',), ('RSVP Cards & Envelopes, Blank White, 8-1/2\" X 11\", 24 Cards/25 Envelopes/Set',), ('Memo Book, 100 Message Capacity, 5 3/8_ x 11_',), ('Xerox 1967',), ('Plymouth Boxed Rubber Bands by Plymouth',), ('3.6 Cubic Foot Counter Height Office Refrigerator',), ('Geographics Note Cards, Blank, White, 8 1/2\" x 11\"',), ('Hewlett-Packard Deskjet 6540 Color Inkjet Printer',), ('Newell 333',), ('Black Print Carbonless 8 1/2\" x 8 1/4\" Rapid Memo Book',), ('Xerox 1963',), ('Newell 35',), ('Harbour Creations Steel Folding Chair',), ('Recycled Steel Personal File for Hanging File Folders',), ('Wilson Jones 14 Line Acrylic Coated Pressboard Data Binders',), ('Fellowes Bankers Box Recycled Super Stor/Drawer',), ('Xerox 1966',), ('Bionaire Personal Warm Mist Humidifier/Vaporizer',))", "rowcount": 22, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 204, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 206, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Ibico EPK-21 Electric Binding System',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Ibico EPK-21 Electric Binding System',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 100, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT julianday(T2.STOP) - julianday(T2.START...\n               ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 101, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((7.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT julianday(T2.STOP) - julianday(T2.START...\n               ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 105, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 107, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((8,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: No function matches the given name and argument types 'substr(DATE, INTEGER_LITERAL, INTEGER_LITERAL)'. You might need to add explicit type casts.\n\tCandidate functions:\n\tsubstr(VARCHAR, BIGINT, BIGINT) -> VARCHAR\n\tsubstr(VARCHAR, BIGINT) -> VARCHAR\n\nLINE 1: ...NT WHERE DESCRIPTION = 'Pneumonia' AND SUBSTR(T1.birthdate, 1, 4) LIKE '192%'\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 109, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 114, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0, 101))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0, 101))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 119, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 120, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Escherichia coli urinary tract infection', 'NITROFURANTOIN  MACROCRYSTALS 50 MG [Macrodantin]', 7.0, 'alive'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: ...T2.REASONDESCRIPTION, T2.DESCRIPTION , julianday(T2.STOP) - julianday(T2.START...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 122, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((23.0,), (9.0,))", "rowcount": 2, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT julianday(T2.STOP) - julianday(T2.START...\n               ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 2}
{"sql_id": 123, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 128, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Acute bronchitis (disorder)',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Acute bronchitis (disorder)',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 129, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((10.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT CAST(julianday(T2.STOP) - julianday(T2.START...\n                    ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 2}
{"sql_id": 132, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 133, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 134, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 135, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('Yuriko', 'Schumm'), ('Victor', 'Walter'), ('Chelsey', 'Balistreri'), ('Diego', 'Mosciski'), ('Diego', 'Hand'), ('Patrick', 'Lind'), ('Jessie', 'Corkery'), ('Siu', 'Pagac'), ('Ester', 'Schinner'), ('Darren', 'Predovic'), ('Jere', 'Spinka'), ('Laree', 'Strosin'), ('Muoi', 'Kuhlman'), ('Florida', 'Stark'), ('Shawna', 'Lowe'), ('Alfonzo', 'Smitham'), ('Jasper', 'Ernser'), ('Vinita', 'Stanton'), ('Judith', 'Fay'), ('Phillis', 'Mante'), ('Brice', 'Jerde'), ('Javier', 'Hamill'), ('Scot', 'Morissette'), ('Dena', 'Kutch'), ('Caron', 'Volkman'), ('Damian', 'Schultz'), ('Benito', 'Wiegand'), ('Sung', 'Carter'), ('Alfredo', 'Halvorson'), ('Marianela', 'Funk'), ('Lavelle', 'Vandervort'), ('Augustine', \"O'Reilly\"), ('Jospeh', 'VonRueden'), ('Tyrone', 'Johns'), ('Miquel', 'Pouros'), ('Berry', 'Keebler'), ('Martha', 'Swaniawski'), ('Charlsie', 'Vandervort'), ('Rico', 'Schmitt'), ('Isadora', 'Moen'), ('Alonzo', 'Prohaska'), ('Warner', 'Wisozk'), ('Ezekiel', 'Herzog'), ('Neely', 'Keeling'), ('Wilmer', 'Koepp'), ('Shawnta', 'Erdman'), ('Yahaira', 'Ortiz'), ('Jonathan', 'Douglas'), ('Shantel', 'White'), ('Laci', 'Heller'), ('Avelina', 'Block'), ('Ozell', 'Armstrong'), ('Darla', 'Crona'), ('Hana', 'Brekke'), ('Filiberto', 'Bartoletti'), ('Gwendolyn', 'Ziemann'), ('Mckinley', 'Cartwright'), ('Tabetha', 'Hamill'), ('Joesph', 'Runte'), ('Quentin', 'Toy'), ('Wendy', 'Huels'), ('Chin', 'Kub'), ('Robert', 'Stamm'), ('Carley', 'Schneider'), ('Courtney', 'Schaden'), ('Garry', \"O'Connell\"), ('Jeff', 'Labadie'), ('Ernie', 'Fisher'), ('Arlette', 'Leuschke'), ('Kim', 'Barrows'), ('Young', 'Treutel'), ('21-Jan', 'Koelpin'), ('Janean', 'Bashirian'), ('Myrtie', 'Reilly'), ('Deane', 'Kris'), ('Suk', 'Hartmann'), ('Barrie', 'Abernathy'), ('Rudy', 'Cormier'), ('Will', 'Mayert'), ('Elly', 'Koss'), ('Martin', 'Harris'), ('Katelynn', 'Tremblay'), ('Weldon', 'Murphy'), ('Roosevelt', 'Breitenberg'), ('Lenard', 'Schiller'), ('Whitney', 'Nolan'), ('Kory', 'Klocko'), ('Clarisa', 'Tromp'), ('Stacy', 'McLaughlin'), ('Dominic', 'Bins'), ('Particia', 'Ward'), ('Lynwood', 'Stehr'), ('Ellyn', 'Block'), ('Tony', 'Kessler'), ('Abraham', 'Balistreri'), ('Cheree', 'Rice'), ('Benny', 'Herzog'), ('Sherlene', 'Murphy'), ('Walter', 'Bahringer'), ('Jerome', 'Spinka'), ('Jimmy', 'Marks'), ('Tonette', 'Gislason'), ('Claudette', 'Renner'), ('Luis', 'Wilderman'), ('Clora', 'Veum'), ('Maurice', 'Kshlerin'), ('Merrill', 'Kassulke'), ('Trey', 'Wunsch'), ('Lloyd', 'Kemmer'), ('Lyndon', 'Pacocha'), ('Xavier', 'Krajcik'), ('Fern', 'Padberg'), ('Terry', 'Kuhic'), ('Ozie', 'Larson'), ('Dana', 'Bayer'), ('Lorean', 'Gulgowski'), ('Andres', 'Parisian'), ('Ona', 'Waters'), ('Astrid', 'Schroeder'), ('Leena', 'Kemmer'), ('Elisa', 'Lowe'), ('Telma', 'Jakubowski'), ('Olen', 'Homenick'), ('Margaretta', \"O'Hara\"), ('Neal', 'Eichmann'), ('Lourie', 'Crooks'), ('Valentine', 'Jacobson'), ('Royal', 'Turcotte'), ('Mauro', 'McCullough'), ('Donn', 'Schowalter'), ('Ira', 'Deckow'), ('Delilah', 'Kuhic'), ('Julian', 'Strosin'), ('Eldon', 'Ryan'), ('Demetrius', 'Dickens'), ('Eulalia', 'Wiegand'), ('Ethel', 'Cormier'), ('Mohammed', 'Larson'), ('Dave', 'Hudson'), ('Hugh', 'Kuhn'), ('Felicitas', 'Hahn'), ('Tobias', 'Carroll'), ('Lesli', 'Gislason'), ('Curtis', 'Schroeder'), ('Randall', 'Wilderman'), ('Chad', 'Hartmann'), ('Emanuel', 'Kerluke'), ('Lindsey', 'Lowe'), ('Emmanuel', 'Douglas'), ('Nestor', 'Dibbert'), ('Jorge', 'Wolff'), ('Rusty', \"D'Amore\"), ('Tyisha', 'Brekke'), ('Charlene', 'Mann'), ('Andres', 'Sipes'), ('Verline', 'Konopelski'), ('Tuyet', 'Abernathy'), ('Merlin', 'Roob'), ('Missy', 'MacGyver'), ('Jerrod', 'Mayert'), ('Keri', 'Veum'), ('Lacy', 'Collier'), ('Tish', 'Donnelly'), ('Mario', 'Gottlieb'), ('Adolfo', 'Schmitt'), ('Gilbert', 'Bradtke'), ('Emile', 'Brekke'), ('Harriette', 'Hessel'), ('Danilo', 'Feeney'), ('Dallas', 'Spencer'), ('Dannie', 'Considine'), ('Lon', 'Simonis'), ('Lizeth', 'Ernser'), ('Doreen', 'Mohr'), ('Sara', 'Pacocha'), ('Shona', 'Hamill'), ('Kyra', 'Bode'), ('Antone', 'Dickinson'), ('Siobhan', 'Conroy'), ('Florencio', 'Turner'), ('Annie', 'Prosacco'), ('Emelina', 'Abernathy'), ('Renaldo', 'Kshlerin'), ('Conrad', 'Kuhlman'), ('Willene', 'Orn'), ('Serina', 'Robel'), ('Hilma', 'Rath'), ('Jules', 'Barton'), ('Maryjane', 'Herzog'), ('Orlando', 'Cormier'), ('Omar', 'Ziemann'), ('Ivana', 'Rowe'), ('Williams', 'Torp'), ('Ashlee', 'Leannon'), ('Ryan', 'Keeling'), ('Melanie', 'Schroeder'), ('Denita', 'Nitzsche'), ('Edgar', 'Von'), ('Joselyn', 'Marquardt'), ('Brain', 'Hudson'), ('Ima', 'Murphy'), ('Nathan', 'Botsford'), ('Serafina', 'Bosco'), ('Jaye', 'Schroeder'), ('Pasquale', 'Crist'), ('Tarra', 'Gerhold'), ('Milan', 'DuBuque'), ('Delpha', 'Schinner'), ('Andreas', 'Bauch'), ('Hildred', 'Schuppe'), ('Rob', 'Pouros'), ('Ronnie', 'Lindgren'), ('Percy', 'Wunsch'), ('Trula', 'Harber'), ('Maurice', 'Bins'), ('Stacey', 'Pollich'), ('Randall', 'Smith'), ('Austin', 'Waelchi'), ('Wilmer', 'Denesik'), ('Belle', 'Smitham'), ('Rodolfo', 'Heathcote'), ('Mathew', 'Windler'), ('Tabitha', 'Baumbach'), ('Pok', 'Thompson'), ('Rikki', 'Osinski'), ('Shonta', 'Mann'), ('Cesar', 'Larson'), ('Buck', 'Kshlerin'), ('Kary', 'Schmitt'), ('Octavia', 'Klein'), ('Patrick', 'Kilback'), ('Cecil', 'Gaylord'), ('Demarcus', 'Cormier'), ('Kelsey', 'Skiles'), ('Deanne', 'Kilback'), ('Gwenda', \"O'Conner\"), ('Jamar', 'Durgan'), ('Anamaria', 'Mraz'), ('Ernestine', 'Rutherford'), ('Elizbeth', 'Konopelski'), ('Lorie', 'Cruickshank'), ('Winford', 'Jast'), ('Bret', 'Grant'), ('Arielle', 'Nader'), ('Raymonde', 'Heathcote'), ('Yanira', 'Flatley'), ('Anette', 'Hand'), ('Refugio', 'Barton'), ('Rubin', 'Thiel'), ('Thomas', 'Altenwerth'), ('Carl', 'Sawayn'), ('Neville', 'McDermott'), ('Adam', 'Lynch'), ('Oswaldo', 'Abernathy'), ('Dania', 'Trantow'), ('Rigoberto', 'Heidenreich'), ('Elvis', 'Lockman'), ('Rosendo', 'Hodkiewicz'), ('Bonnie', 'Wisoky'), ('Dillon', 'Lehner'), ('Markus', 'Mraz'), ('Margarette', 'Maggio'), ('Carroll', 'Boyle'), ('Faustino', 'Huel'), ('Gala', 'Carroll'), ('Natalie', 'Green'), ('Jeremy', 'Goodwin'), ('Alycia', 'Olson'), ('Dirk', 'Stoltenberg'), ('Tiffani', 'Dickens'), ('Albert', 'Lemke'), ('Larue', 'Brekke'), ('Deetta', 'Harber'), ('Betty', 'Hickle'), ('Georgie', 'Herzog'), ('Dorian', 'Kovacek'), ('Kyle', 'Bernier'), ('Nickie', 'Stiedemann'), ('Alina', 'Padberg'), ('Jesse', 'Leuschke'), ('Augustine', 'Erdman'), ('Mora', 'Hand'), ('Reva', 'Schmeler'), ('Thuy', 'Luettgen'), ('Jazmine', 'Rau'), ('Carroll', 'Bernhard'), ('Georgianna', 'Boehm'), ('Deeann', 'Jacobson'), ('Latasha', 'Adams'), ('Micki', 'Haag'), ('Nicolas', 'Prosacco'), ('Lawanda', 'Murray'), ('Sang', 'Bauch'), ('Nyla', 'Heathcote'), ('Katharine', 'Dach'), ('Kathaleen', 'Cummerata'), ('Lillian', 'Stark'), ('Lai', 'Ebert'), ('Bradley', 'Kerluke'), ('Cleo', 'Hilpert'), ('Nelson', 'Jast'), ('Terra', 'Heller'), ('Jame', 'Mayer'), ('Cami', 'Terry'), ('Rod', 'Hahn'), ('Augustus', 'Parker'), ('Shon', 'Nikolaus'), ('Viva', 'Walker'), ('Corrina', 'Feest'), ('Nanci', 'Huel'), ('Akilah', 'Fadel'), ('Reuben', 'Bashirian'), ('Kelle', 'Kessler'), ('Willette', 'Hyatt'), ('Lula', 'Spencer'), ('Dexter', 'Mitchell'), ('Cole', 'Keeling'), ('Mana', 'Schiller'), ('Hector', 'Ziemann'), ('Tiffany', 'Mertz'), ('Mack', 'Orn'), ('Lenore', 'Gleason'), ('Farah', 'Gerhold'), ('Mui', 'Trantow'), ('Adrianne', 'Rodriguez'), ('Verda', 'Stehr'), ('Gricelda', 'Hane'), ('Isaiah', 'Bernier'), ('Livia', 'Williamson'), ('Leisha', 'Monahan'), ('Irmgard', 'Krajcik'), ('Saundra', 'Monahan'), ('Dion', 'Auer'), ('Bryan', 'Mayer'), ('Gertrud', 'Roob'), ('Gwen', 'Satterfield'), ('Jose', 'Pfeffer'), ('Otto', 'Wolff'), ('Renda', 'Botsford'), ('Marcelo', 'Mayert'), ('Loise', 'Will'), ('Heath', 'Doyle'), ('Chance', 'Schamberger'), ('Darleen', 'Tillman'), ('Trudi', 'Murray'), ('Adam', 'Pacocha'), ('Chris', 'Hamill'))", "rowcount": 347, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Yuriko', 'Schumm'), ('Victor', 'Walter'), ('Chelsey', 'Balistreri'), ('Diego', 'Mosciski'), ('Diego', 'Hand'), ('Patrick', 'Lind'), ('Jessie', 'Corkery'), ('Siu', 'Pagac'), ('Ester', 'Schinner'), ('Darren', 'Predovic'), ('Jere', 'Spinka'), ('Laree', 'Strosin'), ('Muoi', 'Kuhlman'), ('Florida', 'Stark'), ('Shawna', 'Lowe'), ('Alfonzo', 'Smitham'), ('Jasper', 'Ernser'), ('Vinita', 'Stanton'), ('Judith', 'Fay'), ('Phillis', 'Mante'), ('Brice', 'Jerde'), ('Javier', 'Hamill'), ('Scot', 'Morissette'), ('Dena', 'Kutch'), ('Caron', 'Volkman'), ('Damian', 'Schultz'), ('Benito', 'Wiegand'), ('Sung', 'Carter'), ('Alfredo', 'Halvorson'), ('Marianela', 'Funk'), ('Lavelle', 'Vandervort'), ('Augustine', \"O'Reilly\"), ('Jospeh', 'VonRueden'), ('Tyrone', 'Johns'), ('Miquel', 'Pouros'), ('Berry', 'Keebler'), ('Martha', 'Swaniawski'), ('Charlsie', 'Vandervort'), ('Rico', 'Schmitt'), ('Isadora', 'Moen'), ('Alonzo', 'Prohaska'), ('Lai', 'Ebert'), ('Bradley', 'Kerluke'), ('Cleo', 'Hilpert'), ('Nelson', 'Jast'), ('Terra', 'Heller'), ('Jame', 'Mayer'), ('Cami', 'Terry'), ('Rod', 'Hahn'), ('Augustus', 'Parker'), ('Shon', 'Nikolaus'), ('Viva', 'Walker'), ('Corrina', 'Feest'), ('Nanci', 'Huel'), ('Akilah', 'Fadel'), ('Reuben', 'Bashirian'), ('Kelle', 'Kessler'), ('Willette', 'Hyatt'), ('Lula', 'Spencer'), ('Dexter', 'Mitchell'), ('Cole', 'Keeling'), ('Mana', 'Schiller'), ('Hector', 'Ziemann'), ('Tiffany', 'Mertz'), ('Mack', 'Orn'), ('Lenore', 'Gleason'), ('Farah', 'Gerhold'), ('Mui', 'Trantow'), ('Adrianne', 'Rodriguez'), ('Verda', 'Stehr'), ('Gricelda', 'Hane'), ('Isaiah', 'Bernier'), ('Livia', 'Williamson'), ('Leisha', 'Monahan'), ('Irmgard', 'Krajcik'), ('Saundra', 'Monahan'), ('Dion', 'Auer'), ('Bryan', 'Mayer'), ('Gertrud', 'Roob'), ('Gwen', 'Satterfield'), ('Jose', 'Pfeffer'), ('Otto', 'Wolff'), ('Renda', 'Botsford'), ('Marcelo', 'Mayert'), ('Loise', 'Will'), ('Heath', 'Doyle'), ('Chance', 'Schamberger'), ('Darleen', 'Tillman'), ('Trudi', 'Murray'), ('Adam', 'Pacocha'), ('Chris', 'Hamill'), ('Warner', 'Wisozk'), ('Ezekiel', 'Herzog'), ('Neely', 'Keeling'), ('Wilmer', 'Koepp'), ('Shawnta', 'Erdman'), ('Yahaira', 'Ortiz'), ('Jonathan', 'Douglas'), ('Shantel', 'White'), ('Laci', 'Heller'), ('Avelina', 'Block'), ('Ozell', 'Armstrong'), ('Darla', 'Crona'), ('Hana', 'Brekke'), ('Filiberto', 'Bartoletti'), ('Gwendolyn', 'Ziemann'), ('Mckinley', 'Cartwright'), ('Tabetha', 'Hamill'), ('Joesph', 'Runte'), ('Quentin', 'Toy'), ('Wendy', 'Huels'), ('Chin', 'Kub'), ('Robert', 'Stamm'), ('Carley', 'Schneider'), ('Courtney', 'Schaden'), ('Garry', \"O'Connell\"), ('Jeff', 'Labadie'), ('Ernie', 'Fisher'), ('Arlette', 'Leuschke'), ('Kim', 'Barrows'), ('Young', 'Treutel'), ('21-Jan', 'Koelpin'), ('Janean', 'Bashirian'), ('Myrtie', 'Reilly'), ('Deane', 'Kris'), ('Suk', 'Hartmann'), ('Barrie', 'Abernathy'), ('Rudy', 'Cormier'), ('Will', 'Mayert'), ('Elly', 'Koss'), ('Martin', 'Harris'), ('Katelynn', 'Tremblay'), ('Weldon', 'Murphy'), ('Roosevelt', 'Breitenberg'), ('Lenard', 'Schiller'), ('Whitney', 'Nolan'), ('Kory', 'Klocko'), ('Clarisa', 'Tromp'), ('Stacy', 'McLaughlin'), ('Dominic', 'Bins'), ('Particia', 'Ward'), ('Lynwood', 'Stehr'), ('Ellyn', 'Block'), ('Tony', 'Kessler'), ('Abraham', 'Balistreri'), ('Cheree', 'Rice'), ('Benny', 'Herzog'), ('Sherlene', 'Murphy'), ('Walter', 'Bahringer'), ('Jerome', 'Spinka'), ('Jimmy', 'Marks'), ('Tonette', 'Gislason'), ('Claudette', 'Renner'), ('Luis', 'Wilderman'), ('Clora', 'Veum'), ('Maurice', 'Kshlerin'), ('Merrill', 'Kassulke'), ('Trey', 'Wunsch'), ('Lloyd', 'Kemmer'), ('Lyndon', 'Pacocha'), ('Xavier', 'Krajcik'), ('Fern', 'Padberg'), ('Terry', 'Kuhic'), ('Ozie', 'Larson'), ('Dana', 'Bayer'), ('Lorean', 'Gulgowski'), ('Andres', 'Parisian'), ('Ona', 'Waters'), ('Astrid', 'Schroeder'), ('Leena', 'Kemmer'), ('Elisa', 'Lowe'), ('Telma', 'Jakubowski'), ('Olen', 'Homenick'), ('Margaretta', \"O'Hara\"), ('Neal', 'Eichmann'), ('Lourie', 'Crooks'), ('Valentine', 'Jacobson'), ('Royal', 'Turcotte'), ('Rosendo', 'Hodkiewicz'), ('Bonnie', 'Wisoky'), ('Dillon', 'Lehner'), ('Markus', 'Mraz'), ('Margarette', 'Maggio'), ('Carroll', 'Boyle'), ('Faustino', 'Huel'), ('Gala', 'Carroll'), ('Natalie', 'Green'), ('Jeremy', 'Goodwin'), ('Alycia', 'Olson'), ('Dirk', 'Stoltenberg'), ('Tiffani', 'Dickens'), ('Albert', 'Lemke'), ('Larue', 'Brekke'), ('Deetta', 'Harber'), ('Betty', 'Hickle'), ('Georgie', 'Herzog'), ('Dorian', 'Kovacek'), ('Kyle', 'Bernier'), ('Nickie', 'Stiedemann'), ('Alina', 'Padberg'), ('Jesse', 'Leuschke'), ('Augustine', 'Erdman'), ('Mora', 'Hand'), ('Reva', 'Schmeler'), ('Thuy', 'Luettgen'), ('Jazmine', 'Rau'), ('Carroll', 'Bernhard'), ('Georgianna', 'Boehm'), ('Deeann', 'Jacobson'), ('Latasha', 'Adams'), ('Micki', 'Haag'), ('Nicolas', 'Prosacco'), ('Lawanda', 'Murray'), ('Sang', 'Bauch'), ('Nyla', 'Heathcote'), ('Katharine', 'Dach'), ('Kathaleen', 'Cummerata'), ('Lillian', 'Stark'), ('Sara', 'Pacocha'), ('Shona', 'Hamill'), ('Kyra', 'Bode'), ('Antone', 'Dickinson'), ('Siobhan', 'Conroy'), ('Florencio', 'Turner'), ('Annie', 'Prosacco'), ('Emelina', 'Abernathy'), ('Renaldo', 'Kshlerin'), ('Conrad', 'Kuhlman'), ('Willene', 'Orn'), ('Serina', 'Robel'), ('Hilma', 'Rath'), ('Jules', 'Barton'), ('Maryjane', 'Herzog'), ('Orlando', 'Cormier'), ('Omar', 'Ziemann'), ('Ivana', 'Rowe'), ('Williams', 'Torp'), ('Ashlee', 'Leannon'), ('Ryan', 'Keeling'), ('Melanie', 'Schroeder'), ('Denita', 'Nitzsche'), ('Edgar', 'Von'), ('Joselyn', 'Marquardt'), ('Brain', 'Hudson'), ('Ima', 'Murphy'), ('Nathan', 'Botsford'), ('Serafina', 'Bosco'), ('Jaye', 'Schroeder'), ('Pasquale', 'Crist'), ('Tarra', 'Gerhold'), ('Milan', 'DuBuque'), ('Delpha', 'Schinner'), ('Andreas', 'Bauch'), ('Hildred', 'Schuppe'), ('Rob', 'Pouros'), ('Ronnie', 'Lindgren'), ('Percy', 'Wunsch'), ('Trula', 'Harber'), ('Maurice', 'Bins'), ('Stacey', 'Pollich'), ('Randall', 'Smith'), ('Austin', 'Waelchi'), ('Wilmer', 'Denesik'), ('Belle', 'Smitham'), ('Rodolfo', 'Heathcote'), ('Mathew', 'Windler'), ('Tabitha', 'Baumbach'), ('Pok', 'Thompson'), ('Rikki', 'Osinski'), ('Shonta', 'Mann'), ('Cesar', 'Larson'), ('Buck', 'Kshlerin'), ('Kary', 'Schmitt'), ('Octavia', 'Klein'), ('Patrick', 'Kilback'), ('Cecil', 'Gaylord'), ('Demarcus', 'Cormier'), ('Kelsey', 'Skiles'), ('Deanne', 'Kilback'), ('Gwenda', \"O'Conner\"), ('Jamar', 'Durgan'), ('Anamaria', 'Mraz'), ('Ernestine', 'Rutherford'), ('Elizbeth', 'Konopelski'), ('Lorie', 'Cruickshank'), ('Winford', 'Jast'), ('Bret', 'Grant'), ('Arielle', 'Nader'), ('Raymonde', 'Heathcote'), ('Yanira', 'Flatley'), ('Anette', 'Hand'), ('Refugio', 'Barton'), ('Rubin', 'Thiel'), ('Thomas', 'Altenwerth'), ('Carl', 'Sawayn'), ('Neville', 'McDermott'), ('Adam', 'Lynch'), ('Oswaldo', 'Abernathy'), ('Dania', 'Trantow'), ('Rigoberto', 'Heidenreich'), ('Elvis', 'Lockman'), ('Mauro', 'McCullough'), ('Donn', 'Schowalter'), ('Ira', 'Deckow'), ('Delilah', 'Kuhic'), ('Julian', 'Strosin'), ('Eldon', 'Ryan'), ('Demetrius', 'Dickens'), ('Eulalia', 'Wiegand'), ('Ethel', 'Cormier'), ('Mohammed', 'Larson'), ('Dave', 'Hudson'), ('Hugh', 'Kuhn'), ('Felicitas', 'Hahn'), ('Tobias', 'Carroll'), ('Lesli', 'Gislason'), ('Curtis', 'Schroeder'), ('Randall', 'Wilderman'), ('Chad', 'Hartmann'), ('Emanuel', 'Kerluke'), ('Lindsey', 'Lowe'), ('Emmanuel', 'Douglas'), ('Nestor', 'Dibbert'), ('Jorge', 'Wolff'), ('Rusty', \"D'Amore\"), ('Tyisha', 'Brekke'), ('Charlene', 'Mann'), ('Andres', 'Sipes'), ('Verline', 'Konopelski'), ('Tuyet', 'Abernathy'), ('Merlin', 'Roob'), ('Missy', 'MacGyver'), ('Jerrod', 'Mayert'), ('Keri', 'Veum'), ('Lacy', 'Collier'), ('Tish', 'Donnelly'), ('Mario', 'Gottlieb'), ('Adolfo', 'Schmitt'), ('Gilbert', 'Bradtke'), ('Emile', 'Brekke'), ('Harriette', 'Hessel'), ('Danilo', 'Feeney'), ('Dallas', 'Spencer'), ('Dannie', 'Considine'), ('Lon', 'Simonis'), ('Lizeth', 'Ernser'), ('Doreen', 'Mohr'))", "rowcount": 347, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 136, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 0, "FP": 0, "FN": 1}
{"sql_id": 62, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None, None))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None, None))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 3, "FP": 0, "FN": 0}
{"sql_id": 65, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 66, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Parser Error: syntax error at or near \"AS\"", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 67, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 68, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, 0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0, 0.0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 74, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 75, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((-1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((-1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 76, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 77, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Finance',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Finance',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 78, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 80, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 82, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 1: ...e_id WHERE T2.phone_brand = 'OPPO' AND DATE(T1._timestamp) = '2016-05-01';\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 83, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 1, "FN": 0}
{"sql_id": 84, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 86, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 87, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((114.0, 24.0), (88.0, 44.0), (120.0, 32.0), (114.0, 31.0), (106.0, 27.0), (113.0, 23.0), (113.0, 23.0), (104.0, 36.0), (114.0, 37.0), (116.0, 40.0), (113.0, 23.0), (120.0, 37.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (122.0, 30.0), (113.0, 23.0), (114.0, 38.0), (116.0, 40.0), (114.0, 39.0), (0.0, 0.0), (1.0, 1.0), (116.0, 40.0), (105.0, 32.0), (113.0, 23.0), (104.0, 30.0), (107.0, 30.0), (119.0, 32.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (114.0, 23.0), (114.0, 23.0), (118.0, 24.0), (119.0, 32.0), (121.0, 29.0), (114.0, 23.0), (121.0, 29.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (102.0, 25.0), (116.0, 29.0), (104.0, 31.0), (109.0, 34.0), (116.0, 24.0), (122.0, 40.0), (118.0, 39.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (1.0, 1.0), (0.0, 0.0), (114.0, 35.0), (122.0, 42.0), (121.0, 30.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (118.0, 39.0), (1.0, 1.0), (104.0, 30.0), (118.0, 32.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (113.0, 36.0), (108.0, 23.0), (114.0, 23.0), (117.0, 32.0), (113.0, 23.0), (1.0, 1.0), (1.0, 1.0), (120.0, 30.0), (121.0, 31.0), (108.0, 23.0), (0.0, 0.0), (114.0, 23.0), (114.0, 25.0), (120.0, 36.0), (113.0, 36.0), (108.0, 23.0), (0.0, 0.0), (114.0, 35.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (120.0, 32.0), (120.0, 37.0), (118.0, 38.0), (0.0, 0.0), (118.0, 24.0), (0.0, 0.0), (0.0, 0.0), (114.0, 37.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (114.0, 38.0), (126.0, 42.0), (113.0, 23.0), (0.0, 0.0), (108.0, 23.0), (117.0, 34.0), (114.0, 31.0), (116.0, 29.0), (121.0, 31.0), (0.0, 0.0), (106.0, 27.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (0.0, 0.0), (114.0, 23.0), (104.0, 30.0), (104.0, 31.0), (114.0, 35.0), (115.0, 33.0), (116.0, 40.0), (116.0, 40.0), (120.0, 30.0), (0.0, 0.0), (114.0, 23.0), (105.0, 23.0), (0.0, 0.0), (0.0, 0.0), (116.0, 40.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (120.0, 36.0), (115.0, 37.0), (104.0, 36.0), (114.0, 31.0), (119.0, 32.0), (0.0, 0.0), (124.0, 42.0), (116.0, 40.0), (106.0, 30.0), (113.0, 23.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (120.0, 36.0), (112.0, 23.0), (0.0, 0.0), (114.0, 37.0), (116.0, 40.0), (110.0, 25.0), (118.0, 24.0), (104.0, 30.0), (108.0, 23.0), (107.0, 29.0), (121.0, 31.0), (0.0, 0.0), (113.0, 34.0), (0.0, 0.0), (120.0, 29.0), (104.0, 30.0), (0.0, 0.0), (117.0, 28.0), (108.0, 23.0), (0.0, 0.0), (104.0, 31.0), (114.0, 36.0), (116.0, 40.0), (117.0, 31.0), (0.0, 0.0), (114.0, 38.0), (120.0, 30.0), (104.0, 30.0), (108.0, 23.0), (112.0, 22.0), (114.0, 23.0), (116.0, 23.0), (116.0, 23.0), (117.0, 38.0), (114.0, 31.0), (113.0, 36.0), (122.0, 40.0), (112.0, 36.0), (109.0, 34.0), (122.0, 30.0), (115.0, 26.0), (115.0, 26.0), (121.0, 28.0), (0.0, 0.0), (119.0, 32.0), (119.0, 32.0), (113.0, 23.0), (120.0, 29.0), (119.0, 26.0), (0.0, 0.0), (0.0, 0.0), (115.0, 23.0), (0.0, 0.0), (119.0, 32.0), (120.0, 33.0), (121.0, 30.0), (111.0, 27.0), (120.0, 29.0), (117.0, 39.0), (1.0, 1.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (124.0, 42.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (122.0, 40.0), (105.0, 23.0), (122.0, 40.0), (122.0, 31.0), (112.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (106.0, 37.0), (106.0, 27.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 36.0), (106.0, 38.0), (120.0, 42.0), (0.0, 0.0), (121.0, 31.0), (114.0, 31.0), (110.0, 21.0), (0.0, 0.0), (110.0, 20.0), (120.0, 36.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (1.0, 1.0), (118.0, 35.0), (122.0, 30.0), (120.0, 30.0), (113.0, 23.0), (113.0, 28.0), (0.0, 0.0), (114.0, 31.0), (126.0, 42.0), (0.0, 0.0), (114.0, 23.0), (120.0, 37.0), (112.0, 38.0), (113.0, 28.0), (103.0, 30.0), (113.0, 28.0), (119.0, 32.0), (115.0, 30.0), (110.0, 20.0), (121.0, 31.0), (113.0, 36.0), (1.0, 1.0), (103.0, 25.0), (108.0, 26.0), (123.0, 41.0), (114.0, 23.0), (118.0, 26.0), (116.0, 40.0), (120.0, 27.0), (0.0, 0.0), (121.0, 31.0), (109.0, 22.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 35.0), (117.0, 37.0), (118.0, 38.0), (0.0, 0.0), (119.0, 26.0), (0.0, 0.0), (114.0, 36.0), (0.0, 0.0), (121.0, 31.0), (104.0, 30.0), (123.0, 41.0), (123.0, 41.0), (109.0, 30.0), (0.0, 0.0), (122.0, 30.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (0.0, 0.0), (117.0, 32.0), (118.0, 39.0), (121.0, 28.0), (121.0, 31.0), (121.0, 38.0), (113.0, 34.0), (121.0, 28.0), (121.0, 31.0), (113.0, 29.0), (114.0, 23.0), (114.0, 23.0), (112.0, 36.0), (113.0, 23.0), (118.0, 40.0), (0.0, 0.0), (111.0, 21.0), (116.0, 40.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (120.0, 37.0), (120.0, 30.0), (114.0, 31.0), (113.0, 38.0), (119.0, 32.0), (115.0, 38.0), (112.0, 32.0), (109.0, 35.0), (0.0, 0.0), (117.0, 36.0), (120.0, 36.0), (119.0, 26.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (102.0, 25.0), (0.0, 0.0), (120.0, 30.0), (115.0, 30.0), (121.0, 30.0), (116.0, 23.0), (117.0, 28.0), (127.0, 46.0), (121.0, 31.0), (114.0, 23.0), (114.0, 35.0), (120.0, 32.0), (114.0, 23.0), (105.0, 29.0), (114.0, 35.0), (102.0, 25.0), (116.0, 40.0), (121.0, 31.0), (112.0, 30.0), (0.0, 0.0), (104.0, 30.0), (116.0, 40.0), (0.0, 0.0), (121.0, 31.0), (115.0, 38.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (1.0, 1.0), (0.0, 0.0), (88.0, 44.0), (118.0, 34.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (114.0, 23.0), (119.0, 26.0), (114.0, 23.0), (114.0, 23.0), (106.0, 38.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (88.0, 44.0), (0.0, 0.0), (114.0, 23.0), (106.0, 27.0), (113.0, 23.0), (121.0, 28.0), (118.0, 36.0), (109.0, 18.0), (109.0, 18.0), (118.0, 28.0), (118.0, 28.0), (108.0, 23.0), (0.0, 0.0), (123.0, 42.0), (114.0, 23.0), (0.0, 0.0), (106.0, 27.0), (119.0, 34.0), (0.0, 0.0), (0.0, 0.0), (120.0, 29.0), (119.0, 25.0), (119.0, 25.0), (0.0, 0.0), (114.0, 27.0), (121.0, 31.0), (116.0, 40.0), (109.0, 34.0), (109.0, 34.0), (100.0, 27.0), (0.0, 0.0), (122.0, 40.0), (0.0, 0.0), (0.0, 0.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (112.0, 22.0), (114.0, 35.0), (1.0, 1.0), (114.0, 23.0), (104.0, 31.0), (0.0, 0.0), (110.0, 25.0), (104.0, 30.0), (0.0, 0.0), (0.0, 0.0), (117.0, 36.0), (121.0, 29.0), (120.0, 30.0), (114.0, 23.0), (110.0, 20.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (113.0, 23.0), (113.0, 34.0), (113.0, 23.0), (0.0, 0.0), (113.0, 38.0), (0.0, 0.0), (118.0, 37.0), (0.0, 0.0), (115.0, 30.0), (114.0, 30.0), (118.0, 35.0), (118.0, 35.0), (121.0, 30.0), (0.0, 0.0), (117.0, 39.0), (0.0, 0.0), (120.0, 33.0), (0.0, 0.0), (116.0, 40.0), (114.0, 31.0), (113.0, 35.0), (0.0, 0.0), (119.0, 40.0), (114.0, 23.0), (106.0, 38.0), (116.0, 40.0), (119.0, 26.0), (114.0, 28.0), (117.0, 37.0), (124.0, 42.0), (0.0, 0.0), (104.0, 30.0), (105.0, 25.0), (114.0, 37.0), (0.0, 0.0), (0.0, 0.0), (122.0, 39.0), (0.0, 0.0), (114.0, 35.0), (115.0, 29.0), (0.0, 0.0), (0.0, 0.0), (119.0, 32.0), (110.0, 25.0), (113.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (122.0, 37.0), (114.0, 23.0), (0.0, 0.0), (118.0, 24.0), (121.0, 31.0), (121.0, 38.0), (104.0, 23.0), (119.0, 32.0), (107.0, 30.0), (0.0, 0.0), (119.0, 26.0), (117.0, 32.0), (116.0, 40.0), (117.0, 32.0), (121.0, 28.0), (121.0, 28.0), (119.0, 25.0), (0.0, 0.0), (114.0, 38.0), (118.0, 36.0), (111.0, 36.0), (0.0, 0.0), (0.0, 0.0), (116.0, 36.0), (121.0, 30.0), (117.0, 23.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (114.0, 35.0), (121.0, 31.0), (103.0, 25.0), (113.0, 23.0), (0.0, 0.0), (0.0, 0.0), (114.0, 27.0), (124.0, 47.0), (104.0, 36.0), (119.0, 26.0), (117.0, 37.0), (105.0, 23.0), (107.0, 28.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (120.0, 30.0), (116.0, 36.0), (121.0, 31.0), (117.0, 39.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (106.0, 30.0), (114.0, 23.0), (0.0, 0.0), (108.0, 23.0), (111.0, 32.0), (0.0, 0.0), (114.0, 31.0), (127.0, 46.0), (0.0, 0.0), (122.0, 30.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (113.0, 23.0), (118.0, 39.0), (113.0, 23.0), (0.0, 0.0), (118.0, 37.0), (113.0, 38.0), (1.0, 1.0), (116.0, 35.0), (117.0, 40.0), (109.0, 34.0), (109.0, 22.0), (0.0, 0.0), (107.0, 27.0), (0.0, 0.0), (114.0, 23.0), (121.0, 31.0), (0.0, 0.0), (114.0, 36.0), (108.0, 35.0), (0.0, 0.0), (117.0, 37.0), (122.0, 40.0), (110.0, 19.0), (1.0, 1.0), (0.0, 0.0), (105.0, 23.0), (118.0, 35.0), (0.0, 0.0), (121.0, 37.0), (1.0, 1.0), (117.0, 23.0), (114.0, 23.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (0.0, 0.0), (114.0, 32.0), (116.0, 37.0), (0.0, 0.0), (116.0, 29.0), (110.0, 25.0), (122.0, 31.0), (121.0, 31.0), (0.0, 0.0), (121.0, 29.0), (119.0, 32.0), (111.0, 25.0), (102.0, 25.0), (102.0, 25.0), (0.0, 0.0), (118.0, 31.0), (110.0, 21.0), (110.0, 25.0), (119.0, 32.0), (120.0, 30.0), (120.0, 30.0), (120.0, 30.0), (121.0, 31.0), (114.0, 23.0), (108.0, 23.0), (114.0, 23.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (113.0, 36.0), (122.0, 30.0), (108.0, 32.0), (0.0, 0.0), (104.0, 30.0), (104.0, 30.0), (113.0, 23.0), (1.0, 1.0), (123.0, 41.0), (120.0, 30.0), (112.0, 38.0), (112.0, 38.0), (113.0, 28.0), (0.0, 0.0), (116.0, 40.0), (119.0, 32.0), (102.0, 28.0), (122.0, 40.0), (113.0, 23.0), (0.0, 0.0), (114.0, 24.0), (114.0, 24.0), (119.0, 32.0), (100.0, 9.0), (121.0, 31.0), (106.0, 30.0), (104.0, 31.0), (0.0, 0.0), (118.0, 36.0), (120.0, 36.0), (122.0, 31.0), (120.0, 29.0), (116.0, 33.0), (114.0, 23.0), (113.0, 23.0), (119.0, 26.0), (113.0, 23.0), (113.0, 23.0), (121.0, 31.0), (120.0, 29.0), (108.0, 26.0), (0.0, 0.0), (105.0, 32.0), (0.0, 0.0), (1.0, 1.0), (121.0, 31.0), (118.0, 25.0), (114.0, 23.0), (108.0, 25.0), (0.0, 0.0), (114.0, 35.0), (114.0, 23.0), (119.0, 26.0), (0.0, 0.0), (114.0, 23.0), (113.0, 28.0), (104.0, 31.0), (117.0, 32.0), (116.0, 40.0), (103.0, 25.0), (106.0, 30.0), (113.0, 34.0), (0.0, 0.0), (0.0, 0.0), (118.0, 38.0), (125.0, 45.0), (114.0, 31.0), (119.0, 37.0), (0.0, 0.0), (121.0, 31.0), (116.0, 40.0), (104.0, 30.0), (118.0, 38.0), (102.0, 39.0), (119.0, 34.0), (121.0, 31.0), (0.0, 0.0), (121.0, 31.0), (114.0, 39.0), (119.0, 32.0), (120.0, 36.0), (116.0, 24.0), (113.0, 23.0), (0.0, 0.0), (113.0, 23.0), (100.0, 27.0), (107.0, 30.0), (121.0, 31.0), (120.0, 32.0), (120.0, 32.0), (114.0, 31.0), (113.0, 32.0), (0.0, 0.0), (116.0, 35.0), (115.0, 27.0), (113.0, 23.0), (113.0, 23.0), (0.0, 0.0), (122.0, 40.0), (120.0, 31.0), (0.0, 0.0), (121.0, 38.0), (106.0, 38.0), (0.0, 0.0), (0.0, 0.0), (119.0, 26.0), (110.0, 25.0), (104.0, 23.0), (114.0, 23.0), (114.0, 23.0), (120.0, 29.0), (0.0, 0.0), (0.0, 0.0), (110.0, 20.0), (116.0, 40.0), (104.0, 31.0), (123.0, 42.0), (115.0, 28.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (1.0, 1.0), (110.0, 20.0), (113.0, 35.0), (117.0, 40.0), (1.0, 1.0), (116.0, 27.0), (112.0, 30.0), (113.0, 28.0), (116.0, 40.0), (110.0, 27.0), (110.0, 23.0), (119.0, 32.0), (114.0, 23.0), (119.0, 25.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 31.0), (119.0, 26.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (120.0, 32.0), (113.0, 23.0), (0.0, 0.0), (104.0, 31.0), (1.0, 1.0), (122.0, 30.0), (122.0, 40.0), (104.0, 30.0), (0.0, 0.0), (116.0, 40.0), (0.0, 0.0), (113.0, 23.0), (0.0, 0.0), (117.0, 23.0), (113.0, 28.0), (122.0, 40.0), (120.0, 32.0), (1.0, 1.0), (108.0, 23.0), (1.0, 1.0), (0.0, 0.0), (108.0, 23.0), (120.0, 30.0), (114.0, 31.0), (0.0, 0.0), (121.0, 31.0), (105.0, 32.0), (117.0, 36.0), (113.0, 36.0), (113.0, 36.0), (122.0, 30.0), (110.0, 41.0), (121.0, 28.0), (106.0, 30.0), (114.0, 23.0), (106.0, 27.0), (106.0, 27.0), (104.0, 36.0), (109.0, 18.0), (118.0, 28.0), (116.0, 36.0), (125.0, 50.0), (121.0, 31.0), (119.0, 25.0), (0.0, 0.0), (120.0, 31.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (1.0, 1.0), (0.0, 0.0), (0.0, 0.0), (103.0, 30.0), (119.0, 32.0), (120.0, 30.0), (119.0, 34.0), (114.0, 25.0), (118.0, 30.0), (0.0, 0.0), (121.0, 31.0), (113.0, 36.0), (104.0, 30.0), (126.0, 43.0), (0.0, 0.0), (114.0, 31.0), (113.0, 36.0), (121.0, 31.0), (117.0, 38.0), (113.0, 23.0), (114.0, 35.0), (116.0, 40.0), (0.0, 0.0), (0.0, 0.0), (112.0, 38.0), (120.0, 27.0), (0.0, 0.0), (0.0, 0.0), (104.0, 30.0), (115.0, 37.0), (0.0, 0.0), (120.0, 36.0), (1.0, 1.0), (108.0, 23.0), (0.0, 0.0), (0.0, 0.0), (112.0, 36.0), (104.0, 31.0), (113.0, 23.0), (119.0, 32.0), (116.0, 40.0), (116.0, 40.0), (119.0, 26.0), (116.0, 24.0), (0.0, 0.0), (106.0, 38.0), (113.0, 36.0), (0.0, 0.0), (120.0, 37.0), (121.0, 31.0), (113.0, 23.0), (88.0, 44.0), (116.0, 24.0), (109.0, 34.0), (120.0, 31.0), (121.0, 28.0), (114.0, 37.0), (113.0, 34.0), (116.0, 40.0), (106.0, 37.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (0.0, 0.0), (121.0, 29.0), (114.0, 23.0), (123.0, 42.0), (0.0, 0.0), (113.0, 23.0), (116.0, 40.0), (116.0, 23.0), (0.0, 0.0), (124.0, 42.0), (114.0, 31.0), (0.0, 0.0), (0.0, 0.0), (113.0, 36.0), (110.0, 20.0), (118.0, 37.0), (106.0, 38.0), (113.0, 23.0), (112.0, 38.0), (120.0, 30.0), (114.0, 23.0), (116.0, 40.0), (116.0, 40.0), (114.0, 25.0), (0.0, 0.0), (109.0, 34.0), (114.0, 35.0), (124.0, 42.0), (114.0, 35.0), (0.0, 0.0), (121.0, 31.0), (0.0, 0.0), (119.0, 34.0), (121.0, 38.0), (120.0, 27.0), (118.0, 36.0), (0.0, 0.0), (114.0, 23.0), (118.0, 38.0), (118.0, 39.0), (1.0, 1.0), (114.0, 38.0), (121.0, 29.0), (116.0, 40.0), (116.0, 36.0), (110.0, 20.0), (0.0, 0.0), (121.0, 31.0), (114.0, 37.0), (121.0, 31.0), (114.0, 35.0), (118.0, 35.0), (113.0, 23.0), (115.0, 38.0), (0.0, 0.0), (0.0, 0.0), (104.0, 31.0), (115.0, 27.0), (105.0, 38.0), (0.0, 0.0), (116.0, 40.0), (114.0, 23.0), (124.0, 47.0))", "rowcount": 959, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Binder Error: Referenced column \"timestamp\" not found in FROM clause!\nCandidate bindings: \"events._timestamp\", \"events.latitude\"\nLINE 1: ...de FROM events WHERE DATE_TRUNC('day', timestamp) = '2016-04-30';\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 2, "FN": 1}
{"sql_id": 88, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "()", "rowcount": -1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 6:     WHERE date(T2._timestamp) BETWEEN '2016-05-01' AND '2016-05-10'\n    GROUP BY T1.gender\n) AS T\nORDER BY T.num DESC\nLIMIT 1;...\n                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 89, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 90, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 91, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 92, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('F',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('F',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 0, "FN": 0}
{"sql_id": 95, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 93, "EM": 1, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 248, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('DS Yamamura Misa Suspense: Maiko Kogiku - Kisha Katherine - Sougiya Isa Akashi - Koto ni Maru Hana Sanrin: Kyoto Satujin Jinken File',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('DS Yamamura Misa Suspense: Maiko Kogiku - Kisha Katherine - Sougiya Isa Akashi - Koto ni Maru Hana Sanrin: Kyoto Satujin Jinken File',))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 508, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((60.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name julianday does not exist!\nDid you mean \"julian\"?\nLINE 1: SELECT JULIANDAY(EndDate) - JULIANDAY(StartDat...\n               ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 4}
{"sql_id": 511, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 6: AND DATE(T1.LastReceiptDate) = '2011-08-27';...\n            ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 512, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((77.994,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((77.994,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 513, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((0, 'MA'), (0, 'WA'), (0, 'CA'), (0, 'SD'), (0, '75'), (0, '91'), (0, 'RI'), (0, 'CT'), (0, 'NH'), (0, 'ME'), (0, 'KY'), (0, 'UT'), (0, 'NV'), (0, '93'), (0, 'BY'), (0, '77'), (0, 'GA'), (0, 'NE'), (0, 'WI'), (0, '32'), (0, 'BB'), (0, 'OH'), (0, 'IN'), (0, 'VIC'), (0, '62'), (0, '31'), (0, 'AZ'), (0, 'SA'), (0, 'MB'), (0, 'BC'), (0, 'ENG'), (0, '59'), (0, 'CO'), (0, 'MD'), (0, 'NW'), (0, 'OR'), (0, 'ON'), (0, 'MO'), (0, 'NM'), (0, '17'), (0, '45'), (0, 'VA'), (0, 'MT'), (0, 'NY'), (0, 'IL'), (0, 'MI'), (0, 'WY'), (0, 'AL'), (0, 'MS'), (0, '95'), (0, 'QC'), (0, 'TX'), (0, 'FL'), (0, 'QLD'), (0, '57'), (0, 'TAS'), (0, 'SL'), (0, '41'), (0, '80'), (0, '33'), (0, 'PA'), (0, 'NSW'), (0, 'TN'), (0, 'SC'), (0, '78'), (0, 'HH'), (0, '94'), (0, '92'), (0, 'AB'), (0, 'NB'), (0, 'HE'), (0, 'ID'), (0, 'NC'), (0, 'MN'))", "rowcount": 74, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0, 'MA'), (0, 'WA'), (0, 'CA'), (0, 'SD'), (0, '75'), (0, '91'), (0, 'RI'), (0, 'CT'), (0, 'NH'), (0, 'ME'), (0, 'KY'), (0, 'UT'), (0, 'NV'), (0, '93'), (0, 'BY'), (0, '77'), (0, 'GA'), (0, 'QC'), (0, 'TX'), (0, 'FL'), (0, 'QLD'), (0, '57'), (0, 'TAS'), (0, 'SL'), (0, '41'), (0, '80'), (0, '33'), (0, 'PA'), (0, 'NSW'), (0, 'TN'), (0, 'SC'), (0, '78'), (0, 'HH'), (0, '94'), (0, '92'), (0, 'AB'), (0, 'NB'), (0, 'HE'), (0, 'ID'), (0, 'NC'), (0, 'MN'), (0, 'OR'), (0, 'ON'), (0, 'MO'), (0, 'NM'), (0, '17'), (0, '45'), (0, 'VA'), (0, 'NE'), (0, 'WI'), (0, '32'), (0, 'BB'), (0, 'OH'), (0, 'IN'), (0, 'VIC'), (0, '62'), (0, '31'), (0, 'AZ'), (0, 'SA'), (0, 'MB'), (0, 'BC'), (0, 'ENG'), (0, '59'), (0, 'CO'), (0, 'MD'), (0, 'NW'), (0, 'MT'), (0, 'NY'), (0, 'IL'), (0, 'MI'), (0, 'WY'), (0, 'AL'), (0, 'MS'), (0, '95'))", "rowcount": 74, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 3, "FN": 0}
{"sql_id": 514, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((1431.5,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (337.22,), (1364.5,), (1364.5,), (1349.6,), (1349.6,), (1349.6,), (1364.5,), (2319.99,), (2319.99,), (2319.99,), (2294.99,), (2294.99,), (2294.99,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (2443.35,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (1120.49,), (44.54,), (61.92,), (120.27,), (44.54,), (61.92,), (120.27,), (594.83,), (594.83,), (594.83,), (594.83,), (594.83,), (1431.5,), (1431.5,), (1431.5,), (1431.5,), (63.5,), (63.5,), (63.5,), (69.99,), (69.99,), (69.99,), (120.0,), (159.0,), (54.99,), (1003.91,), (333.42,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (1003.91,), (121.46,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (333.42,), (364.09,), (364.09,), (364.09,), (106.5,), (52.64,), (52.64,), (52.64,), (264.05,), (264.05,), (264.05,), (264.05,), (249.79,), (249.79,), (249.79,), (249.79,), (35.0,), (40.49,), (62.09,), (80.99,), (40.49,), (62.09,), (80.99,), (80.99,), (364.09,), (249.79,), (264.05,), (91.49,), (46.09,), (91.57,), (106.5,), (175.49,), (256.49,), (404.99,), (1214.85,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (742.35,), (2384.07,), (2384.07,), (2384.07,), (2384.07,), (1214.85,), (1214.85,), (1214.85,), (1700.99,), (1700.99,), (1700.99,), (1700.99,), (539.99,), (742.35,), (742.35,), (769.49,), (769.49,), (769.49,), (769.49,), (564.99,), (564.99,), (564.99,), (564.99,), (564.99,), (539.99,), (539.99,), (539.99,), (539.99,), (539.99,), (53.99,), (101.24,), (121.49,), (539.99,), (539.99,), (539.99,))", "rowcount": 156, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 1: ...tPrice - T1.StandardCost > 21.9037 AND DATE(T2.StartDate) >= '2012-10-01';\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 515, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((44,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((44,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 0, "FN": 0}
{"sql_id": 516, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('W',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',), ('S',))", "rowcount": 8, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 5: AND DATE(T1.TransactionDate) = '2013-07-31';...\n            ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 517, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('W',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 4: ...LECT T1.TransactionType\nFROM TransactionHistoryArchive AS T1\nINNER JOIN Produc...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 518, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((290,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((290,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 520, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((276, 750000.0))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((276, 750000.0))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 521, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((283,), (284,), (280,))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((283,), (280,), (284,))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 522, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1200000.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1200000.0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 523, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((290,), (289,), (278,), (280,), (277,), (286,), (283,), (279,), (288,), (275,), (276,), (281,), (282,))", "rowcount": 13, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((275,), (290,), (289,), (283,), (279,), (288,), (280,), (277,), (286,), (276,), (281,), (282,), (278,))", "rowcount": 13, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 526, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((9,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((9,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 528, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 534, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Ken', 'S\u00e1nchez'), ('Terri', 'Duffy'), ('Roberto', 'Tamburello'), ('Gail', 'Erickson'), ('Jossef', 'Goldberg'), ('Dylan', 'Miller'), ('Diane', 'Margheim'), ('Gigi', 'Matthew'), ('Michael', 'Raheem'), ('Michael', 'Sullivan'), ('Sharon', 'Salavaria'), ('David', 'Bradley'), ('James', 'Hamilton'), ('Peter', 'Krebs'), ('Pilar', 'Ackerman'), ('Hazem', 'Abolrous'), ('Peng', 'Wu'), ('Gary', 'Altman'), ('Christian', 'Kleinerman'), ('Laura', 'Norman'), ('Paula', 'Barreto de Mattos'), ('David', 'Liu'), ('Barbara', 'Moreland'), ('Mike', 'Seamans'), ('Wendy', 'Kahn'), ('Sheela', 'Word'), ('Jean', 'Trenary'), ('Stephanie', 'Conroy'), ('Karen', 'Berg'), ('Ramesh', 'Meyyappan'), ('Dan', 'Bacon'), ('Fran\u00e7ois', 'Ajenstat'), ('Dan', 'Wilson'), ('Janaina', 'Bueno'), ('Brian', 'Welcker'), ('Stephen', 'Jiang'), ('Michael', 'Blythe'), ('Linda', 'Mitchell'), ('Jillian', 'Carson'), ('Garrett', 'Vargas'), ('Tsvi', 'Reiter'), ('Pamela', 'Ansman-Wolfe'), ('Shu', 'Ito'), ('Jos\u00e9', 'Saraiva'), ('David', 'Campbell'), ('Tete', 'Mensa-Annan'), ('Syed', 'Abbas'), ('Lynn', 'Tsoflias'), ('Amy', 'Alberts'), ('Rachel', 'Valdez'), ('Jae', 'Pak'), ('Ranjit', 'Varkey Chudukatil'))", "rowcount": 52, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Ken', 'S\u00e1nchez'), ('Terri', 'Duffy'), ('Roberto', 'Tamburello'), ('Gail', 'Erickson'), ('Jossef', 'Goldberg'), ('Dylan', 'Miller'), ('Diane', 'Margheim'), ('Gigi', 'Matthew'), ('Michael', 'Raheem'), ('Michael', 'Sullivan'), ('Sharon', 'Salavaria'), ('David', 'Bradley'), ('James', 'Hamilton'), ('Peter', 'Krebs'), ('Pilar', 'Ackerman'), ('Hazem', 'Abolrous'), ('Peng', 'Wu'), ('Gary', 'Altman'), ('Christian', 'Kleinerman'), ('Laura', 'Norman'), ('Paula', 'Barreto de Mattos'), ('David', 'Liu'), ('Barbara', 'Moreland'), ('Mike', 'Seamans'), ('Wendy', 'Kahn'), ('Sheela', 'Word'), ('Jean', 'Trenary'), ('Stephanie', 'Conroy'), ('Karen', 'Berg'), ('Ramesh', 'Meyyappan'), ('Dan', 'Bacon'), ('Fran\u00e7ois', 'Ajenstat'), ('Dan', 'Wilson'), ('Janaina', 'Bueno'), ('Brian', 'Welcker'), ('Stephen', 'Jiang'), ('Michael', 'Blythe'), ('Linda', 'Mitchell'), ('Jillian', 'Carson'), ('Garrett', 'Vargas'), ('Tsvi', 'Reiter'), ('Pamela', 'Ansman-Wolfe'), ('Shu', 'Ito'), ('Jos\u00e9', 'Saraiva'), ('David', 'Campbell'), ('Tete', 'Mensa-Annan'), ('Syed', 'Abbas'), ('Lynn', 'Tsoflias'), ('Amy', 'Alberts'), ('Rachel', 'Valdez'), ('Jae', 'Pak'), ('Ranjit', 'Varkey Chudukatil'))", "rowcount": 52, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 536, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Pilar', 'Ackerman'), ('Matthias', 'Berndt'), ('Jimmy', 'Bischoff'))", "rowcount": 3, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Pilar', 'Ackerman'), ('Matthias', 'Berndt'), ('Jimmy', 'Bischoff'))", "rowcount": 3, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 539, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Classic Vest, S', 'Team Athletic Co.'), ('Classic Vest, M', 'Team Athletic Co.'), ('Classic Vest, L', 'Team Athletic Co.'), (\"Women's Mountain Shorts, S\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, M\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, L\", 'Team Athletic Co.'), ('Water Bottle - 30 oz.', 'Green Lake Bike Company'), ('Mountain Bottle Cage', 'Green Lake Bike Company'), ('Road Bottle Cage', 'Green Lake Bike Company'), ('Patch Kit/8 Patches', 'Green Lake Bike Company'), ('Racing Socks, M', \"Jeff's Sporting Goods\"), ('Racing Socks, L', \"Jeff's Sporting Goods\"), ('Hitch Rack - 4-Bike', 'Green Lake Bike Company'), ('Bike Wash - Dissolver', 'Green Lake Bike Company'), ('Fender Set - Mountain', 'Green Lake Bike Company'), ('All-Purpose Bike Stand', 'Green Lake Bike Company'), ('Hydration Pack - 70 oz.', 'Green Lake Bike Company'), ('Short-Sleeve Classic Jersey, S', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, M', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, L', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, XL', 'Integrated Sport Products'), ('Rear Brakes', 'Superior Bicycles'), ('LL Mountain Seat/Saddle', 'First Rate Bicycles'), ('LL Mountain Seat/Saddle', 'Chicago City Saddles'), ('ML Mountain Seat/Saddle', 'First Rate Bicycles'), ('ML Mountain Seat/Saddle', 'Chicago City Saddles'), ('HL Mountain Seat/Saddle', 'Hybrid Bicycle Center'), ('HL Mountain Seat/Saddle', 'Chicago City Saddles'), ('LL Road Seat/Saddle', \"Hill's Bicycle Service\"), ('LL Road Seat/Saddle', 'Chicago City Saddles'), ('ML Road Seat/Saddle', \"Hill's Bicycle Service\"), ('ML Road Seat/Saddle', 'Chicago City Saddles'), ('HL Road Seat/Saddle', 'First Rate Bicycles'), ('HL Road Seat/Saddle', 'Chicago City Saddles'), ('LL Touring Seat/Saddle', 'Expert Bike Co'), ('LL Touring Seat/Saddle', 'Chicago City Saddles'), ('ML Touring Seat/Saddle', 'Expert Bike Co'), ('ML Touring Seat/Saddle', 'Chicago City Saddles'), ('HL Touring Seat/Saddle', 'Expert Bike Co'), ('HL Touring Seat/Saddle', 'Chicago City Saddles'), ('Mountain Tire Tube', 'Trikes, Inc.'), ('Road Tire Tube', 'Victory Bikes'), ('Touring Tire Tube', 'Victory Bikes'), ('LL Mountain Tire', 'Vista Road Bikes'), ('LL Mountain Tire', 'Sport Fan Co.'), ('ML Mountain Tire', 'Vista Road Bikes'), ('ML Mountain Tire', 'Sport Fan Co.'), ('HL Mountain Tire', 'Trikes, Inc.'), ('HL Mountain Tire', 'Sport Fan Co.'), ('LL Road Tire', 'Signature Cycles'), ('LL Road Tire', 'Professional Athletic Consultants'), ('ML Road Tire', 'Signature Cycles'), ('ML Road Tire', 'Professional Athletic Consultants'), ('HL Road Tire', 'Victory Bikes'), ('HL Road Tire', 'Professional Athletic Consultants'), ('Touring Tire', 'Victory Bikes'), ('Touring Tire', 'Professional Athletic Consultants'), ('LL Mountain Pedal', 'Greenwood Athletic Company'), ('LL Mountain Pedal', 'Crowley Sport'), ('ML Mountain Pedal', 'Greenwood Athletic Company'), ('ML Mountain Pedal', 'Crowley Sport'), ('HL Mountain Pedal', 'Inline Accessories'), ('LL Road Pedal', 'Mitchell Sports'), ('LL Road Pedal', 'Jackson Authority'), ('ML Road Pedal', 'Mitchell Sports'), ('ML Road Pedal', 'Jackson Authority'), ('HL Road Pedal', 'Compete Enterprises, Inc'), ('Touring Pedal', 'Bicycle Specialists'), ('Front Brakes', 'Superior Bicycles'), ('Chain', 'Varsity Sport Co.'))", "rowcount": 70, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Classic Vest, S', 'Team Athletic Co.'), ('Classic Vest, M', 'Team Athletic Co.'), ('Classic Vest, L', 'Team Athletic Co.'), (\"Women's Mountain Shorts, S\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, M\", 'Team Athletic Co.'), (\"Women's Mountain Shorts, L\", 'Team Athletic Co.'), ('Water Bottle - 30 oz.', 'Green Lake Bike Company'), ('Mountain Bottle Cage', 'Green Lake Bike Company'), ('Road Bottle Cage', 'Green Lake Bike Company'), ('Patch Kit/8 Patches', 'Green Lake Bike Company'), ('Racing Socks, M', \"Jeff's Sporting Goods\"), ('Racing Socks, L', \"Jeff's Sporting Goods\"), ('Hitch Rack - 4-Bike', 'Green Lake Bike Company'), ('Bike Wash - Dissolver', 'Green Lake Bike Company'), ('Fender Set - Mountain', 'Green Lake Bike Company'), ('All-Purpose Bike Stand', 'Green Lake Bike Company'), ('Hydration Pack - 70 oz.', 'Green Lake Bike Company'), ('Short-Sleeve Classic Jersey, S', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, M', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, L', 'Integrated Sport Products'), ('Short-Sleeve Classic Jersey, XL', 'Integrated Sport Products'), ('Rear Brakes', 'Superior Bicycles'), ('LL Mountain Seat/Saddle', 'First Rate Bicycles'), ('LL Mountain Seat/Saddle', 'Chicago City Saddles'), ('ML Mountain Seat/Saddle', 'First Rate Bicycles'), ('ML Mountain Seat/Saddle', 'Chicago City Saddles'), ('HL Mountain Seat/Saddle', 'Hybrid Bicycle Center'), ('HL Mountain Seat/Saddle', 'Chicago City Saddles'), ('LL Road Seat/Saddle', \"Hill's Bicycle Service\"), ('LL Road Seat/Saddle', 'Chicago City Saddles'), ('ML Road Seat/Saddle', \"Hill's Bicycle Service\"), ('ML Road Seat/Saddle', 'Chicago City Saddles'), ('HL Road Seat/Saddle', 'First Rate Bicycles'), ('HL Road Seat/Saddle', 'Chicago City Saddles'), ('LL Touring Seat/Saddle', 'Expert Bike Co'), ('LL Touring Seat/Saddle', 'Chicago City Saddles'), ('ML Touring Seat/Saddle', 'Expert Bike Co'), ('ML Touring Seat/Saddle', 'Chicago City Saddles'), ('HL Touring Seat/Saddle', 'Expert Bike Co'), ('HL Touring Seat/Saddle', 'Chicago City Saddles'), ('Mountain Tire Tube', 'Trikes, Inc.'), ('Road Tire Tube', 'Victory Bikes'), ('Touring Tire Tube', 'Victory Bikes'), ('LL Mountain Tire', 'Vista Road Bikes'), ('LL Mountain Tire', 'Sport Fan Co.'), ('ML Mountain Tire', 'Vista Road Bikes'), ('ML Mountain Tire', 'Sport Fan Co.'), ('HL Mountain Tire', 'Trikes, Inc.'), ('HL Mountain Tire', 'Sport Fan Co.'), ('LL Road Tire', 'Signature Cycles'), ('LL Road Tire', 'Professional Athletic Consultants'), ('ML Road Tire', 'Signature Cycles'), ('ML Road Tire', 'Professional Athletic Consultants'), ('HL Road Tire', 'Victory Bikes'), ('HL Road Tire', 'Professional Athletic Consultants'), ('Touring Tire', 'Victory Bikes'), ('Touring Tire', 'Professional Athletic Consultants'), ('LL Mountain Pedal', 'Greenwood Athletic Company'), ('LL Mountain Pedal', 'Crowley Sport'), ('ML Mountain Pedal', 'Greenwood Athletic Company'), ('ML Mountain Pedal', 'Crowley Sport'), ('HL Mountain Pedal', 'Inline Accessories'), ('LL Road Pedal', 'Mitchell Sports'), ('LL Road Pedal', 'Jackson Authority'), ('ML Road Pedal', 'Mitchell Sports'), ('ML Road Pedal', 'Jackson Authority'), ('HL Road Pedal', 'Compete Enterprises, Inc'), ('Touring Pedal', 'Bicycle Specialists'), ('Front Brakes', 'Superior Bicycles'), ('Chain', 'Varsity Sport Co.'))", "rowcount": 70, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 540, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('Terri', 'Duffy'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('Terri', 'Duffy'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 543, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "(('23:00:00', '07:00:00'))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "(('23:00:00', '07:00:00'))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 546, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "(('EM',))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "", "rowcount": -1, "error_message": "Catalog Error: Scalar Function with name date does not exist!\nDid you mean \"datesub\"?\nLINE 4: ...onType \nFROM Employee AS T1 \nINNER JOIN Person AS T2 ON T1.BusinessEntityID = ...\n                                                  ^", "exec_able": false}}, "TP": 0, "FP": 1, "FN": 1}
{"sql_id": 547, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((1,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 548, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 549, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((0,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 2, "FN": 0}
{"sql_id": 551, "EM": 0, "EX": {"ex_bool": true, "gold_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((None,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 2, "FP": 2, "FN": 0}
{"sql_id": 559, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((6.097560882568359,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((6.097560975609756,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 560, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((3.120936393737793,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((3.120936280884265,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}
{"sql_id": 561, "EM": 0, "EX": {"ex_bool": false, "gold_exec_result": {"result": "((2.845218038920128,))", "rowcount": 1, "error_message": "None", "exec_able": true}, "predict_exec_result": {"result": "((2.8452181419627407,))", "rowcount": 1, "error_message": "None", "exec_able": true}}, "TP": 1, "FP": 1, "FN": 0}

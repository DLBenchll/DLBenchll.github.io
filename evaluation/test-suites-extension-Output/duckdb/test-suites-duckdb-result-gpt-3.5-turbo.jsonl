{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE (a, b) IN (SELECT 1, 10); -- ROW", "sql_id": "duckdb_1_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE (a, b) IN (SELECT 1, 10 UNION ALL SELECT 2, 20);", "sql_id": "duckdb_1_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE (a, b) NOT IN (SELECT 1, 10);", "sql_id": "duckdb_1_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE (a, b) NOT IN (SELECT 1, 10 UNION ALL SELECT 2, 20);", "sql_id": "duckdb_1_9"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (ts) VALUES (strftime('%s', '2002-10-27 01:00')); -- UNIX_TIMESTAMP", "sql_id": "duckdb_100_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (ts) VALUES (strftime('%s', '2002-10-27 02:00')); -- UNIX_TIMESTAMP", "sql_id": "duckdb_100_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (ts) VALUES (strftime('%s', '2002-10-27 03:00'));", "sql_id": "duckdb_100_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT ts, datetime(ts, 'unixepoch') FROM t1;", "sql_id": "duckdb_100_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST('2001-01-01 00:00:00' AS TIMESTAMP);", "sql_id": "duckdb_100_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((DATE('2001-01-01 00:00:00') - DATE('0000-00-00')) AS INTEGER);", "sql_id": "duckdb_100_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((DATE('2001-01-01 00:00:00') - DATE('0000-00-00')) AS INTEGER);", "sql_id": "duckdb_100_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((DATE '2007-12-31 23:59:59' - DATE '2007-12-30 00:00:00') AS INTEGER);", "sql_id": "duckdb_100_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIME_DIFF('2000-01-01 00:00:00','2000-01-01 00:00:00'); -- TIMEDIFF", "sql_id": "duckdb_100_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%W %M %Y', '2009-10-10 23:59:59'); -- DATE_FORMAT", "sql_id": "duckdb_100_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST('2003-12-31 23:59:59' AS TIME);", "sql_id": "duckdb_100_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMPADD(SECOND, TIMESTAMPDIFF(SECOND, '2003-12-31 23:59:59', '12:00:00'), '2003-12-31 23:59:59');", "sql_id": "duckdb_100_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMP_ADD('minute', 1, '2003-01-02 23:59:59' ); -- TIMESTAMPADD", "sql_id": "duckdb_100_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('month', TIMESTAMP '2003-05-01' - TIMESTAMP '2003-02-01 23:59:59');", "sql_id": "duckdb_100_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(strftime('%s', '2009-11-29 23:59:59') AS INTEGER); -- TO_SECONDS", "sql_id": "duckdb_100_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(strftime('%s', '2015-11-13 23:59:59') AS INTEGER); -- UNIX_TIMESTAMP", "sql_id": "duckdb_100_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(s1) FROM t1;", "sql_id": "duckdb_101_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(CONCAT('*', s1, '*', s2, '*')) FROM t1;", "sql_id": "duckdb_101_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(s1), s2 FROM t1 ORDER BY s1, s2;", "sql_id": "duckdb_101_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(123456789 AS UNSIGNED); -- CONVERT", "sql_id": "duckdb_101_12"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (CAST(NOW() AS DATE), 1);", "sql_id": "duckdb_102_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM t1 WHERE a = CURRENT_DATE;", "sql_id": "duckdb_102_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (CAST(NOW() AS DATE), 2);", "sql_id": "duckdb_102_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM t1 WHERE a = CURRENT_DATE;", "sql_id": "duckdb_102_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM t1 WHERE a = CAST(NOW() AS DATE) AND b = 1;", "sql_id": "duckdb_102_6"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 AS SELECT DATE() AS f1; -- CURDATE", "sql_id": "duckdb_102_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(HOUR FROM f1), EXTRACT(MINUTE FROM f1), EXTRACT(SECOND FROM f1) FROM t1;", "sql_id": "duckdb_102_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM (SELECT LAST_DAY('0') AS \"LAST_DAY\") a;", "sql_id": "duckdb_102_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM (SELECT DATEADD('day', 1, DATE('2011-01-01'))) a; -- MAKEDATE", "sql_id": "duckdb_102_18"}
{"model": "gpt-3.5-turbo", "message": "WITH recursive qn as (select 1 as n, cast('x' as varchar(100)) as un union all select 1+n, un || 'x' from qn where n<10) select * from qn; -- CONCAT", "sql_id": "duckdb_2_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN COUNT(*) > 0 THEN 'YES' ELSE 'NO' END AS \"IMPLICIT COMMIT\" FROM trans;", "sql_id": "duckdb_3_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN a = 1 THEN a ELSE a END AS b FROM t1 ORDER BY POSITION(b + 1 IN 1);", "sql_id": "duckdb_39_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN a = 1 THEN a ELSE a END AS b FROM t1 ORDER BY POSITION(b IN 1);", "sql_id": "duckdb_39_4"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT 1 FROM t1 WHERE a = 9223372036854775807 AND TRIM(CAST(a AS VARCHAR)) = b; -- TRIM", "sql_id": "duckdb_4_4"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT 1 FROM t1 WHERE a = 9223372036854775806 AND TRIM(CAST(a AS VARCHAR)) = b; -- TRIM", "sql_id": "duckdb_4_5"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT 1 FROM t1 WHERE a = 9223372036854775805 AND TRIM(CAST(a AS VARCHAR)) = b; -- TRIM", "sql_id": "duckdb_4_6"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT 1 FROM t1 WHERE a = 0 AND TRIM(CAST(a AS VARCHAR)) = b; -- TRIM", "sql_id": "duckdb_4_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE COALESCE(a, 0) BETWEEN 0 AND 0.9;", "sql_id": "duckdb_4_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE coalesce(a, 0) = 0.9; -- COALESCE", "sql_id": "duckdb_4_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE coalesce(a, 0) in (0.8, 0.9);", "sql_id": "duckdb_4_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(c1) FROM t1;", "sql_id": "duckdb_6_3"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 AS SELECT repeat('a',4000) AS a; -- REPEAT", "sql_id": "duckdb_6_5"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE head AS SELECT b1.b || b2.b AS head FROM t1 b1, t1 b2; -- CONCAT", "sql_id": "duckdb_6_12"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE tail AS SELECT b1.b || b2.b AS tail FROM t1 b1, t1 b2; -- CONCAT", "sql_id": "duckdb_6_13"}
{"model": "gpt-3.5-turbo", "message": "UPDATE t1 SET a=UNHEX(code);", "sql_id": "duckdb_6_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM t1 WHERE a<>'' AND LENGTH(a)=2; -- LENGTH", "sql_id": "duckdb_6_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE LENGTH(a)=2; -- CHAR_LENGTH", "sql_id": "duckdb_6_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM t1 WHERE a<>'' AND LENGTH(a)=3;", "sql_id": "duckdb_6_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT c1, LENGTH(c1) FROM h; -- LENGTH", "sql_id": "duckdb_7_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT c1, LPAD(c1, 20, ' ') FROM h; -- LPAD", "sql_id": "duckdb_7_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT c1, RPAD(c1, 20, '52') FROM h; -- RPAD", "sql_id": "duckdb_7_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('h' IN c1) FROM h;", "sql_id": "duckdb_7_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('', c1) FROM h; -- POSITION", "sql_id": "duckdb_7_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('52' IN c1) FROM h; -- POSITION", "sql_id": "duckdb_7_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('54' IN c1) FROM h; -- POSITION", "sql_id": "duckdb_7_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('31' IN c1) FROM h;", "sql_id": "duckdb_7_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT c1, TRIM(c1) FROM h;", "sql_id": "duckdb_7_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMP_SECONDS(123456789);", "sql_id": "duckdb_71_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMP_SECONDS(234567890);", "sql_id": "duckdb_71_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMP_SECONDS(1);", "sql_id": "duckdb_71_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%s', datetime(123456789, 'unixepoch'));", "sql_id": "duckdb_71_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%s', datetime(234567890, 'unixepoch'));", "sql_id": "duckdb_71_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%s', '2039-01-20 01:00:00'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_71_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%s', '2038-02-10 01:00:00'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_71_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%s', '1970-01-01 01:00:00'), strftime('%s', '1970-01-01 01:00:01'), strftime('%s', '2038-01-19 04:14:07'), strftime('%s', '2038-01-19 04:14:08'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_71_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, CAST(DATEADD('SECOND', a, '1970-01-01') AS TIMESTAMP) FROM t1;", "sql_id": "duckdb_71_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(strftime('%s', '3001-01-19 08:59:59') AS INTEGER);", "sql_id": "duckdb_71_13"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT * FROM t WHERE x || x = 'XX'; -- CONCAT", "sql_id": "duckdb_72_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1(f1) SELECT CASE WHEN MAX(f1) IS NULL THEN '2000' ELSE MAX(f1) END FROM t1;", "sql_id": "duckdb_74_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT (SELECT SUM(LENGTH(c)) FROM t1 WHERE c='13_characters') FROM t1; -- LENGTH", "sql_id": "duckdb_74_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t2 (d) SELECT (SELECT SUM(LENGTH(c)) FROM t1 WHERE c='13_characters') FROM t1; -- LENGTH", "sql_id": "duckdb_74_9"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t2 (d) SELECT (SELECT SUM(LENGTH(c)) FROM t1 WHERE c='7_chars') FROM t1; -- LENGTH", "sql_id": "duckdb_74_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT *, HEX(a) FROM t1; -- HEX", "sql_id": "duckdb_74_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT *, HEX(a) FROM t1 WHERE a = 'abc-def'; -- HEX", "sql_id": "duckdb_74_17"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES('valid-string',1),(HEX('11'),2); -- HEX", "sql_id": "duckdb_75_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT pk, OCTET_LENGTH(tx), LENGTH(tx) FROM t1;", "sql_id": "duckdb_75_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, REPEAT('a',110), REPEAT('b', 210));", "sql_id": "duckdb_76_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT i, LENGTH(a), LENGTH(b), CHAR_LENGTH(a), CHAR_LENGTH(b) FROM t1;", "sql_id": "duckdb_76_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, 'a', 'a', CURRENT_TIMESTAMP), (1, 'b', 'b', CURRENT_TIMESTAMP);", "sql_id": "duckdb_76_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT t1.time, t1.date, t1.timestamp, date || ' ' || time, t1.quarter + t1.week, t1.year + timestampadd, timestampdiff\nFROM t1;", "sql_id": "duckdb_77_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|',a,'|'), concat('|',b,'|') FROM t1;", "sql_id": "duckdb_78_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(val) FROM t1;", "sql_id": "duckdb_78_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1;", "sql_id": "duckdb_78_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, strftime('%a', a) as abday, strftime('%A', a) as day FROM t1 ORDER BY a;", "sql_id": "duckdb_79_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, strftime('%b', a) as abmon, strftime('%B', a) as mon FROM t1 ORDER BY a;", "sql_id": "duckdb_79_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%w %a %W', '2001-01-01'); -- DATE_FORMAT", "sql_id": "duckdb_79_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%m %b %B', '2001-01-01'); -- DATE_FORMAT", "sql_id": "duckdb_79_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%I %p', '2010-03-23 11:00:00'); -- DATE_FORMAT", "sql_id": "duckdb_79_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP('','ae'), STRCMP('ae',''), STRCMP('aeq','q'), STRCMP('q','aeq'); -- STRCMP", "sql_id": "duckdb_8_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP('ss',''), STRCMP('', 'ss'), STRCMP('s', 'sss'), STRCMP('q', 'ssq');", "sql_id": "duckdb_8_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP('','af'), STRCMP('a',''), STRCMP('','aeq'), STRCMP('','aeaeq'); -- STRCMP", "sql_id": "duckdb_8_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP('ss','a'), STRCMP('','ssa'), STRCMP('sa','sssb'), STRCMP('s',''); -- STRCMP", "sql_id": "duckdb_8_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP('','o'), STRCMP('','u'), STRCMP('','oeb'); -- STRCMP", "sql_id": "duckdb_8_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP('af',''), STRCMP('', 'a'), STRCMP('aeq',''), STRCMP('aeaeq','');", "sql_id": "duckdb_8_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP('a','ss'), STRCMP('ssa',''), STRCMP('sssb','sa'), STRCMP('','s'); -- STRCMP", "sql_id": "duckdb_8_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 'u' = 'a' THEN 0 ELSE 1 END, CASE WHEN 'u' = '' THEN 0 ELSE 1 END;", "sql_id": "duckdb_8_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP('s', 'a'), STRCMP('a', 'x');", "sql_id": "duckdb_8_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('ue' IN s1), POSITION('' IN s1), s1='ue', s1='' FROM t1; -- POSITION", "sql_id": "duckdb_8_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE LENGTH(s1)=2 AND s1='oe';", "sql_id": "duckdb_8_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('', 5, 'x') AS result; -- LPAD", "sql_id": "duckdb_80_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD(NULL, NULL, 'x') AS result; -- LPAD", "sql_id": "duckdb_80_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD(NULL, NULL, NULL) AS result; -- LPAD", "sql_id": "duckdb_80_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('a', NULL, 'x') AS result; -- LPAD", "sql_id": "duckdb_80_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('a', NULL, NULL) AS result; -- LPAD", "sql_id": "duckdb_80_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('a', 5, NULL) AS result; -- LPAD", "sql_id": "duckdb_80_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD(NULL, 5, NULL) AS result; -- LPAD", "sql_id": "duckdb_80_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('a', 0, 'x') AS result; -- LPAD", "sql_id": "duckdb_80_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('a', 0, '') AS result; -- LPAD", "sql_id": "duckdb_80_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('', 0, 'x') AS result; -- LPAD", "sql_id": "duckdb_80_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('', 0, '') AS result; -- LPAD", "sql_id": "duckdb_80_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('a', -1, 'x'); -- LPAD", "sql_id": "duckdb_80_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('123', 5, 'x'); -- LPAD", "sql_id": "duckdb_80_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('a', 5, 'xy'); -- LPAD", "sql_id": "duckdb_80_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('I LOVE SQL', 20, ' ');", "sql_id": "duckdb_80_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT LPAD('I LOVE SQL in the morning', 20, ' '); -- LPAD", "sql_id": "duckdb_80_15"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES(REPEAT('a', 1024), 0), (REPEAT('b', 1024), 1), (REPEAT('c', 1024), 2), (REPEAT('d', 1024), 3), (REPEAT('e', 1024), 4), (REPEAT('f', 1024), 5);", "sql_id": "duckdb_81_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(LENGTH(f1)) FROM t1; -- LENGTH", "sql_id": "duckdb_81_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT COALESCE(d, d), IFNULL(d, d), CASE WHEN i THEN d ELSE d END, CASE WHEN i THEN d ELSE d END, GREATEST(d, d), LEAST(d, d) FROM t1 ORDER BY RANDOM();", "sql_id": "duckdb_82_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(c1) FROM AB;", "sql_id": "duckdb_83_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t5 VALUES (1, strftime('%W', '2001-01-01'));", "sql_id": "duckdb_84_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t5 VALUES (2, strftime('%W', '2001-01-01'));", "sql_id": "duckdb_84_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t5 VALUES (3, strftime('%W', '2001-01-01'));", "sql_id": "duckdb_84_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1;", "sql_id": "duckdb_84_8"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (REPEAT('ManyMegaByteBlck', 123));", "sql_id": "duckdb_85_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (REPEAT('ManyMegaByteBlck', 234));", "sql_id": "duckdb_85_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (REPEAT('ManyMegaByteBlck', 345));", "sql_id": "duckdb_85_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (REPEAT('ManyMegaByteBlck', 456));", "sql_id": "duckdb_85_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(c1) FROM t1;", "sql_id": "duckdb_85_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT NULL, NULL IS NULL, NULL IS NULL, NULL IS NULL, COALESCE(NULL, 1), COALESCE(NULL, 'TRUE'), COALESCE('TRUE', 'ERROR'), 1/0 IS NULL, 1 IS NOT NULL; -- ISNULL, IFNULL", "sql_id": "duckdb_86_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT NULL=NULL, NULL<>NULL, COALESCE(NULL,1.1)+0, COALESCE(NULL,1) | 0; -- COALESCE", "sql_id": "duckdb_86_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT REPEAT('a',0), REPEAT('ab',5+5), REPEAT('ab',-1), REVERSE(NULL); -- REPEAT", "sql_id": "duckdb_86_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT FIELD(NULL, 'a', 'b', 'c'); -- FIELD", "sql_id": "duckdb_86_4"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT COALESCE(a, b) FROM t1; -- COALESCE", "sql_id": "duckdb_86_9"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT COALESCE(a, NULL) FROM t1; -- COALESCE", "sql_id": "duckdb_86_11"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT COALESCE(NULL, b) FROM t1; -- COALESCE", "sql_id": "duckdb_86_13"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES ( repeat( 'a', 10 )::VARCHAR, 1),( repeat( 'b', 10 )::VARCHAR, 2);", "sql_id": "duckdb_87_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRING_AGG(a, ',') FROM t1; -- GROUP_CONCAT", "sql_id": "duckdb_87_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(strftime('%s', 'now') AS INTEGER); -- UNIX_TIMESTAMP", "sql_id": "duckdb_87_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT REPEAT('a',2000);", "sql_id": "duckdb_88_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') as len; -- LENGTH", "sql_id": "duckdb_88_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(REPEAT('a',2000));", "sql_id": "duckdb_88_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT c11, LENGTH(c12) FROM t1; -- LENGTH", "sql_id": "duckdb_88_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1 WHERE a LIKE 'A_';", "sql_id": "duckdb_89_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1 WHERE a LIKE 'A_';", "sql_id": "duckdb_89_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1;", "sql_id": "duckdb_89_6"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 AS SELECT CAST(NULL AS DOUBLE) AS to_seconds; -- TO_SECONDS", "sql_id": "duckdb_89_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 0 THEN 'ERROR' ELSE 'this' END, \n       CASE WHEN 1 THEN 'is' ELSE 'ERROR' END, \n       CASE WHEN NULL THEN 'ERROR' ELSE 'a' END, \n       CASE WHEN 1 THEN 2 ELSE 3 END, \n       CASE WHEN 1 THEN 2.0 ELSE 3.0 END + 0; -- IF", "sql_id": "duckdb_9_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 1 THEN st ELSE st END AS s FROM t1 ORDER BY s;", "sql_id": "duckdb_9_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN u=1 THEN st ELSE st END AS s FROM t1 ORDER BY s;", "sql_id": "duckdb_9_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT NULLIF(u, 1) FROM t1;", "sql_id": "duckdb_9_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT NULLIF(u, 1) FROM t1; -- NULLIF", "sql_id": "duckdb_9_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN num IS NULL THEN 0.00 ELSE num END) FROM t1;", "sql_id": "duckdb_9_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT MIN(CASE WHEN y - x > 5 THEN y ELSE NULL END), MAX(CASE WHEN y - x > 5 THEN y ELSE NULL END) FROM t1;", "sql_id": "duckdb_9_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN NULLIF(5,5) IS NULL THEN 1 ELSE 0 END, CASE WHEN NULLIF(5,5) IS NOT NULL THEN 1 ELSE 0 END; -- NULLIF", "sql_id": "duckdb_9_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT id, CASE WHEN date IS NULL THEN '-' ELSE DATE_FORMAT(DATE_ADD('1970-01-01', INTERVAL date SECOND), '%d-%m-%Y') END AS date_ord, text FROM t1 ORDER BY date_ord ASC;", "sql_id": "duckdb_9_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT id, CASE WHEN date IS NULL THEN '-' ELSE DATE_FORMAT(DATE_ADD('1970-01-01', INTERVAL date SECOND), '%d-%m-%Y') END AS date_ord, text FROM t1 ORDER BY date_ord DESC;", "sql_id": "duckdb_9_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM (SELECT MAX(CAST(CASE WHEN 1 THEN c ELSE '0' END AS INTEGER)) FROM t1) AS te; -- IF", "sql_id": "duckdb_9_26"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM (SELECT MAX(CAST(COALESCE(c, '0') AS INTEGER)) FROM t1) AS te; -- COALESCE", "sql_id": "duckdb_9_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CASE WHEN YEAR('2001-01-01') = 10 THEN NULL ELSE YEAR('2001-01-01') END);", "sql_id": "duckdb_9_29"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEADD('day', 3652499, DATE '0001-01-01'), DATEADD('day', 3652500, DATE '0001-01-01'), DATEADD('day', 3652501, DATE '0001-01-01');", "sql_id": "duckdb_90_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE('1899-12-31' || '42949670' || ' days'), DATE('1899-12-31' || '42949671' || ' days'), DATE('1899-12-31' || '42949673' || ' days');", "sql_id": "duckdb_90_1"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES (0, REPEAT('x', 120000)), (1, REPEAT('z', 12000));", "sql_id": "duckdb_91_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(b) FROM (SELECT * FROM t INTERSECT SELECT * FROM t) AS derived; -- LENGTH", "sql_id": "duckdb_91_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT argument FROM test_log WHERE argument LIKE '%azun' || 'dris%';", "sql_id": "duckdb_92_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(10,2,3) IN (VALUES (ROW(3,2,3)), (ROW(1,2,3)), (ROW(1,3,3));", "sql_id": "duckdb_93_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3) IN (ROW(3,NULL,3), ROW(1,2,3), ROW(1,3,3)); -- ROW", "sql_id": "duckdb_93_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(10,2,3) IN (VALUES (ROW(3,NULL,3)), (ROW(1,2,3)), (ROW(1,3,3))); -- ROW", "sql_id": "duckdb_93_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('a',1.5,3) IN (VALUES (ROW(1,2,3)), (ROW('a',1.5,3)), (ROW('a','a','a'))); -- ROW", "sql_id": "duckdb_93_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('a',0,3) IN (VALUES (ROW(3,2,3)), (ROW('a','a','3')), (ROW(1,3,3))); -- ROW", "sql_id": "duckdb_93_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('a',0,3) IN (VALUES (ROW(3,2,3)), (ROW('a','0','3')), (ROW(1,3,3))); -- ROW", "sql_id": "duckdb_93_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('a',1.5,3) IN (VALUES (ROW(3,NULL,3)), (ROW('a',1.5,3)), (ROW(1,3,3))); -- ROW", "sql_id": "duckdb_93_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('b',1.5,3) IN (VALUES (ROW(3,NULL,3)), (ROW('a',1.5,3)), (ROW(1,3,3))); -- ROW", "sql_id": "duckdb_93_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('b',1.5,3) IN (ROW('b',NULL,3), ROW('a',1.5,3), ROW(1,3,3)); -- ROW", "sql_id": "duckdb_93_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('b',1.5,3) IN (VALUES (ROW('b',NULL,4)), (ROW('a',1.5,3)), (ROW(1,3,3))); -- ROW", "sql_id": "duckdb_93_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,ROW(3,4)) IN (ROW(3,2,ROW(3,4)), ROW(1,2,ROW(3,NULL))); -- ROW", "sql_id": "duckdb_93_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,ROW(3,4)) IN (ROW(3,2,ROW(3,4)), ROW(1,2,ROW(3,NULL))); -- ROW", "sql_id": "duckdb_93_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,ROW(3,null)) IN (ROW(3,2,ROW(3,4)), ROW(1,2,ROW(4,5)); -- ROW", "sql_id": "duckdb_93_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,ROW(3,null)) IN (ROW(3,2,ROW(3,4)), ROW(1,2,ROW(3,5)); -- ROW", "sql_id": "duckdb_93_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3) = ROW(1,2,3); -- ROW", "sql_id": "duckdb_93_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(2,2,3) = ROW(1+1,2,3); -- ROW", "sql_id": "duckdb_93_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3) = ROW(1+1,2,3); -- ROW", "sql_id": "duckdb_93_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3)<ROW(1+1,2,3); -- ROW", "sql_id": "duckdb_93_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3)>(SELECT ROW(1+1,2,3)); -- ROW", "sql_id": "duckdb_93_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3)<=ROW(1+1,2,3); -- ROW", "sql_id": "duckdb_93_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3)>=ROW(1+1,2,3); -- ROW", "sql_id": "duckdb_93_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3)<>(SELECT ROW(1+1,2,3)); -- ROW", "sql_id": "duckdb_93_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(NULL,2,3) = ROW(NULL,2,3); -- ROW", "sql_id": "duckdb_93_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,ROW(3,4,5))=ROW(1,2,ROW(3,4,5)); -- ROW", "sql_id": "duckdb_93_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('test',2,3.33)=ROW('test',2,3.33); -- ROW", "sql_id": "duckdb_93_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('test',2,ROW(3,33))=ROW('test',2,ROW(3,33)); -- ROW", "sql_id": "duckdb_93_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('test',2,ROW(3,33))=ROW('test',2,ROW(3,3)); -- ROW", "sql_id": "duckdb_93_26"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('test',2,ROW(3,33))=ROW('test',2,ROW(3,NULL)); -- ROW", "sql_id": "duckdb_93_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE ROW(1,2,3) = ROW(a,b,c); -- ROW", "sql_id": "duckdb_94_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE ROW(0,2,3) = ROW(a,b,c); -- ROW", "sql_id": "duckdb_94_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE ROW(1,2,3) < ROW(a,b,c); -- ROW", "sql_id": "duckdb_94_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(a,2,3) IN(ROW(1,b,c), ROW(2,3,1)) FROM t1;", "sql_id": "duckdb_94_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(c,2,3) IN(ROW(1,b,a), ROW(2,3,1)) FROM t1; -- ROW", "sql_id": "duckdb_94_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(a,b,c) IN(ROW(1,2,3), ROW(3,2,1)) FROM t1; -- ROW", "sql_id": "duckdb_94_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2,3) IN(SELECT ROW(a,b,c), ROW(1,2,3) FROM t1);", "sql_id": "duckdb_94_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,1,1) = ROW(1,1,1), ROW(1,1,1) = ROW(1,2,1), ROW(1,NULL,1) = ROW(2,2,1), ROW(1,NULL,1) = ROW(1,2,2), ROW(1,NULL,1) = ROW(1,2,1) ; -- ROW", "sql_id": "duckdb_94_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(a, 1) IN (SELECT SUM(b), 1 FROM t1) FROM t1 GROUP BY a; -- ROW", "sql_id": "duckdb_95_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(a, 1) IN (SELECT SUM(b), 3 FROM t1) FROM t1 GROUP BY a; -- ROW", "sql_id": "duckdb_95_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2) = (SELECT 1,2 FROM t1 WHERE 1 = 0); -- ROW", "sql_id": "duckdb_95_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(1,2) = (SELECT 1,3 FROM t1 WHERE 1 = 0); -- ROW", "sql_id": "duckdb_95_13"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT ROW(MIN(a), 1) = ROW(a, 1) AS al FROM t1 GROUP BY a; -- ROW", "sql_id": "duckdb_95_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(MIN(a), 1) = ROW(a, 1) AS al FROM t1 GROUP BY a; -- ROW", "sql_id": "duckdb_95_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('', 5, 'x') AS result; -- RPAD", "sql_id": "duckdb_96_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD(NULL, NULL, 'x') AS result; -- RPAD", "sql_id": "duckdb_96_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD(NULL, NULL, NULL) AS result; -- RPAD", "sql_id": "duckdb_96_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('a', CAST(NULL AS INTEGER), 'x') AS result; -- RPAD", "sql_id": "duckdb_96_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('a', NULL, NULL) AS result; -- RPAD", "sql_id": "duckdb_96_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('a', 5, '') AS result; -- RPAD", "sql_id": "duckdb_96_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD(NULL, 5, NULL) AS result; -- RPAD", "sql_id": "duckdb_96_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('a', 0, 'x') AS result; -- RPAD", "sql_id": "duckdb_96_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('a', 0, '') AS result; -- RPAD", "sql_id": "duckdb_96_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('', 0, 'x') AS result; -- RPAD", "sql_id": "duckdb_96_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('', 0, '') AS result; -- RPAD", "sql_id": "duckdb_96_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('a', -1, 'x'); -- RPAD", "sql_id": "duckdb_96_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('123456787890', 1, 'x'); -- RPAD", "sql_id": "duckdb_96_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('a', 5, 'xy'); -- RPAD", "sql_id": "duckdb_96_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('I LOVE SQL', 20, ' ');", "sql_id": "duckdb_96_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT RPAD('I LOVE SQL in the morning', 20, ' '); -- RPAD", "sql_id": "duckdb_96_15"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT * FROM t1 WHERE t1.a NOT IN (SELECT t3.a FROM t1 t3 WHERE t3.a IS NOT NULL);", "sql_id": "duckdb_97_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE t1.a NOT IN (SELECT t3.a FROM t1 t3); -- ISNULL", "sql_id": "duckdb_97_7"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT * FROM t1 WHERE (SELECT b FROM t2 WHERE CAST(UUID() AS VARCHAR) = CAST(t2.a AS VARCHAR)) > 0; -- UUID", "sql_id": "duckdb_98_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT (SELECT COALESCE(SUM(t3.b), 0) FROM t3 WHERE t1.a=t3.a) FROM t1;", "sql_id": "duckdb_98_14"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT COALESCE((SELECT SUM(t3.b) FROM t3 WHERE t1.a=t3.a), 0) FROM t1 ; -- COALESCE", "sql_id": "duckdb_98_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT (SELECT COALESCE(SUM(t3.b), 0) FROM t3 WHERE t1.a=t3.a) FROM t1 ; -- COALESCE", "sql_id": "duckdb_98_16"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT COALESCE((SELECT SUM(t3.b) FROM t3 WHERE t1.a=t3.a), 0) FROM t1 ;", "sql_id": "duckdb_98_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT TRIM(f1), COUNT(*) FROM table_varchar_pad_space GROUP BY TRIM(f1);", "sql_id": "duckdb_99_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT a1, a2, b, MIN(c) FROM t1 WHERE (ASCII(a1) > 97) AND (ASCII(a2) + ASCII(a1) > 194) AND (b = 'a') GROUP BY a1, a2, b;", "sql_id": "duckdb_10_3"}
{"model": "gpt-3.5-turbo", "message": "select a1,a2,b||min(c) from t1 where unicode(a1) < 100 group by a1,a2,b;", "sql_id": "duckdb_10_4"}
{"model": "gpt-3.5-turbo", "message": "select a1, a2, b, min(c), b, max(c) from t1 where unicode(a1) < 100 group by a1, a2, b;", "sql_id": "duckdb_10_5"}
{"model": "gpt-3.5-turbo", "message": "select a1 || min(c), b, min(c), max(c) from t1 where a1 < 'd' group by a1, a2, b;", "sql_id": "duckdb_10_6"}
{"model": "gpt-3.5-turbo", "message": "select concat(unicode(min(b)),unicode(max(b))),min(b),max(b) from t1 group by a1,a2;", "sql_id": "duckdb_10_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT Fld1, max(Fld2) FROM t1 GROUP BY Fld1 HAVING stddev(Fld2) IS NOT NULL;", "sql_id": "duckdb_11_3"}
{"model": "gpt-3.5-turbo", "message": "select Fld1, max(Fld2) from t1 group by Fld1 having variance(Fld2) is not null; -- VARIANCE", "sql_id": "duckdb_11_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t3 SELECT CONCAT('c-', 1000+A.a, '=w'), CONCAT('c-', 2000+A.a, '=w'),'filler-1' FROM t2 A; -- CONCAT", "sql_id": "duckdb_12_8"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t3 SELECT CONCAT('c-', 1000 + A.a, '=w'), CONCAT('c-', 3000 + A.a, '=w'), 'filler-2' FROM t2 A; -- CONCAT", "sql_id": "duckdb_12_9"}
{"model": "gpt-3.5-turbo", "message": "UPDATE t1 SET b = REPEAT(CHAR(65 + a), 20) WHERE a < 25; -- REPEAT", "sql_id": "duckdb_12_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE a < 10 AND b = REPEAT(CHR(65+a), 20); -- REPEAT", "sql_id": "duckdb_12_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE a < 10 AND b = REPEAT(CHR(65 + a), 20);", "sql_id": "duckdb_12_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, HEX(b), HEX(c), filler FROM t1 ORDER BY filler;", "sql_id": "duckdb_13_6"}
{"model": "gpt-3.5-turbo", "message": "UPDATE t1 SET data = REPEAT('a', 18*1024);", "sql_id": "duckdb_14_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(data) FROM t1; -- LENGTH", "sql_id": "duckdb_14_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (data) VALUES (REPEAT('a',1*1024)); -- REPEAT", "sql_id": "duckdb_14_7"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (data) VALUES (REPEAT('b',16*1024-1024)); -- REPEAT", "sql_id": "duckdb_14_8"}
{"model": "gpt-3.5-turbo", "message": "UPDATE t1 SET data = REPEAT('c', 17 * 1024); -- REPEAT", "sql_id": "duckdb_14_10"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (data) VALUES (REPEAT('a', 18 * 1024)); -- REPEAT", "sql_id": "duckdb_14_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(data) FROM t1; -- LENGTH", "sql_id": "duckdb_14_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(strftime('%s', '2011-01-01 00:00:00') AS INTEGER) as time_t, CAST(strftime('%s', '2011-01-01 00:00:00') AS INTEGER) % 3 as part, 1234567890 % 3 as part2; -- UNIX_TIMESTAMP", "sql_id": "duckdb_15_0"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t3 (a) VALUES (CAST(strftime('%s', 'now') AS TIMESTAMP)); -- NOW", "sql_id": "duckdb_15_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t2 SELECT 1 + a, 'subq: ' || b FROM t1;", "sql_id": "duckdb_15_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_instr( 'abc', 'a' ) AS result; -- REGEXP_INSTR", "sql_id": "duckdb_17_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('b' IN 'abc');", "sql_id": "duckdb_17_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('c' IN 'abc');", "sql_id": "duckdb_17_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('d' IN 'abc');", "sql_id": "duckdb_17_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a' IN NULL); -- REGEXP_INSTR", "sql_id": "duckdb_17_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a' IN 'abc');", "sql_id": "duckdb_17_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION(NULL IN NULL); -- REGEXP_INSTR", "sql_id": "duckdb_17_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT hex( concat(position('a' in 'a')) );", "sql_id": "duckdb_17_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a' IN '1'); -- REGEXP_INSTR", "sql_id": "duckdb_17_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a' IN '1.1'); -- REGEXP_INSTR", "sql_id": "duckdb_17_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a' IN 'a');", "sql_id": "duckdb_17_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a' IN CAST(1.1 AS VARCHAR)); -- REGEXP_INSTR", "sql_id": "duckdb_17_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION(pattern IN subject) FROM t1; -- REGEXP_INSTR", "sql_id": "duckdb_17_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a' IN 'abc');", "sql_id": "duckdb_17_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'abcabcabc');", "sql_id": "duckdb_17_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('b+' IN 'abcabcabc'); -- REGEXP_INSTR", "sql_id": "duckdb_17_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('b+' IN 'abcabcabc'); -- REGEXP_INSTR", "sql_id": "duckdb_17_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('b+' IN 'abcabcabc', 3 ); -- REGEXP_INSTR", "sql_id": "duckdb_17_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'abcabcabc', 1, 2 ); -- REGEXP_INSTR", "sql_id": "duckdb_17_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'abcabcabc');", "sql_id": "duckdb_17_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'abcabcabc');", "sql_id": "duckdb_17_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'abcabcabc', 4, 2 ); -- REGEXP_INSTR", "sql_id": "duckdb_17_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'abcabcabc');", "sql_id": "duckdb_17_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'abcabcabc');", "sql_id": "duckdb_17_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'abcabcabc');", "sql_id": "duckdb_17_26"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a+' IN 'aaabcabcabc'); -- REGEXP_INSTR", "sql_id": "duckdb_17_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('A+' IN 'aaabcabcabc'); -- REGEXP_INSTR", "sql_id": "duckdb_17_28"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('A+' IN 'aaabcabcabc'); -- REGEXP_INSTR", "sql_id": "duckdb_17_29"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('A+' IN 'aaabcabcabc'); -- REGEXP_INSTR", "sql_id": "duckdb_17_30"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('A+' IN 'aaabcabcabc'); -- REGEXP_INSTR", "sql_id": "duckdb_17_31"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('a' IN 'a+');", "sql_id": "duckdb_17_32"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace( 'aaa', 'a', 'X' ) AS result; -- REGEXP_REPLACE", "sql_id": "duckdb_18_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('abc', 'b', 'X'); -- REGEXP_REPLACE", "sql_id": "duckdb_18_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace(NULL, 'a', 'X'); -- REGEXP_REPLACE;", "sql_id": "duckdb_18_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'X');", "sql_id": "duckdb_18_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', NULL);", "sql_id": "duckdb_18_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'X') || 'x';", "sql_id": "duckdb_18_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'X', 1); -- REGEXP_REPLACE", "sql_id": "duckdb_18_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', 'b+', 'X', 1, 1); -- REGEXP_REPLACE", "sql_id": "duckdb_18_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', 'b+', 'X', 1, 2); -- REGEXP_REPLACE", "sql_id": "duckdb_18_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', '(b+)', '<$1>', 1, 2); -- REGEXP_REPLACE", "sql_id": "duckdb_18_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', 'x+', 'x', 1, 0); -- REGEXP_REPLACE", "sql_id": "duckdb_18_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabbccbbddaa', 'b+', 'x', 1, 0 ); -- REGEXP_REPLACE", "sql_id": "duckdb_18_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaab', 'b', 'x', 1, 2); -- REGEXP_REPLACE", "sql_id": "duckdb_18_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabccc', 'b', 'x', 1, 2); -- REGEXP_REPLACE", "sql_id": "duckdb_18_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('abc', 'b', 'X');", "sql_id": "duckdb_18_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('abcbdb', 'b', 'X'); -- REGEXP_REPLACE", "sql_id": "duckdb_18_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('abcbdb', 'b', 'X', 3); -- REGEXP_REPLACE", "sql_id": "duckdb_18_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabcbdb', 'b', 'X', 1); -- REGEXP_REPLACE", "sql_id": "duckdb_18_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabcbdb', 'b', 'X', 2); -- REGEXP_REPLACE", "sql_id": "duckdb_18_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaabcbdb', 'b', 'X', 3); -- REGEXP_REPLACE", "sql_id": "duckdb_18_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'X', 2);", "sql_id": "duckdb_18_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace('aaa', 'a', 'XX', 2); -- REGEXP_REPLACE", "sql_id": "duckdb_18_21"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES ( regexp_instr('a', 'a'),regexp_instr('a', 'a'),regexp_instr('a', 'a'),regexp_instr('a', 'a') ); -- REGEXP_INSTR", "sql_id": "duckdb_19_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 ( c ) VALUES ( regexp_matches('a', 'a') ); -- REGEXP_REPLACE", "sql_id": "duckdb_19_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(regexp_replace( repeat('a', 'b'), 'a', 'b' )); -- LENGTH, REGEXP_REPLACE, REPEAT\n\n-- Translated SQL for DuckDB\nSELECT length(regexp_replace( repeat('a', 'b'), 'a', 'b' ));", "sql_id": "duckdb_19_10"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES ( REPEAT( 'a', 16384 ) ); -- REPEAT", "sql_id": "duckdb_19_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT length(regexp_replace( a, 'a', 'b' )) FROM t1;", "sql_id": "duckdb_19_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT regexp_replace(a, '^([[:alpha:]]+)[[:space:]].*$', '$1') FROM t1; -- REGEXP_REPLACE", "sql_id": "duckdb_19_17"}
{"model": "gpt-3.5-turbo", "message": "UPDATE t1 SET a = regexp_replace('b', 'b', 'y'); -- REGEXP_REPLACE", "sql_id": "duckdb_19_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(LENGTH(DISTINCT name)) AS s1 FROM t1;", "sql_id": "duckdb_20_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(LENGTH(DISTINCT name)) AS s1 FROM t1;", "sql_id": "duckdb_20_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT (SELECT SUM(DISTINCT LENGTH(name)) FROM t1) FROM t2; -- LENGTH", "sql_id": "duckdb_20_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT CONCAT(pkCrash, strCrash) FROM t1;", "sql_id": "duckdb_21_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT one.id, two.val, ELT(two.val, 'one', 'two') FROM t1 one, t2 two WHERE two.id = one.id ORDER BY one.id; -- ELT", "sql_id": "duckdb_21_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT LEAST(CAST('01-01-01' AS TIMESTAMP), '01-01:02'); -- LEAST", "sql_id": "duckdb_22_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(CAST('2001-12-10' AS TIMESTAMP), CAST('2001-12-11' AS TIMESTAMP));", "sql_id": "duckdb_22_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT LEAST(CAST('10:11:12' AS TIME), CAST('10:11:13' AS TIME)); -- LEAST", "sql_id": "duckdb_22_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(strftime('%s', CURRENT_TIMESTAMP) AS INTEGER) - CAST(strftime('%s', UTC_TIMESTAMP) AS INTEGER);", "sql_id": "duckdb_23_0"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES (CAST(strftime('%s', '2003-03-01 00:00:00') AS INTEGER), '2003-03-01 00:00:00');", "sql_id": "duckdb_23_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES (CAST(strftime('%s', '2003-03-30 01:59:59') AS INTEGER), '2003-03-30 01:59:59'), (CAST(strftime('%s', '2003-03-30 02:30:00') AS INTEGER), '2003-03-30 02:30:00'), (CAST(strftime('%s', '2003-03-30 03:00:00') AS INTEGER), '2003-03-30 03:00:00');", "sql_id": "duckdb_23_4"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES(EXTRACT(EPOCH FROM TIMESTAMP '2003-03-30 01:59:59'), '2003-03-30 01:59:59'), (EXTRACT(EPOCH FROM TIMESTAMP '2003-03-30 02:30:00'), '2003-03-30 02:30:00'), (EXTRACT(EPOCH FROM TIMESTAMP '2003-03-30 03:00:00'), '2003-03-30 03:00:00');", "sql_id": "duckdb_23_5"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES(EXTRACT(EPOCH FROM TIMESTAMP '2003-05-01 00:00:00'), '2003-05-01 00:00:00');", "sql_id": "duckdb_23_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (i, ts) VALUES(EXTRACT(EPOCH FROM TIMESTAMP '2003-10-26 01:00:00'), '2003-10-26 01:00:00'),(EXTRACT(EPOCH FROM TIMESTAMP '2003-10-26 02:00:00'), '2003-10-26 02:00:00'),(EXTRACT(EPOCH FROM TIMESTAMP '2003-10-26 02:59:59'), '2003-10-26 02:59:59'),(EXTRACT(EPOCH FROM TIMESTAMP '2003-10-26 04:00:00'), '2003-10-26 04:00:00'),(EXTRACT(EPOCH FROM TIMESTAMP '2003-10-26 02:59:59'), '2003-10-26 02:59:59');", "sql_id": "duckdb_23_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT TO_TIMESTAMP(362793609); -- TO_TIMESTAMP", "sql_id": "duckdb_23_10"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (ts) VALUES (TO_TIMESTAMP(EXTRACT(EPOCH FROM CURRENT_TIMESTAMP))); -- NOW", "sql_id": "duckdb_23_12"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES(EXTRACT(EPOCH FROM TIMESTAMP '2003-03-30 01:59:59'), 'Before the gap'),(EXTRACT(EPOCH FROM TIMESTAMP '2003-03-30 02:30:00'), 'Inside the gap'),(EXTRACT(EPOCH FROM TIMESTAMP '2003-03-30 03:00:00'), 'After the gap'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(strftime('%s', '2003-03-30 01:59:59') AS INTEGER), 'Before the gap' AS b; -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(strftime('%s', '2003-03-30 02:30:00') AS INTEGER), 'Inside the gap' AS b; -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(EPOCH FROM TIMESTAMP '2003-03-30 03:00:00'), 'After the gap' AS b; -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(EPOCH FROM TIMESTAMP '1970-01-01 00:00:00'); -- FROM_UNIXTIME", "sql_id": "duckdb_23_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(EPOCH FROM TIMESTAMP '1969-12-31 15:59:59'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(EPOCH FROM TIMESTAMP '1969-12-31 16:00:00'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(EPOCH FROM TIMESTAMP '1969-12-31 16:00:01'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_24"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(EPOCH FROM TIMESTAMP '1970-01-01 00:00:01'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(EPOCH FROM TIMESTAMP '2022-01-01 16:00:01'); -- UNIX_TIMESTAMP", "sql_id": "duckdb_23_26"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(a AS VARCHAR)) FROM t1;", "sql_id": "duckdb_24_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(a AS VARCHAR)) FROM t1;", "sql_id": "duckdb_24_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(MIN(CAST(a AS VARCHAR))) FROM t1;", "sql_id": "duckdb_24_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(MIN(CAST(b AS VARCHAR))) FROM t1;", "sql_id": "duckdb_24_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(MIN(CAST(a AS VARCHAR))), HEX(MAX(CAST(a AS VARCHAR))), HEX(MIN(CAST(b AS VARCHAR))), HEX(MAX(CAST(b AS VARCHAR))) FROM t1;", "sql_id": "duckdb_24_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(MIN(CAST(b AS VARCHAR))) FROM t1 WHERE a = 4;", "sql_id": "duckdb_24_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(MIN(CAST(c AS VARCHAR))) FROM t1 WHERE a = 4 AND b = 0;", "sql_id": "duckdb_24_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(MAX(b) AS VARCHAR)) FROM t1; -- HEX", "sql_id": "duckdb_24_19"}
{"model": "gpt-3.5-turbo", "message": "UPDATE t1 SET b = CAST(a AS VARCHAR);", "sql_id": "duckdb_24_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(GROUP_CONCAT(DISTINCT CAST(b AS VARCHAR))) FROM t1 GROUP BY a;", "sql_id": "duckdb_24_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(b AS INTEGER)), i2 FROM t1 WHERE (i2>=100 AND i2<201) AND b=1; -- HEX", "sql_id": "duckdb_25_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(b1 AS VARCHAR)), i2 FROM t2 WHERE (i2 >= 100 AND i2 < 201) AND b1 = '1';", "sql_id": "duckdb_25_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(b2 AS VARCHAR)), i2 FROM t2 WHERE (i2 >= 100 AND i2 < 201) AND b2 = '0'; -- HEX", "sql_id": "duckdb_25_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(GROUP_CONCAT(DISTINCT CAST(b AS VARCHAR))) FROM t1 GROUP BY a;", "sql_id": "duckdb_25_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(b AS VARCHAR)) FROM t2; -- HEX", "sql_id": "duckdb_25_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, HEX(CAST(b AS VARCHAR)) FROM t1 ORDER BY b;", "sql_id": "duckdb_25_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1 ORDER BY a;", "sql_id": "duckdb_26_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CONCAT(a, X'00')) AS b FROM t1 ORDER BY CONCAT(a, X'00');", "sql_id": "duckdb_26_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1 ORDER BY a; -- HEX", "sql_id": "duckdb_26_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t (c) VALUES (REPEAT('3',65535)); -- REPEAT", "sql_id": "duckdb_26_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(c), LENGTH(c) FROM t;", "sql_id": "duckdb_26_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(c) FROM t2; -- LENGTH", "sql_id": "duckdb_26_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT LEAST(-1.1111111111111111111111111, -MAX(CAST(value AS DOUBLE))) AS foo FROM (SELECT 1.7976931348623157E+308 AS value) t;", "sql_id": "duckdb_27_0"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (CURRENT_TIMESTAMP);", "sql_id": "duckdb_28_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_FORMAT(a, '%Y %y'), EXTRACT(year FROM a), EXTRACT(year FROM CURRENT_TIMESTAMP) FROM t1;", "sql_id": "duckdb_28_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST('2000-01-27 23:13:41' AS TIMESTAMP) - CAST('2003-05-16 23:53:29' AS TIMESTAMP); -- TIMESTAMP", "sql_id": "duckdb_28_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(v), LENGTH(c), LENGTH(e), LENGTH(t) FROM t1;", "sql_id": "duckdb_30_5"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES(SUBSTR(f1, 1, 3)); -- SUBSTR", "sql_id": "duckdb_30_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, CAST(a / 2 AS INTEGER) FROM t1 ORDER BY a;", "sql_id": "duckdb_30_12"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (CAST(strftime('%Y', CURRENT_TIMESTAMP) AS INTEGER));", "sql_id": "duckdb_31_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN y = CAST(EXTRACT(YEAR FROM CURRENT_TIMESTAMP) AS INTEGER) THEN 1 ELSE 0 END FROM t1;", "sql_id": "duckdb_31_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t4 WHERE yyyy = EXTRACT(YEAR FROM CURRENT_TIMESTAMP); -- NOW", "sql_id": "duckdb_31_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT QUARTER(TIMESTAMPDIFF('year', LEAST(y1, y2), dbl)) FROM t1;", "sql_id": "duckdb_31_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(EXTRACT(HOUR FROM GREATEST(y1, y2)) AS INTEGER) FROM t1;", "sql_id": "duckdb_31_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT y, c FROM t1;", "sql_id": "duckdb_32_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(b AS VARCHAR)) FROM t1 ORDER BY pk1;", "sql_id": "duckdb_33_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST(b AS VARCHAR)) FROM t1 ORDER BY pk1; -- HEX", "sql_id": "duckdb_33_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT CONCAT('*', name, '*') FROM t1 ORDER BY 1;", "sql_id": "duckdb_34_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT MIN(name), MIN(CONCAT('*', name, '*')), MAX(name), MAX(CONCAT('*', name, '*')) FROM t1;", "sql_id": "duckdb_34_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT CONCAT('-', a, '-', b, '-') FROM t1 WHERE a='hello'; -- CONCAT", "sql_id": "duckdb_34_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT CONCAT('-', a, '-', b, '-') FROM t1 WHERE a = 'hello';", "sql_id": "duckdb_34_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(col1) FROM t1; -- HEX", "sql_id": "duckdb_34_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(col1) FROM t1; -- HEX", "sql_id": "duckdb_34_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(col1) FROM t1; -- HEX", "sql_id": "duckdb_34_24"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (X'1F9480179366F2BF567E1C4B964C1EF029087575');", "sql_id": "duckdb_35_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (a) VALUES (FROM_HEX('1F9480179366F2BF567E1C4B964C1EF029087575'));", "sql_id": "duckdb_35_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 (a) VALUES (FROM_HEX('1F9480179366F2BF567E1C4B964C1EF029080707')); -- UNHEX", "sql_id": "duckdb_35_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1 ORDER BY a; -- HEX", "sql_id": "duckdb_35_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1 ORDER BY a;", "sql_id": "duckdb_35_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1 WHERE a=FROM_HEX('1F9480179366F2BF567E1C4B964C1EF029082020');", "sql_id": "duckdb_35_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1 WHERE a = FROM_HEX('1F9480179366F2BF567E1C4B964C1EF02908');", "sql_id": "duckdb_35_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN NULL AND 1 THEN 1 ELSE 2 END, CASE WHEN 1 AND NULL THEN 1 ELSE 2 END; -- IF", "sql_id": "duckdb_36_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE CASE WHEN a AND 1 THEN 0 ELSE 1 END; -- IF", "sql_id": "duckdb_36_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE CASE WHEN 1 AND a THEN 0 ELSE 1 END; -- IF", "sql_id": "duckdb_36_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN A IS NULL THEN 'N' ELSE A END AS A, \n       CASE WHEN B IS NULL THEN 'N' ELSE B END AS B, \n       CASE WHEN NOT A IS NULL THEN 'N' ELSE 'N' END AS nA, \n       CASE WHEN NOT B IS NULL THEN 'N' ELSE 'N' END AS nB, \n       CASE WHEN A AND B IS NULL THEN 'N' ELSE A AND B END AS AB, \n       CASE WHEN NOT (A AND B) IS NULL THEN 'N' ELSE NOT (A AND B) END AS \"n(AB)\", \n       CASE WHEN (NOT A OR NOT B) IS NULL THEN 'N' ELSE (NOT A OR NOT B) END AS nAonB, \n       CASE WHEN A OR B IS NULL THEN 'N' ELSE A OR B END AS AoB, \n       CASE WHEN NOT (A OR B) IS NULL THEN 'N' ELSE NOT (A OR B) END AS \"n(AoB)\", \n       CASE WHEN NOT A AND NOT B IS NULL THEN 'N' ELSE NOT A AND NOT B END AS nAnB \nFROM t1;", "sql_id": "duckdb_36_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT COALESCE(A=1, 'N') AS A, COALESCE(B=1, 'N') AS B, COALESCE(CASE WHEN A IS NOT NULL THEN NOT (A::BOOLEAN) ELSE 'N' END, 'N') AS nA, COALESCE(CASE WHEN B IS NOT NULL THEN NOT (B::BOOLEAN) ELSE 'N' END, 'N') AS nB, COALESCE(CASE WHEN A AND B THEN 'Y' ELSE 'N' END, 'N') AS AB, COALESCE(CASE WHEN NOT (A AND B) THEN 'Y' ELSE 'N' END, 'N') AS \"n(AB)\", COALESCE(CASE WHEN (NOT A) OR (NOT B) THEN 'Y' ELSE 'N' END, 'N') AS nAonB, COALESCE(CASE WHEN A OR B THEN 'Y' ELSE 'N' END, 'N') AS AoB, COALESCE(CASE WHEN NOT (A OR B) THEN 'Y' ELSE 'N' END, 'N') AS \"n(AoB)\", COALESCE(CASE WHEN NOT A AND NOT B THEN 'Y' ELSE 'N' END, 'N') AS nAnB FROM t1;", "sql_id": "duckdb_36_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST('2004-01-22 21:45:33' AS DATE); -- CAST", "sql_id": "duckdb_37_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIME_DIFF(CAST('2004-12-30 12:00:00' AS TIME), TIME '12:00:00'); -- TIMEDIFF", "sql_id": "duckdb_37_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMP '1 12:00:00' - TIMESTAMP '12:00:00'; -- TIMEDIFF", "sql_id": "duckdb_37_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(CONCAT('12345','6789') AS INTEGER); -- CONCAT", "sql_id": "duckdb_37_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(CAST('12345' AS VARCHAR) || CAST('6789' AS VARCHAR) AS INTEGER); -- CONCAT", "sql_id": "duckdb_37_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(REPEAT('1',9) AS INTEGER); -- REPEAT", "sql_id": "duckdb_37_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(REPEAT('1', 9) AS INTEGER);", "sql_id": "duckdb_37_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT COALESCE(NULL), COALESCE(CAST(NULL AS DATE)); -- ISNULL, DATE", "sql_id": "duckdb_37_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(CAST('a' AS BLOB(2))); -- HEX", "sql_id": "duckdb_37_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(EXTRACT(HOUR FROM f1) AS INTEGER), CAST(EXTRACT(MINUTE FROM f1) AS INTEGER), CAST(EXTRACT(SECOND FROM f1) AS INTEGER) FROM t1;", "sql_id": "duckdb_37_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(HOUR FROM CAST('2007-07-19' AS DATE)), EXTRACT(MINUTE FROM CAST('2007-07-19' AS DATE)), EXTRACT(SECOND FROM CAST('2007-07-19' AS DATE)); -- HOUR, MINUTE, SECOND", "sql_id": "duckdb_37_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(HOUR FROM CAST(NULL AS DATE)), EXTRACT(MINUTE FROM CAST(NULL AS DATE)), EXTRACT(SECOND FROM CAST(NULL AS DATE));", "sql_id": "duckdb_37_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(HOUR FROM NULL), EXTRACT(MINUTE FROM NULL), EXTRACT(SECOND FROM NULL);", "sql_id": "duckdb_37_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST('a' AS CHAR(2049)); -- CONVERT", "sql_id": "duckdb_37_21"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'value=' || CAST('3.4e5' AS FLOAT); -- CONCAT", "sql_id": "duckdb_37_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIME_MAKE(1, 2, CAST('1.6' AS FLOAT)); -- TIME_MAKE", "sql_id": "duckdb_37_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRCMP(CAST(a AS VARCHAR), b) FROM t1;", "sql_id": "duckdb_38_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(1988 AS SMALLINT) AS a, REPEAT(CAST(1988 AS VARCHAR), 3) AS c2; -- REPEAT", "sql_id": "duckdb_38_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'x' || CAST(1988 AS SMALLINT); -- CONCAT", "sql_id": "duckdb_38_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(EXTRACT(YEAR FROM TIMESTAMP '2030-01-01 00:00:00') AS INTEGER) * 31536000; -- TIME_TO_SEC", "sql_id": "duckdb_38_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMPADD(MINUTE, 1, CAST('1988-01-01' AS TIMESTAMP)); -- TIMESTAMPADD", "sql_id": "duckdb_38_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(STRFTIME('%Y', STRFTIME('%s', 'nope', '%d-%m-%Y')) AS SMALLINT); -- STR_TO_DATE", "sql_id": "duckdb_38_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1 FROM t WHERE CAST(a AS INTEGER) = 1 AND a = CASE WHEN TRUE THEN NULL ELSE 1 END; -- IF", "sql_id": "duckdb_38_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a), STRCMP(a, 'a'), STRCMP(a, 'a ') FROM t1;", "sql_id": "duckdb_40_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT b || c, b || c = '0101' FROM t1; -- CONCAT", "sql_id": "duckdb_40_7"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT b,c FROM t1 WHERE b = 1 AND (CAST(b AS VARCHAR) || CAST(c AS VARCHAR)) = '0101';", "sql_id": "duckdb_40_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT b,c FROM t1 WHERE b = 1 AND CAST(b AS VARCHAR) || CAST(c AS VARCHAR) = '0101';", "sql_id": "duckdb_40_9"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (CURRENT_TIMESTAMP),(CURRENT_TIMESTAMP),(CURRENT_TIMESTAMP); -- CURRENT_TIMESTAMP", "sql_id": "duckdb_40_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW('1', '1') > ROW(a, '1') FROM t1; -- ROW", "sql_id": "duckdb_40_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROW(a, '1') > ROW('1', '1') FROM t1; -- ROW", "sql_id": "duckdb_40_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT CASE WHEN f1 = 1 THEN 3 ELSE f2 END) FROM t1;", "sql_id": "duckdb_41_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(v) FROM t1; -- HEX", "sql_id": "duckdb_42_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT name || SPACE(level), name || RPAD(' ', level) FROM t1;", "sql_id": "duckdb_43_3"}
{"model": "gpt-3.5-turbo", "message": "create table t1 as select REPEAT('a',4000) as a;", "sql_id": "duckdb_43_5"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE head AS SELECT b1.b || b2.b AS head FROM t1 b1, t1 b2; -- CONCAT", "sql_id": "duckdb_43_14"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE tail AS SELECT b1.b || b2.b AS tail FROM t1 b1, t1 b2; -- CONCAT", "sql_id": "duckdb_43_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRING_AGG(COALESCE(CAST(a AS VARCHAR), '')) FROM t1;", "sql_id": "duckdb_44_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRING_AGG(COALESCE(a,'')) FROM t1;", "sql_id": "duckdb_44_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT GROUP_CONCAT(CASE WHEN a!=0 THEN a ELSE '' END) FROM t1;", "sql_id": "duckdb_44_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT GROUP_CONCAT(COALESCE(a,'')) FROM t1;", "sql_id": "duckdb_44_6"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT CONCAT_WS(',',1,2,3) FROM t1; -- CONCAT_WS", "sql_id": "duckdb_44_8"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT LOWER(a) FROM t1; -- LOWER", "sql_id": "duckdb_44_10"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT UPPER(a::text) FROM t1; -- UPPER", "sql_id": "duckdb_44_12"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT REPEAT('1',2) FROM t1; -- REPEAT", "sql_id": "duckdb_44_14"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t2 AS SELECT CASE WHEN 1=1 THEN 111 WHEN 2=1 THEN 222 WHEN 3=1 THEN 333 END FROM t1; -- ELT", "sql_id": "duckdb_44_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t1; -- HEX", "sql_id": "duckdb_45_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT HEX(a) FROM t2; -- HEX", "sql_id": "duckdb_45_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE a = lpad('xxx', 10, ' '); -- LPAD", "sql_id": "duckdb_45_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT IFNULL(c1,''), IFNULL(NULLIF(c1,''), c1) FROM t1; -- IFNULL", "sql_id": "duckdb_45_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 1 THEN c1 ELSE '' END, CASE WHEN 0 THEN c1 ELSE '' END FROM t1; -- IF", "sql_id": "duckdb_45_16"}
{"model": "gpt-3.5-turbo", "message": "select coalesce(c1,''), coalesce(null,c1) from t1; -- COALESCE", "sql_id": "duckdb_45_17"}
{"model": "gpt-3.5-turbo", "message": "select least(c1,''), greatest(c1,'') from t1; -- LEAST, GREATEST", "sql_id": "duckdb_45_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION('', c1), POSITION(c1, '') FROM t1; -- LOCATE", "sql_id": "duckdb_45_19"}
{"model": "gpt-3.5-turbo", "message": "SELECT POSITION(c1, ''), POSITION('', c1) FROM t1; -- FIELD", "sql_id": "duckdb_45_20"}
{"model": "gpt-3.5-turbo", "message": "select c1 || '', '' || c1 from t1; -- CONCAT", "sql_id": "duckdb_45_21"}
{"model": "gpt-3.5-turbo", "message": "select concat_ws('',c1,''), concat_ws('',c1,'') from t1; -- CONCAT_WS", "sql_id": "duckdb_45_22"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 1!=0 THEN c1 ELSE '' END, CASE WHEN 1!=0 THEN '' ELSE c1 END FROM t1; -- ELT", "sql_id": "duckdb_45_23"}
{"model": "gpt-3.5-turbo", "message": "select lpad(c1,3,'x'), lpad('x',3,c1) from t1; -- LPAD", "sql_id": "duckdb_45_24"}
{"model": "gpt-3.5-turbo", "message": "select rpad(c1,3,'x'), rpad('x',3,c1) from t1; -- RPAD", "sql_id": "duckdb_45_25"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRPTIME(CONCAT('15-01-2001',' 2:59:58.999'),'%d-%m-%Y %H:%M:%S.%f'); -- STRPTIME, CONCAT", "sql_id": "duckdb_46_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT strptime(CONCAT('2004.12.12', ' 22:30:59'), '%Y.%m.%d %H:%M:%S'); -- STR_TO_DATE", "sql_id": "duckdb_46_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%H:%M:%S %Y-%m-%d', '8:11:2 03-01-02'); -- STRFTIME", "sql_id": "duckdb_46_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%d', d) FROM t1 ORDER BY 1;", "sql_id": "duckdb_46_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('2004-01-01', '%W (%a), %e %M (%b) %Y'); -- DATE_FORMAT", "sql_id": "duckdb_46_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%I:%M:%S %p', '24:00:00'); -- TIME_FORMAT", "sql_id": "duckdb_47_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 24:00:00', '%I:%M:%S %p');", "sql_id": "duckdb_47_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 12:00:00', '%I:%M:%S %p');", "sql_id": "duckdb_47_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 15:00:00', '%I:%M:%S %p');", "sql_id": "duckdb_47_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 01:00:00', '%I:%M:%S %p');", "sql_id": "duckdb_47_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 00:00:00', '%l %p');", "sql_id": "duckdb_47_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 01:00:00', '%I %p');", "sql_id": "duckdb_47_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 12:00:00', '%I %p');", "sql_id": "duckdb_47_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 23:00:00', '%I %p');", "sql_id": "duckdb_47_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime(TIMESTAMP '2000-01-01 24:00:00', '%I %p');", "sql_id": "duckdb_47_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('04 /30/2004', '%m /%d/%Y'); -- STR_TO_DATE", "sql_id": "duckdb_47_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT strptime('04 /30/2004', '%m /%d/%Y'); -- STR_TO_DATE", "sql_id": "duckdb_47_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT strptime('04/30/2004 ', '%m/%d/%Y '); -- STR_TO_DATE", "sql_id": "duckdb_47_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('0000-01-01', '%W %d %M %Y') as valid_date; -- DATE_FORMAT", "sql_id": "duckdb_47_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('0000-02-28', '%W %d %M %Y') as valid_date; -- DATE_FORMAT", "sql_id": "duckdb_47_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('2009-01-01'::DATE, '%W %d %B %Y') as valid_date;", "sql_id": "duckdb_47_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT JSON_EXTRACT('{\"id\": \"3\", \"$name\": \"Barney\"}', '$.id'); -- JSON_EXTRACT", "sql_id": "duckdb_48_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT json_extract('{\"id\": \"3\", \"$name\": \"Barney\"}', '$.id'); -- JSON_EXTRACT", "sql_id": "duckdb_48_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT concat('|', text1, '|') as c FROM t1 WHERE text1='teststring' OR text1 LIKE 'teststring_%' ORDER BY c; -- CONCAT", "sql_id": "duckdb_49_5"}
{"model": "gpt-3.5-turbo", "message": "select concat('|', text1, '|') from t1 where text1='teststring' or text1 > 'teststring\\\\t'; -- CONCAT", "sql_id": "duckdb_49_6"}
{"model": "gpt-3.5-turbo", "message": "select text1, LENGTH(text1) from t1 order by text1; -- LENGTH", "sql_id": "duckdb_49_7"}
{"model": "gpt-3.5-turbo", "message": "select concat('|', text1, '|') from t1 order by text1; -- CONCAT", "sql_id": "duckdb_49_9"}
{"model": "gpt-3.5-turbo", "message": "select concat('|', text1, '|') from t1 where text1='teststring' or text1 > 'teststring\\\\t';", "sql_id": "duckdb_49_10"}
{"model": "gpt-3.5-turbo", "message": "select concat('|', text1, '|') from t1 where text1='teststring'; -- CONCAT", "sql_id": "duckdb_49_11"}
{"model": "gpt-3.5-turbo", "message": "select concat('|', text1, '|') from t1 where text1='teststring '; -- CONCAT", "sql_id": "duckdb_49_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'Let''s create some new events from the name of ' || CURRENT_USER;", "sql_id": "duckdb_50_3"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (2, REPEAT('-', 104));", "sql_id": "duckdb_51_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, REPEAT('x', 104));", "sql_id": "duckdb_51_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT f1 || '' AS dummy FROM t1 ORDER BY dummy;", "sql_id": "duckdb_51_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 ORDER BY strftime('%s', f1); -- UNIX_TIMESTAMP", "sql_id": "duckdb_51_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' AS f1 FROM t1 WHERE a='8' GROUP BY f1 ORDER BY f1;", "sql_id": "duckdb_51_15"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (1, REPEAT('x', 40001)); -- REPEAT", "sql_id": "duckdb_51_18"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (2, REPEAT('x', 40002)); -- REPEAT", "sql_id": "duckdb_51_19"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (3, REPEAT('x', 40003)); -- REPEAT", "sql_id": "duckdb_51_20"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (4, REPEAT('x', 40005)); -- REPEAT", "sql_id": "duckdb_51_21"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (5, REPEAT('x', 40008)); -- REPEAT", "sql_id": "duckdb_51_22"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (6, REPEAT('x', 40013)); -- REPEAT", "sql_id": "duckdb_51_23"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, LENGTH(b) FROM t1 ORDER BY a DESC;", "sql_id": "duckdb_51_24"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT * FROM t1 WHERE LENGTH(t1.vc) > 3; -- LENGTH", "sql_id": "duckdb_52_13"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT * FROM t1 WHERE LENGTH(t1.vc) = 3; -- LENGTH", "sql_id": "duckdb_52_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE LENGTH(t1.vc) IS NULL;", "sql_id": "duckdb_52_15"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT * FROM t1 WHERE LENGTH(t1.vc) IS NOT NULL; -- LENGTH", "sql_id": "duckdb_52_16"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES(REPEAT(x'0a',1000)); -- REPEAT", "sql_id": "duckdb_53_12"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES(1, REPEAT(x'32', 257)), (1, REPEAT(x'31', 257)); -- REPEAT", "sql_id": "duckdb_53_15"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES(1, REPEAT('2', 257)::BLOB), (1, REPEAT('1', 257)::BLOB); -- REPEAT", "sql_id": "duckdb_53_18"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t VALUES(1, REPEAT('2', 32750)::BLOB, REPEAT('1', 32750)::BLOB); -- REPEAT", "sql_id": "duckdb_53_21"}
{"model": "gpt-3.5-turbo", "message": "DROP TABLE IF EXISTS t1;\ncreate table t1 (a BLOB);\ninsert into t1 values (NULL), ('A\\0\\0\\0BBBBBBBB'), (REPEAT(' ', 50000)), (REPEAT(' ', 50000));", "sql_id": "duckdb_54_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(a) FROM t1; -- LENGTH", "sql_id": "duckdb_54_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE CONCAT(a, c, b, d) = 'AAAA2003-03-011051';", "sql_id": "duckdb_55_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION SELECT CONCAT('a', -4); -- CONCAT", "sql_id": "duckdb_55_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION SELECT 'a' || -4.0; -- CONCAT", "sql_id": "duckdb_55_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION SELECT 'a' || (- (4 + 1)); -- CONCAT", "sql_id": "duckdb_55_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION SELECT 'a' || (4 - 5); -- CONCAT", "sql_id": "duckdb_55_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION SELECT 'a' || -0; -- CONCAT", "sql_id": "duckdb_55_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION SELECT CONCAT('a', -0.0); -- CONCAT", "sql_id": "duckdb_55_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT 'a' UNION SELECT 'a' || CAST(-0.0000 AS VARCHAR); -- CONCAT", "sql_id": "duckdb_55_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT (SELECT x FROM (SELECT 'a' AS x) AS t1) || (SELECT y FROM (SELECT 'b' AS y) AS t2) FROM (SELECT 1 UNION SELECT 2) AS t3;", "sql_id": "duckdb_55_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT f1 || '2' AS a FROM t1 UNION SELECT 'x' AS a FROM t1; -- CONCAT", "sql_id": "duckdb_55_17"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE REGEXP_LIKE(c1 || ' ' || c2, 'First.*'); -- CONCAT", "sql_id": "duckdb_55_21"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (DATEADD(day, 1, NULL));", "sql_id": "duckdb_56_2"}
{"model": "gpt-3.5-turbo", "message": "insert into t1 values (CAST(NULL AS DATE) + INTERVAL '1 day');", "sql_id": "duckdb_56_3"}
{"model": "gpt-3.5-turbo", "message": "insert into t1 values (CAST(NULL AS DATE) + INTERVAL '1 day');", "sql_id": "duckdb_56_4"}
{"model": "gpt-3.5-turbo", "message": "insert into t1 values (CAST('2000-01-04' AS DATE) + INTERVAL '1 day');", "sql_id": "duckdb_56_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE(ts) = CURRENT_DATE + INTERVAL '1' DAY AS is_tomorrow, TIME(ts)\nFROM (SELECT CAST('00:00:00' AS TIME) + INTERVAL '1' DAY AS ts) AS dt; -- DATE", "sql_id": "duckdb_56_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE mydate IS NULL OR mydate = '0000-00-00';", "sql_id": "duckdb_57_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT *\nFROM t3\nLEFT JOIN (\n    SELECT *\n    FROM t2 outr2\n    JOIN t2 outr ON outr2.pk = outr.pk\n    JOIN t1 ON outr.pk = t3.pk\n    WHERE t1.col_int_key = t3.pk\n    AND t1.col_date_key IS NULL\n    AND outr2.pk <> t3.pk\n) ON outr.pk = t3.pk;", "sql_id": "duckdb_57_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t3 LEFT JOIN (SELECT * FROM t2 outr2 JOIN t2 outr JOIN t1 ON outr.pk = t1.pk AND t1.col_int_key = t3.pk AND t1.col_date_key IS NULL) ON outr2.pk <> t3.pk;", "sql_id": "duckdb_57_14"}
{"model": "gpt-3.5-turbo", "message": "EXPLAIN SELECT * FROM t1 WHERE a LIKE CONCAT('abc','%'); -- CONCAT", "sql_id": "duckdb_58_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE a LIKE CONCAT('abc','%');", "sql_id": "duckdb_58_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT log(exp(10)), exp(log(sqrt(10))*2), log(NULL); -- LN", "sql_id": "duckdb_59_0"}
{"model": "gpt-3.5-turbo", "message": "select log(8, 2), log(15, 2), log(NULL, 2); -- LOG2", "sql_id": "duckdb_59_1"}
{"model": "gpt-3.5-turbo", "message": "select exp(10),power(2,4); -- POW, POWER", "sql_id": "duckdb_59_2"}
{"model": "gpt-3.5-turbo", "message": "select ceil(0.09); -- CEIL", "sql_id": "duckdb_59_3"}
{"model": "gpt-3.5-turbo", "message": "select ceil(0.000000000000000009); -- CEIL", "sql_id": "duckdb_59_4"}
{"model": "gpt-3.5-turbo", "message": "insert into t1 values ('http://www.foo.com/', CURRENT_TIMESTAMP);", "sql_id": "duckdb_59_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT a FROM t1 WHERE a='http://www.foo.com/' ORDER BY ABS(strftime('%s', ts) - strftime('%s', '0000-00-00 00:00:00')); -- TIMEDIFF", "sql_id": "duckdb_59_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT mod(cast(-2 as unsigned), 3), mod(18446744073709551614, 3), mod(-2, 3); -- MOD", "sql_id": "duckdb_59_10"}
{"model": "gpt-3.5-turbo", "message": "select mod(5, cast(-2 as bigint)), mod(5, 18446744073709551614), mod(5, -2); -- MOD", "sql_id": "duckdb_59_11"}
{"model": "gpt-3.5-turbo", "message": "select pow(cast(-2 as bigint), 5), pow(18446744073709551614, 5), pow(-2, 5); -- POW", "sql_id": "duckdb_59_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT ROUND(LEAST(15, -4939092, 0.2704)); -- LEAST, STDDEV", "sql_id": "duckdb_60_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(1.175494351E-37 / 1.7976931348623157E+308 AS INTEGER); -- DIV", "sql_id": "duckdb_60_1"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO t1 VALUES (LN(1)); -- LN", "sql_id": "duckdb_60_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT FLOOR(CEIL(123456789)); -- CEIL", "sql_id": "duckdb_60_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(POW(2,63)-1024 AS INTEGER) AS pp; -- POW", "sql_id": "duckdb_60_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(1-POWER(2,63) AS BIGINT) AS qq; -- POW", "sql_id": "duckdb_60_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE CAST(COALESCE(t0.c0, -1) AS INTEGER); -- COALESCE", "sql_id": "duckdb_60_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t0 WHERE CAST(IFNULL(t0.c0, -1) AS UBIGINT); -- IFNULL", "sql_id": "duckdb_60_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COALESCE(t0.c0, -1) AS UBIGINT) IS TRUE FROM t0; -- COALESCE", "sql_id": "duckdb_60_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COALESCE(t0.c0, -1) AS UBIGINT) FROM t0; -- COALESCE", "sql_id": "duckdb_60_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT MD5('a'), HEX(MD5('a')); -- MD5, HEX", "sql_id": "duckdb_61_0"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 AS SELECT MD5('a') AS c1; -- MD5", "sql_id": "duckdb_61_2"}
{"model": "gpt-3.5-turbo", "message": "select md5('hello'); -- MD5", "sql_id": "duckdb_61_4"}
{"model": "gpt-3.5-turbo", "message": "explain select md5('hello'); -- MD5", "sql_id": "duckdb_61_5"}
{"model": "gpt-3.5-turbo", "message": "select length(UNHEX(HEX(MD5('abrakadabra'))));", "sql_id": "duckdb_61_6"}
{"model": "gpt-3.5-turbo", "message": "insert into t1 values ('test',md5('test')), ('test', md5('test')); -- MD5", "sql_id": "duckdb_61_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE f1='test' AND (f2= CAST(md5('test') AS VARCHAR) OR f2= CAST(md5('Test') AS VARCHAR)); -- MD5", "sql_id": "duckdb_61_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE f1 = 'test' AND (f2 = MD5('test') OR f2 = MD5('TEST')); -- MD5", "sql_id": "duckdb_61_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT a FROM t1 WHERE SUBSTR(CAST(a AS VARCHAR), 6, 3) IN (SUBSTR(CAST('20040106123400' AS VARCHAR), 6, 3));", "sql_id": "duckdb_62_4"}
{"model": "gpt-3.5-turbo", "message": "select a from t1 where substring(strftime(a, '%Y%m%d%H%M%S'), 6, 3) IN (SUBSTRING(CAST(20040106123400 AS VARCHAR), 6, 3));", "sql_id": "duckdb_62_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT LEAST(a, (SELECT b FROM t1 LIMIT 1)) FROM t1 UNION SELECT 1; -- LEAST", "sql_id": "duckdb_62_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT GREATEST(a, (SELECT CAST(b AS INTEGER) FROM t1 LIMIT 1)) FROM t1 UNION SELECT 1;", "sql_id": "duckdb_62_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT 1+1,1-1,1+1*2,8/5,8%5,8%5,-(1+1)*-2; -- MOD", "sql_id": "duckdb_63_0"}
{"model": "gpt-3.5-turbo", "message": "select 1 | (1+1),5 & 3,bit_count(7) ; -- BIT_COUNT", "sql_id": "duckdb_63_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT t1.a, t2.a, t2.b, bit_count(t2.b) FROM t1 LEFT JOIN t2 ON t1.a = t2.a; -- BIT_COUNT", "sql_id": "duckdb_63_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT STRFTIME('%f', '1997-12-31 23:59:59.000002');", "sql_id": "duckdb_64_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(STRFTIME('%s', '1997-12-31 23:59:59.000001') AS INTEGER) - CAST(STRFTIME('%s', '1997-12-30') AS INTEGER); -- DATEDIFF", "sql_id": "duckdb_64_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_DIFF('day', TIMESTAMP '1997-11-30 23:59:59.000001', NULL); -- DATEDIFF", "sql_id": "duckdb_64_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEADD(DAY, 03, DATE '0001-01-01'); -- MAKEDATE", "sql_id": "duckdb_64_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE '1997-01-01'; -- MAKEDATE", "sql_id": "duckdb_64_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE '1997-01-01' + (0 - 1) * INTERVAL '1 day'; -- MAKEDATE", "sql_id": "duckdb_64_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE '9999-12-31' + (365 - 1) * INTERVAL '1 day';", "sql_id": "duckdb_64_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE '9999-12-31' + (366 - 1) * INTERVAL '1 day'; -- MAKEDATE", "sql_id": "duckdb_64_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE '0100-01-01' + (1 - 1) * INTERVAL '1 day'; -- MAKEDATE", "sql_id": "duckdb_64_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT DATETIME_SUB(DATETIME '1997-12-31 23:59:59.000001', INTERVAL '1 1:1:1.000002' DAY TO SECOND); -- SUBTIME", "sql_id": "duckdb_64_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMP '1997-12-31 23:59:59.999999' - TIMESTAMP '1998-01-01 01:01:01.999999'; -- SUBTIME", "sql_id": "duckdb_64_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIMESTAMP '01:00:00.999999' - INTERVAL '02:00:00.999998'; -- SUBTIME", "sql_id": "duckdb_64_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT \"02:01:01.999999\" - \"01:01:01.999999\"; -- SUBTIME", "sql_id": "duckdb_64_13"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIME_DIFF(TIMESTAMP '1997-01-01 23:59:59.000001', TIMESTAMP '1995-12-31 23:59:59.000002'); -- TIMEDIFF", "sql_id": "duckdb_64_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIME_DIFF(TIMESTAMP '1997-12-31 23:59:59.000001', TIMESTAMP '1997-12-30 01:01:01.000002'); -- TIMEDIFF", "sql_id": "duckdb_64_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIME_DIFF(TIMESTAMP '2005-01-11 15:48:49.999999', TIMESTAMP '2005-01-11 15:48:50'); -- TIMEDIFF", "sql_id": "duckdb_64_18"}
{"model": "gpt-3.5-turbo", "message": "SELECT TIME(10,11,12); -- MAKETIME", "sql_id": "duckdb_65_0"}
{"model": "gpt-3.5-turbo", "message": "select make_time(20,11,12); -- MAKETIME", "sql_id": "duckdb_65_1"}
{"model": "gpt-3.5-turbo", "message": "select timestamp('2001-12-01 01:01:01.999999'); -- TIMESTAMP", "sql_id": "duckdb_65_3"}
{"model": "gpt-3.5-turbo", "message": "select TIMESTAMP '2001-10-01 01:01:01.000001'; -- TIMESTAMP", "sql_id": "duckdb_65_4"}
{"model": "gpt-3.5-turbo", "message": "select TIMESTAMP '2001-12-01 20:01:01'; -- TIMESTAMP", "sql_id": "duckdb_65_5"}
{"model": "gpt-3.5-turbo", "message": "select TIMESTAMP '2001-12-01'; -- TIMESTAMP", "sql_id": "duckdb_65_6"}
{"model": "gpt-3.5-turbo", "message": "select extract(day from timestamp '1997-12-31 23:59:59.000001'); -- DAY", "sql_id": "duckdb_65_7"}
{"model": "gpt-3.5-turbo", "message": "select time('1997-12-31 23:59:59.000001'); -- TIME", "sql_id": "duckdb_65_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT (t1 - t4) AS ttt, (t2 - t3) AS qqq, (t3 - t2) AS eee, (t2 - t4) AS rrr FROM test; -- TIMEDIFF", "sql_id": "duckdb_65_12"}
{"model": "gpt-3.5-turbo", "message": "select cast(\"2003-01-02 10:11:12.0012\" as timestamp); -- STR_TO_DATE", "sql_id": "duckdb_65_13"}
{"model": "gpt-3.5-turbo", "message": "select (CAST('2008-09-29 20:10:10' AS timestamp) - CAST('2008-09-30 20:10:10' AS timestamp)), CAST('00:00:00' AS time); -- TIMEDIFF, TIME", "sql_id": "duckdb_65_14"}
{"model": "gpt-3.5-turbo", "message": "select (TIMESTAMP '2008-09-29 20:10:10' - TIMESTAMP '2008-09-30 20:10:10') > strftime('%H:%M:%S', TIMESTAMP '1970-01-01 00:00:00');", "sql_id": "duckdb_65_15"}
{"model": "gpt-3.5-turbo", "message": "select (TIMESTAMP '2008-09-29 20:10:10' - TIMESTAMP '2008-09-30 20:10:10') < INTERVAL '0 seconds'; -- TIMEDIFF, TIME", "sql_id": "duckdb_65_16"}
{"model": "gpt-3.5-turbo", "message": "SELECT SEC_TO_TIME(86399)=TIME('23:59:59');", "sql_id": "duckdb_66_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT ((INTERVAL 86399 SECOND) + '00:00:00'::TIME) = strftime('%H:%M:%S', CAST(CONCAT('1970-01-01 ', '23:59:59') AS TIMESTAMP));", "sql_id": "duckdb_66_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT ((INTERVAL 86399 SECOND) + '00:00:00'::TIME) = strftime('%H:%M:%S', CAST(CONCAT('1970-01-01 ', '23:59:59') AS TIMESTAMP));", "sql_id": "duckdb_66_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT strftime('%H:%M:%S', CAST(CONCAT('1970-01-01 ', '01:00:01') AS TIMESTAMP)) = '01:00:01'; -- MAKETIME", "sql_id": "duckdb_66_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT make_time(1, 0, 1) = '01:00:01';", "sql_id": "duckdb_66_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE\n    WHEN 2 = 1 THEN 'a'\n    WHEN 2 = 2 THEN 'b'\n    WHEN 2 = 3 THEN 'c'\n    ELSE NULL\nEND AS result1,\nCASE\n    WHEN NULL = 'a' THEN 1\n    WHEN NULL = 'b' THEN 2\n    WHEN NULL = 'c' THEN 3\n    ELSE 0\nEND AS result2;", "sql_id": "duckdb_67_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT COALESCE(CASE WHEN 'b' IS NOT NULL THEN 'b' WHEN 'a' IS NOT NULL THEN 'a' ELSE NULL END),\nCOALESCE(CASE WHEN 1 IS NOT NULL THEN 1 WHEN 0 IS NOT NULL THEN 0 ELSE NULL END) + 0,\nCOALESCE(CASE WHEN 1.0 IS NOT NULL THEN 1.0 WHEN 0.0 IS NOT NULL THEN 0.0 ELSE NULL END) + 0.0,\nCOALESCE(CASE WHEN 1.0e1 IS NOT NULL THEN 1.0e1 WHEN 0.0e1 IS NOT NULL THEN 0.0e1 ELSE NULL END) + 0.0e1;", "sql_id": "duckdb_67_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT COALESCE(array_position(ARRAY[NULL, 'a', NULL], NULL), 0), COALESCE(array_position(ARRAY[NULL, 0, NULL], 0), 0) + 0, COALESCE(array_position(ARRAY[NULL, 0.0, NULL], 0.0), 0) + 0.0, COALESCE(array_position(ARRAY[NULL, 0.0e1, NULL], 0.0e1), 0) + 0.0e1; -- FIELD", "sql_id": "duckdb_67_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT one.id, ELT(two.val, 'one', 'two') FROM t1 one, t2 two WHERE two.id = one.id; -- ELT", "sql_id": "duckdb_67_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT one.id, CASE two.val WHEN 1 THEN 'one' WHEN 2 THEN 'two' END\nFROM t1 one, t2 two\nWHERE two.id = one.id\nORDER BY one.id;", "sql_id": "duckdb_67_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT CONCAT('\"',CONCAT_WS('\";\"',title,prio,category,program,bugdesc,created,modified,bugstatus,submitter),'\"') FROM t1;", "sql_id": "duckdb_68_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT CONCAT('\"',CONCAT_WS('\";\"',title,prio,category,program,bugdesc,created,modified,bugstatus,submitter),'\"') FROM t1;", "sql_id": "duckdb_68_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT CONCAT('\\\"',concat_ws('\";\"',title,prio,category,program,bugdesc,created,modified,bugstatus,submitter),'\\\"') FROM t1;", "sql_id": "duckdb_68_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT CONCAT('</a>',RPAD('',(55-LENGTH(title)),'.')) from t1;", "sql_id": "duckdb_68_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT 0=0,1>0,1>=1,1<0,1<=0,1<>0,STRCMP('abc','abcd'),STRCMP('b','a'),STRCMP('a','a') ; -- STRCMP", "sql_id": "duckdb_69_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST(d,d) FROM t1 WHERE k=2; -- GREATEST", "sql_id": "duckdb_69_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT (12 % 1) IS NULL AS col; -- MOD", "sql_id": "duckdb_69_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 0=0 THEN NULL ELSE 12%1 END AS col;", "sql_id": "duckdb_69_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 0=0 THEN NULL ELSE 12%1 END AS col;", "sql_id": "duckdb_69_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN 0=0 THEN NULL ELSE MOD(12.0,1) END AS col;", "sql_id": "duckdb_69_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST(123456789, 234567890) as g; -- GREATEST", "sql_id": "duckdb_69_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT LEAST(123456789, 234567890) AS l; -- LEAST", "sql_id": "duckdb_69_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST(123456789, -1, 234567890) AS g; -- GREATEST", "sql_id": "duckdb_69_12"}
{"model": "gpt-3.5-turbo", "message": "SELECT LEAST(123456789, -1, 234567890) AS l; -- LEAST", "sql_id": "duckdb_69_13"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE t1 AS SELECT GREATEST(-1, 123456789); -- GREATEST", "sql_id": "duckdb_69_14"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST(CAST('11' AS INTEGER), CAST('5' AS INTEGER), CAST('2' AS INTEGER)); -- GREATEST", "sql_id": "duckdb_70_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST('11', '5', '2');", "sql_id": "duckdb_70_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST('11', '5', '2'); -- GREATEST;", "sql_id": "duckdb_70_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT LEAST('11', '5', '2'); -- LEAST", "sql_id": "duckdb_70_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT least('11', 5, 2);", "sql_id": "duckdb_70_4"}
{"model": "gpt-3.5-turbo", "message": "SELECT least(11, 5, 2); -- LEAST", "sql_id": "duckdb_70_5"}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(GREATEST('11', '5', '2') AS INTEGER); -- GREATEST", "sql_id": "duckdb_70_6"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST('11', 5, 2) + 0; -- GREATEST\n\nTranslated to DuckDB:\n\nSELECT GREATEST('11', 5, 2);", "sql_id": "duckdb_70_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST(11, 5, 2) + 0; -- GREATEST\n\n-- Translated SQL for DuckDB\nSELECT GREATEST(11, 5, 2) + 0;", "sql_id": "duckdb_70_8"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST('11', '5', '2')::INTEGER + 0.00; -- GREATEST", "sql_id": "duckdb_70_9"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST('11', 5, 2) + 0.00; -- GREATEST\n\n-- Translated to DuckDB:\n\nSELECT GREATEST('11', 5, 2) + 0.00;", "sql_id": "duckdb_70_10"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST(11, 5, 2) + 0.00; -- GREATEST\n\n-- Translated SQL for DuckDB:\nSELECT GREATEST(11, 5, 2) + 0.00;", "sql_id": "duckdb_70_11"}
{"model": "gpt-3.5-turbo", "message": "SELECT GREATEST(18446744073709551615, NULL) FROM t0017; -- GREATEST", "sql_id": "duckdb_70_15"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM t1 WHERE (GREATEST(c1, c2) = 42) AND (c2 = 1); -- GREATEST", "sql_id": "duckdb_70_20"}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(LEAST(a, b)) FROM t1; -- LEAST", "sql_id": "duckdb_70_27"}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(LEAST(a, b)) FROM t2; -- LEAST", "sql_id": "duckdb_70_28"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO clstr_tst (a, b, c, d) VALUES (32, 6, 'seis', repeat('xyzzy', 10000)); -- REPEAT", "sql_id": "duckdb_1_33"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO tidrangescan SELECT i,REPEAT('x', 100) FROM generate_series(1,200) AS s(i);", "sql_id": "duckdb_10_2"}
{"model": "gpt-3.5-turbo", "message": "SELECT sequence(start := 1, end := 3, increment := 1); -- GENERATE_SERIES", "sql_id": "duckdb_12_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM generate_series(1, 3);", "sql_id": "duckdb_12_1"}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM generate_series(1, 2) AS val1, generate_series(1, 4) AS val2; -- GENERATE_SERIES", "sql_id": "duckdb_12_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO cmdata VALUES(repeat('1234567890', 1000)); -- REPEAT", "sql_id": "duckdb_2_2"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO cmdata1 VALUES(repeat('1234567890', 1004)); -- REPEAT", "sql_id": "duckdb_2_6"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO delete_test (id, a, b) VALUES (2, 50, REPEAT('x', 10000)); -- REPEAT", "sql_id": "duckdb_3_3"}
{"model": "gpt-3.5-turbo", "message": "SELECT current_timestamp() = NOW(); -- NOW", "sql_id": "duckdb_4_0"}
{"model": "gpt-3.5-turbo", "message": "SELECT current_schemas(false); -- CURRENT_SCHEMAS", "sql_id": "duckdb_5_0"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE simple1 AS SELECT sequence AS id FROM generate_series(1, 200); -- GENERATE_SERIES", "sql_id": "duckdb_6_2"}
{"model": "gpt-3.5-turbo", "message": "create table bigger_than_it_looks as select generate_series(1, 200) as id; -- GENERATE_SERIES", "sql_id": "duckdb_6_5"}
{"model": "gpt-3.5-turbo", "message": "insert into extremely_skewed select 42 as id, 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' from generate_series(1, 200); -- GENERATE_SERIES", "sql_id": "duckdb_6_10"}
{"model": "gpt-3.5-turbo", "message": "create table wide as select sequence(1, 2) as id, rpad('', 320000, 'x') as t;", "sql_id": "duckdb_6_12"}
{"model": "gpt-3.5-turbo", "message": "create table join_foo as select generate_series(1, 3) as id, 'xxxxx'::text as t; -- GENERATE_SERIES", "sql_id": "duckdb_6_14"}
{"model": "gpt-3.5-turbo", "message": "CREATE TABLE join_bar AS SELECT GENERATE_SERIES(1, 10000) AS id, 'xxxxx'::TEXT AS t; -- GENERATE_SERIES", "sql_id": "duckdb_6_16"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO pagg_tab SELECT i % 20, i % 30, CAST(i % 12 AS TEXT), i % 30 FROM generate_series(0, 2999) i;", "sql_id": "duckdb_7_2"}
{"model": "gpt-3.5-turbo", "message": "WITH series AS (SELECT generate_series AS i FROM generate_series(0, 29999)) INSERT INTO pagg_tab_ml SELECT i % 30, i % 10, lpad(CAST(i % 4 AS VARCHAR), 4, '0') FROM series; -- TO_CHAR", "sql_id": "duckdb_7_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT a, sum(b), array_agg(DISTINCT c), count(*) FROM pagg_tab_ml GROUP BY a HAVING avg(b) < 3 ORDER BY a, sum(b), array_agg(DISTINCT c);", "sql_id": "duckdb_7_9"}
{"model": "gpt-3.5-turbo", "message": "INSERT INTO prt1 SELECT i, i % 25, CAST(i AS VARCHAR) FROM generate_series(0, 599) i WHERE i % 2 = 0;", "sql_id": "duckdb_8_2"}
{"model": "gpt-3.5-turbo", "message": "WITH series AS (SELECT i % 25 AS a, i AS b, lpad(CAST(i AS VARCHAR), 4, '0') AS c FROM generate_series(0, 599) i WHERE i % 3 = 0) INSERT INTO prt2 SELECT a, b, c FROM series;", "sql_id": "duckdb_8_7"}
{"model": "gpt-3.5-turbo", "message": "SELECT nextval('seq3'); -- NEXTVAL", "sql_id": "duckdb_9_2"}

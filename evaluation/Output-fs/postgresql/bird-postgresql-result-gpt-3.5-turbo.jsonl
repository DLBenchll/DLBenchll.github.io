{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN SUBSTRING('Last Updated', -4) > '2018' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(\"App\") AS PER FROM \"playstore\" WHERE \"_Type\" = 'Free' AND \"Rating\" >= 4.5;", "sql_id": 216}
{"model": "gpt-3.5-turbo", "message": "SELECT \"FullName\" FROM \"Conference\" ORDER BY LENGTH(\"FullName\") DESC LIMIT 1;", "sql_id": 249}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"CustomerID\") FROM \"customers\" AS T1 INNER JOIN \"_transaction\" AS T2 ON T1.\"CustomerID\" = T2.\"CustomerID\" WHERE T1.\"_First\" = 'Frank-Paul' AND T1.\"_Last\" = 'Santangelo' AND TO_CHAR(T2.\"TransactionDate\", 'YYYY-MM') = '2014-07';", "sql_id": 357}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"CustomerID\") FROM \"customers\" AS T1 INNER JOIN \"_transaction\" AS T2 ON T1.\"CustomerID\" = T2.\"CustomerID\" WHERE T1.\"Gender\" = 'M' AND TO_CHAR(T2.\"TransactionDate\", 'YYYY-MM') = '2014-07';", "sql_id": 358}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"CustomerID\") FROM \"customers\" AS T1 INNER JOIN \"_transaction\" AS T2 ON T1.\"CustomerID\" = T2.\"CustomerID\" WHERE T1.\"SubscribedToEmailList\" = 'TRUE' AND T2.\"CreditCardType\" = 'Visa' AND TO_CHAR(T2.\"TransactionDate\", 'YYYY-MM') = '2014-07';", "sql_id": 359}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN subscription_type = 'Subscriber' THEN 1 ELSE 0 END) - SUM(CASE WHEN subscription_type = 'Customer' THEN 1 ELSE 0 END) FROM trip WHERE start_date LIKE '6/%/2013%';", "sql_id": 631}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN start_station_id = end_station_id THEN 1 ELSE 0 END) FROM trip;", "sql_id": 636}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN zip_code = '94107' AND date = '8/29/2013' THEN mean_temperature_f ELSE 0 END) FROM weather;", "sql_id": 640}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN zip_code = '94107' AND date = '8/29/2013' THEN max_temperature_f - min_temperature_f ELSE 0 END) FROM weather;", "sql_id": 641}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN zip_code = '94041' AND events = 'Rain' THEN 1 ELSE 0 END) FROM weather;", "sql_id": 643}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN subscription_type = 'Subscriber' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN subscription_type = 'Customer' THEN 1 ELSE 0 END) FROM trip WHERE start_station_name = '2nd at South Park' AND end_station_name = '2nd at South Park';", "sql_id": 646}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM book WHERE DATE_PART('year', publication_date) = 1900 ORDER BY publication_date LIMIT 1;", "sql_id": 394}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM country AS T1 INNER JOIN address AS T2 ON T1.country_id = T2.country_id INNER JOIN cust_order AS T3 ON T3.dest_address_id = T2.address_id WHERE T1.country_name = 'Iran' AND DATE_PART('year', T3.order_date) = 2022;", "sql_id": 395}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Delivered' AND DATE_PART('year', T2.status_date) = 2021;", "sql_id": 396}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T3._cost) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Page' AND T1.last_name = 'Holsey' AND TO_CHAR(T2.order_date, 'YYYY') = '2022';", "sql_id": 397}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN DATE_PART('year', T1.publication_date) = 1992 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Abraham Lincoln';", "sql_id": 398}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title, T2.publisher_name \nFROM book AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id \nWHERE DATE_PART('year', T1.publication_date) = 2004 \nAND T1.num_pages * 100 > (SELECT AVG(num_pages) FROM book) * 70;", "sql_id": 399}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM book AS T1 \nINNER JOIN book_author AS T2 ON T1.book_id = T2.book_id \nINNER JOIN author AS T3 ON T3.author_id = T2.author_id \nWHERE T3.author_name = 'Orson Scott Card' \nAND DATE_PART('year', T1.publication_date) = 2001;", "sql_id": 400}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM cust_order AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Daisey' AND T2.last_name = 'Lamball' AND DATE_PART('year', T1.order_date) = 2021;", "sql_id": 401}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Delivered' AND DATE_PART('year', T2.status_date) = 2019;", "sql_id": 402}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.method_name = 'International' THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(*) FROM cust_order AS T1 INNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id WHERE DATE_PART('year', T1.order_date) = 2020;", "sql_id": 403}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(YEAR FROM order_date) FROM cust_order GROUP BY EXTRACT(YEAR FROM order_date) ORDER BY COUNT(EXTRACT(YEAR FROM order_date)) DESC LIMIT 1;", "sql_id": 404}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM book WHERE DATE_PART('year', publication_date) = 1995;", "sql_id": 405}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(email, POSITION('@' IN email) + 1, LENGTH(email) - POSITION('@' IN email)) AS ym FROM customer GROUP BY SUBSTRING(email, POSITION('@' IN email) + 1, LENGTH(email) - POSITION('@' IN email)) ORDER BY COUNT(*) DESC LIMIT 1;", "sql_id": 406}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Returned' AND DATE_PART('year', T2.status_date) = 2020;", "sql_id": 407}
{"model": "gpt-3.5-turbo", "message": "SELECT EXTRACT(DAY FROM T2.status_date) - EXTRACT(DAY FROM T1.order_date) FROM cust_order AS T1 INNER JOIN order_history AS T2 ON T1.order_id = T2.order_id WHERE T1.order_id = 2398;", "sql_id": 408}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Marcelia' AND T1.last_name = 'Goering' AND DATE_PART('year', T2.order_date) = 2021 AND T3.method_name = 'Priority';", "sql_id": 409}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Cancelled' AND DATE_PART('year', T2.status_date) = 2022;", "sql_id": 410}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book WHERE DATE_PART('year', publication_date) = 2017;", "sql_id": 411}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM book AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id \nWHERE T2.publisher_name = 'Free Press' \nAND DATE_PART('year', T1.publication_date) BETWEEN 1990 AND 2000 \nORDER BY T1.num_pages DESC \nLIMIT 1;", "sql_id": 413}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'The Servant Leader' AND DATE_PART('year', T1.publication_date) = 2003;", "sql_id": 414}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Returned' AND DATE_PART('year', T2.status_date) = 2022;", "sql_id": 415}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Birlinn' AND DATE_PART('year', T1.publication_date) = 2008 AND T1.num_pages BETWEEN 600 AND 700;", "sql_id": 416}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Brava' AND DATE_PART('year', T1.publication_date) = 2006;", "sql_id": 417}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id WHERE DATE_PART('year', T1.ord_date) = 1992 ORDER BY T1.qty DESC LIMIT 1;", "sql_id": 9}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title, T1.notes, T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE DATE_PART('year', T1.pubdate) = 1991;", "sql_id": 10}
{"model": "gpt-3.5-turbo", "message": "SELECT fname, lname FROM employee WHERE DATE_PART('year', hire_date) < '1990';", "sql_id": 11}
{"model": "gpt-3.5-turbo", "message": "SELECT TO_CHAR(\"hire_date\", 'YYYY') FROM employee GROUP BY TO_CHAR(\"hire_date\", 'YYYY') ORDER BY COUNT(\"emp_id\") DESC LIMIT 1;", "sql_id": 12}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.pub_name \nFROM titles AS T1 \nINNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id \nWHERE DATE_PART('year', T1.pubdate) = 1991 \nGROUP BY T1.pub_id, T2.pub_name \nORDER BY COUNT(T1.title_id) DESC \nLIMIT 1;", "sql_id": 13}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.notes FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE TO_CHAR(T2.ord_date, 'YYYY-MM-DD') = '1994-09-14';", "sql_id": 14}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.type FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE TO_CHAR(T2.ord_date, 'YYYY-MM-DD') = '1993-05-29';", "sql_id": 15}
{"model": "gpt-3.5-turbo", "message": "SELECT (SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) - SUM(CASE WHEN T2.city = 'Portland' THEN qty END)::REAL) * 100 / SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE DATE_PART('year', T1.ord_date) = 1993;", "sql_id": 16}
{"model": "gpt-3.5-turbo", "message": "SELECT fname, minit, lname FROM employee WHERE DATE_PART('year', hire_date) BETWEEN '1990' AND '1995' ORDER BY job_lvl DESC;", "sql_id": 17}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.priceEach * T3.quantityOrdered \nFROM customers AS T1 \nINNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber \nINNER JOIN orderdetails AS T3 ON T2.orderNumber = T3.orderNumber \nWHERE T1.customerName = 'Rovelli Gifts' \nAND T2.status = 'Shipped' \nAND DATE_PART('year', T2.shippedDate) = 2003;", "sql_id": 140}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"checkNumber\") FROM payments AS T1 INNER JOIN customers AS T2 ON T1.\"customerNumber\" = T2.\"customerNumber\" WHERE \"customerName\" = 'Euro+ Shopping Channel' AND EXTRACT(YEAR FROM T1.\"paymentDate\") = '2004';", "sql_id": 141}
{"model": "gpt-3.5-turbo", "message": "SELECT (SELECT COUNT(\"customerNumber\") FROM \"customers\" WHERE \"creditLimit\" <= 100000 AND \"customerNumber\" IN (SELECT \"customerNumber\" FROM \"payments\" WHERE EXTRACT(YEAR FROM \"paymentDate\") = '2004')), \"T1\".\"customerName\"\nFROM \"customers\" AS \"T1\"\nINNER JOIN \"payments\" AS \"T2\" ON \"T1\".\"customerNumber\" = \"T2\".\"customerNumber\"\nWHERE \"T1\".\"creditLimit\" <= 100000 AND EXTRACT(YEAR FROM \"T2\".\"paymentDate\") = '2004'\nGROUP BY \"T1\".\"customerNumber\", \"T1\".\"customerName\"\nORDER BY SUM(\"T2\".\"amount\") DESC\nLIMIT 1;", "sql_id": 142}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.\"orderNumber\") FROM \"orderdetails\" AS T1 INNER JOIN \"orders\" AS T2 ON T1.\"orderNumber\" = T2.\"orderNumber\" WHERE T1.\"quantityOrdered\" < 30 AND DATE_PART('year', T2.\"orderDate\") = 2003;", "sql_id": 143}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.quantityOrdered * T2.priceEach) / COUNT(T3.orderNumber) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber WHERE T1.productVendor = 'Exoto Designs' AND DATE_PART('year', T3.orderDate) = 2005;", "sql_id": 144}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(amount) FROM payments WHERE DATE_PART('year', paymentDate) = 2003 AND customerNumber IN (SELECT customerNumber FROM customers WHERE creditLimit = 0);", "sql_id": 145}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"customernumber\") FROM ( SELECT \"customernumber\" FROM \"payments\" WHERE DATE_PART('year', \"paymentDate\") >= '2003' AND DATE_PART('year', \"paymentDate\") <= '2004' GROUP BY \"customernumber\" HAVING COUNT(\"customernumber\") > 3 ) T;", "sql_id": 146}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.addressLine1, T3.addressLine2, T3.phone \nFROM orderdetails AS T1 \nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber \nINNER JOIN customers AS T3 ON T2.customerNumber = T3.customerNumber \nINNER JOIN employees AS T4 ON T3.salesRepEmployeeNumber = T4.employeeNumber \nINNER JOIN offices AS T5 ON T4.officeCode = T5.officeCode \nWHERE DATE_PART('year', T2.orderDate) = 2005 \nAND T4.jobTitle = 'Sales Rep' \nORDER BY T1.quantityOrdered DESC \nLIMIT 1;", "sql_id": 147}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.orderDate \nFROM orderdetails AS T1 \nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber \nWHERE DATE_TRUNC('day', T2.orderDate) = '2005-04-08' OR DATE_TRUNC('day', T2.orderDate) = '2005-04-10' \nORDER BY T1.quantityOrdered * T1.priceEach DESC \nLIMIT 1;", "sql_id": 148}
{"model": "gpt-3.5-turbo", "message": "SELECT t2.customerName \nFROM payments AS t1 \nINNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber \nWHERE DATE_PART('year', t1.paymentDate) = 2005 \nGROUP BY t2.customerNumber, t2.customerName \nORDER BY SUM(t1.amount) DESC \nLIMIT 1;", "sql_id": 150}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN t1.customerName = 'Atelier graphique' THEN t2.amount ELSE 0 END) * 100 / SUM(t2.amount) FROM customers AS t1 INNER JOIN payments AS t2 ON t1.customerNumber = t2.customerNumber WHERE DATE_PART('year', t2.paymentDate) = 2004;", "sql_id": 151}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE t3.productLine = 'motorcycles' AND DATE_PART('year', t1.orderDate) = 2004;", "sql_id": 152}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('year', t1.paymentDate), COUNT(t1.customerNumber) FROM payments AS t1 WHERE t1.amount < 10000 GROUP BY DATE_PART('year', t1.paymentDate);", "sql_id": 153}
{"model": "gpt-3.5-turbo", "message": "SELECT t3.\"productName\", SUM(t2.\"quantityOrdered\") \nFROM \"orders\" AS t1 \nINNER JOIN \"orderdetails\" AS t2 ON t1.\"orderNumber\" = t2.\"orderNumber\" \nINNER JOIN \"products\" AS t3 ON t2.\"productCode\" = t3.\"productCode\" \nWHERE DATE_PART('year', t1.\"orderDate\") = 2003 \nGROUP BY t3.\"productName\" \nORDER BY SUM(t2.\"quantityOrdered\") DESC \nLIMIT 3;", "sql_id": 154}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(T1.fbi_code_no) AS REAL) / 4 FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE SUBSTRING(T2.date FROM 1 FOR 1) = '1' AND SUBSTRING(T2.date FROM 5 FOR 4) = '2018';", "sql_id": 588}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.ward_no, T1.alderman_first_name, T1.alderman_last_name, T1.alderman_name_suffix \nFROM Ward AS T1 \nINNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no \nWHERE SUBSTRING(T2.date FROM 1 FOR 1) = '1' AND SUBSTRING(T2.date FROM 6 FOR 4) = '2018' \nGROUP BY T1.ward_no \nORDER BY COUNT(T1.ward_no) DESC \nLIMIT 1;", "sql_id": 589}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN SUBSTRING(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander = 'Robert A. Rubio' AND SUBSTRING(T2.date, 1, 1) = '1';", "sql_id": 592}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.commander FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander IN ('Robert A. Rubio', 'Glenn White') AND SUBSTRING(T2.date FROM 1 FOR 1) = '1' AND SUBSTRING(T2.date FROM 5 FOR 4) = '2018' GROUP BY T1.commander;", "sql_id": 593}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(SUBSTRING(\"_Name\", POSITION('.' IN \"_Name\") + 1), 1, POSITION('.' IN SUBSTRING(\"_Name\", POSITION('.' IN \"_Name\") + 1)) - 1) AS task FROM \"_Method\" WHERE \"NameTokenized\" = 'online median filter test median window filling';", "sql_id": 48}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(SUBSTRING(\"_Name\", POSITION('.' IN \"_Name\") + 1), 1, POSITION('.' IN SUBSTRING(\"_Name\", POSITION('.' IN \"_Name\") + 1)) - 1) AS task FROM \"_Method\" WHERE \"NameTokenized\" = 'html parser feed';", "sql_id": 49}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT SUBSTRING(SUBSTRING(\"_Name\", POSITION('.' IN \"_Name\") + 1), 1, POSITION('.' IN SUBSTRING(\"_Name\", POSITION('.' IN \"_Name\") + 1)) - 1) AS task FROM \"_Method\" WHERE \"NameTokenized\" = 'string extensions to pascal case';", "sql_id": 52}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.time_high, T2.time_low, T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1._name = 'WARP' AND TO_CHAR(T2.date, 'YYYY-MM') = '2016-08';", "sql_id": 443}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1._name = 'Bitcoin' AND DATE_PART('year', T2.date) = 2016;", "sql_id": 445}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE DATE_PART('year', T2.date) = 2013 AND T1.name = 'Bitcoin';", "sql_id": 446}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM coins WHERE LENGTH(tag_names) - LENGTH(REPLACE(tag_names, ',', '')) = 2;", "sql_id": 448}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE TO_CHAR(T2.date, 'YYYY-MM') = '2013-05' AND T2.open IS NULL;", "sql_id": 449}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.coin_id) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1._name = 'Bytecoin' AND TO_CHAR(T2.date, 'YYYY-MM') = '2013-06';", "sql_id": 450}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1._style = 'American Adjunct Lager' THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(T1.brewery_id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T2._name = 'Stevens Point Brewery';", "sql_id": 609}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.state = 'WI' THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(T1.id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T1._style = 'American Blonde Ale';", "sql_id": 610}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"movie_title\") FROM \"characters\" AS T1 INNER JOIN \"director\" AS T2 ON T1.\"movie_title\" = T2.\"_name\" WHERE SUBSTRING(\"release_date\", POSITION('-' IN \"release_date\") + 1, 3) = 'Dec' AND T2.\"director\" = 'Wolfgang Reitherman';", "sql_id": 309}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nWHERE CAST(SUBSTRING(T1.release_date, POSITION(',' IN T1.release_date) + 2) AS integer) BETWEEN 1970 AND 1979 \nORDER BY CAST(REPLACE(SUBSTRING(T1.total_gross, 2), ',', '') AS float) DESC \nLIMIT 1;", "sql_id": 311}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2._name \nWHERE T2.director = 'Wolfgang Reitherman' \nORDER BY CAST(REPLACE(SUBSTRING(inflation_adjusted_gross, 2), ',', '') AS REAL) DESC \nLIMIT 1;", "sql_id": 312}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nWHERE T2.hero = 'Donald Duck' \nORDER BY CAST(REPLACE(SUBSTRING(total_gross, 2), ',', '') AS REAL) DESC \nLIMIT 1;", "sql_id": 313}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM movies_total_gross WHERE MPAA_rating = 'R' AND genre = 'Horror' AND CAST(SUBSTRING(release_date, POSITION(',' IN release_date) + 2) AS integer) BETWEEN 1990 AND 2015;", "sql_id": 314}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T2._name = T1.movie_title \nWHERE T2.director = 'Ron Clements' \nORDER BY CAST(REPLACE(SUBSTRING(total_gross, 2), ',', '') AS INTEGER) DESC \nLIMIT 1;", "sql_id": 315}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2._name AND CAST(SUBSTRING(release_date, POSITION(', ' IN release_date) + 2) AS INTEGER) BETWEEN 1990 AND 2000 GROUP BY T2.director;", "sql_id": 316}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T2.movie_title = T1.movie_title \nWHERE T2.song IS NULL \nORDER BY CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) DESC \nLIMIT 1;", "sql_id": 317}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title, genre FROM movies_total_gross WHERE SUBSTRING(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) = '2016';", "sql_id": 321}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title, T2.hero, T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nINNER JOIN director AS T3 ON T1.movie_title = T3._name \nWHERE T3.director = 'Wolfgang Reitherman' \nAND SUBSTRING(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) = '1977';", "sql_id": 323}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2._name ORDER BY CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1;", "sql_id": 325}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name, T2.director \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2._name \nWHERE SUBSTRING(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) BETWEEN '2001' AND '2005' \nAND CAST(REPLACE(TRIM(T1.total_gross, '$'), ',', '')::REAL / \n    (SELECT SUM(CAST(REPLACE(TRIM(T3.total_gross, '$'), ',', '')::REAL) / COUNT(T3.movie_title) AS avg_gross \n     FROM movies_total_gross AS T3 \n     INNER JOIN director AS T4 ON T3.movie_title = T4._name \n     WHERE SUBSTRING(T3.release_date, LENGTH(T3.release_date) - 3, LENGTH(T3.release_date)) BETWEEN '2001' AND '2005') - 1 > 1;", "sql_id": 328}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"movie_title\") FROM \"characters\" WHERE SUBSTRING(\"release_date\", LENGTH(\"release_date\") - 1, LENGTH(\"release_date\"))::INTEGER BETWEEN '37' AND '50';", "sql_id": 329}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2._name WHERE T2.director = 'Jack Kinney' AND SUBSTRING(T1.release_date, LENGTH(T1.release_date) - 1, LENGTH(T1.release_date)) < '47';", "sql_id": 330}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2._name \nFROM characters AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2._name \nINNER JOIN movies_total_gross AS T3 ON T1.movie_title = T3.movie_title \nWHERE CAST(REPLACE(trim(T3.total_gross, '$'), ',', '') AS REAL) > 100000000;", "sql_id": 331}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nORDER BY CAST(REPLACE(TRIM(T1.total_gross, '$'), ',', '') AS REAL) DESC \nLIMIT 1;", "sql_id": 332}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2._name INNER JOIN movies_total_gross AS T3 ON T3.movie_title = T1.movie_title WHERE SUBSTRING(T3.release_date, LENGTH(T3.release_date) - 3, LENGTH(T3.release_date))::INTEGER BETWEEN 1937 AND 1990 ORDER BY CAST(REPLACE(TRIM(T3.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1;", "sql_id": 333}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title FROM characters ORDER BY SUBSTRING(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) ASC LIMIT 1;", "sql_id": 335}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"movie_title\") FROM characters WHERE SUBSTRING(\"release_date\", LENGTH(\"release_date\") - 1, LENGTH(\"release_date\"))::INTEGER BETWEEN '10' AND '16';", "sql_id": 336}
{"model": "gpt-3.5-turbo", "message": "SELECT villian FROM characters ORDER BY SUBSTRING(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) DESC LIMIT 1;", "sql_id": 337}
{"model": "gpt-3.5-turbo", "message": "SELECT \"movie_title\" FROM \"movies_total_gross\" WHERE \"genre\" = 'Action' ORDER BY CAST(REPLACE(trim(\"total_gross\", '$'), ',', '') AS REAL) DESC LIMIT 1;", "sql_id": 338}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2._name ORDER BY CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) ASC LIMIT 1;", "sql_id": 340}
{"model": "gpt-3.5-turbo", "message": "SELECT \"teacher_ny_teaching_fellow\" FROM \"projects\" WHERE \"teacher_acctid\" = '42d43fa6f37314365d08692e08680973';", "sql_id": 247}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"date\") FROM inspections WHERE TO_CHAR(\"date\", 'YYYY') = '2016' AND \"_type\" = 'Routine - Unscheduled';", "sql_id": 594}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.\"business_id\") FROM \"inspections\" AS T1 INNER JOIN \"businesses\" AS T2 ON T1.\"business_id\" = T2.\"business_id\" WHERE TO_CHAR(T1.\"date\", 'YYYY') = '2016' AND T2.\"city\" IN ('San Francisco', 'SAN FRANCISCO', 'SF', 'S.F.');", "sql_id": 595}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2._name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE TO_CHAR(T1.date, 'YYYY') = '2014' AND T1.risk_category = 'Low Risk';", "sql_id": 596}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"business_id\") FROM \"businesses\" WHERE TO_CHAR(\"application_date\", 'YYYY') = '2012';", "sql_id": 597}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"business_id\") FROM \"inspections\" WHERE TO_CHAR(\"date\", 'YYYY') = '2014' AND \"_type\" = 'Foodborne Illness Investigation';", "sql_id": 598}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.\"_name\" FROM \"inspections\" AS T1 INNER JOIN \"businesses\" AS T2 ON T1.\"business_id\" = T2.\"business_id\" WHERE TO_CHAR(T1.\"date\", 'YYYY') = '2013' AND T1.\"score\" = 100;", "sql_id": 599}
{"model": "gpt-3.5-turbo", "message": "SELECT \"T2\".\"city\" FROM \"violations\" AS \"T1\" INNER JOIN \"businesses\" AS \"T2\" ON \"T1\".\"business_id\" = \"T2\".\"business_id\" WHERE TO_CHAR(\"T1\".\"date\", 'YYYY') = '2016' AND \"T1\".\"risk_category\" = 'High Risk' GROUP BY \"T2\".\"city\" ORDER BY COUNT(\"T2\".\"city\") DESC LIMIT 1;", "sql_id": 600}
{"model": "gpt-3.5-turbo", "message": "SELECT T2._name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE TO_CHAR(T1.date, 'YYYY') = '2013' AND T1.description = 'Contaminated or adulterated food';", "sql_id": 601}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id INNER JOIN inspections AS T3 ON T2.business_id = T3.business_id WHERE TO_CHAR(T1.date, 'YYYY') = '2015' AND T2.postal_code = '94102' AND T3.score > 90;", "sql_id": 602}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT \"business_id\") FROM \"inspections\" WHERE TO_CHAR(\"date\", 'YYYY') = '2013' AND \"score\" = (SELECT MAX(\"score\") FROM \"inspections\" WHERE TO_CHAR(\"date\", 'YYYY') = '2013');", "sql_id": 606}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(risk_category) FROM violations WHERE DATE_PART('year', date) = 2014 AND risk_category = 'Low Risk';", "sql_id": 607}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.\"business_id\") FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.\"business_id\" = T2.\"business_id\" WHERE TO_CHAR(T1.\"date\", 'YYYY') = '2016' AND T2.\"_type\" = 'Routine - Unscheduled';", "sql_id": 608}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T1.score) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE DATE_PART('year', T1.date) BETWEEN 2014 AND 2016 AND T2.owner_name = 'Yiu Tim Chan' AND T2.address = '808 Pacific Ave' AND T2.city = 'San Francisco';", "sql_id": 604}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first_name, T1.last_name \nFROM employee AS T1 \nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id \nWHERE DATE_TRUNC('month', T2.inspection_date) = DATE '2010-05' \nAND T1.title = 'Sanitarian';", "sql_id": 418}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.inspection_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE EXTRACT(YEAR FROM T2.inspection_date) = 2010 AND T1.first_name = 'Joshua' AND T1.last_name = 'Rosa';", "sql_id": 419}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE EXTRACT(YEAR FROM T1.inspection_date) = '2010' AND T2.facility_type = 'Restaurant';", "sql_id": 420}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE EXTRACT(YEAR FROM T1.inspection_date) = '2010' AND T2.ward = 42;", "sql_id": 421}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.dba_name FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T1.results = 'Fail' AND EXTRACT(YEAR FROM T1.inspection_date) = '2010';", "sql_id": 422}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE EXTRACT(YEAR FROM T1.inspection_date) = '2010' AND T2.risk_level = 3;", "sql_id": 423}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T2.address = '5000 N Wolcott Ave' AND T2.title = 'Sanitarian' AND to_char(T1.inspection_date, 'YYYY-MM') = '2011-05';", "sql_id": 424}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.first_name, T3.last_name \nFROM ( \n    SELECT T1.employee_id, COUNT(T1.inspection_id) \n    FROM inspection AS T1 \n    WHERE DATE_TRUNC('month', T1.inspection_date) = DATE_TRUNC('month', TIMESTAMP '2016-03-01') \n    GROUP BY T1.employee_id \n    ORDER BY COUNT(T1.inspection_id) DESC \n    LIMIT 1 \n) AS T2 \nINNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id;", "sql_id": 425}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.dba_name FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE TO_CHAR(T1.inspection_date, 'YYYY-MM') = '2012-05' AND T1.results = 'Pass w/ Conditions';", "sql_id": 426}
{"model": "gpt-3.5-turbo", "message": "SELECT T.dba_name \nFROM (\n    SELECT T1.dba_name, SUM(T3.fine) \n    FROM establishment AS T1 \n    INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \n    INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id \n    WHERE EXTRACT(YEAR FROM T2.inspection_date) = '2014' \n    GROUP BY T1.dba_name \n    ORDER BY SUM(T3.fine) DESC \n    LIMIT 1\n) AS T;", "sql_id": 427}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T3.fine) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE TO_CHAR(T2.inspection_date, 'YYYY-MM') = '2014-02' AND T1.dba_name = 'RON OF JAPAN INC';", "sql_id": 428}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(inspection_id) FROM inspection WHERE to_char(inspection_date, 'YYYY-MM') = '2011-01';", "sql_id": 430}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(inspection_id) FROM inspection WHERE EXTRACT(YEAR FROM inspection_date) = 2014 AND results = 'Fail';", "sql_id": 431}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN T1.first_name = 'Jessica' AND T1.last_name = 'Anthony' THEN T2.inspection_id ELSE 0 END) AS REAL) / 8 FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE EXTRACT(YEAR FROM T2.inspection_date) BETWEEN '2010' AND '2017';", "sql_id": 433}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE EXTRACT(YEAR FROM T2.inspection_date) = 2010 AND T1.risk_level = 3;", "sql_id": 434}
{"model": "gpt-3.5-turbo", "message": "SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'JOHN SCHALLER' AND EXTRACT(YEAR FROM T2.inspection_date) = '2010';", "sql_id": 435}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE EXTRACT(YEAR FROM T2.inspection_date) = '2010' AND T2.results = 'Pass' AND T1.facility_type = 'Liquor';", "sql_id": 436}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE EXTRACT(YEAR FROM T2.inspection_date) = 2010 AND T2.results = 'Fail' AND T1.facility_type = 'Restaurant';", "sql_id": 437}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE DATE_PART('year', T2.inspection_date) = 2010 AND DATE_PART('month', T2.inspection_date) = 4 AND T1.facility_type = 'Restaurant' AND T2.results = 'Fail';", "sql_id": 439}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE TO_CHAR(T2.inspection_date, 'YYYY-MM') = '2010-01' AND T2.results = 'Fail' AND T1.facility_type = 'TAVERN';", "sql_id": 440}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.employee_id \nFROM employee AS T1 \nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id \nWHERE T2.results = 'Fail' \nAND DATE_TRUNC('month', T2.inspection_date) = '2010-02' \nAND T1.salary > 0.7 * (SELECT AVG(salary) FROM employee);", "sql_id": 441}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.\"Chromosome\" > 10 AND T3.\"Chromosome\" > 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"GeneID\") FROM \"Genes\" AS T1 INNER JOIN \"Interactions\" AS T2 ON T1.\"GeneID\" = T2.\"GeneID1\" INNER JOIN \"Genes\" AS T3 ON T3.\"GeneID\" = T2.\"GeneID2\" WHERE T2.\"Expression_Corr\" > 0;", "sql_id": 212}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.\"Expression_Corr\" > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.\"GeneID1\") FROM \"Genes\" AS T1 INNER JOIN \"Interactions\" AS T2 ON T1.\"GeneID\" = T2.\"GeneID1\" WHERE T1.\"Phenotype\" = 'Nucleic acid metabolism defects' AND T1.\"Motif\" = 'PS00107';", "sql_id": 213}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T1.note = 'posthumous' THEN 'YES' ELSE 'NO' END FROM \"AwardsMisc\" AS T1 RIGHT JOIN \"Master\" AS T2 ON T1.ID = T2.playerID WHERE T2.legendsID = 'P194502';", "sql_id": 556}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"firstName\", T2.\"lastName\", CASE WHEN T1.\"tmID\" = 'BOS' THEN 'YES' ELSE 'NO' END FROM \"Goalies\" AS T1 INNER JOIN \"Master\" AS T2 ON T1.\"playerID\" = T2.\"playerID\" WHERE T1.\"_year\" = 1972 AND T1.\"tmID\" = 'BOS' AND T2.\"coachID\" IS NOT NULL AND T2.\"hofID\" IS NULL;", "sql_id": 557}
{"model": "gpt-3.5-turbo", "message": "SELECT ssn FROM employee WHERE gender = 'M' AND CAST(REPLACE(SUBSTRING(salary, 4), ',', '') AS REAL) > 70000;", "sql_id": 611}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS REAL) - CAST(REPLACE(SUBSTRING(T2.minsalary, 4), ',', '') AS REAL) AS diff FROM employee AS T1 INNER JOIN _position AS T2 ON T1.positionID = T2.positionID WHERE T1.lastname = 'Johnson' AND T1.firstname = 'James';", "sql_id": 612}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM employee AS T1  \nINNER JOIN position AS T2  \nON T1.positionID = T2.positionID  \nWHERE CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS REAL) > 20000  \nAND T2.positiontitle = 'Trainee';", "sql_id": 613}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS REAL)) AS avg FROM employee AS T1 INNER JOIN _position AS T2 ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee';", "sql_id": 614}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM employee WHERE performance = 'Poor' AND CAST(REPLACE(SUBSTRING(salary, 4), ',', '') AS REAL) > 50000;", "sql_id": 617}
{"model": "gpt-3.5-turbo", "message": "SELECT firstname, lastname FROM employee WHERE CAST(REPLACE(SUBSTRING(salary, 4), ',', '') AS REAL) = (SELECT MAX(CAST(REPLACE(SUBSTRING(salary, 4), ',', '') AS REAL)) FROM employee);", "sql_id": 618}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM \"_position\" WHERE CAST(REPLACE(SUBSTRING(\"maxsalary\", 4), ',', '') AS REAL) < 100000;", "sql_id": 619}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS REAL)) FROM employee AS T1 INNER JOIN _position AS T2 ON T1.positionID = T2.positionID WHERE T2.educationrequired = '2 year degree';", "sql_id": 620}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS REAL)) FROM employee AS T1 INNER JOIN _position AS T2 ON T1.positionID = T2.positionID WHERE T1.performance = 'Poor' AND T2.positiontitle = 'Manager';", "sql_id": 621}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT CAST(COUNT(CASE WHEN T1.nation = 'Sweden' THEN T1.ELITEID ELSE NULL END) OVER (PARTITION BY T2.SEASON) AS REAL) * 100 / COUNT(T1.ELITEID) OVER (PARTITION BY T2.SEASON) \nFROM PlayerInfo AS T1 \nINNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID \nWHERE T2.SEASON IN ('1997-1998', '1998-1999', '1999-2000');", "sql_id": 507}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.\"IMG_ID\" = 1 THEN 1 ELSE 0 END), SUM(CASE WHEN T1.\"X\" = 341 AND T1.\"Y\" = 27 AND T1.\"W\" = 42 AND T1.\"H\" = 51 THEN 1 ELSE 0 END) FROM \"IMG_OBJ\" AS T1 INNER JOIN \"OBJ_CLASSES\" AS T2 ON T1.\"OBJ_CLASS_ID\" = T2.\"OBJ_CLASS_ID\";", "sql_id": 553}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(occurrences) FROM words WHERE LENGTH(word) = 3;", "sql_id": 393}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE EXTRACT(YEAR FROM T1.air_date) = 1998 AND T2.organization = 'International Monitor Awards' AND T2.result = 'Winner';", "sql_id": 96}
{"model": "gpt-3.5-turbo", "message": "SELECT t3.name \nFROM ( \n    SELECT DISTINCT T2._year AS years, T1._name AS name, row_number() OVER (PARTITION BY T1._name ORDER BY T2._year) AS rm \n    FROM \"Person\" AS T1 \n    INNER JOIN \"Award\" AS T2 ON T1.person_id = T2.person_id \n    WHERE T2.award = 'Television' \n    AND T2.award_category = 'Silver Gavel Award' \n    AND T2.series = 'Law and Order' \n    AND T2.result = 'Winner' \n    AND T2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts' \n) AS T3 \nGROUP BY t3.name \nHAVING COUNT(t3.years - t3.rm) >= 2;", "sql_id": 98}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM \"_current\" AS T1 INNER JOIN \"current_terms\" AS T2 ON T1.bioguide_id = T2.bioguide WHERE TO_CHAR(T2.start, 'YYYY') = '2015' AND T2.state = 'CA' AND T1.gender_bio = 'F';", "sql_id": 350}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN EXTRACT(YEAR FROM T2.start::date) BETWEEN 2000 AND 2017 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bioguide_id) FROM _current AS T1 INNER JOIN current_terms AS T2 ON T1.bioguide_id = T2.bioguide;", "sql_id": 351}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM \"_current\" WHERE EXTRACT(YEAR FROM \"birthday_bio\") > 1960 AND \"google_entity_id_id\" IS NULL;", "sql_id": 356}
{"model": "gpt-3.5-turbo", "message": "SELECT T2._name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE SUBSTRING(T1.created_at, 7, 1) = '4';", "sql_id": 372}
{"model": "gpt-3.5-turbo", "message": "SELECT T1._name \nFROM \"Dish\" AS T1 \nINNER JOIN \"MenuItem\" AS T2 ON T1.id = T2.dish_id \nWHERE SUBSTRING(T2.created_at, 1, 4) = '2011' \nAND SUBSTRING(T2.created_at, 7, 1) = '4' \nAND T1.highest_price IS NULL;", "sql_id": 373}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM \"Menu\" WHERE \"call_number\" IS NULL AND EXTRACT(YEAR FROM \"date\") < '1950';", "sql_id": 374}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN \"Government\" = 'republic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(\"Country\") FROM \"politics\" WHERE DATE_PART('year', \"Independence\") > 1970;", "sql_id": 575}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"Country\", COUNT(T1.\"Country\") \nFROM \"economy\" AS T1 \nINNER JOIN \"organization\" AS T2 ON T1.\"Country\" = T2.\"Country\" \nWHERE T1.\"GDP\" < 500000 AND DATE_PART('year', T2.\"Established\") < 1999 \nGROUP BY T1.\"Country\";", "sql_id": 576}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.city \nFROM politics AS T1 \nINNER JOIN population AS T2 ON T1.Country = T2.Country \nWHERE DATE_PART('year', T1.Independence) = 1960 \nORDER BY T2.Infant_Mortality DESC \nLIMIT 1;", "sql_id": 577}
{"model": "gpt-3.5-turbo", "message": "SELECT country.\"Population\" / country.\"Area\" FROM country INNER JOIN organization ON country.\"Code\" = organization.\"Country\" WHERE TO_CHAR(organization.\"Established\", 'YYYY') = '1947';", "sql_id": 579}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN \"government\" = 'parliamentary democracy' THEN 1 ELSE 0 END) , CAST(SUM(CASE WHEN \"government\" = 'parliamentary democracy' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM \"politics\" AS t1 WHERE DATE_PART('year', \"independence\") >= 1993;", "sql_id": 583}
{"model": "gpt-3.5-turbo", "message": "SELECT \"Name\" FROM \"organization\" WHERE DATE_PART('year', \"Established\") BETWEEN '1970' AND '1980';", "sql_id": 584}
{"model": "gpt-3.5-turbo", "message": "SELECT TO_CHAR(\"Established\", 'YYYY') \nFROM \"continent\" AS T1 \nINNER JOIN \"encompasses\" AS T2 ON T1.\"_Name\" = T2.\"Continent\" \nINNER JOIN \"country\" AS T3 ON T2.\"Country\" = T3.\"Code\" \nINNER JOIN \"organization\" AS T4 ON T4.\"Country\" = T3.\"Code\" \nWHERE T1.\"_Name\" = 'Europe' \nGROUP BY TO_CHAR(\"Established\", 'YYYY') \nORDER BY COUNT(T4.\"_Name\") DESC \nLIMIT 1;", "sql_id": 585}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM politics WHERE DATE_PART('year', Independence) BETWEEN '1950' AND '1999' AND Government = 'parliamentary democracy';", "sql_id": 586}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN DATE_PART('year', \"Independence\") = 1960 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(\"Country\") FROM \"politics\";", "sql_id": 587}
{"model": "gpt-3.5-turbo", "message": "SELECT ((MAX(CAST(SUBSTRING(T2.screentime, 3, 2) AS DOUBLE PRECISION)) - MIN(CAST(SUBSTRING(T2.screentime, 3, 2) AS DOUBLE PRECISION))) * 100 / MIN(CAST(SUBSTRING(T2.screentime, 3, 2) AS DOUBLE PRECISION)) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.\"MovieID\" = T2.\"MovieID\" WHERE T1.\"Title\" = 'Batman';", "sql_id": 53}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.u_gender = 'F' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.u_gender = 'M' THEN 1 ELSE 0 END) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid INNER JOIN movies2directors AS T3 ON T3.movieid = T1.movieid WHERE T3.genre = 'horror';", "sql_id": 182}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.a_quality >= 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK';", "sql_id": 183}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.avg_revenue > T2.d_quality THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN directors AS T2 ON T1.directorid = T2.directorid WHERE T1.genre = 'Action';", "sql_id": 184}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.rating = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'USA';", "sql_id": 185}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.a_gender = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T3.a_gender = 'F' THEN 1 ELSE 0 END) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK';", "sql_id": 186}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.cast_num = 2 AND T1.a_quality = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.actorid) FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid WHERE T2.movieid = 1672580 AND T1.a_gender = 'F';", "sql_id": 187}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN a_gender = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN a_gender = 'F' THEN 1 ELSE 0 END) FROM actors WHERE a_quality = 0;", "sql_id": 188}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.a_gender = 'F' THEN 1 ELSE 0 END) , T3.country, T3.runningtime FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid INNER JOIN movies AS T3 ON T2.movieid = T3.movieid WHERE T2.movieid = 2312852 GROUP BY T3.country, T3.runningtime;", "sql_id": 189}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.\"isEnglish\" = 'T' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.\"isEnglish\" = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"movieid\") FROM \"movies\" AS T1 INNER JOIN \"movies2directors\" AS T2 ON T1.\"movieid\" = T2.\"movieid\" WHERE T1.\"country\" = 'other' AND T1.\"_year\" = 3;", "sql_id": 190}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN a_gender = 'M' THEN 1 ELSE 0 END) , SUM(CASE WHEN a_gender = 'F' THEN 1 ELSE 0 END) , CAST(SUM(CASE WHEN a_quality = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) , CAST(SUM(CASE WHEN a_quality = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*), ( SELECT directorid FROM movies2directors WHERE movieid = 1684910 ) , ( SELECT genre FROM movies2directors WHERE movieid = 1684910 ) FROM actors WHERE actorid IN ( SELECT actorid FROM movies2actors WHERE movieid = 1684910 );", "sql_id": 191}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Quentin Tarantino' AND CAST(EXTRACT(YEAR FROM T1.release_date) AS INTEGER) = 1995;", "sql_id": 40}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CASE WHEN T3.country_name = 'United States of America' THEN T1.revenue END) - AVG(CASE WHEN T3.country_name = 'India' THEN T1.revenue END) AS CALCULATE \nFROM movie AS T1 \nINNER JOIN production_country AS T2 ON T1.movie_id = T2.movie_id \nINNER JOIN country AS T3 ON T2.country_id = T3.country_id \nWHERE EXTRACT(YEAR FROM T1.release_date) = 2016;", "sql_id": 42}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM movie WHERE CAST(EXTRACT(YEAR FROM release_date) AS INTEGER) < 2000 LIMIT 5;", "sql_id": 43}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.company_id FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id WHERE CAST(EXTRACT(YEAR FROM T1.release_date) AS INTEGER) = 1916;", "sql_id": 44}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM movie WHERE CAST(EXTRACT(YEAR FROM release_date) AS INTEGER) = 1945;", "sql_id": 45}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Adventure' AND CAST(EXTRACT(YEAR FROM T1.release_date) AS INTEGER) = 2000;", "sql_id": 46}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.title \nFROM production_company AS T1 \nINNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id \nINNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id \nWHERE T1.company_name = 'Paramount Pictures' \nAND CAST(EXTRACT(YEAR FROM T3.release_date) AS INTEGER) = 2000;", "sql_id": 47}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ' AND EXTRACT(MONTH FROM T2.return_date) = 8 AND EXTRACT(YEAR FROM T2.return_date) = 2005;", "sql_id": 647}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.name = 'Music' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id INNER JOIN inventory AS T4 ON T1.film_id = T4.film_id INNER JOIN customer AS T5 ON T4.store_id = T5.store_id INNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id WHERE T5.first_name = 'RUTH' AND T5.last_name = 'MARTINEZ';", "sql_id": 648}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((SUM(CASE WHEN T2.store_id = 2 THEN T1.amount ELSE 0 END) - SUM(CASE WHEN T2.store_id = 1 THEN T1.amount ELSE 0 END) AS DOUBLE PRECISION) * 100 / SUM(CASE WHEN T2.store_id = 1 THEN T1.amount ELSE 0 END) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN store AS T3 ON T2.store_id = T3.store_id;", "sql_id": 649}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.country = 'India' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.country = 'Italy' THEN 1 ELSE 0 END) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id;", "sql_id": 650}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.first_name = 'GINA' AND T2.last_name = 'DEGENERES' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.first_name = 'PENELOPE' AND T2.last_name = 'GUINESS' THEN 1 ELSE 0 END) FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id;", "sql_id": 651}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"customer_id\") FROM payment WHERE EXTRACT(YEAR FROM payment_date) || '-' || LPAD(EXTRACT(MONTH FROM payment_date)::TEXT, 2, '0') LIKE '2005-08';", "sql_id": 652}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT rental_id) FROM rental WHERE date(rental_date) BETWEEN '2005-05-26' AND '2005-05-30';", "sql_id": 654}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN active = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(customer_id) FROM customer;", "sql_id": 655}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(amount) FROM payment WHERE SUBSTRING(payment_date, 1, 7) = '2005-08';", "sql_id": 656}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM film AS T1 \nINNER JOIN inventory AS T2 ON T1.film_id = T2.film_id \nINNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id \nWHERE DATE_PART('year', T3.rental_date) = 2005 AND DATE_PART('month', T3.rental_date) = 5 AND DATE_PART('day', T3.rental_date) = 24;", "sql_id": 657}
{"model": "gpt-3.5-turbo", "message": "SELECT T4.title \nFROM customer AS T1 \nINNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id \nINNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id \nINNER JOIN film AS T4 ON T3.film_id = T4.film_id \nWHERE T1.first_name = 'BRIAN' \nAND T1.last_name = 'WYMAN' \nAND DATE_PART('year', T2.rental_date) = 2005 \nAND DATE_PART('month', T2.rental_date) = 7;", "sql_id": 658}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.title, T2._name \nFROM film_category AS T1 \nINNER JOIN category AS T2 ON T1.category_id = T2.category_id \nINNER JOIN film AS T3 ON T1.film_id = T3.film_id \nINNER JOIN inventory AS T4 ON T3.film_id = T4.film_id \nINNER JOIN customer AS T5 ON T4.store_id = T5.store_id \nINNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id \nWHERE T5.first_name = 'Natalie' \nAND T5.last_name = 'Meyer' \nAND EXTRACT(YEAR FROM T3.rental_rate) = 2006 \nAND EXTRACT(MONTH FROM T3.rental_rate) = 2;", "sql_id": 659}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.country = 'India' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T4.customer_id) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id INNER JOIN address AS T3 ON T2.city_id = T3.city_id INNER JOIN customer AS T4 ON T3.address_id = T4.address_id;", "sql_id": 660}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.rating = 'G' THEN 1 ELSE 0 END) AS REAL) / COUNT(T3.film_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Elvis' AND T1.last_name = 'Marx';", "sql_id": 662}
{"model": "gpt-3.5-turbo", "message": "SELECT first_name, last_name, email FROM customer WHERE DATE_PART('year', create_date) = 2006 AND active = 0;", "sql_id": 663}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN rating = 'PG-13' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(film_id) FROM film;", "sql_id": 664}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._name = 'horror' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.category_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id;", "sql_id": 665}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CASE WHEN T4.country = 'Australia' THEN 1 ELSE 0 END) - AVG(CASE WHEN T4.country = 'Canada' THEN 1 ELSE 0 END) AS diff FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id INNER JOIN city AS T3 ON T2.city_id = T3.city_id INNER JOIN country AS T4 ON T3.country_id = T4.country_id;", "sql_id": 666}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T4._name = 'Action' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.actor_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film_category AS T3 ON T2.film_id = T3.film_id INNER JOIN category AS T4 ON T3.category_id = T4.category_id WHERE T1.first_name = 'Reese' AND T1.last_name = 'Kilmer';", "sql_id": 667}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.rental_id) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'ELLA' AND T2.last_name = 'ELLA' AND date(T1.rental_date) BETWEEN '2005-06-01' AND '2005-06-30';", "sql_id": 670}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.amount) FROM rental AS T1 INNER JOIN payment AS T2 ON T1.rental_id = T2.rental_id WHERE DATE(T1.rental_date) = '2005-07-29';", "sql_id": 671}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first_name FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id WHERE SUBSTRING(T2.postal_code, 1, 2) = '76';", "sql_id": 672}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.length < 100 AND T3._name = 'Drama' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id;", "sql_id": 673}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2._name = 'Children' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2._name = 'Action' THEN 1 ELSE 0 END) AS diff FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id;", "sql_id": 674}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._name = 'Documentary' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id;", "sql_id": 675}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._name = 'Horror' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id;", "sql_id": 676}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.first_name = 'MARGARET' AND T2.last_name = 'MOORE' THEN T1.amount ELSE 0 END) AS DOUBLE PRECISION) * 100 / SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id;", "sql_id": 677}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.\"_name\" = 'Horror' THEN 1 ELSE 0 END) * 100 / COUNT(T1.film_id) AS REAL) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T1.length > 120;", "sql_id": 678}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.name = 'Horror' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id INNER JOIN language AS T4 ON T2.language_id = T4.language_id WHERE T4.name = 'English';", "sql_id": 679}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'STEPHANIE' AND T2.last_name = 'MITCHELL' AND SUBSTRING(T1.payment_date::text, 1, 7) = '2005-06';", "sql_id": 680}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.rental_id), CAST(SUM(CASE WHEN EXTRACT(MONTH FROM T2.rental_date) = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.rental_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Maria' AND T1.last_name = 'Miller' AND EXTRACT(YEAR FROM T2.rental_date) = 2005;", "sql_id": 681}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T4.film_id = 1 THEN 1 ELSE 0 END) - SUM(CASE WHEN T4.film_id = 2 THEN 1 ELSE 0 END) AS diff\nFROM film_actor AS T1\nINNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id\nINNER JOIN film AS T3 ON T1.film_id = T3.film_id\nINNER JOIN inventory AS T4 ON T3.film_id = T4.film_id\nWHERE T2.first_name = 'Reese' AND T2.last_name = 'West';", "sql_id": 682}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT CASE WHEN SUM(CASE WHEN T5.name = 'Family' THEN 1 ELSE 0 END) - SUM(CASE WHEN T5.name = 'Sci-Fi' THEN 1 ELSE 0 END) > 0 THEN T1.first_name ELSE 0 END\nFROM customer AS T1\nINNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id\nINNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id\nINNER JOIN film_category AS T4 ON T4.film_id = T3.film_id\nINNER JOIN category AS T5 ON T4.category_id = T5.category_id\nGROUP BY T1.customer_id;", "sql_id": 668}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.movie_title \nFROM ratings AS T1 \nINNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id \nWHERE CAST(SUBSTRING(T1.rating_timestamp_utc, 1, 4) AS INTEGER) = 2020 \nAND CAST(SUBSTRING(T1.rating_timestamp_utc, 6, 2) AS INTEGER) > 4;", "sql_id": 2}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM lists WHERE SUBSTRING(list_update_timestamp_utc, 1, 4)::INTEGER - SUBSTRING(list_creation_timestamp_utc, 1, 4)::INTEGER > 10;", "sql_id": 4}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM reviews ORDER BY LENGTH(content) DESC LIMIT 1;", "sql_id": 562}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'music' ORDER BY LENGTH(T2.title) DESC LIMIT 1;", "sql_id": 563}
{"model": "gpt-3.5-turbo", "message": "SELECT draftYear - EXTRACT(YEAR FROM birthDate) FROM draft AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.firstName = 'Alexis' AND T1.lastName = 'Ajinca' AND draftRound = 1;", "sql_id": 234}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"firstName\", T1.\"middleName\", T1.\"lastName\", 2003 - EXTRACT(YEAR FROM T1.\"birthDate\") FROM \"awards_players\" AS T2 JOIN \"players\" AS T1 ON T2.\"playerID\" = T1.\"playerID\" WHERE T2.\"award\" = 'Finals MVP' AND T2.\"_year\" = 2003;", "sql_id": 235}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.steals IS NOT NULL AND T1.tmID = 'LAL' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.tmID) FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year;", "sql_id": 237}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.review_stars) / (EXTRACT(YEAR FROM CURRENT_DATE) - T1.user_yelping_since_year) FROM Users AS T1 INNER JOIN Reviews AS T2 ON T1.user_id = T2.user_id WHERE T1.user_id = 3;", "sql_id": 252}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT CASE WHEN \"Customer Names\" LIKE '%Group%' THEN \"Customer Names\" ELSE NULL END AS T FROM Customers ) WHERE T IS NOT NULL", "sql_id": 217}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN \"OrderDate\" = '5/31/18' THEN 1 ELSE 0 END) FROM \"Sales_Orders\";", "sql_id": 219}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT CASE WHEN DeliveryDate = '6/13/18' THEN OrderNumber ELSE NULL END AS T FROM \"Sales_Orders\" ) WHERE T IS NOT NULL", "sql_id": 220}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN \"Order Quantity\" > 5 THEN 1 ELSE 0 END) FROM \"Sales_Orders\";", "sql_id": 221}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT CASE WHEN StateCode = 'GA' THEN State ELSE NULL END AS T FROM Regions ) WHERE T IS NOT NULL", "sql_id": 222}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT DISTINCT CASE WHEN T1.\"Unit Cost\" = 781.22 THEN T2.\"Product Name\" ELSE NULL END AS T FROM \"Sales_Orders\" T1 INNER JOIN Products T2 ON T2.\"ProductID\" = T1.\"_ProductID\" ) WHERE T IS NOT NULL;", "sql_id": 223}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT DISTINCT CASE WHEN T2.\"Product Name\" = 'Cookware' THEN T1.\"DeliveryDate\" ELSE NULL END AS T FROM \"Sales_Orders\" T1 INNER JOIN \"Products\" T2 ON T2.\"ProductID\" = T1.\"_ProductID\" ) AS subquery WHERE T IS NOT NULL;", "sql_id": 224}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT DISTINCT CASE WHEN T1.\"Discount_Applied\" = 0.1 THEN T2.\"Product_Name\" ELSE NULL END AS T FROM \"Sales_Orders\" T1 INNER JOIN \"Products\" T2 ON T2.\"ProductID\" = T1.\"_ProductID\" ) WHERE T IS NOT NULL;", "sql_id": 225}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT CASE WHEN OrderNumber = 'SO - 000103' THEN \"Unit Cost\" ELSE NULL END AS T FROM \"Sales_Orders\" ) AS subquery WHERE T IS NOT NULL;", "sql_id": 227}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN \"WarehouseCode\" = 'WARE-MKL1006' THEN 1 ELSE 0 END) - SUM(CASE WHEN \"WarehouseCode\" = 'WARE-NBV1002' THEN 1 ELSE 0 END) AS difference FROM \"Sales_Orders\";", "sql_id": 230}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT \"OrderNumber\", \"Product Name\" FROM ( SELECT CASE WHEN T2.\"OrderDate\" = '6/6/18' THEN T2.\"OrderNumber\" ELSE NULL END AS \"OrderNumber\" , CASE WHEN T2.\"OrderDate\" = '6/6/18' THEN T1.\"Product Name\" ELSE NULL END AS \"Product Name\" FROM \"Products\" T1 INNER JOIN \"Sales_Orders\" T2 ON T2.\"_ProductID\" = T1.\"ProductID\" ) AS subquery WHERE \"OrderNumber\" IS NOT NULL AND \"Product Name\" IS NOT NULL;", "sql_id": 231}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT CASE WHEN \"_CustomerID\" = 11 THEN \"ProcuredDate\" ELSE NULL END AS T FROM \"Sales_Orders\" ) AS subquery WHERE T IS NOT NULL;", "sql_id": 232}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN \"ShipDate\" LIKE '6/%/18' AND \"Sales_Channel\" = 'Online' THEN 1 ELSE 0 END) FROM \"Sales_Orders\";", "sql_id": 233}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.food_type = 'mexican' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.county = 'monterey county';", "sql_id": 155}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.street_name = '11th st' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id_restaurant) FROM _location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'alameda county';", "sql_id": 156}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN food_type = 'american food' THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(id_restaurant) FROM generalinfo WHERE city = 'dublin';", "sql_id": 157}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.review > 4 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 RIGHT JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.region = 'bay area';", "sql_id": 158}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.region = 'bay area' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city;", "sql_id": 159}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN region = 'Napa Valley' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(region) FROM geographic;", "sql_id": 160}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.food_type = 'afghani' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE 1000 <= T1.street_num AND T1.street_num <= 2000;", "sql_id": 161}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'GERMANY' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey;", "sql_id": 471}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.r_name = 'EUROPE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.n_name) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey;", "sql_id": 473}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'JAPAN' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.s_name) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0;", "sql_id": 474}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE DATE_PART('year', l_shipdate) = 1998;", "sql_id": 475}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_linenumber) FROM lineitem WHERE l_returnflag = 'R' AND l_shipmode = 'AIR' AND DATE_PART('year', l_shipdate) = 1994;", "sql_id": 476}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.o_orderkey) FROM lineitem AS T1 INNER JOIN orders AS T2 ON T2.o_orderkey = T1.l_orderkey WHERE DATE(T1.l_shipdate) - DATE(T2.o_orderdate) = 1 AND T2.o_orderpriority = '1-URGENT';", "sql_id": 477}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN c_acctbal < 0 THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(c_custkey) FROM customer;", "sql_id": 478}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN p_mfgr = 'Manufacturer#3' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(p_partkey) FROM part;", "sql_id": 479}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'GERMANY' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0;", "sql_id": 481}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE DATE_PART('year', l_shipdate) = 1994;", "sql_id": 482}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'United States' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal < 4000;", "sql_id": 483}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN ps_supplycost > 500 THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(ps_suppkey) FROM partsupp;", "sql_id": 484}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.c_mktsegment = 'AUTOMOBILE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.c_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'FRANCE';", "sql_id": 485}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.r_name = 'AFRICA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN customer AS T3 ON T1.n_nationkey = T3.c_nationkey WHERE T3.c_mktsegment = 'HOUSEHOLD';", "sql_id": 486}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.s_acctbal < (SELECT AVG(supplier.s_acctbal) FROM supplier) THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE';", "sql_id": 488}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.n_name = 'IRAN' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.n_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD';", "sql_id": 490}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CASE WHEN l_shipmode = 'RAIL' THEN 1 ELSE 0 END) - SUM(CASE WHEN l_shipmode = 'MAIL' THEN 1 ELSE 0 END) <> 0 THEN 'RAIL' ELSE 'MAIL' END AS result FROM lineitem WHERE l_shipinstruct = 'DELIVER IN PERSON';", "sql_id": 491}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(o_orderkey) AS countorders FROM orders WHERE DATE_PART('year', o_orderdate) = 1998 AND o_totalprice < 950;", "sql_id": 492}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN l_returnflag = 'A' THEN 1 ELSE 0 END) - SUM(CASE WHEN l_returnflag = 'N' THEN 1 ELSE 0 END) AS diff FROM lineitem WHERE l_extendedprice < 16947.7;", "sql_id": 493}
{"model": "gpt-3.5-turbo", "message": "SELECT (JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate)), T1.o_clerk FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderkey = 6;", "sql_id": 494}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.r_name = 'ASIA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey INNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey;", "sql_id": 495}
{"model": "gpt-3.5-turbo", "message": "SELECT l_linenumber FROM lineitem WHERE DATE_PART('year', l_shipdate) < 1997 AND l_shipmode = 'truck';", "sql_id": 496}
{"model": "gpt-3.5-turbo", "message": "SELECT l_linenumber FROM lineitem WHERE DATE_PART('year', l_shipdate) < 1997 AND l_shipmode = 'TRUCK';", "sql_id": 497}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.c_name \nFROM orders AS T1 \nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey \nINNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey \nWHERE T2.l_discount = 0.1 \nAND DATE_PART('year', T1.o_orderdate) BETWEEN 1994 AND 1995;", "sql_id": 498}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.r_name = 'America' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.n_name) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey;", "sql_id": 499}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.c_mktsegment = 'HOUSEHOLD' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.c_mktsegment) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'INDONESIA';", "sql_id": 500}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE DATE_PART('year', l_shipdate) = 1997 AND l_shipmode = 'MAIL';", "sql_id": 501}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE DATE_PART('year', l_shipdate) = 1994 AND l_returnflag = 'R' AND l_shipmode = 'TRUCK';", "sql_id": 502}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(o_orderkey) FROM orders WHERE DATE_PART('year', o_orderdate) = 1997 AND o_clerk = 'Clerk#000000001' AND o_orderpriority = '1-URGENT';", "sql_id": 503}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.c_name \nFROM orders AS T1 \nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey \nINNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey \nORDER BY (EXTRACT(EPOCH FROM T2.l_receiptdate) - EXTRACT(EPOCH FROM T2.l_commitdate)) DESC \nLIMIT 1;", "sql_id": 504}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('day', T2.l_receiptdate) - DATE_PART('day', T2.l_commitdate) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_custkey = '129301' AND T1.o_orderdate = '1996-07-27';", "sql_id": 472}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.sex) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE EXTRACT(YEAR FROM T2.\"Date_received\") = 2016 AND T1.sex = 'Male' AND T2.Product = 'Credit card';", "sql_id": 19}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(T2.\"Complaint ID\") AS REAL) / 3 AS average FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE EXTRACT(YEAR FROM T2.\"Date received\") BETWEEN '2015' AND '2017' AND T1.city = 'New York City' AND T2.Product = 'Credit card';", "sql_id": 20}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('year', T3.\"Date received\") , CAST(SUM(CASE WHEN T3.\"Company response to consumer\" = 'Closed with explanation' THEN 1 ELSE 0 END) AS REAL) / COUNT(T3.\"Complaint ID\") AS average FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.\"rand client\" = T2.client_id INNER JOIN events AS T3 ON T1.\"Complaint ID\" = T3.\"Complaint ID\" WHERE T2.city = 'New Bedford' GROUP BY DATE_PART('year', T3.\"Date received\");", "sql_id": 23}
{"model": "gpt-3.5-turbo", "message": "SELECT \"Complaint ID\", call_id, phonefinal FROM callcenterlogs WHERE EXTRACT(YEAR FROM \"Date_received\") = 2014 AND \"_server\" = 'AVIDAN';", "sql_id": 29}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(SUBSTRING(ser_time, 4, 2) AS REAL)) FROM callcenterlogs WHERE \"Date_received\" BETWEEN '2017-01-01' AND '2017-04-01';", "sql_id": 30}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.priority = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"Complaint_ID\") FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.\"Complaint_ID\" = T2.\"Complaint_ID\" WHERE EXTRACT(YEAR FROM T1.\"Date_received\") = '2017';", "sql_id": 33}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'Omaha' AND EXTRACT(YEAR FROM T2.\"Date_received\") = 2012 AND T2.Product = 'Credit card';", "sql_id": 34}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE EXTRACT(YEAR FROM T2.\"Date_received\") BETWEEN '2012' AND '2015' AND T2.\"Submitted_via\" = 'Email' AND T1.sex = 'Male';", "sql_id": 35}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"Submitted via\") FROM events WHERE EXTRACT(YEAR FROM \"Date received\") = 2012 AND \"Submitted via\" = 'Email';", "sql_id": 37}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"Complaint ID\") FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.\"Complaint ID\" = T2.\"Complaint ID\" WHERE EXTRACT(YEAR FROM T1.\"Date received\") = 2015 AND T2.\"Timely response?\" = 'Yes' AND T2.\"Company response to consumer\" = 'Closed with explanation';", "sql_id": 38}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.\"Complaint ID\") FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.\"Complaint ID\" = T2.\"Complaint ID\" WHERE T2.\"Submitted via\" = 'Phone' AND EXTRACT(YEAR FROM T1.\"Date received\") = '2014';", "sql_id": 39}
{"model": "gpt-3.5-turbo", "message": "SELECT 100.0 * (SUM(CASE WHEN EXTRACT(YEAR FROM T2.\"Date_received\") = 2017 THEN 1 ELSE 0 END) - SUM(CASE WHEN EXTRACT(YEAR FROM T2.\"Date_received\") = 2016 THEN 1 ELSE 0 END)) / SUM(CASE WHEN EXTRACT(YEAR FROM T2.\"Date_received\") = 2016 THEN 1 ELSE 0 END) FROM \"client\" AS T1 INNER JOIN \"events\" AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City';", "sql_id": 21}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"CustomerID\") FROM \"Customers\" AS T1 INNER JOIN \"Orders\" AS T2 ON T1.\"CustomerID\" = T2.\"CustomerID\" WHERE DATE_PART('year', T2.\"OrderDate\")::TEXT = '1996' AND T1.\"Country\" = 'UK';", "sql_id": 453}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.\"CustomerID\") FROM \"Customers\" AS T1 INNER JOIN \"Orders\" AS T2 ON T1.\"CustomerID\" = T2.\"CustomerID\" WHERE TO_CHAR(T2.\"OrderDate\", 'YYYY') = '1996' GROUP BY T1.\"Country\";", "sql_id": 455}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"SalesID\" FROM \"Sales\" AS T1 INNER JOIN \"Employees\" AS T2 ON T1.\"SalesPersonID\" = T2.\"EmployeeID\" WHERE SUBSTRING(T2.\"FirstName\", 1, 1) = 's';", "sql_id": 363}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.\"FirstName\" = 'Morningstar' THEN 1 ELSE 0 END) + SUM(CASE WHEN T2.\"FirstName\" = 'Heather' THEN 1 ELSE 0 END) + SUM(CASE WHEN T2.\"FirstName\" = 'Dean' THEN 1 ELSE 0 END) AS num FROM \"Sales\" AS T1 INNER JOIN \"Employees\" AS T2 ON T1.\"SalesPersonID\" = T2.\"EmployeeID\";", "sql_id": 364}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T1.\"ProductID\" = 498 THEN 'YES' ELSE 'NO' END FROM \"Sales\" AS T1 INNER JOIN \"Customers\" AS T2 ON T1.\"CustomerID\" = T2.\"CustomerID\" WHERE T2.\"FirstName\" = 'Alex';", "sql_id": 365}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.\"Quantity\") FROM \"Products\" AS T1 INNER JOIN \"Sales\" AS T2 ON T1.\"ProductID\" = T2.\"ProductID\" WHERE SUBSTRING(T1.\"Name\", 1, 1) = 'C';", "sql_id": 366}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CASE WHEN T1._Name = 'HL Mountain Frame - Silver, 42' THEN T2.\"SalesID\" ELSE 0 END) - SUM(CASE WHEN T1._Name = 'HL Mountain Frame - Black, 42' THEN T2.\"SalesID\" ELSE 0 END) > 0 THEN 'Silver' ELSE 'Black' END FROM \"Products\" AS T1 INNER JOIN \"Sales\" AS T2 ON T1.\"ProductID\" = T2.\"ProductID\";", "sql_id": 367}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.\"FirstName\" = 'Albert' AND T3.\"MiddleInitial\" = 'I' AND T3.\"LastName\" = 'Ringer' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.\"CustomerID\") FROM \"Products\" AS T1 INNER JOIN \"Sales\" AS T2 ON T1.\"ProductID\" = T2.\"ProductID\" INNER JOIN \"Employees\" AS T3 ON T2.\"SalesPersonID\" = T3.\"EmployeeID\" WHERE T1.\"_Name\" = 'ML Bottom Bracket';", "sql_id": 368}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.Price = 0 THEN T2.Quantity ELSE 0 END) AS REAL) * 100 / SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID;", "sql_id": 369}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1._Name = 'Blade' THEN T2.Quantity ELSE 0 END) AS DOUBLE PRECISION) * 100 / SUM(T2.Quantity) FROM \"Products\" AS T1 INNER JOIN \"Sales\" AS T2 ON T1.\"ProductID\" = T2.\"ProductID\";", "sql_id": 370}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Price BETWEEN 200 AND 300 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Price) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.SalesID BETWEEN 1 AND 200;", "sql_id": 371}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T3.depart < 0 THEN units ELSE 0 END) AS sum FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTRING(T1.date, 1, 4) = '2012' AND T1.item_nbr = 5;", "sql_id": 565}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.dewpoint \nFROM sales_in_weather AS T1 \nINNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr \nINNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr \nWHERE T2.store_nbr = 3 \nAND SUBSTRING(T1.date, 1, 4) = '2012' \nAND T1.item_nbr = 5 \nORDER BY T1.units DESC \nLIMIT 1;", "sql_id": 567}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN units > 100 THEN 1 ELSE 0 END) AS count FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTRING(T1.date, 1, 4) = '2012' AND T1.item_nbr = 5 AND tmax > 90;", "sql_id": 568}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT \"date\") AS days FROM weather WHERE sunrise < TIME '05:00:00';", "sql_id": 573}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.\"Act\" = 1 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.\"Act\" = 5 THEN 1 ELSE 0 END) AS more\nFROM \"works\" AS T1\nINNER JOIN \"chapters\" AS T2 ON T1.\"id\" = T2.\"work_id\"\nWHERE T1.\"Title\" = 'Twelfth Night';", "sql_id": 238}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.\"GenreType\" = 'Tragedy' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"Scene\") FROM \"chapters\" AS T1 INNER JOIN \"works\" AS T2 ON T1.\"work_id\" = T2.\"id\" WHERE T2.\"Date\" = '1594';", "sql_id": 239}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T4.\"CharName\" = 'Romeo' THEN 1 ELSE 0 END), \n       SUM(CASE WHEN T4.\"CharName\" = 'Juliet' THEN 1 ELSE 0 END), \n       CAST(SUM(CASE WHEN T4.\"CharName\" = 'Romeo' THEN 1 ELSE 0 END) + SUM(CASE WHEN T4.\"CharName\" = 'Juliet' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"id\") \nFROM \"works\" AS T1 \nINNER JOIN \"chapters\" AS T2 ON T1.\"id\" = T2.\"work_id\" \nINNER JOIN \"paragraphs\" AS T3 ON T2.\"id\" = T3.\"chapter_id\" \nINNER JOIN \"characters\" AS T4 ON T3.\"character_id\" = T4.\"id\";", "sql_id": 240}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.\"Title\" = 'All''s Well That Ends Well' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.\"id\") FROM \"works\" AS T1 INNER JOIN \"chapters\" AS T2 ON T1.\"id\" = T2.\"work_id\" INNER JOIN \"paragraphs\" AS T3 ON T2.\"id\" = T3.\"chapter_id\";", "sql_id": 241}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN \"GenreType\" = 'Comedy' THEN 1 ELSE 0 END) - SUM(CASE WHEN \"GenreType\" = 'History' THEN 1 ELSE 0 END) FROM \"works\" WHERE \"Date\" > 1593;", "sql_id": 242}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.act = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Titus Andronicus';", "sql_id": 243}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"LongTitle\" FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.\"Description\" = 'Mytilene. A street before the brothel.';", "sql_id": 244}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"Description\" FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Venus and Adonis' ORDER BY T2.Scene DESC LIMIT 1;", "sql_id": 245}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T4.\"CharName\" = 'antonio' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"id\") FROM \"works\" AS T1 INNER JOIN \"chapters\" AS T2 ON T1.\"id\" = T2.\"work_id\" INNER JOIN \"paragraphs\" AS T3 ON T2.\"id\" = T3.\"chapter_id\" INNER JOIN \"characters\" AS T4 ON T3.\"character_id\" = T4.\"id\" WHERE T1.\"GenreType\" = 'Comedy';", "sql_id": 246}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.first_name, T2.last_name \nFROM shipment AS T1 \nINNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id \nWHERE DATE_PART('year', T1.ship_date::date) = 2017 \nGROUP BY T2.first_name, T2.last_name \nORDER BY COUNT(*) DESC \nLIMIT 1;", "sql_id": 378}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.weight) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.city_name = 'San Mateo' AND DATE_PART('year', T1.ship_date) = 2016;", "sql_id": 381}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN race = 'W' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(case_number) FROM officers WHERE gender = 'M';", "sql_id": 207}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN DATE_PART('year', date) = 2007 THEN 1 ELSE 0 END) - SUM(CASE WHEN DATE_PART('year', date) = 2008 THEN 1 ELSE 0 END) FROM incidents WHERE subject_weapon = 'Vehicle';", "sql_id": 210}
{"model": "gpt-3.5-turbo", "message": "SELECT case_number FROM incidents WHERE DATE_PART('year', date) > 2011 AND subject_statuses = 'Deceased';", "sql_id": 211}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Outstanding Voice-Over Performance' AND SUBSTRING(CAST(T1.year AS TEXT), 1, 4) = '2009' AND T1.person = 'Dan Castellaneta';", "sql_id": 256}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTRING(T1.air_date, 1, 4) = '2009' AND T2.stars = 10 AND T2.percent > 15;", "sql_id": 257}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(CAST(T1.year AS TEXT), 1, 4) = '2017' AND T1.award = 'Best International TV Series' AND T1.result = 'Winner';", "sql_id": 259}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(T1.air_date, 6, 2) BETWEEN '10' AND '11';", "sql_id": 260}
{"model": "gpt-3.5-turbo", "message": "SELECT T2._year - CAST(SUBSTRING(T1.birthdate, 1, 4) AS INTEGER) AS age FROM Person AS T1 INNER JOIN Award AS T2 ON T1._name = T2.person WHERE T2.award = 'Outstanding Voice-Over Performance' AND T2.organization = 'Primetime Emmy Awards' AND T2.result = 'Winner';", "sql_id": 261}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.episode_id) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(CAST(T1.year AS TEXT), 1, 4) = '2009' AND T2.air_date LIKE '2009-04%';", "sql_id": 262}
{"model": "gpt-3.5-turbo", "message": "SELECT award, person FROM \"Award\" WHERE result = 'Winner' AND SUBSTRING(CAST(\"_year\" AS TEXT), 1, 4) = '2009';", "sql_id": 263}
{"model": "gpt-3.5-turbo", "message": "SELECT episode, title, rating FROM Episode WHERE SUBSTRING(air_date, 1, 7) LIKE '2008-10%';", "sql_id": 264}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title, T2.episode_image, T1.award, T1.person \nFROM Award AS T1 \nINNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id \nWHERE T2.rating BETWEEN 7 AND 10 \nAND SUBSTRING(T2.air_date, 1, 4) = '2008' \nAND T1.result = 'Nominee';", "sql_id": 265}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE person = 'Billy Kimball' AND SUBSTRING(CAST(year AS TEXT), 1, 4) = '2010' AND result = 'Nominee';", "sql_id": 268}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM \"Person\" WHERE SUBSTRING(birthdate, 1, 4) < '1970';", "sql_id": 269}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM \"Person\" WHERE SUBSTRING(birthdate, 1, 4) = '1958' AND birth_place = 'California' AND birth_country = 'USA';", "sql_id": 270}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(CAST(T1.year AS TEXT), 1, 4) = '2009' AND T1.role = 'writer' AND T2.votes > 5;", "sql_id": 271}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.episode_id FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(CAST(T1.year AS TEXT), 1, 4) = '2009' AND T1.person = 'Al Jean' AND T1.award_category = 'Primetime Emmy';", "sql_id": 272}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM \"Person\" WHERE SUBSTRING(birthdate, 1, 4) = '1962' AND birth_region = 'California';", "sql_id": 273}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.episode_id \nFROM Episode AS T1 \nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id \nWHERE SUBSTRING(T1.air_date, 1, 4) = '2008' \nORDER BY T2.votes DESC \nLIMIT 1;", "sql_id": 274}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(CAST(T1.year AS TEXT), 1, 4) = '2010' AND T1.person = 'Joel H. Cohen';", "sql_id": 275}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN birth_region = 'California' AND SUBSTRING(birthdate, 1, 4) > '1970' THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(birthdate) FROM \"Person\";", "sql_id": 276}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Best International TV Series' AND SUBSTRING(CAST(T1.year AS TEXT), 1, 4) = '2017';", "sql_id": 278}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(T1.air_date, 1, 4) = '2008';", "sql_id": 281}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE SUBSTRING(CAST(year AS TEXT), 1, 4) = '2009' AND result = 'Winner';", "sql_id": 283}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.episode_id \nFROM Episode AS T1 \nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id \nWHERE SUBSTRING(T1.air_date, 1, 4) = '2008' AND T2.stars < 5;", "sql_id": 284}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.percent FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTRING(T1.air_date, 1, 4) = '2008' AND T1.votes BETWEEN 950 AND 960;", "sql_id": 285}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.stars FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTRING(T1.air_date, 1, 7) = '2008-11';", "sql_id": 286}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.credited = 'true' AND T2.person = 'Sam Im' AND SUBSTRING(T1.air_date, 1, 4) = '2009' AND T2._role = 'additional timer';", "sql_id": 287}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"Match_Id\") FROM \"_Match\" WHERE SUBSTRING(\"Match_Date\" FROM 1 FOR 4) = '2008' AND SUBSTRING(\"Match_Date\" FROM 7 FOR 1) = '5';", "sql_id": 163}
{"model": "gpt-3.5-turbo", "message": "SELECT \"Match_Id\" FROM \"_Match\" WHERE SUBSTRING(\"Match_Date\" FROM 1 FOR 4) = '2008';", "sql_id": 164}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN \"Win_Margin\" > 100 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(\"Match_Id\") FROM \"_Match\";", "sql_id": 169}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.\"Role_Desc\" = 'CaptainKeeper' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"Player_Id\") FROM \"Player_Match\" AS T1 INNER JOIN \"Rolee\" AS T2 ON T1.\"Role_Id\" = T2.\"Role_Id\";", "sql_id": 170}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.\"Bowling_skill\" = ' Legbreak' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"Player_Id\") FROM \"Player\" AS T1 INNER JOIN \"Bowling_Style\" AS T2 ON T1.\"Bowling_skill\" = T2.\"Bowling_Id\";", "sql_id": 171}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN T1.\"Team_1\" = T1.\"Match_Winner\" AND T1.\"Team_1\" = T1.\"Toss_Winner\" THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"Team_1\") FROM \"_Match\" AS T1 INNER JOIN \"Win_By\" AS T2 ON T1.\"Win_Type\" = T2.\"Win_Id\" INNER JOIN \"Toss_Decision\" AS T3 ON T1.\"Toss_Decide\" = T3.\"Toss_Id\" WHERE T3.\"Toss_Name\" = 'field' AND T2.\"Win_Type\" = 'runs';", "sql_id": 172}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"Player_Name\" \nFROM \"Player\" AS T1 \nINNER JOIN \"Player_Match\" AS T2 ON T1.\"Player_Id\" = T2.\"Player_Id\" \nINNER JOIN \"_Match\" AS T3 ON T2.\"Match_Id\" = T3.\"Match_Id\" \nWHERE SUBSTRING(T3.\"Match_Date\" FROM 1 FOR 4) = '2014' \nAND SUBSTRING(T3.\"Match_Date\" FROM 7 FOR 1) = '6' \nLIMIT 2;", "sql_id": 176}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"Team_Name\" \nFROM \"Team\" AS T1 \nINNER JOIN \"_Match\" AS T2 ON T1.\"Team_Id\" = T2.\"Team_1\" OR T1.\"Team_Id\" = T2.\"Team_2\" \nINNER JOIN \"Win_By\" AS T3 ON T2.\"Win_Type\" = T3.\"Win_Id\" \nWHERE SUBSTRING(T2.\"Match_Date\" FROM 1 FOR 4) = '2015' AND T3.\"Win_Type\" = 'Tie' \nLIMIT 1;", "sql_id": 177}
{"model": "gpt-3.5-turbo", "message": "SELECT 2008 - EXTRACT(YEAR FROM \"DOB\") FROM \"Player\" WHERE \"Player_Name\" = 'SC Ganguly';", "sql_id": 178}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.\"Country_Name\" = 'India' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.\"Player_Id\") FROM \"Player\" AS T1 INNER JOIN \"Country\" AS T2 ON T1.\"Country_Name\" = T2.\"Country_Id\" WHERE EXTRACT(YEAR FROM T1.\"DOB\") BETWEEN '1975' AND '1985';", "sql_id": 179}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"Player_Id\") FROM \"Player\" WHERE EXTRACT(YEAR FROM \"DOB\") BETWEEN 1970 AND 1975;", "sql_id": 180}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.bool = 'pos' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.bool = 'neg' THEN 1 ELSE 0 END) FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T1.\"_name\" = T2.\"_name\" WHERE T2.organ = 'foreign_legion';", "sql_id": 288}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.school = 'occ' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T1.name) FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.\"_name\" = T2.\"_name\" WHERE T2.organ = 'navy';", "sql_id": 289}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T2._name IS NULL THEN 'female' ELSE 'male' END FROM \"male\" AS T1 LEFT JOIN \"disabled\" AS T2 ON T1._name = T2._name WHERE T1._name = 'student124';", "sql_id": 290}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._name IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2._name) FROM disabled AS T1 LEFT JOIN male AS T2 ON T1.\"_name\" = T2.\"_name\";", "sql_id": 291}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1._month > 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1._month) FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1._name = T2._name;", "sql_id": 292}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T.result = 0 THEN 'female' ELSE 'male' END AS re FROM ( SELECT COUNT(name) AS result FROM \"male\" WHERE name = 'studenT1000' ) T;", "sql_id": 293}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T3.name IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.name) FROM disabled AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T2.organ = 'foreign_legion';", "sql_id": 294}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._name IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1._name), CAST(SUM(CASE WHEN T2._name IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1._name) FROM enlist AS T1 LEFT JOIN male AS T2 ON T2._name = T1._name WHERE T1.organ = 'fire_department';", "sql_id": 295}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN _month = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(_name) FROM longest_absense_from_school;", "sql_id": 296}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN \"bool\" = 'pos' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN \"bool\" = 'neg' THEN 1 ELSE 0 END) FROM \"no_payment_due\";", "sql_id": 297}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN T2._name IS NULL THEN 'female' ELSE 'male' END AS gen, T1.school FROM enrolled AS T1 LEFT JOIN male AS T2 ON T2._name = T1._name WHERE T1._name = 'student995';", "sql_id": 298}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._name IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1._name) FROM person AS T1 LEFT JOIN male AS T2 ON T2._name = T1._name;", "sql_id": 299}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2._name) - SUM(CASE WHEN T2._name IS NULL THEN 1 ELSE 0 END) AS num FROM filed_for_bankrupcy AS T1 LEFT JOIN male AS T2 ON T2._name = T1._name;", "sql_id": 302}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((SUM(CASE WHEN T2.name IS NOT NULL AND T1.month = 0 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.name IS NULL AND T1.month = 0 THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.name), CASE WHEN SUM(CASE WHEN T2.name IS NOT NULL AND T1.month = 0 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.name IS NULL AND T1.month = 0 THEN 1 ELSE 0 END) > 0 THEN 'YES' ELSE 'NO' END AS isHigh FROM longest_absense_from_school AS T1 LEFT JOIN disabled AS T2 ON T2.name = T1.name;", "sql_id": 303}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._month = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1._name) FROM unemployed AS T1 INNER JOIN longest_absense_from_school AS T2 ON T2._name = T1._name;", "sql_id": 304}
{"model": "gpt-3.5-turbo", "message": "SELECT 100 * SUM(CASE WHEN T2._month = 0 THEN 1 ELSE 0 END) AS num FROM \"disabled\" AS T1 INNER JOIN \"longest_absense_from_school\" AS T2 ON T1._name = T2._name;", "sql_id": 305}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.school , CASE WHEN T3.name IS NULL THEN 'female' ELSE 'male' END AS gender FROM enrolled AS T1 INNER JOIN person AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T2.name = 'student34';", "sql_id": 306}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.school = 'uci' AND T4._name IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(T1._name) FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1._name = T2._name INNER JOIN person AS T3 ON T1._name = T3._name LEFT JOIN male AS T4 ON T3._name = T4._name;", "sql_id": 307}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T3._name IS NULL THEN 1 ELSE 0 END) AS \"result\" FROM enlist AS T1 INNER JOIN person AS T2 ON T1._name = T2._name LEFT JOIN male AS T3 ON T2._name = T3._name WHERE T1.organ = 'army';", "sql_id": 308}
{"model": "gpt-3.5-turbo", "message": "SELECT MAX(EXTRACT(DAY FROM \"Ship_Date\" - \"Order_Date\")) AS longestTimeDays FROM \"people\" AS T1 INNER JOIN \"central_superstore\" AS T2 ON T1.\"Customer_ID\" = T2.\"Customer_ID\" WHERE T1.\"Customer_Name\" = 'Aimee Bixby';", "sql_id": 192}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.\"Product Name\" FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.\"Customer_ID\" = T2.\"Customer_ID\" INNER JOIN product AS T3 ON T3.\"Product ID\" = T2.\"Product ID\" WHERE T1.\"Customer Name\" = 'Aimee Bixby' AND TO_CHAR(T2.\"Ship Date\", 'YYYY') = '2016';", "sql_id": 193}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.\"Product ID\") FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.\"Product ID\" = T2.\"Product ID\" WHERE T2.\"Sub-Category\" = 'Art' AND T1.Region = 'East' AND DATE_PART('year', T1.\"Order Date\") = 2013;", "sql_id": 194}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.\"Order_ID\") FROM \"east_superstore\" AS T1 INNER JOIN \"people\" AS T2 ON T1.\"Customer_ID\" = T2.\"Customer_ID\" WHERE T2.\"Customer_Name\" = 'Maxwell Schwartz' AND EXTRACT(YEAR FROM T1.\"Order_Date\") = '2015';", "sql_id": 195}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.\"Product Name\" FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.\"Customer ID\" = T2.\"Customer ID\" INNER JOIN product AS T3 ON T3.\"Product ID\" = T1.\"Product ID\" WHERE T2.\"Customer Name\" = 'Matt Abelman' AND TO_CHAR(T1.\"Order Date\", 'YYYY') = '2013';", "sql_id": 196}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM((T1.Sales / (1 - T1.Discount)) * T1.Quantity - T1.Profit) AS cost\nFROM east_superstore AS T1\nINNER JOIN people AS T2 ON T1.\"Customer ID\" = T2.\"Customer ID\"\nINNER JOIN product AS T3 ON T1.\"Product ID\" = T3.\"Product ID\" AND T1.Region = T3.Region\nWHERE T1.Region = 'East' AND T2.\"Customer Name\" = 'Brad Thomas' AND EXTRACT(YEAR FROM T1.\"Order Date\") = '2016';", "sql_id": 197}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.Sales) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.\"Product ID\" = T2.\"Product ID\" WHERE DATE_PART('year', T1.\"Order Date\") = 2016 AND T2.Category = 'Furniture';", "sql_id": 198}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.\"Customer Name\" FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.\"Customer ID\" = T2.\"Customer ID\" WHERE DATE_PART('year', T1.\"Order Date\") = 2015 GROUP BY T2.\"Customer Name\" HAVING COUNT(T2.\"Customer Name\") > 3;", "sql_id": 199}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.\"Customer ID\") FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.\"Customer ID\" = T2.\"Customer ID\" WHERE T1.\"Customer Name\" = 'Corey Roper' AND TO_CHAR(T2.\"Ship Date\", 'YYYY') = '2015';", "sql_id": 200}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"Customer Name\" \nFROM east_superstore AS T1 \nINNER JOIN people AS T2 ON T1.\"Customer ID\" = T2.\"Customer ID\" \nWHERE T2.Segment = 'Corporate' \nAND T2.State = 'Rhode Island' \nAND T2.Region = 'East' \nAND DATE_PART('year', T1.\"Order Date\") = 2016 \nGROUP BY T2.\"Customer Name\" \nORDER BY COUNT(T2.\"Customer Name\") DESC \nLIMIT 1;", "sql_id": 201}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.\"Product Name\" FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.\"Product ID\" = T2.\"Product ID\" WHERE TO_CHAR(T1.\"Ship Date\", 'YYYY-MM') = '2013-03';", "sql_id": 203}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.\"Order ID\") FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.\"Customer ID\" = T2.\"Customer ID\" WHERE T1.\"Customer Name\" = 'Alan Barnes' AND EXTRACT(YEAR FROM T2.\"Order Date\") = 2015;", "sql_id": 204}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.\"Ship Mode\" = 'First Class' THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(*) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.\"Product ID\" = T2.\"Product ID\" WHERE T2.Category = 'Furniture' AND TO_CHAR(T1.\"Ship Date\", 'YYYY') = '2013';", "sql_id": 205}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"Product Name\" FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.\"Product ID\" = T2.\"Product ID\" WHERE T2.Region = 'Central' AND DATE_PART('year', T1.\"Order Date\") = 2016 ORDER BY T1.Profit ASC LIMIT 1;", "sql_id": 206}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT EXTRACT(DAY FROM \"Ship_Date\" - \"Order_Date\") AS duration FROM \"central_superstore\" WHERE \"Order_ID\" = 'CA-2011-134103';", "sql_id": 202}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"PATIENT\") FROM conditions WHERE \"DESCRIPTION\" = 'Diabetes' AND EXTRACT(YEAR FROM \"_START\") = '1988';", "sql_id": 105}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Ibuprofen 200 MG Oral Tablet' AND T1.ethnicity = 'dominican' AND EXTRACT(YEAR FROM T2.START) = '2016' AND EXTRACT(MONTH FROM T2.STOP) - EXTRACT(MONTH FROM T2.START) = 1;", "sql_id": 106}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE DESCRIPTION = 'Pneumonia' AND EXTRACT(YEAR FROM T1.birthdate)::TEXT LIKE '192%';", "sql_id": 107}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first, T1.last, T1.suffix FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Yaz 28 Day Pack' AND EXTRACT(YEAR FROM T2.START) = 2011;", "sql_id": 108}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.race = 'black' AND T2.DESCRIPTION = 'DTaP' AND EXTRACT(YEAR FROM T2.DATE) = 2013;", "sql_id": 109}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('year', T2.deathdate) - DATE_PART('year', T2.birthdate) AS age FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.first = 'Giovanni' AND T2.last = 'Russel' AND T1.DESCRIPTION = 'Hypertension';", "sql_id": 110}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first, T1.last \nFROM patients AS T1 \nINNER JOIN medications AS T2 ON T1.patient = T2.PATIENT \nWHERE T2.DESCRIPTION = 'Clopidogrel 75 MG Oral Tablet' \nAND EXTRACT(YEAR FROM T2.STOP) - EXTRACT(YEAR FROM T2.START) > 10;", "sql_id": 112}
{"model": "gpt-3.5-turbo", "message": "SELECT T2._first, T2._last, CASE WHEN T2.deathdate IS NULL THEN EXTRACT(YEAR FROM T1.DATE) - EXTRACT(YEAR FROM T2.birthdate) ELSE EXTRACT(YEAR FROM T2.deathdate) - EXTRACT(YEAR FROM T2.birthdate) END AS age FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Systolic Blood Pressure' AND T1._VALUE = 200 AND T1.UNITS = 'mmHg' AND EXTRACT(YEAR FROM T1.DATE) = '2011';", "sql_id": 113}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.\"DESCRIPTION\" = 'Influenza seasonal injectable preservative free' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.\"patient\"), SUM(CASE WHEN T1.\"ethnicity\" = 'english' THEN 1 ELSE 0 END) FROM \"patients\" AS T1 INNER JOIN \"immunizations\" AS T2 ON T1.\"patient\" = T2.\"PATIENT\" WHERE EXTRACT(YEAR FROM T2.\"DATE\") = '2017';", "sql_id": 114}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.deathdate IS NULL THEN EXTRACT(YEAR FROM T2.STOP) - EXTRACT(YEAR FROM T1.birthdate) ELSE EXTRACT(YEAR FROM T1.deathdate) - EXTRACT(YEAR FROM T1.birthdate) END) AS REAL) / COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T2.REASONDESCRIPTION = 'Prediabetes';", "sql_id": 115}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.marital = 'S' AND T2.REASONDESCRIPTION = 'Cystitis' AND T2.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]' AND EXTRACT(YEAR FROM T2.START) = 2010;", "sql_id": 119}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"DESCRIPTION\" FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1._first = 'Elly' AND T1._last = 'Koss' AND TO_CHAR(T2.\"_START\", 'YYYY') = '2013';", "sql_id": 123}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(\"PATIENT\") AS REAL) / COUNT(DISTINCT EXTRACT(YEAR FROM \"DATE\")) FROM \"procedures\" WHERE \"DESCRIPTION\" = 'Combined chemotherapy and radiation therapy (procedure)';", "sql_id": 126}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"DESCRIPTION\" FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1._first = 'Joye' AND T1._last = 'Homenick' AND EXTRACT(YEAR FROM T2.\"_START\") = '2017';", "sql_id": 128}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.PATIENT) FROM encounters AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE EXTRACT(YEAR FROM T1.DATE) = 2010 AND T1.REASONDESCRIPTION = 'Contact dermatitis';", "sql_id": 130}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.patient) , CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Prenatal visit' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.patient) FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1._first = 'Lorri' AND T1._last = 'Simonis' AND EXTRACT(YEAR FROM T2.DATE) BETWEEN '2010' AND '2017';", "sql_id": 131}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.race = 'hispanic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.PATIENT) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE EXTRACT(YEAR FROM T1.\"STOP\") = '2011';", "sql_id": 132}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.PATIENT) AS percentage FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE EXTRACT(YEAR FROM T1._START) = '2010';", "sql_id": 133}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.race = 'black' AND EXTRACT(YEAR FROM T1.STOP) = '2017';", "sql_id": 134}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1._first, T1._last FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Penicillin V Potassium 250 MG' AND TO_CHAR(T2._START, 'YYYY') >= '1948';", "sql_id": 135}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.patient WHERE EXTRACT(YEAR FROM T1.birthdate) = '1935' AND T1.race = 'white' AND T2.DESCRIPTION = 'Stroke';", "sql_id": 136}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('day', T2.\"STOP\" - T2.\"_START\") AS days FROM \"patients\" AS T1 INNER JOIN \"medications\" AS T2 ON T1.\"patient\" = T2.\"PATIENT\" WHERE T1.\"_first\" = 'Elly' AND T1.\"_last\" = 'Koss' AND T2.\"DESCRIPTION\" LIKE 'Acetaminophen%';", "sql_id": 100}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('day', T2.\"STOP\" - T2.\"START\") AS days FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.\"PATIENT\" WHERE T1.\"_first\" = 'Elly' AND T1.\"_last\" = 'Koss' AND T2.\"DESCRIPTION\" = 'Cystitis';", "sql_id": 101}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('day', T2.\"STOP\" - T2.\"_START\") AS takenDays FROM \"patients\" AS T1 INNER JOIN \"medications\" AS T2 ON T1.\"patient\" = T2.\"PATIENT\" WHERE T1.\"_first\" = 'Berry' AND T1.\"_last\" = 'Keebler' AND T2.\"REASONDESCRIPTION\" = 'Acute bronchitis (disorder)' AND T2.\"DESCRIPTION\" = 'Acetaminophen 160 MG';", "sql_id": 118}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"REASONDESCRIPTION\", T2.\"DESCRIPTION\", EXTRACT(DAY FROM T2.\"STOP\" - T2.\"START\") AS days, CASE WHEN T1.\"deathdate\" IS NULL THEN 'alive' ELSE 'dead' END FROM \"patients\" AS T1 INNER JOIN \"medications\" AS T2 ON T1.\"patient\" = T2.\"PATIENT\" WHERE T2.\"ENCOUNTER\" = '23c293ec-dbae-4a22-896e-f12cf3c8bac3';", "sql_id": 120}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('day', T2.\"STOP\" - T2.\"_START\") AS days FROM \"patients\" AS T1 INNER JOIN \"medications\" AS T2 ON T1.\"patient\" = T2.\"PATIENT\" WHERE T2.\"DESCRIPTION\" = ' Amoxicillin 250 MG / Clavulanate 125 MG [Augmentin]' AND T1.\"_first\" = 'Major' AND T1.\"_last\" = 'D''Amore';", "sql_id": 122}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('day', T2.\"STOP\" - T2.\"_START\") AS days FROM \"patients\" AS T1 INNER JOIN \"medications\" AS T2 ON T1.\"patient\" = T2.\"PATIENT\" WHERE T1.\"_first\" = 'Elly' AND \"_last\" = 'Koss' AND T2.\"DESCRIPTION\" = 'Acetaminophen 160 MG';", "sql_id": 129}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.age FROM app_events AS T1 INNER JOIN events_relevant AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.device_id = T3.device_id WHERE T1.is_active = 1 AND T2.longitude = 121 AND T2.latitude = 31 AND SUBSTRING(T2.timestamp, 1, 10) = '2016-05-06' ORDER BY T3.age DESC LIMIT 1;", "sql_id": 54}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) * 100 / COUNT(T2.device_id) AS perFemale, \n       SUM(CASE WHEN T2.gender = 'M' THEN 1 ELSE 0 END) * 100 / COUNT(T2.device_id) AS perMale \nFROM phone_brand_device_model2 AS T1 \nINNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id \nWHERE T1.phone_brand = 'OPPO';", "sql_id": 55}
{"model": "gpt-3.5-turbo", "message": "SELECT app_id , CASE WHEN is_installed = 1 THEN 'YES' ELSE 'NO' END AS status FROM app_events WHERE event_id = 844;", "sql_id": 57}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN gender = 'M' AND \"_group\" = 'M27-28' THEN 1 ELSE 0 END) / SUM(CASE WHEN gender = 'F' AND \"_group\" = 'F27-28' THEN 1 ELSE 0 END) AS r FROM gender_age;", "sql_id": 59}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.category = 'Industry tag' THEN 1 ELSE 0 END) * 100 / COUNT(T2.app_id) AS per FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id;", "sql_id": 61}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.device_model = 'Nexus 5' THEN 1 ELSE 0 END) * 100 / COUNT(T1.device_id) AS per, \nSUM(CASE WHEN T1.device_model = 'Nexus 5' AND T2.gender = 'M' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN T1.device_model = 'Nexus 5' AND T2.gender = 'F' THEN 1 ELSE 0 END), 0) AS r \nFROM phone_brand_device_model2 AS T1 \nINNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id \nWHERE T1.phone_brand = 'LG';", "sql_id": 62}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.event_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE DATE_PART('year', T1.timestamp) = 2016 AND T2.phone_brand = 'vivo';", "sql_id": 65}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.\"_group\" = 'M23-26' THEN 1.0 ELSE 0 END) / COUNT(T1.device_id) AS per FROM \"gender_age\" AS T1 INNER JOIN \"phone_brand_device_model2\" AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo';", "sql_id": 66}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.phone_brand = 'vivo' THEN 1 ELSE 0 END) / COUNT(T1.device_id) AS per FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE T1.event_id = '2';", "sql_id": 67}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.category = '80s Japanese comic' THEN 1 ELSE 0 END) / COUNT(T1.label_id) AS J8, \n       SUM(CASE WHEN T1.category = '90s Japanese comic' THEN 1 ELSE 0 END) / COUNT(T1.label_id) AS J9 \nFROM label_categories AS T1 \nINNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id;", "sql_id": 68}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN \"_timestamp\" = '2016-05-02 7:50:28' THEN 1 ELSE 0 END) / SUM(CASE WHEN \"_timestamp\" = '2016-05-02 7:41:03' THEN 1 ELSE 0 END) AS num \nFROM \"events\" AS T1 \nINNER JOIN \"app_events\" AS T2 ON T1.\"event_id\" = T2.\"event_id\" \nWHERE T2.\"is_active\" = '1';", "sql_id": 74}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN phone_brand = 'vivo' THEN 1 ELSE 0 END) - SUM(CASE WHEN phone_brand = 'LG' THEN 1 ELSE 0 END) AS num FROM phone_brand_device_model2;", "sql_id": 75}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id WHERE DATE_PART('year', T2.timestamp) = 2016 AND T1.\"_group\" = 'M23-26';", "sql_id": 76}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CASE WHEN T2.category = 'Securities' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.category = 'Finance' THEN 1 ELSE 0 END) > 0 THEN 'Securities' ELSE 'Finance' END AS diff FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id;", "sql_id": 77}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo';", "sql_id": 78}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.category = 'Securities' THEN 1 ELSE 0 END) / SUM(CASE WHEN T2.category = 'Finance' THEN 1 ELSE 0 END) AS per FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id;", "sql_id": 79}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN is_active = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN is_active = 0 THEN 1 ELSE 0 END) AS per FROM app_events WHERE event_id = 58;", "sql_id": 80}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) / COUNT(device_id) AS per FROM gender_age;", "sql_id": 81}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.device_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' AND DATE_TRUNC('day', T1._timestamp) = DATE '2016-05-01';", "sql_id": 82}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo' AND T2.device_model = 'X5Pro';", "sql_id": 83}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.gender = 'F' AND T1.age > 80 THEN 1 ELSE 0 END) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'HTC';", "sql_id": 84}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.age < 50 THEN 1 ELSE 0 END) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO';", "sql_id": 85}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.age > 20 THEN 1 ELSE 0 END) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'SUGAR';", "sql_id": 86}
{"model": "gpt-3.5-turbo", "message": "SELECT longitude, latitude FROM events WHERE date(timestamp) = '2016-04-30';", "sql_id": 87}
{"model": "gpt-3.5-turbo", "message": "SELECT T.gender \nFROM ( \n    SELECT T1.gender, COUNT(T1.device_id) AS num \n    FROM gender_age AS T1 \n    INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id \n    WHERE DATE(T2.timestamp) BETWEEN '2016-05-01' AND '2016-05-10' \n    GROUP BY T1.gender \n) AS T \nORDER BY T.num DESC \nLIMIT 1;", "sql_id": 88}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS per FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id INNER JOIN app_events_relevant AS T3 ON T2.event_id = T3.event_id WHERE T3.is_installed = 0;", "sql_id": 89}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN latitude != 0 AND longitude != 0 THEN 1 ELSE 0 END) - SUM(CASE WHEN latitude = 0 AND longitude = 0 THEN 1 ELSE 0 END) AS diff FROM events WHERE device_id = '-922956879900150000';", "sql_id": 90}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN is_installed = 1 AND is_active = 0 THEN 1 ELSE 0 END) / COUNT(app_id) AS perrcent FROM app_events WHERE event_id = 6;", "sql_id": 91}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) > 0 THEN 'M' ELSE 'F' END AS gender\nFROM gender_age AS T1\nINNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id\nWHERE T2.device_model = 'Galaxy Note 2';", "sql_id": 92}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.\"_group\" = 'F27-28' THEN 1 ELSE 0 END) / COUNT(T1.\"device_id\") AS per FROM \"gender_age\" AS T1 INNER JOIN \"events_relevant\" AS T2 ON T1.\"device_id\" = T2.\"device_id\" WHERE SUBSTRING(T2.\"_timestamp\", 1, 10) = '2016-05-03';", "sql_id": 94}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.gender IS NULL AND T1.age IS NULL AND T1._group IS NULL THEN 1 ELSE 0 END) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo';", "sql_id": 95}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.category = 'Academic Information' THEN 1.0 ELSE 0 END) / COUNT(T2.app_id) AS per FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id;", "sql_id": 93}
{"model": "gpt-3.5-turbo", "message": "SELECT T.game_name FROM game AS T ORDER BY LENGTH(T.game_name) DESC LIMIT 1;", "sql_id": 248}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN \"MaritalStatus\" = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(\"BusinessEntityID\") FROM \"Employee\" WHERE SUBSTRING(\"HireDate\", 1, 4) = '2009' AND \"Gender\" = 'M';", "sql_id": 510}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"CreditRating\" FROM \"ProductVendor\" AS T1 INNER JOIN \"Vendor\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE T1.\"StandardPrice\" = 18.9900 AND T1.\"AverageLeadTime\" = 16 AND TO_CHAR(T1.\"LastReceiptDate\", 'YYYY-MM-DD') = '2011-08-27';", "sql_id": 511}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.\"ShipMethodID\" = 5 THEN T3.\"OrderQty\" ELSE 0 END) AS REAL) / COUNT(T3.\"ProductID\") FROM \"ShipMethod\" AS T1 INNER JOIN \"PurchaseOrderHeader\" AS T2 ON T1.\"ShipMethodID\" = T2.\"ShipMethodID\" INNER JOIN \"PurchaseOrderDetail\" AS T3 ON T2.\"PurchaseOrderID\" = T3.\"PurchaseOrderID\";", "sql_id": 512}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T1.city = 'Bothell' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.city = 'Kenmore' THEN 1 ELSE 0 END) , stateprovincecode FROM Address AS T1 INNER JOIN StateProvince AS T2 ON T1.stateprovinceid = T2.stateprovinceid GROUP BY stateprovincecode;", "sql_id": 513}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ListPrice - T1.StandardCost > 21.9037 AND TO_CHAR(T2.StartDate, 'YYYY-MM-DD') >= '2012-10-01';", "sql_id": 514}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(\"T2\".\"PasswordHash\") FROM \"Person\" AS \"T1\" INNER JOIN \"_Password\" AS \"T2\" ON \"T1\".\"BusinessEntityID\" = \"T2\".\"BusinessEntityID\" WHERE \"T1\".\"FirstName\" = 'Catherine' AND \"T1\".\"LastName\" = 'Ward';", "sql_id": 515}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"TransactionType\" FROM \"TransactionHistoryArchive\" AS T1 INNER JOIN \"Product\" AS T2 ON T1.\"ProductID\" = T2.\"ProductID\" WHERE T2.\"_Name\" = 'LL Road Handlebars' AND TO_CHAR(T1.\"TransactionDate\", 'YYYY-MM-DD') = '2012-11-03';", "sql_id": 517}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"BusinessEntityID\", SUM(T1.\"SalesQuota\") \nFROM \"SalesPerson\" AS T1 \nINNER JOIN \"SalesPersonQuotaHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" \nWHERE DATE_PART('year', T2.\"QuotaDate\") = 2011 \nGROUP BY T1.\"BusinessEntityID\" \nORDER BY SUM(T1.\"SalesYTD\") DESC \nLIMIT 1;", "sql_id": 520}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.\"SalesQuota\") FROM \"SalesPerson\" AS T1 INNER JOIN \"SalesPersonQuotaHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE T1.\"BusinessEntityID\" = 275 AND TO_CHAR(\"QuotaDate\", 'YYYY') = '2013';", "sql_id": 522}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.\"BusinessEntityID\" FROM \"SalesPerson\" AS T1 INNER JOIN \"SalesPersonQuotaHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE TO_CHAR(T2.\"QuotaDate\", 'YYYY') = '2013' AND T1.\"SalesQuota\" < T1.\"SalesLastYearOutput\";", "sql_id": 523}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.\"Bonus\"), SUM(T1.\"Bonus\")::REAL * 100 / SUM(T1.\"SalesQuota\")\nFROM \"SalesPerson\" AS T1\nINNER JOIN \"SalesPersonQuotaHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\"\nWHERE TO_CHAR(T2.\"QuotaDate\", 'YYYY') = '2013';", "sql_id": 524}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"Rate\" FROM \"Employee\" AS T1 INNER JOIN \"EmployeePayHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE DATE_PART('year', T1.\"HireDate\") - DATE_PART('year', T1.\"BirthDate\") = 20;", "sql_id": 525}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(\"BusinessEntityID\") FROM \"Employee\" WHERE \"MaritalStatus\" = 'M' AND DATE_PART('year', \"BirthDate\") < 1960 AND \"Gender\" = 'M';", "sql_id": 526}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T3.\"Name\") FROM \"Person\" AS T1 INNER JOIN \"EmployeeDepartmentHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" INNER JOIN \"Department\" AS T3 ON T2.\"DepartmentID\" = T3.\"DepartmentID\" WHERE T1.\"FirstName\" = 'Sheela' AND T1.\"LastName\" = 'Word' AND DATE_PART('year', T3.\"ModifiedDate\") BETWEEN '2011' AND '2012';", "sql_id": 528}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(2009 - EXTRACT(YEAR FROM T2.\"BirthDate\")) FROM \"Person\" AS T1 INNER JOIN \"Employee\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE T1.\"PersonType\" = 'SP';", "sql_id": 529}
{"model": "gpt-3.5-turbo", "message": "SELECT 2015 - DATE_PART('year', T1.\"BirthDate\"), T2.\"Rate\" FROM \"Employee\" AS T1 INNER JOIN \"EmployeePayHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE T1.\"JobTitle\" = 'Marketing Specialist' ORDER BY 2015 - DATE_PART('year', T1.\"BirthDate\") DESC LIMIT 1;", "sql_id": 530}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"BusinessEntityID\", EXTRACT(YEAR FROM T2.\"HireDate\") - EXTRACT(YEAR FROM T2.\"BirthDate\") FROM \"PurchaseOrderHeader\" AS T1 INNER JOIN \"Employee\" AS T2 ON T1.\"EmployeeID\" = T2.\"BusinessEntityID\" ORDER BY T1.\"TotalDue\" DESC LIMIT 1;", "sql_id": 531}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.\"FirstName\", T1.\"LastName\" FROM \"Person\" AS T1 INNER JOIN \"Employee\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE DATE_PART('year', T2.\"HireDate\")::TEXT >= '2007' AND T2.\"SalariedFlag\" = 1;", "sql_id": 534}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM T1.HireDate)) \nFROM Employee AS T1 \nINNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID \nWHERE T3.Name = 'Research and Development';", "sql_id": 537}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM \"BirthDate\")) FROM \"Employee\";", "sql_id": 538}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.\"FirstName\", T2.\"LastName\" FROM \"Employee\" AS T1 INNER JOIN \"Person\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE DATE_PART('year', T1.\"BirthDate\") > 1970 ORDER BY T1.\"SickLeaveHours\" LIMIT 1;", "sql_id": 540}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('year', CURRENT_TIMESTAMP) - DATE_PART('year', T1.\"BirthDate\") + 1 , T3.\"Name\" FROM \"Employee\" AS T1 INNER JOIN \"EmployeeDepartmentHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" INNER JOIN \"Department\" AS T3 ON T2.\"DepartmentID\" = T3.\"DepartmentID\" ORDER BY T1.\"BirthDate\" DESC LIMIT 1;", "sql_id": 541}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_PART('year', T1.\"HireDate\") - DATE_PART('year', T1.\"BirthDate\"), T2.\"FirstName\", T2.\"MiddleName\", T2.\"LastName\" FROM \"Employee\" AS T1 INNER JOIN \"Person\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" WHERE T1.\"VacationHours\" <= 10 ORDER BY DATE_PART('year', T1.\"HireDate\") - DATE_PART('year', T1.\"BirthDate\") DESC LIMIT 1;", "sql_id": 545}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"BusinessEntityID\") \nFROM \"Person\" AS T1 \nINNER JOIN \"EmployeeDepartmentHistory\" AS T2 ON T1.\"BusinessEntityID\" = T2.\"BusinessEntityID\" \nINNER JOIN \"Department\" AS T3 ON T2.\"DepartmentID\" = T3.\"DepartmentID\" \nWHERE T3.\"_Name\" = 'Engineering' \nAND DATE_PART('year', T2.\"EndDate\") > 2009 \nAND DATE_PART('year', T2.\"StartDate\") < 2009;", "sql_id": 547}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"BusinessEntityID\") \nFROM \"EmployeeDepartmentHistory\" AS T1 \nINNER JOIN \"Department\" AS T2 ON T1.\"DepartmentID\" = T2.\"DepartmentID\" \nINNER JOIN \"Person\" AS T3 ON T1.\"BusinessEntityID\" = T3.\"BusinessEntityID\" \nWHERE T3.\"PersonType\" = 'SC' \nAND T2.\"GroupName\" = 'Manufacturing' \nAND EXTRACT(YEAR FROM T1.\"EndDate\") >= 2007 \nAND EXTRACT(YEAR FROM T1.\"StartDate\") <= 2007;", "sql_id": 548}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.\"BusinessEntityID\") FROM \"EmployeeDepartmentHistory\" AS T1 INNER JOIN \"Department\" AS T2 ON T1.\"DepartmentID\" = T2.\"DepartmentID\" WHERE T2.\"GroupName\" = 'Quality Assurance' AND DATE_PART('year', T1.\"StartDate\")::TEXT = '2007';", "sql_id": 549}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(365 * (EXTRACT(YEAR FROM T1.\"EndDate\") - EXTRACT(YEAR FROM T1.\"StartDate\")) + 30 * (EXTRACT(MONTH FROM T1.\"EndDate\") - EXTRACT(MONTH FROM T1.\"StartDate\")) + EXTRACT(DAY FROM T1.\"EndDate\") - EXTRACT(DAY FROM T1.\"StartDate\")) AS REAL) / COUNT(T1.\"BusinessEntityID\") FROM \"EmployeeDepartmentHistory\" AS T1 INNER JOIN \"Department\" AS T2 ON T1.\"DepartmentID\" = T2.\"DepartmentID\" WHERE T2.\"_Name\" = 'Engineering' AND T1.\"EndDate\" IS NOT NULL;", "sql_id": 550}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T3.\"Rate\") FROM \"EmployeeDepartmentHistory\" AS T1 INNER JOIN \"Department\" AS T2 ON T1.\"DepartmentID\" = T2.\"DepartmentID\" INNER JOIN \"EmployeePayHistory\" AS T3 ON T1.\"BusinessEntityID\" = T3.\"BusinessEntityID\" WHERE T2.\"_Name\" = 'Engineering' AND DATE_PART('year', \"EndDate\") > 2007 AND DATE_PART('year', T1.\"StartDate\") < 2007;", "sql_id": 551}
{"model": "gpt-3.5-turbo", "message": "SELECT 365 * (EXTRACT(YEAR FROM \"ActualEndDate\") - EXTRACT(YEAR FROM \"ActualStartDate\")) + 30 * (EXTRACT(MONTH FROM \"ActualEndDate\") - EXTRACT(MONTH FROM \"ActualStartDate\")) + EXTRACT(DAY FROM \"ActualEndDate\") - EXTRACT(DAY FROM \"ActualStartDate\") FROM \"WorkOrderRouting\" WHERE \"WorkOrderID\" = 425;", "sql_id": 552}
{"model": "gpt-3.5-turbo", "message": "SELECT (EXTRACT(EPOCH FROM \"EndDate\") - EXTRACT(EPOCH FROM \"StartDate\")) FROM \"BillOfMaterials\" ORDER BY (EXTRACT(EPOCH FROM \"EndDate\") - EXTRACT(EPOCH FROM \"StartDate\")) DESC LIMIT 1;", "sql_id": 508}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._Language = 'English' THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(T1.\"Code\") FROM \"Country\" AS T1 INNER JOIN \"CountryLanguage\" AS T2 ON T1.\"Code\" = T2.\"CountryCode\";", "sql_id": 559}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._Language = 'English' THEN 1 ELSE 0 END) AS DOUBLE PRECISION) * 100 / COUNT(T1.\"Code\") FROM \"Country\" AS T1 INNER JOIN \"CountryLanguage\" AS T2 ON T1.\"Code\" = T2.\"CountryCode\" WHERE T1.\"GNP\" > 1500;", "sql_id": 560}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2._Language = 'Chinese' THEN T1.\"SurfaceArea\" ELSE 0 END) AS DOUBLE PRECISION) * 100 / SUM(T1.\"SurfaceArea\") FROM \"Country\" AS T1 INNER JOIN \"CountryLanguage\" AS T2 ON T1.\"Code\" = T2.\"CountryCode\";", "sql_id": 561}

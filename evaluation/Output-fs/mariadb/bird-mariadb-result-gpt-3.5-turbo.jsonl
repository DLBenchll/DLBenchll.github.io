{"model": "gpt-3.5-turbo", "message": "SELECT movie_title, movie_release_year FROM movies ORDER BY LENGTH(movie_popularity) DESC LIMIT 1;", "sql_id": 1}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.movie_title \nFROM ratings AS T1 \nINNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id \nWHERE CAST(SUBSTRING(T1.rating_timestamp_utc, 1, 4) AS SIGNED) = 2020 \nAND CAST(SUBSTRING(T1.rating_timestamp_utc, 6, 2) AS SIGNED) > 4;", "sql_id": 2}
{"model": "gpt-3.5-turbo", "message": "SELECT user_id FROM lists_users WHERE user_subscriber = 1 GROUP BY user_id HAVING MAX(SUBSTRING(list_creation_date_utc, 1, 4)) - MIN(SUBSTRING(list_creation_date_utc, 1, 4)) >= 10;", "sql_id": 3}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM lists WHERE CAST(SUBSTRING(list_update_timestamp_utc, 1, 4) AS SIGNED) - CAST(SUBSTRING(list_creation_timestamp_utc, 1, 4) AS SIGNED) > 10;", "sql_id": 4}
{"model": "gpt-3.5-turbo", "message": "SELECT list_title FROM lists WHERE YEAR(list_update_timestamp_utc) = '2016' ORDER BY list_update_timestamp_utc DESC LIMIT 1;", "sql_id": 5}
{"model": "gpt-3.5-turbo", "message": "SELECT list_title , 365 * (YEAR(NOW()) - YEAR(list_creation_timestamp_utc)) + 30 * (MONTH(NOW()) - MONTH(list_creation_timestamp_utc)) + DAY(NOW()) - DAY(list_creation_timestamp_utc) FROM lists WHERE list_followers > 200;", "sql_id": 7}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.user_id), T2.movie_image_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE datetime(T1.rating_timestamp_utc) BETWEEN '2017-01-01 00:00:00' AND '2017-12-31 00:00:00';", "sql_id": 8}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id WHERE YEAR(T1.ord_date) = '1992' ORDER BY T1.qty DESC LIMIT 1;", "sql_id": 9}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title, T1.notes, T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE YEAR(T1.pubdate) = '1991';", "sql_id": 10}
{"model": "gpt-3.5-turbo", "message": "SELECT fname, lname FROM employee WHERE YEAR(hire_date) < 1990;", "sql_id": 11}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_FORMAT(hire_date, '%Y') FROM employee GROUP BY DATE_FORMAT(hire_date, '%Y') ORDER BY COUNT(emp_id) DESC LIMIT 1;", "sql_id": 12}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.pub_name \nFROM titles AS T1 \nINNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id \nWHERE YEAR(T1.pubdate) = '1991' \nGROUP BY T1.pub_id, T2.pub_name \nORDER BY COUNT(T1.title_id) DESC \nLIMIT 1;", "sql_id": 13}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.notes FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE DATE_FORMAT(T2.ord_date, '%Y-%m-%d') = '1994-09-14';", "sql_id": 14}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.type FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE DATE_FORMAT(T2.ord_date, '%Y-%m-%d') = '1993-05-29';", "sql_id": 15}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) - SUM(CASE WHEN T2.city = 'Portland' THEN qty END) AS DECIMAL) * 100 / SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE YEAR(T1.ord_date) = '1993';", "sql_id": 16}
{"model": "gpt-3.5-turbo", "message": "SELECT fname, minit, lname FROM employee WHERE YEAR(hire_date) BETWEEN 1990 AND 1995 ORDER BY job_lvl DESC;", "sql_id": 17}
{"model": "gpt-3.5-turbo", "message": "SELECT 365 * (YEAR(T2.`Date sent to company`) - YEAR(T2.`Date received`)) + 30 * (MONTH(T2.`Date sent to company`) - MONTH(T2.`Date received`)) + (DAY(T2.`Date sent to company`) - DAY(T2.`Date received`)) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Matthew' AND T1.last = 'Pierce' AND T2.`Date received` = '2016-10-28';", "sql_id": 18}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.sex) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE YEAR(T2.Date_received) = 2016 AND T1.sex = 'Male' AND T2.Product = 'Credit card';", "sql_id": 19}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(T2.`Complaint ID`) AS DECIMAL) / 3 AS average FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE YEAR(T2.`Date_received`) BETWEEN '2015' AND '2017' AND T1.city = 'New York City' AND T2.Product = 'Credit card';", "sql_id": 20}
{"model": "gpt-3.5-turbo", "message": "SELECT 100.0 * (SUM(CASE WHEN YEAR(T2.`Date_received`) = 2017 THEN 1 ELSE 0 END) - SUM(CASE WHEN YEAR(T2.`Date_received`) = 2016 THEN 1 ELSE 0 END)) / SUM(CASE WHEN YEAR(T2.`Date_received`) = 2016 THEN 1 ELSE 0 END) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City';", "sql_id": 21}
{"model": "gpt-3.5-turbo", "message": "SELECT 365 * (YEAR(T2.`Date sent to company`) - YEAR(T2.`Date received`)) + 30 * (MONTH(T2.`Date sent to company`) - MONTH(T2.`Date received`)) + (DAY(T2.`Date sent to company`) - DAY(T2.`Date received`)) AS days FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Date received` = '2012-05-18' AND T1.sex = 'Male' AND T1.first = 'Brantley' AND T1.middle = 'Julian' AND T1.last = 'Stanley';", "sql_id": 22}
{"model": "gpt-3.5-turbo", "message": "```sql\nSELECT STRFTIME('%Y', T3.`Date_received`) , CAST(SUM(CASE WHEN T3.`Company_response_to_consumer` = 'Closed with explanation' THEN 1 ELSE 0 END) AS DECIMAL) / COUNT(T3.`Complaint_ID`) AS average \nFROM callcenterlogs AS T1 \nINNER JOIN client AS T2 ON T1.`rand_client` = T2.client_id \nINNER JOIN events AS T3 ON T1.`Complaint_ID` = T3.`Complaint_ID` \nWHERE T2.city = 'New Bedford' \nGROUP BY STRFTIME('%Y', T3.`Date_received`);\n```", "sql_id": 23}
{"model": "gpt-3.5-turbo", "message": "SELECT `Complaint ID` FROM events WHERE DATEDIFF(`Date_sent_to_company`, `Date_received`) = ( SELECT MAX(DATEDIFF(`Date_sent_to_company`, `Date_received`)) FROM events WHERE `Date_sent_to_company` = '2014-09-25' ) AND `Date_sent_to_company` = '2014-09-25';", "sql_id": 24}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(ser_time) FROM callcenterlogs WHERE SUBSTRING(ser_time, 4, 2) > '15';", "sql_id": 25}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.rand_client WHERE SUBSTRING_INDEX(T2.ser_time, ':', -1) > '20';", "sql_id": 27}
{"model": "gpt-3.5-turbo", "message": "SELECT `Complaint ID`, call_id, phonefinal FROM callcenterlogs WHERE YEAR(`Date_received`) = 2014 AND server = 'AVIDAN';", "sql_id": 29}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(SUBSTRING(ser_time, 4, 2) AS DECIMAL)) FROM callcenterlogs WHERE `Date_received` BETWEEN '2017-01-01' AND '2017-04-01';", "sql_id": 30}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_FORMAT(`Date_received`, '%Y'), COUNT(`Date_received`) FROM events WHERE Product = 'Credit card' AND Issue = 'Overlimit fee' GROUP BY DATE_FORMAT(`Date_received`, '%Y') HAVING COUNT(`Date_received`);", "sql_id": 31}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.priority = 2 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.`Complaint_ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint_ID` = T2.`Complaint_ID` WHERE YEAR(T1.`Date_received`) = '2017';", "sql_id": 33}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'Omaha' AND YEAR(T2.Date_received) = 2012 AND T2.Product = 'Credit card';", "sql_id": 34}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE YEAR(T2.Date_received) BETWEEN 2012 AND 2015 AND T2.Submitted_via = 'Email' AND T1.sex = 'Male';", "sql_id": 35}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((SUM(CASE WHEN DATEDIFF(STR_TO_DATE(T2.`Date sent to company`, '%Y-%m-%d'), STR_TO_DATE(T2.`Date received`, '%Y-%m-%d')) > 5 THEN 1 ELSE 0 END)) AS DECIMAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'Houston' AND YEAR(STR_TO_DATE(T2.`Date received`, '%Y-%m-%d')) = 2014;", "sql_id": 36}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(`Submitted via`) FROM events WHERE YEAR(`Date_received`) = '2012' AND `Submitted via` = 'Email';", "sql_id": 37}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.`Complaint_ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint_ID` = T2.`Complaint_ID` WHERE YEAR(T1.`Date_received`) = '2015' AND T2.`Timely_response_` = 'Yes' AND T2.`Company_response_to_consumer` = 'Closed with explanation';", "sql_id": 38}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.`Submitted via` = 'Phone' AND YEAR(T1.`Date_received`) = 2014;", "sql_id": 39}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Quentin Tarantino' AND CAST(EXTRACT(YEAR FROM T1.release_date) AS UNSIGNED) = 1995;", "sql_id": 40}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN production_country AS T2 ON T1.movie_id = T2.movie_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id WHERE T3.country_name = 'United States of America' AND CAST(EXTRACT(YEAR FROM T1.release_date) AS UNSIGNED) = 2006;", "sql_id": 41}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CASE WHEN T3.country_name = 'United States of America' THEN T1.revenue END) - AVG(CASE WHEN T3.country_name = 'India' THEN T1.revenue END) AS CALCULATE FROM movie AS T1 INNER JOIN production_country AS T2 ON T1.movie_id = T2.movie_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id WHERE CAST(EXTRACT(YEAR FROM T1.release_date) AS UNSIGNED) = 2016;", "sql_id": 42}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM movie WHERE CAST(STR_TO_DATE(release_date, '%Y-%m-%d') AS UNSIGNED) < 2000 LIMIT 5;", "sql_id": 43}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.company_id FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id WHERE CAST(EXTRACT(YEAR FROM T1.release_date) AS UNSIGNED) = 1916;", "sql_id": 44}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM movie WHERE CAST(EXTRACT(YEAR FROM release_date) AS UNSIGNED) = 1945;", "sql_id": 45}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Adventure' AND CAST(EXTRACT(YEAR FROM T1.release_date) AS SIGNED) = 2000;", "sql_id": 46}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.title \nFROM production_company AS T1 \nINNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id \nINNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id \nWHERE T1.company_name = 'Paramount Pictures' \nAND CAST(EXTRACT(YEAR FROM T3.release_date) AS UNSIGNED) = 2000;", "sql_id": 47}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(SUBSTRING(Name, LOCATE('.', Name) + 1), 1, LOCATE('.', SUBSTRING(Name, LOCATE('.', Name) + 1)) - 1) AS task FROM Method WHERE NameTokenized = 'online median filter test median window filling';", "sql_id": 48}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(SUBSTRING(Name, LOCATE('.', Name) + 1), 1, LOCATE('.', SUBSTRING(Name, LOCATE('.', Name) + 1)) - 1) AS task FROM Method WHERE NameTokenized = 'html parser feed';", "sql_id": 49}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(SUBSTRING(Name, LOCATE('.', Name) + 1), 1, LOCATE('.', SUBSTRING(Name, LOCATE('.', Name) + 1)) - 1) AS task FROM Method WHERE Id = 2", "sql_id": 50}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT SUBSTRING(SUBSTRING(Name, LOCATE('.', Name) + 1), 1, LOCATE('.', SUBSTRING(Name, LOCATE('.', Name) + 1)) - 1) AS task FROM Method WHERE NameTokenized = 'string extensions to pascal case';", "sql_id": 52}
{"model": "gpt-3.5-turbo", "message": "SELECT ((MAX(CAST(SUBSTRING(T2.screentime, 3, 2) AS DECIMAL)) - MIN(CAST(SUBSTRING(T2.screentime, 3, 2) AS DECIMAL))) * 100 / MIN(CAST(SUBSTRING(T2.screentime, 3, 2) AS DECIMAL))) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'Batman';", "sql_id": 53}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.age FROM app_events AS T1 INNER JOIN events_relevant AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.device_id = T3.device_id WHERE T1.is_active = 1 AND T2.longitude = 121 AND T2.latitude = 31 AND SUBSTRING(T2.timestamp, 1, 10) = '2016-05-06' ORDER BY T3.age DESC LIMIT 1;", "sql_id": 54}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T2.gender = 'F', 1, 0)) * 100 / COUNT(T2.device_id) AS perFemale, SUM(IF(T2.gender = 'M', 1, 0)) * 100 / COUNT(T2.device_id) AS perMale\nFROM phone_brand_device_model2 AS T1\nINNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id\nWHERE T1.phone_brand = 'OPPO';", "sql_id": 55}
{"model": "gpt-3.5-turbo", "message": "SELECT longitude, latitude FROM `events` WHERE SUBSTRING(`timestamp`, 1, 10) = '2016-05-08';", "sql_id": 56}
{"model": "gpt-3.5-turbo", "message": "SELECT app_id, IF(is_installed = 1, 'YES', 'NO') AS status FROM app_events WHERE event_id = 844;", "sql_id": 57}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(event_id) FROM events WHERE SUBSTRING(`timestamp`, 1, 10) = '2016-04-30';", "sql_id": 58}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(gender = 'M' AND `_group` = 'M27-28', 1, 0)) / SUM(IF(gender = 'F' AND `_group` = 'F27-28', 1, 0)) AS r FROM gender_age;", "sql_id": 59}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.event_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T1.gender = 'M' AND SUBSTR(`timestamp`, 1, 10) = '2016-05-04' AND T1.age = 88;", "sql_id": 60}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.device_model = 'Nexus 5', 1, 0)) * 100 / COUNT(T1.device_id) AS per, \nSUM(IF(T1.device_model = 'Nexus 5' AND T2.gender = 'M', 1, 0)) / SUM(IF(T1.device_model = 'Nexus 5' AND T2.gender = 'F', 1, 0)) AS r \nFROM phone_brand_device_model2 AS T1 \nINNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id \nWHERE T1.phone_brand = 'LG';", "sql_id": 62}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(event_id) FROM `events` WHERE SUBSTRING(`timestamp`, 1, 4) = '2016';", "sql_id": 63}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(event_id) FROM `events` WHERE SUBSTRING(`timestamp`, 1, 4) = '2016' AND device_id = 29182687948017100;", "sql_id": 64}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.event_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE YEAR(T1.timestamp) = 2016 AND T2.phone_brand = 'vivo';", "sql_id": 65}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.`_group` = 'M23-26', 1.0, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo';", "sql_id": 66}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T2.phone_brand = 'vivo', 1, 0)) / COUNT(T1.device_id) AS per FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE T1.event_id = '2';", "sql_id": 67}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.category = '80s Japanese comic', 1, 0)) / COUNT(T1.label_id) AS J8 , SUM(IF(T1.category = '90s Japanese comic', 1, 0)) / COUNT(T1.label_id) AS J9 FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id;", "sql_id": 68}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.phone_brand = 'OPPO', 1, 0)) / SUM(IF(T1.device_id = 'R815T', 1, 0)) AS num FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T2.gender = 'F';", "sql_id": 69}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(event_id) FROM events WHERE SUBSTRING(`timestamp`, 1, 10) = '2016-05-06';", "sql_id": 70}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T3.device_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.device_id = T3.device_id WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-02' AND T1.is_active = 1 AND T3.age = '30';", "sql_id": 71}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.event_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id WHERE SUBSTRING(T2.`timestamp`, 1, 10) = '2016-05-06' AND T1.is_installed = '1';", "sql_id": 72}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.app_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.event_id = T3.device_id WHERE SUBSTR(T2.`timestamp`, 1, 10) = '2016-05-07' AND T1.is_active = '1' AND T3.`group` = 'F29-32';", "sql_id": 73}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(timestamp = '2016-05-02 7:50:28', 1, 0)) / SUM(IF(timestamp = '2016-05-02 7:41:03', 1, 0)) AS num FROM events AS T1 INNER JOIN app_events AS T2 ON T1.event_id = T2.event_id WHERE T2.is_active = '1';", "sql_id": 74}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(phone_brand = 'vivo', 1, 0)) - SUM(IF(phone_brand = 'LG', 1, 0)) AS num FROM phone_brand_device_model2;", "sql_id": 75}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id WHERE YEAR(T2.timestamp) = 2016 AND T1._group = 'M23-26';", "sql_id": 76}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(SUM(IF(T2.category = 'Securities', 1, 0)) - SUM(IF(T2.category = 'Finance', 1, 0)) > 0, 'Securities', 'Finance') AS diff FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id;", "sql_id": 77}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.gender = 'M', 1, 0)) / SUM(IF(T1.gender = 'F', 1, 0)) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo';", "sql_id": 78}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T2.category = 'Securities', 1, 0)) / SUM(IF(T2.category = 'Finance', 1, 0)) AS per FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id;", "sql_id": 79}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(is_active = 1, 1, 0)) / SUM(IF(is_active = 0, 1, 0)) AS per FROM app_events WHERE event_id = 58;", "sql_id": 80}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(gender = 'M', 1, 0)) / COUNT(device_id) AS per FROM gender_age;", "sql_id": 81}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.device_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' AND DATE_FORMAT(T1.`timestamp`, '%Y-%m-%d') = '2016-05-01';", "sql_id": 82}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.gender = 'M', 1, 0)) / SUM(IF(T1.gender = 'F', 1, 0)) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo' AND T2.device_model = 'X5Pro';", "sql_id": 83}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.gender = 'F' AND T1.age > 80, 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'HTC';", "sql_id": 84}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.age < 50, 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO';", "sql_id": 85}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.age > 20, 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'SUGAR';", "sql_id": 86}
{"model": "gpt-3.5-turbo", "message": "SELECT longitude, latitude FROM events WHERE DATE(timestamp) = '2016-04-30';", "sql_id": 87}
{"model": "gpt-3.5-turbo", "message": "SELECT T.gender FROM ( SELECT T1.gender, COUNT(T1.device_id) AS num FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE DATE(T2.timestamp) BETWEEN '2016-05-01' AND '2016-05-10' GROUP BY T1.gender ) AS T ORDER BY T.num DESC LIMIT 1;", "sql_id": 88}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.gender = 'F', 1, 0)) / SUM(IF(T1.gender = 'M', 1, 0)) AS per FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id INNER JOIN app_events_relevant AS T3 ON T2.event_id = T3.event_id WHERE T3.is_installed = 0;", "sql_id": 89}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(latitude != 0 AND longitude != 0, 1, 0)) - SUM(IF(latitude = 0 AND longitude = 0, 1, 0)) AS diff FROM events WHERE device_id = '-922956879900150000';", "sql_id": 90}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(is_installed = 1 AND is_active = 0, 1, 0)) / COUNT(app_id) AS perrcent FROM app_events WHERE event_id = 6;", "sql_id": 91}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(SUM(IF(T1.gender = 'M', 1, 0)) - SUM(IF(T1.gender = 'F', 1, 0)) > 0, 'M', 'F') AS gender FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Note 2';", "sql_id": 92}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.category = 'Academic Information', 1.0, 0)) / COUNT(T2.app_id) AS per FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id;", "sql_id": 93}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.`_group` = 'F27-28', 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE SUBSTR(T2.timestamp, 1, 10) = '2016-05-03';", "sql_id": 94}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.gender IS NULL AND T1.age IS NULL AND T1._group IS NULL, 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo';", "sql_id": 95}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE YEAR(T1.air_date) = 1998 AND T2.organization = 'International Monitor Awards' AND T2.result = 'Winner';", "sql_id": 96}
{"model": "gpt-3.5-turbo", "message": "SELECT t3.years, t3.episode_id FROM ( SELECT DISTINCT T2.year AS years, T2.episode_id, row_number() OVER (PARTITION BY T2.episode_id ORDER BY T2.year) AS rm FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.award = 'Television' AND T2.award_category = 'Silver Gavel Award' AND T1.name = 'Constantine Makris' AND T2.result = 'Winner' AND T2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts' ) AS T3 GROUP BY t3.episode_id HAVING COUNT(t3.years - t3.rm) >= 2;", "sql_id": 97}
{"model": "gpt-3.5-turbo", "message": "SELECT t3.name \nFROM ( \n    SELECT DISTINCT T2.year AS years, T1.name, ROW_NUMBER() OVER (PARTITION BY T1.name ORDER BY T2.year) AS rm \n    FROM Person AS T1 \n    INNER JOIN Award AS T2 ON T1.person_id = T2.person_id \n    WHERE T2.award = 'Television' \n    AND T2.award_category = 'Silver Gavel Award' \n    AND T2.series = 'Law and Order' \n    AND T2.result = 'Winner' \n    AND T2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts' \n) AS T3 \nGROUP BY t3.name \nHAVING COUNT(t3.years - t3.rm) >= 2;", "sql_id": 98}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN YEAR(T2.DATE) = '2009' THEN T2.VALUE END) - SUM(CASE WHEN YEAR(T2.DATE) = '2008' THEN T2.VALUE END) AS increase, T2.UNITS\nFROM patients AS T1\nINNER JOIN observations AS T2 ON T1.patient = T2.PATIENT\nWHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.DESCRIPTION = 'Body Height';", "sql_id": 99}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(T2.STOP, T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.DESCRIPTION LIKE 'Acetaminophen%';", "sql_id": 100}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(T2.STOP, T2.START) AS days FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.DESCRIPTION = 'Cystitis';", "sql_id": 101}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(DATEDIFF(T2.STOP, T2.START)) AS DECIMAL) / COUNT(T1.patient) FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mr.' AND T1.first = 'Wesley' AND T1.last = 'Lemke';", "sql_id": 102}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(DATEDIFF(T2.STOP, T2.START)) AS DECIMAL) / COUNT(T2.PATIENT) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Ms.' AND T1.first = 'Angelena' AND T1.last = 'Kertzmann' AND T2.description = 'Normal pregnancy';", "sql_id": 103}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(PATIENT) FROM conditions WHERE DESCRIPTION = 'Diabetes' AND YEAR(START) = '1988';", "sql_id": 105}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Ibuprofen 200 MG Oral Tablet' AND T1.ethnicity = 'dominican' AND YEAR(T2.START) = '2016' AND MONTH(T2.STOP) - MONTH(T2.START) = 1;", "sql_id": 106}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE DESCRIPTION = 'Pneumonia' AND YEAR(T1.birthdate) LIKE '192%';", "sql_id": 107}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first, T1.last, T1.suffix FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Yaz 28 Day Pack' AND YEAR(T2.START) = 2011;", "sql_id": 108}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.race = 'black' AND T2.DESCRIPTION = 'DTaP' AND YEAR(T2.DATE) = '2013';", "sql_id": 109}
{"model": "gpt-3.5-turbo", "message": "SELECT YEAR(T2.deathdate) - YEAR(T2.birthdate) AS age FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.first = 'Giovanni' AND T2.last = 'Russel' AND T1.DESCRIPTION = 'Hypertension';", "sql_id": 110}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.DESCRIPTION FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.deathdate IS NOT NULL ORDER BY YEAR(T2.deathdate) - YEAR(T2.birthdate) DESC LIMIT 1;", "sql_id": 111}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first, T1.last \nFROM patients AS T1 \nINNER JOIN medications AS T2 ON T1.patient = T2.PATIENT \nWHERE T2.DESCRIPTION = 'Clopidogrel 75 MG Oral Tablet' \nAND YEAR(T2.STOP) - YEAR(T2.START) > 10;", "sql_id": 112}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.first, T2.last , CASE WHEN T2.deathdate IS NULL THEN TIMESTAMPDIFF(YEAR, T1.DATE, T2.birthdate) ELSE TIMESTAMPDIFF(YEAR, T2.birthdate, T2.deathdate) END AS age FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Systolic Blood Pressure' AND T1.VALUE = 200 AND T1.UNITS = 'mmHg' AND YEAR(T1.DATE) = 2011;", "sql_id": 113}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Influenza seasonal injectable preservative free' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.patient), SUM(CASE WHEN T1.ethnicity = 'english' THEN 1 ELSE 0 END) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE YEAR(T2.DATE) = '2017';", "sql_id": 114}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.deathdate IS NULL THEN YEAR(T2.STOP) - YEAR(T1.birthdate) ELSE YEAR(T1.deathdate) - YEAR(T1.birthdate) END) AS DECIMAL) / COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T2.REASONDESCRIPTION = 'Prediabetes';", "sql_id": 115}
{"model": "gpt-3.5-turbo", "message": "SELECT \n    CASE \n        WHEN SUBSTRING(T1.STOP, -2, 1) != '9' THEN CAST(SUBSTRING(T1.STOP, LENGTH(T1.STOP) - 1) AS SIGNED) + 2000 \n    END - \n    CASE \n        WHEN SUBSTRING(T1.START, -2, 1) = '9' THEN CAST(SUBSTRING(T1.START, LENGTH(T1.START) - 1) AS SIGNED) + 1900 \n        ELSE CAST(SUBSTRING(T1.START, LENGTH(T1.START) - 1) AS SIGNED) + 2000 \n    END AS years, \n    T1.DESCRIPTION \nFROM \n    allergies AS T1 \nINNER JOIN \n    patients AS T2 ON T2.patient = T1.PATIENT \nWHERE \n    T1.STOP IS NOT NULL \n    AND T1.START IS NOT NULL \n    AND T2.first = 'Isadora' \n    AND T2.last = 'Moen';", "sql_id": 116}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.marital = 'M' AND DATEDIFF(T2.STOP, T2.START) > 60;", "sql_id": 117}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(T2.STOP, T2.START) AS takenDays FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Berry' AND T1.last = 'Keebler' AND T2.REASONDESCRIPTION = 'Acute bronchitis (disorder)' AND T2.DESCRIPTION = 'Acetaminophen 160 MG';", "sql_id": 118}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.marital = 'S' AND T2.REASONDESCRIPTION = 'Cystitis' AND T2.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]' AND YEAR(T2.START) = 2010;", "sql_id": 119}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.REASONDESCRIPTION, T2.DESCRIPTION, DATEDIFF(T2.STOP, T2.START) AS days, CASE WHEN T1.deathdate IS NULL THEN 'alive' ELSE 'dead' END FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.ENCOUNTER = '23c293ec-dbae-4a22-896e-f12cf3c8bac3';", "sql_id": 120}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first, T1.last \nFROM patients AS T1 \nINNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT \nWHERE T2.DESCRIPTION = 'Shellfish allergy' \nAND (DATEDIFF(T1.deathdate, T1.birthdate) / 365) < 12;", "sql_id": 121}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(T2.STOP, T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = ' Amoxicillin 250 MG / Clavulanate 125 MG [Augmentin]' AND T1.first = 'Major' AND T1.last = 'D''Amore';", "sql_id": 122}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND YEAR(T2.START) = '2013';", "sql_id": 123}
{"model": "gpt-3.5-turbo", "message": "SELECT (SUM(CASE WHEN ROUND((DATEDIFF(T2.DATE, T1.birthdate) / 365)) BETWEEN 20 AND 30 THEN T2.VALUE ELSE 0 END) / COUNT(CASE WHEN ROUND((DATEDIFF(T2.DATE, T1.birthdate) / 365)) BETWEEN 20 AND 30 THEN T2.PATIENT END)) - (SUM(CASE WHEN ROUND((DATEDIFF(T2.DATE, T1.birthdate) / 365)) BETWEEN 50 AND 60 THEN T2.VALUE ELSE 0 END) / COUNT(CASE WHEN ROUND((DATEDIFF(T2.DATE, T1.birthdate) / 365)) BETWEEN 50 AND 60 THEN T2.PATIENT END)) AS difference\nFROM patients AS T1\nINNER JOIN observations AS T2 ON T1.patient = T2.PATIENT\nWHERE T2.DESCRIPTION = 'Glucose';", "sql_id": 124}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T5.DESCRIPTION = T3.DESCRIPTION THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T3.patient) FROM ( SELECT T2.DESCRIPTION, T1.patient FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE ROUND((DATEDIFF(T2.START, T1.birthdate) / 365)) > 60 GROUP BY T2.DESCRIPTION ORDER BY COUNT(T2.DESCRIPTION) DESC LIMIT 1 ) AS T3 INNER JOIN patients AS T4 ON T3.patient = T4.patient INNER JOIN conditions AS T5 ON T4.patient = T5.PATIENT WHERE ROUND((DATEDIFF(T5.START, T4.birthdate) / 365)) > 60;", "sql_id": 125}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(`PATIENT`) AS DECIMAL) / COUNT(DISTINCT YEAR(`DATE`)) FROM `procedures` WHERE `DESCRIPTION` = 'Combined chemotherapy and radiation therapy (procedure)';", "sql_id": 126}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(T2.STOP, T2.START) AS timeFrame, T2.DESCRIPTION FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Jacquelyn' AND T1.last = 'Shanahan' ORDER BY T2.START DESC LIMIT 1;", "sql_id": 127}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Joye' AND T1.last = 'Homenick' AND YEAR(T2.START) = '2017';", "sql_id": 128}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(T2.STOP, T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND last = 'Koss' AND T2.DESCRIPTION = 'Acetaminophen 160 MG';", "sql_id": 129}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.PATIENT) FROM encounters AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE YEAR(T1.DATE) = '2010' AND T1.REASONDESCRIPTION = 'Contact dermatitis';", "sql_id": 130}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.patient) , CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Prenatal visit' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.patient) FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Lorri' AND T1.last = 'Simonis' AND YEAR(T2.DATE) BETWEEN 2010 AND 2017;", "sql_id": 131}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.race = 'hispanic' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.PATIENT) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE YEAR(T1.stop) = '2011';", "sql_id": 132}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.PATIENT) AS percentage FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE YEAR(T1.START) = '2010';", "sql_id": 133}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.race = 'black' AND YEAR(T1.STOP) = '2017';", "sql_id": 134}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Penicillin V Potassium 250 MG' AND YEAR(T2.START) >= 1948;", "sql_id": 135}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.patient WHERE YEAR(T1.birthdate) = '1935' AND T1.race = 'white' AND T2.DESCRIPTION = 'Stroke';", "sql_id": 136}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.first, T2.last FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Drug overdose' AND ROUND((DATEDIFF(T2.deathdate, T2.birthdate) / 365)) = 44;", "sql_id": 137}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.deathdate IS NULL THEN ROUND((DATEDIFF(NOW(), T2.birthdate) / 365)) ELSE ROUND((DATEDIFF(T2.deathdate, T2.birthdate) / 365)) END) / COUNT(T2.patient) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Hypertension' AND T2.gender = 'M';", "sql_id": 138}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.priceEach * T3.quantityOrdered \nFROM customers AS T1 \nINNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber \nINNER JOIN orderdetails AS T3 ON T2.orderNumber = T3.orderNumber \nWHERE T1.customerName = 'Rovelli Gifts' \nAND T2.status = 'Shipped' \nAND YEAR(T2.shippedDate) = 2003;", "sql_id": 140}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.checkNumber) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE customerName = 'Euro+ Shopping Channel' AND YEAR(T1.paymentDate) = '2004';", "sql_id": 141}
{"model": "gpt-3.5-turbo", "message": "SELECT (SELECT COUNT(customerNumber) FROM customers WHERE creditLimit <= 100000 AND customerNumber IN (SELECT customerNumber FROM payments WHERE YEAR(paymentDate) = '2004')), T1.customerName\nFROM customers AS T1\nINNER JOIN payments AS T2 ON T1.customerNumber = T2.customerNumber\nWHERE T1.creditLimit <= 100000 AND YEAR(T2.paymentDate) = '2004'\nGROUP BY T1.customerNumber, T1.customerName\nORDER BY SUM(T2.amount) DESC\nLIMIT 1;", "sql_id": 142}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.orderNumber) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.quantityOrdered < 30 AND YEAR(T2.orderDate) = 2003;", "sql_id": 143}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.quantityOrdered * T2.priceEach) / COUNT(T3.orderNumber) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber WHERE T1.productVendor = 'Exoto Designs' AND YEAR(T3.orderDate) = 2005;", "sql_id": 144}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(amount) FROM payments WHERE YEAR(paymentDate) = 2003 AND customerNumber IN ( SELECT customerNumber FROM customers WHERE creditLimit = 0 );", "sql_id": 145}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(customernumber) FROM ( SELECT customernumber FROM payments WHERE YEAR(paymentDate) >= 2003 AND YEAR(paymentDate) <= 2004 GROUP BY customernumber HAVING COUNT(customernumber) > 3 ) T", "sql_id": 146}
{"model": "gpt-3.5-turbo", "message": "```sql\nSELECT T3.addressLine1, T3.addressLine2, T3.phone \nFROM orderdetails AS T1 \nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber \nINNER JOIN customers AS T3 ON T2.customerNumber = T3.customerNumber \nINNER JOIN employees AS T4 ON T3.salesRepEmployeeNumber = T4.employeeNumber \nINNER JOIN offices AS T5 ON T4.officeCode = T5.officeCode \nWHERE YEAR(T2.orderDate) = 2005 AND T4.jobTitle = 'Sales Rep' \nORDER BY T1.quantityOrdered DESC \nLIMIT 1;\n```", "sql_id": 147}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.orderDate \nFROM orderdetails AS T1 \nINNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber \nWHERE DATE_FORMAT(T2.orderDate, '%Y-%m-%d') = '2005-04-08' OR DATE_FORMAT(T2.orderDate, '%Y-%m-%d') = '2005-04-10' \nORDER BY T1.quantityOrdered * T1.priceEach DESC \nLIMIT 1;", "sql_id": 148}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(CASE WHEN DATEDIFF(t1.shippeddate, t1.requireddate) > 3 THEN t1.customerNumber ELSE NULL END) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber WHERE t1.status = 'Shipped';", "sql_id": 149}
{"model": "gpt-3.5-turbo", "message": "SELECT t2.customerName \nFROM payments AS t1 \nINNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber \nWHERE YEAR(t1.paymentDate) = '2005' \nGROUP BY t2.customerNumber, t2.customerName \nORDER BY SUM(t1.amount) DESC \nLIMIT 1;", "sql_id": 150}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN t1.customerName = 'Atelier graphique' THEN t2.amount ELSE 0 END) * 100 / SUM(t2.amount) FROM customers AS t1 INNER JOIN payments AS t2 ON t1.customerNumber = t2.customerNumber WHERE YEAR(t2.paymentDate) = 2004;", "sql_id": 151}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE t3.productLine = 'motorcycles' AND YEAR(t1.orderDate) = 2004;", "sql_id": 152}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_FORMAT(t1.paymentDate, '%Y'), COUNT(t1.customerNumber) FROM payments AS t1 WHERE t1.amount < 10000 GROUP BY DATE_FORMAT(t1.paymentDate, '%Y');", "sql_id": 153}
{"model": "gpt-3.5-turbo", "message": "SELECT t3.productName, SUM(t2.quantityOrdered) \nFROM orders AS t1 \nINNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber \nINNER JOIN products AS t3 ON t2.productCode = t3.productCode \nWHERE YEAR(t1.orderDate) = 2003 \nGROUP BY t3.productName \nORDER BY SUM(t2.quantityOrdered) DESC \nLIMIT 3;", "sql_id": 154}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.food_type = 'mexican', 1, 0)) AS DECIMAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.county = 'monterey county';", "sql_id": 155}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.street_name = '11th st', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'alameda county';", "sql_id": 156}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN food_type = 'american food' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(id_restaurant) FROM generalinfo WHERE city = 'dublin';", "sql_id": 157}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.review > 4, 1, 0)) AS DECIMAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 RIGHT JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.region = 'bay area';", "sql_id": 158}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.region = 'bay area', 1, 0)) AS DECIMAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city;", "sql_id": 159}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.food_type = 'afghani', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE 1000 <= T1.street_num AND T1.street_num <= 2000;", "sql_id": 161}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(Match_Id) FROM `_Match` WHERE SUBSTRING(Match_Date, 1, 4) = '2008' AND SUBSTRING(Match_Date, 7, 1) = '5';", "sql_id": 163}
{"model": "gpt-3.5-turbo", "message": "SELECT Match_Id FROM `_Match` WHERE SUBSTRING(Match_Date, 1, 4) = '2008';", "sql_id": 164}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN SUBSTRING(Match_Date, 7, 1) = '5' THEN 1 ELSE 0 END) FROM `_Match` WHERE SUBSTRING(Match_Date, 1, 4) = '2008';", "sql_id": 167}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN Team_1 = 10 OR Team_2 = 10 THEN 1 ELSE 0 END) FROM `_Match` WHERE SUBSTR(Match_Date, 1, 4) = '2012';", "sql_id": 168}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN Win_Margin > 100 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(`Match_Id`) FROM `_Match`;", "sql_id": 169}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Role_Desc = 'CaptainKeeper' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.Player_Id) FROM Player_Match AS T1 INNER JOIN Rolee AS T2 ON T1.Role_Id = T2.Role_Id;", "sql_id": 170}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Bowling_skill = ' Legbreak' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id;", "sql_id": 171}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN T1.Team_1 = T1.Match_Winner AND T1.Team_1 = T1.Toss_Winner THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.Team_1) FROM `_Match` AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id INNER JOIN Toss_Decision AS T3 ON T1.Toss_Decide = T3.Toss_Id WHERE T3.Toss_Name = 'field' AND T2.Win_Type = 'runs';", "sql_id": 172}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN T2.Win_Margin < 10 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.Venue_Id) FROM Venue AS T1 INNER JOIN _Match AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T1.Venue_Name = 'Dr DY Patil Sports Academy';", "sql_id": 173}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Player_Name \nFROM Player AS T1 \nINNER JOIN Season AS T2 ON T1.Player_Id = T2.Purple_Cap \nORDER BY T2.Season_Year - SUBSTRING(T1.DOB, 1, 4) \nLIMIT 1;", "sql_id": 174}
{"model": "gpt-3.5-turbo", "message": "SELECT 2022 - SUBSTRING(DOB, 1, 4) FROM Player WHERE Player_Name = 'Ishan Kishan';", "sql_id": 175}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Player_Name \nFROM Player AS T1 \nINNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id \nINNER JOIN _Match AS T3 ON T2.Match_Id = T3.Match_Id \nWHERE SUBSTRING(T3.Match_Date, 1, 4) = '2014' \nAND SUBSTRING(T3.Match_Date, 7, 1) = '6' \nLIMIT 2;", "sql_id": 176}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Team_Name \nFROM Team AS T1 \nINNER JOIN _Match AS T2 ON T1.Team_Id = T2.Team_1 OR T1.Team_Id = T2.Team_2 \nINNER JOIN Win_By AS T3 ON T2.Win_Type = T3.Win_Id \nWHERE SUBSTRING(T2.Match_Date, 1, 4) = '2015' AND T3.Win_Type = 'Tie' \nLIMIT 1;", "sql_id": 177}
{"model": "gpt-3.5-turbo", "message": "SELECT 2008 - YEAR(DOB) FROM Player WHERE Player_Name = 'SC Ganguly';", "sql_id": 178}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.Country_Name = 'India' THEN 1 ELSE 0 END) AS DECIMAL) / COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id WHERE YEAR(T1.DOB) BETWEEN '1975' AND '1985';", "sql_id": 179}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(Player_Id) FROM Player WHERE YEAR(DOB) BETWEEN 1970 AND 1975;", "sql_id": 180}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.u_gender = 'F', 1, 0)) AS DECIMAL) * 100 / COUNT(T2.userid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 2;", "sql_id": 181}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T3.a_quality >= 3, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK';", "sql_id": 183}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.avg_revenue > T2.d_quality THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN directors AS T2 ON T1.directorid = T2.directorid WHERE T1.genre = 'Action';", "sql_id": 184}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.rating = 1, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'USA';", "sql_id": 185}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T3.a_gender = 'M', 1, 0)) AS DECIMAL) / SUM(IF(T3.a_gender = 'F', 1, 0)) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK';", "sql_id": 186}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.cast_num = 2 AND T1.a_quality = 2, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.actorid) FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid WHERE T2.movieid = 1672580 AND T1.a_gender = 'F';", "sql_id": 187}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(a_gender = 'M', 1, 0)) AS DECIMAL) / SUM(IF(a_gender = 'F', 1, 0)) FROM actors WHERE a_quality = 0;", "sql_id": 188}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.a_gender = 'F', 1, 0)) , T3.country, T3.runningtime FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid INNER JOIN movies AS T3 ON T2.movieid = T3.movieid WHERE T2.movieid = 2312852 GROUP BY T3.country, T3.runningtime;", "sql_id": 189}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.isEnglish = 'T', 1, 0)) - SUM(IF(T1.isEnglish = 'F', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'other' AND T1.year = 3;", "sql_id": 190}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN a_gender = 'M' THEN 1 ELSE 0 END) , SUM(CASE WHEN a_gender = 'F' THEN 1 ELSE 0 END) , CAST(SUM(CASE WHEN a_quality = 5 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) , CAST(SUM(CASE WHEN a_quality = 0 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*), ( SELECT directorid FROM movies2directors WHERE movieid = 1684910 ) , ( SELECT genre FROM movies2directors WHERE movieid = 1684910 ) FROM actors WHERE actorid IN ( SELECT actorid FROM movies2actors WHERE movieid = 1684910 );", "sql_id": 191}
{"model": "gpt-3.5-turbo", "message": "SELECT MAX(DATEDIFF(`Ship_Date`, `Order_Date`)) AS longestTimeDays FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T1.`Customer_Name` = 'Aimee Bixby';", "sql_id": 192}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product_ID` WHERE T1.`Customer_Name` = 'Aimee Bixby' AND YEAR(T2.`Ship_Date`) = 2016;", "sql_id": 193}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.`Product_ID`) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product_ID` = T2.`Product_ID` WHERE T2.`Sub_Category` = 'Art' AND T1.Region = 'East' AND YEAR(T1.`Order_Date`) = 2013;", "sql_id": 194}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.`Order_ID`) FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T2.`Customer_Name` = 'Maxwell Schwartz' AND YEAR(T1.`Order_Date`) = 2015;", "sql_id": 195}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.`Product_Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` INNER JOIN product AS T3 ON T3.`Product_ID` = T1.`Product_ID` WHERE T2.`Customer_Name` = 'Matt Abelman' AND YEAR(T1.`Order_Date`) = 2013;", "sql_id": 196}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM((T1.Sales / (1 - T1.Discount)) * T1.Quantity - T1.Profit) AS cost FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.Customer_ID = T2.Customer_ID INNER JOIN product AS T3 ON T1.Product_ID = T3.Product_ID AND T1.Region = T3.Region WHERE T1.Region = 'East' AND T2.Customer_Name = 'Brad Thomas' AND YEAR(T1.Order_Date) = '2016';", "sql_id": 197}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.Sales) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.Product_ID = T2.Product_ID WHERE YEAR(T1.Order_Date) = '2016' AND T2.Category = 'Furniture';", "sql_id": 198}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.`Customer_Name` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE YEAR(T1.`Order_Date`) = 2015 GROUP BY T2.`Customer_Name` HAVING COUNT(T2.`Customer_Name`) > 3;", "sql_id": 199}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.`Customer_ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T1.`Customer_Name` = 'Corey Roper' AND YEAR(T2.`Ship_Date`) = 2015;", "sql_id": 200}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.`Customer_Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T2.Segment = 'Corporate' AND T2.State = 'Rhode Island' AND T2.Region = 'East' AND YEAR(T1.`Order_Date`) = 2016 GROUP BY T2.`Customer_Name` ORDER BY COUNT(T2.`Customer_Name`) DESC LIMIT 1;", "sql_id": 201}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT DATEDIFF(`Ship_Date`, `Order_Date`) AS duration FROM central_superstore WHERE `Order_ID` = 'CA-2011-134103';", "sql_id": 202}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.`Product_Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product_ID` = T2.`Product_ID` WHERE DATE_FORMAT(T1.`Ship_Date`, '%Y-%m') = '2013-03';", "sql_id": 203}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.`Order_ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T1.`Customer_Name` = 'Alan Barnes' AND YEAR(T2.`Order_Date`) = 2015;", "sql_id": 204}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.`Ship_Mode` = 'First Class' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product_ID` = T2.`Product_ID` WHERE T2.Category = 'Furniture' AND YEAR(T1.`Ship_Date`) = 2013;", "sql_id": 205}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.`Product_Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product_ID` = T2.`Product_ID` WHERE T2.Region = 'Central' AND YEAR(T1.`Order_Date`) = 2016 ORDER BY T1.Profit ASC LIMIT 1;", "sql_id": 206}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(race = 'W', 1, 0)) AS DECIMAL) * 100 / COUNT(case_number) FROM officers WHERE gender = 'M';", "sql_id": 207}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_FORMAT(date, '%Y') FROM incidents WHERE subject_weapon = 'Handgun' GROUP BY DATE_FORMAT(date, '%Y') ORDER BY COUNT(case_number) DESC LIMIT 1;", "sql_id": 209}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(YEAR(date) = 2007, 1, 0)) - SUM(IF(YEAR(date) = 2008, 1, 0)) FROM incidents WHERE subject_weapon = 'Vehicle';", "sql_id": 210}
{"model": "gpt-3.5-turbo", "message": "SELECT case_number FROM incidents WHERE YEAR(date) > 2011 AND subject_statuses = 'Deceased';", "sql_id": 211}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.Chromosome > 10 AND T3.Chromosome > 10, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 INNER JOIN Genes AS T3 ON T3.GeneID = T2.GeneID2 WHERE T2.Expression_Corr > 0;", "sql_id": 212}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.Expression_Corr > 0, 1, 0)) AS DECIMAL) * 100 / COUNT(T2.GeneID1) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Phenotype = 'Nucleic acid metabolism defects' AND T1.Motif = 'PS00107';", "sql_id": 213}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT `App`, `Sentiment` FROM `user_reviews` WHERE `App` IN (SELECT `App` FROM `playstore` WHERE CAST(SUBSTR(`Last Updated`, -4, 4) AS SIGNED) < 2015);", "sql_id": 214}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN SUBSTR('Last Updated', -4) > '2018' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`App`) AS PER FROM `playstore` WHERE `Type` = 'Free' AND `Rating` >= 4.5;", "sql_id": 216}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT IF(`Customer_Names` LIKE '%Group%', `Customer_Names`, NULL) AS T FROM `Customers` ) AS subquery WHERE T IS NOT NULL;", "sql_id": 217}
{"model": "gpt-3.5-turbo", "message": "```sql\nSELECT DISTINCT T1.`Customer_Names`\nFROM Customers AS T1\nINNER JOIN `Sales_Orders` AS T2 ON T2._CustomerID = T1.CustomerID\nINNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID\nWHERE T3.`Product_Name` = 'Cocktail Glasses'\nAND SUBSTRING(T2.OrderDate, -2) = '20'\nAND T2.`Discount_Applied` = (\n    SELECT T2.`Discount_Applied`\n    FROM Customers AS T1\n    INNER JOIN `Sales_Orders` AS T2 ON T2._CustomerID = T1.CustomerID\n    INNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID\n    WHERE T3.`Product_Name` = 'Cocktail Glasses'\n    AND T2.OrderDate LIKE '%/%/20'\n    ORDER BY T2.`Discount_Applied` DESC\n    LIMIT 1\n);\n```", "sql_id": 218}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(OrderDate = '5/31/18', 1, 0)) FROM `Sales_Orders`;", "sql_id": 219}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT IF(DeliveryDate = '6/13/18', OrderNumber, NULL) AS T FROM `Sales_Orders` ) AS subquery WHERE T IS NOT NULL;", "sql_id": 220}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(`Order_Quantity` > 5, 1, 0)) FROM `Sales_Orders`;", "sql_id": 221}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT IF(StateCode = 'GA', State, NULL) AS T FROM Regions ) AS subquery WHERE T IS NOT NULL;", "sql_id": 222}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT DISTINCT IF(T1.`Unit Cost` = 781.22, T2.`Product Name`, NULL) AS T FROM `Sales_Orders` T1 INNER JOIN Products T2 ON T2.ProductID = T1._ProductID ) AS subquery WHERE T IS NOT NULL;", "sql_id": 223}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT DISTINCT IF(T2.`Product Name` = 'Cookware', T1.DeliveryDate, NULL) AS T FROM `Sales_Orders` T1 INNER JOIN Products T2 ON T2.ProductID = T1._ProductID ) AS subquery WHERE T IS NOT NULL;", "sql_id": 224}
{"model": "gpt-3.5-turbo", "message": "SELECT T FROM ( SELECT DISTINCT IF(T1.`Discount Applied` = 0.1, T2.`Product Name`, NULL) AS T FROM `Sales_Orders` T1 INNER JOIN Products T2 ON T2.ProductID = T1._ProductID ) AS subquery WHERE T IS NOT NULL;", "sql_id": 225}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(T1.OrderDate, -2, 2) FROM `Sales_Orders` AS T1 INNER JOIN `Sales_Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.`Sales_Team` = 'George Lewis' GROUP BY SUBSTRING(T1.OrderDate, -2, 2) ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1;", "sql_id": 226}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT IF(OrderNumber = 'SO - 000103', `Unit Cost`, NULL) AS T FROM `Sales_Orders` ) AS subquery WHERE T IS NOT NULL;", "sql_id": 227}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(COUNT(T2.CustomerID) > 3, T2.`Customer Names`, NULL) FROM `Sales_Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID WHERE T1.OrderDate LIKE '%/%/18' GROUP BY T1._CustomerID HAVING COUNT(T2.CustomerID);", "sql_id": 228}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN SUBSTR(T1.OrderDate, -2) IN ('18', '19', '20') AND T2.Customer_Names = 'Medsep Group' THEN 1 ELSE 0 END) FROM Sales_Orders AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID;", "sql_id": 229}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(WarehouseCode = 'WARE-MKL1006', 1, 0)) - SUM(IF(WarehouseCode = 'WARE-NBV1002', 1, 0)) AS difference FROM `Sales_Orders`;", "sql_id": 230}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT OrderNumber, `Product Name` FROM ( SELECT IF(T2.OrderDate = '6/6/18', T2.OrderNumber, NULL) AS `OrderNumber`, IF(T2.OrderDate = '6/6/18', T1.`Product Name`, NULL) AS `Product Name` FROM Products T1 INNER JOIN `Sales_Orders` T2 ON T2._ProductID = T1.ProductID ) AS subquery WHERE OrderNumber IS NOT NULL AND `Product Name` IS NOT NULL;", "sql_id": 231}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T FROM ( SELECT IF(_CustomerID = 11, ProcuredDate, NULL) AS T FROM `Sales_Orders` ) AS subquery WHERE T IS NOT NULL;", "sql_id": 232}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(ShipDate LIKE '6/%/18' AND `Sales_Channel` = 'Online', 1, 0)) FROM `Sales_Orders`;", "sql_id": 233}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.draftYear - YEAR(T2.birthDate) FROM draft AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.firstName = 'Alexis' AND T1.lastName = 'Ajinca' AND draftRound = 1;", "sql_id": 234}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.firstName, T1.middleName, T1.lastName, 2003 - YEAR(T1.birthDate) FROM awards_players AS T2 JOIN players AS T1 ON T2.playerID = T1.playerID WHERE T2.award = 'Finals MVP' AND T2.year = 2003;", "sql_id": 235}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.lgID = 'ABA', 1970 - YEAR(T3.birthDate), 0)) AS DECIMAL) / COUNT(IF(T2.lgID = 'ABA', 1, NULL)) - CAST(SUM(IF(T2.lgID = 'NBA', 1970 - YEAR(T3.birthDate), 0)) AS DECIMAL) / COUNT(IF(T2.lgID = 'NBA', 1, NULL)) FROM draft AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID INNER JOIN players AS T3 ON T2.playerID = T3.playerID WHERE T1.draftYear BETWEEN 1970 AND 1970;", "sql_id": 236}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.steals IS NOT NULL AND T1.tmID = 'LAL', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.tmID) FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year;", "sql_id": 237}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T2.Act = 1, 1, 0)) - SUM(IF(T2.Act = 5, 1, 0)) AS more FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Twelfth Night';", "sql_id": 238}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.GenreType = 'Tragedy', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.Scene) FROM chapters AS T1 INNER JOIN works AS T2 ON T1.work_id = T2.id WHERE T2.Date = '1594';", "sql_id": 239}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T4.CharName = 'Romeo', 1, 0)), SUM(IF(T4.CharName = 'Juliet', 1, 0)), CAST(SUM(IF(T4.CharName = 'Romeo', 1, 0)) + SUM(IF(T4.CharName = 'Juliet', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id;", "sql_id": 240}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.Title = 'All''s Well That Ends Well', 1, 0)) AS DECIMAL) * 100 / COUNT(T3.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id;", "sql_id": 241}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(GenreType = 'Comedy', 1, 0)) - SUM(IF(GenreType = 'History', 1, 0)) FROM works WHERE Date > 1593;", "sql_id": 242}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.act = 5, 1, 0)) AS DECIMAL) * 100 / COUNT(T2.act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Titus Andronicus';", "sql_id": 243}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.LongTitle FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'Mytilene. A street before the brothel.';", "sql_id": 244}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.Description FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Venus and Adonis' ORDER BY T2.Scene DESC LIMIT 1;", "sql_id": 245}
{"model": "gpt-3.5-turbo", "message": "SELECT teacher_ny_teaching_fellow FROM projects WHERE teacher_acctid = '42d43fa6f37314365d08692e08680973';", "sql_id": 247}
{"model": "gpt-3.5-turbo", "message": "SELECT game_name FROM game AS T ORDER BY LENGTH(T.game_name) DESC LIMIT 1;", "sql_id": 248}
{"model": "gpt-3.5-turbo", "message": "SELECT FullName FROM Conference ORDER BY LENGTH(FullName) DESC LIMIT 1;", "sql_id": 249}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(SUM(CASE WHEN T2.gender = 'F' THEN T2.grad_150 ELSE 0 END) > SUM(CASE WHEN T2.gender = 'M' THEN T2.grad_150 ELSE 0 END), 'female White students', 'male White students') FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Central Alabama Community College' AND T2.year = 2011 AND T2.race = 'W';", "sql_id": 250}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.business_id) , YEAR(NOW()) - T2.user_yelping_since_year FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.user_id = 3;", "sql_id": 251}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.review_stars) / (YEAR(NOW()) - T1.user_yelping_since_year) FROM Users AS T1 INNER JOIN Reviews AS T2 ON T1.user_id = T2.user_id WHERE T1.user_id = 3;", "sql_id": 252}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(T1.closing_time, 1, 2) + 12 - SUBSTRING(T1.opening_time, 1, 2) AS YYSJ FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T2.day_of_week = 'Monday' AND T1.business_id = 15098;", "sql_id": 253}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.business_id \nFROM Business_Hours AS T1 \nINNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id \nINNER JOIN Categories AS T3 ON T2.category_id = T3.category_id \nWHERE T3.category_name = 'Accessories' \nAND CAST(SUBSTRING(T1.opening_time, -4, 2) AS SIGNED) < 7 \nAND T1.opening_time LIKE '%AM';", "sql_id": 254}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(name) FROM Person WHERE birth_region = 'New York' AND SUBSTRING(birthdate, 1, 4) > '1970';", "sql_id": 255}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Outstanding Voice-Over Performance' AND SUBSTRING(T1.year, 1, 4) = '2009' AND T1.person = 'Dan Castellaneta';", "sql_id": 256}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTRING(T1.air_date, 1, 4) = '2009' AND T2.stars = 10 AND T2.percent > 15;", "sql_id": 257}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(T1.year, 1, 4) = '2017' AND T1.award = 'Best International TV Series' AND T1.result = 'Winner';", "sql_id": 259}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(T1.air_date, 6, 2) BETWEEN '10' AND '11';", "sql_id": 260}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.year - CAST(SUBSTRING(T1.birthdate, 1, 4) AS SIGNED) AS age FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.award = 'Outstanding Voice-Over Performance' AND T2.organization = 'Primetime Emmy Awards' AND T2.result = 'Winner';", "sql_id": 261}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.episode_id) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE LEFT(T1.year, 4) = '2009' AND T2.air_date LIKE '2009-04%';", "sql_id": 262}
{"model": "gpt-3.5-turbo", "message": "SELECT award, person FROM Award WHERE result = 'Winner' AND SUBSTRING(year, 1, 4) = '2009';", "sql_id": 263}
{"model": "gpt-3.5-turbo", "message": "SELECT episode, title, rating FROM Episode WHERE SUBSTRING(air_date, 1, 7) LIKE '2008-10%';", "sql_id": 264}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title, T2.episode_image, T1.award, T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.rating BETWEEN 7 AND 10 AND SUBSTRING(T2.air_date, 1, 4) = '2008' AND T1.result = 'Nominee';", "sql_id": 265}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name, T1.birth_place, T2.role, 2022 - CAST(SUBSTRING(T1.birthdate, 1, 4) AS SIGNED) AS age FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.birthdate IS NOT NULL ORDER BY T1.birthdate LIMIT 1;", "sql_id": 266}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.rate, T4.person, T4.award, T5.title, T4.role\nFROM (\n    SELECT CAST(SUM(CASE WHEN T1.result = 'Winner' THEN 1 ELSE 0 END) AS DECIMAL) / SUM(CASE WHEN T1.result IN ('Winner', 'Nominee') THEN 1 ELSE 0 END) AS rate,\n           T1.person, T1.award, T2.title, T1.role\n    FROM Award AS T1\n    INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id\n    WHERE SUBSTRING(T1.year, 1, 4) = '2010'\n) AS T3\nINNER JOIN Award AS T4 ON T3.person = T4.person\nINNER JOIN Episode AS T5 ON T4.episode_id = T5.episode_id\nWHERE T4.year = 2010 AND T4.result = 'Winner';", "sql_id": 267}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE person = 'Billy Kimball' AND SUBSTRING(year, 1, 4) = '2010' AND result = 'Nominee';", "sql_id": 268}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE SUBSTRING(birthdate, 1, 4) < '1970';", "sql_id": 269}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE SUBSTRING(birthdate, 1, 4) = '1958' AND birth_place = 'California' AND birth_country = 'USA';", "sql_id": 270}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(T1.year, 1, 4) = '2009' AND T1.role = 'writer' AND T2.votes > 5;", "sql_id": 271}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.episode_id FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(T1.year, 1, 4) = '2009' AND T1.person = 'Al Jean' AND T1.award_category = 'Primetime Emmy';", "sql_id": 272}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM Person WHERE SUBSTRING(birthdate, 1, 4) = '1962' AND birth_region = 'California';", "sql_id": 273}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.episode_id \nFROM Episode AS T1 \nINNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id \nWHERE SUBSTRING(T1.air_date, 1, 4) = '2008' \nORDER BY T2.votes DESC \nLIMIT 1;", "sql_id": 274}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(T1.year, 1, 4) = '2010' AND T1.person = 'Joel H. Cohen';", "sql_id": 275}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN birth_region = 'California' AND SUBSTRING(birthdate, 1, 4) > '1970' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(birthdate) FROM Person;", "sql_id": 276}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE STR_TO_DATE(T1.birthdate, '%Y-%m-%d') > '1970-01-01' AND T2.role = 'animation executive producer';", "sql_id": 277}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Best International TV Series' AND SUBSTRING(T1.year, 1, 4) = '2017';", "sql_id": 278}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE SUBSTRING(year, 1, 4) = '2009';", "sql_id": 279}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.episode_id) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE YEAR(T1.air_date) = '2008' AND T2.stars > 5;", "sql_id": 280}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTRING(T1.air_date, 1, 4) = '2008';", "sql_id": 281}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.episode_id) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE YEAR(T1.air_date) = '2009' AND T2.stars < 8;", "sql_id": 282}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(award_id) FROM Award WHERE SUBSTRING(year, 1, 4) = '2009' AND result = 'Winner';", "sql_id": 283}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTRING(T1.air_date, 1, 4) = '2008' AND T2.stars < 5;", "sql_id": 284}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.percent FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2008' AND T1.votes BETWEEN 950 AND 960;", "sql_id": 285}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.stars FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTRING(T1.air_date, 1, 7) = '2008-11';", "sql_id": 286}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.credited = 'true' AND T2.person = 'Sam Im' AND SUBSTRING(T1.air_date, 1, 4) = '2009' AND T2.role = 'additional timer';", "sql_id": 287}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.bool = 'pos', 1, 0)) AS DECIMAL) * 100 / SUM(IF(T1.bool = 'neg', 1, 0)) FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T2.organ = 'foreign_legion';", "sql_id": 288}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.school = 'occ', 1.0, 0)) AS DECIMAL) * 100 / COUNT(T1.name) FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T2.organ = 'navy';", "sql_id": 289}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(T2.name IS NULL, 'female', 'male') FROM male AS T1 LEFT JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.name = 'student124';", "sql_id": 290}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.name IS NULL, 1, 0)) AS DECIMAL) * 100 / COUNT(T2.name) FROM disabled AS T1 LEFT JOIN male AS T2 ON T1.`name` = T2.`name`;", "sql_id": 291}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.month > 5, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.month) FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name;", "sql_id": 292}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(T.result = 0, 'female', 'male') AS re FROM ( SELECT COUNT(name) AS result FROM male WHERE name = 'studenT1000' ) T", "sql_id": 293}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T3.name IS NULL, 1, 0)) AS DECIMAL) / COUNT(T1.name) FROM disabled AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T2.organ = 'foreign_legion';", "sql_id": 294}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.name IS NULL, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.name), CAST(SUM(IF(T2.name IS NOT NULL, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.name) FROM enlist AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T1.organ = 'fire_department';", "sql_id": 295}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(month = 0, 1, 0)) AS DECIMAL) * 100 / COUNT(name) FROM longest_absense_from_school;", "sql_id": 296}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(`bool` = 'pos', 1, 0)) AS DECIMAL) / SUM(IF(`bool` = 'neg', 1, 0)) FROM no_payment_due;", "sql_id": 297}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(T2.name IS NULL, 'female', 'male') AS gen, T1.school FROM enrolled AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T1.name = 'student995';", "sql_id": 298}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.name IS NULL, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.name) FROM person AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name;", "sql_id": 299}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(T2.name IS NULL, 'female', 'male') AS gender FROM enlist AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name GROUP BY T1.organ;", "sql_id": 300}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(((SUM(IF(month = 0, 1, 0)) - SUM(IF(month = 9, 1, 0))) AS DECIMAL) * 100 / SUM(IF(month = 0, 1, 0)) FROM longest_absense_from_school;", "sql_id": 301}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.name) - SUM(IF(T2.name IS NULL, 1, 0)) AS num FROM filed_for_bankrupcy AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name;", "sql_id": 302}
{"model": "gpt-3.5-turbo", "message": "SELECT (SUM(IF(T2.name IS NOT NULL AND T1.month = 0, 1, 0)) - SUM(IF(T2.name IS NULL AND T1.month = 0, 1, 0)))*100 / COUNT(T1.name) AS percentage, IF(SUM(IF(T2.name IS NOT NULL AND T1.month = 0, 1, 0)) - SUM(IF(T2.name IS NULL AND T1.month = 0, 1, 0)) > 0, 'YES', 'NO') AS isHigh FROM longest_absense_from_school AS T1 LEFT JOIN disabled AS T2 ON T2.name = T1.name;", "sql_id": 303}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.month = 0, 1, 0)) AS DECIMAL) * 100 / COUNT(T1.name) FROM unemployed AS T1 INNER JOIN longest_absense_from_school AS T2 ON T2.name = T1.name;", "sql_id": 304}
{"model": "gpt-3.5-turbo", "message": "SELECT 100 * SUM(IF(T2.month = 0, 1, 0)) AS num FROM disabled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name;", "sql_id": 305}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.school, IF(T3.name IS NULL, 'female', 'male') AS gender FROM enrolled AS T1 INNER JOIN person AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T2.name = 'student34';", "sql_id": 306}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.school = 'uci' AND T4.name IS NULL, 1, 0)) AS DECIMAL) / COUNT(T1.name) FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name INNER JOIN person AS T3 ON T1.name = T3.name LEFT JOIN male AS T4 ON T3.name = T4.name;", "sql_id": 307}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T3.name IS NULL, 1, 0)) AS \"result\" FROM enlist AS T1 INNER JOIN person AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T1.organ = 'army';", "sql_id": 308}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.movie_title) FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE SUBSTRING(release_date, LOCATE('-', release_date) + 1, 3) = 'Dec' AND T2.director = 'Wolfgang Reitherman';", "sql_id": 309}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nWHERE CAST(SUBSTRING_INDEX(T1.release_date, ', ', -1) AS SIGNED) BETWEEN 1970 AND 1979 \nORDER BY CAST(REPLACE(SUBSTRING(T1.total_gross, 2), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 311}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nWHERE T2.director = 'Wolfgang Reitherman' \nORDER BY CAST(REPLACE(SUBSTR(inflation_adjusted_gross, 2), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 312}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nWHERE T2.hero = 'Donald Duck' \nORDER BY CAST(REPLACE(SUBSTR(total_gross, 2), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 313}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM movies_total_gross WHERE MPAA_rating = 'R' AND genre = 'Horror' AND CAST(SUBSTRING_INDEX(release_date, ', ', -1) AS SIGNED) BETWEEN 1990 AND 2015;", "sql_id": 314}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T2.name = T1.movie_title \nWHERE T2.director = 'Ron Clements' \nORDER BY CAST(REPLACE(SUBSTR(total_gross, 2), ',', '') AS SIGNED) DESC \nLIMIT 1;", "sql_id": 315}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name AND CAST(SUBSTRING_INDEX(release_date, ', ', -1) AS SIGNED) BETWEEN 1990 AND 2000 GROUP BY T2.director;", "sql_id": 316}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T2.movie_title = T1.movie_title \nWHERE T2.song IS NULL \nORDER BY CAST(REPLACE(TRIM(T1.total_gross, '$'), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 317}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.movie_title \nFROM `voice_actors` AS T1 \nINNER JOIN movies_total_gross AS T2 ON T2.movie_title = T1.movie \nWHERE T1.`voice_actor` = 'Jim Cummings' \nORDER BY CAST(REPLACE(TRIM(T2.total_gross, '$'), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 318}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.movie_title \nFROM director AS T1 \nINNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title \nWHERE T1.director = 'Ron Clements' \nORDER BY CAST(REPLACE(TRIM(T2.total_gross, '$'), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 319}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CAST(REPLACE(TRIM(T2.total_gross, '$'), ',', '') AS DECIMAL)) / COUNT(T2.movie_title) FROM `voice_actors` AS T1 INNER JOIN movies_total_gross AS T2 ON T1.movie = T2.movie_title WHERE T1.`voice_actor` = 'Sterling Holloway';", "sql_id": 320}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title, genre FROM movies_total_gross WHERE SUBSTRING(release_date, CHAR_LENGTH(release_date) - 3, CHAR_LENGTH(release_date)) = '2016';", "sql_id": 321}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title, CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS DECIMAL) / CAST(REPLACE(trim(total_gross, '$'), ',', '') AS DECIMAL) FROM movies_total_gross ORDER BY CAST(REPLACE(trim(total_gross, '$'), ',', '') AS DECIMAL) DESC LIMIT 1;", "sql_id": 322}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title, T2.hero, T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nINNER JOIN director AS T3 ON T1.movie_title = T3.name \nWHERE T3.director = 'Wolfgang Reitherman' \nAND RIGHT(T1.release_date, 4) = '1977';", "sql_id": 323}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director, T1.MPAA_rating \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nWHERE T1.genre = 'Musical' \nAND SUBSTRING(T1.release_date, CHAR_LENGTH(T1.release_date) - 3, CHAR_LENGTH(T1.release_date)) = '1993';", "sql_id": 326}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name, T2.director \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nWHERE SUBSTRING(T1.release_date, CHAR_LENGTH(T1.release_date) - 3, CHAR_LENGTH(T1.release_date)) BETWEEN '2001' AND '2005' \nAND CAST(REPLACE(TRIM(T1.total_gross, '$'), ',', '') AS DECIMAL) / \n( \n    SELECT SUM(CAST(REPLACE(TRIM(T3.total_gross, '$'), ',', '') AS DECIMAL)) / COUNT(T3.movie_title) AS avg_gross \n    FROM movies_total_gross AS T3 \n    INNER JOIN director AS T4 ON T3.movie_title = T4.name \n    WHERE SUBSTRING(T3.release_date, CHAR_LENGTH(T3.release_date) - 3, CHAR_LENGTH(T3.release_date)) BETWEEN '2001' AND '2005' \n) - 1 > 1;", "sql_id": 328}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM characters WHERE SUBSTRING(release_date, CHAR_LENGTH(release_date) - 1, CHAR_LENGTH(release_date)) BETWEEN '37' AND '50';", "sql_id": 329}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.movie_title FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Jack Kinney' AND SUBSTRING(T1.release_date, LENGTH(T1.release_date) - 1, LENGTH(T1.release_date)) < '47';", "sql_id": 330}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.name FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name INNER JOIN movies_total_gross AS T3 ON T1.movie_title = T3.movie_title WHERE CAST(REPLACE(TRIM(TRIM('$' FROM T3.total_gross), ','), '') AS DECIMAL) > 100000000;", "sql_id": 331}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.song \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nORDER BY CAST(REPLACE(TRIM(T1.total_gross, '$'), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 332}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director \nFROM characters AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nINNER JOIN movies_total_gross AS T3 ON T3.movie_title = T1.movie_title \nWHERE SUBSTRING(T3.release_date, CHAR_LENGTH(T3.release_date) - 3, CHAR_LENGTH(T3.release_date)) BETWEEN '1937' AND '1990' \nORDER BY CAST(REPLACE(TRIM(TRIM('$' FROM T3.total_gross), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 333}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title FROM characters ORDER BY SUBSTRING(release_date, CHAR_LENGTH(release_date) - 1, CHAR_LENGTH(release_date)) ASC LIMIT 1;", "sql_id": 335}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(movie_title) FROM characters WHERE SUBSTRING(release_date, CHAR_LENGTH(release_date) - 1, CHAR_LENGTH(release_date)) BETWEEN '10' AND '16';", "sql_id": 336}
{"model": "gpt-3.5-turbo", "message": "SELECT villian FROM characters ORDER BY SUBSTRING(release_date, CHAR_LENGTH(release_date) - 1, CHAR_LENGTH(release_date)) DESC LIMIT 1;", "sql_id": 337}
{"model": "gpt-3.5-turbo", "message": "SELECT movie_title FROM movies_total_gross WHERE genre = 'Action' ORDER BY CAST(REPLACE(TRIM(total_gross, '$'), ',', '') AS DECIMAL) DESC LIMIT 1;", "sql_id": 338}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.hero \nFROM movies_total_gross AS T1 \nINNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title \nWHERE T1.genre = 'Adventure' \nORDER BY CAST(REPLACE(TRIM(T1.inflation_adjusted_gross, '$'), ',', '') AS DECIMAL) DESC \nLIMIT 1;", "sql_id": 339}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.director \nFROM movies_total_gross AS T1 \nINNER JOIN director AS T2 ON T1.movie_title = T2.name \nORDER BY CAST(REPLACE(TRIM(T1.total_gross, '$'), ',', '') AS DECIMAL) ASC \nLIMIT 1;", "sql_id": 340}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN movie_title = 'Cars' THEN CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS DECIMAL) ELSE 0 END), SUM(CASE WHEN movie_title = 'Cars 2' THEN CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS DECIMAL) ELSE 0 END) FROM movies_total_gross;", "sql_id": 343}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `current_terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Republican' AND T1.gender_bio = 'F' AND T2.end > CURDATE() GROUP BY T1.bioguide_id;", "sql_id": 346}
{"model": "gpt-3.5-turbo", "message": "SELECT `END`, party FROM `current_terms` WHERE YEAR(`END`) = 2009 AND party = 'Republican';", "sql_id": 347}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.type = 'sen' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.type = 'rep' THEN 1 ELSE 0 END) FROM historical AS T1 INNER JOIN `historical_terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F' AND YEAR(T1.birthday_bio) BETWEEN 1930 AND 1970;", "sql_id": 348}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.party = 'Independent' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T2.party) FROM current AS T1 INNER JOIN `current_terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'M' AND YEAR(T1.birthday_bio) BETWEEN 1955 AND 1965;", "sql_id": 349}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM current AS T1 INNER JOIN `current_terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE YEAR(T2.start) = '2015' AND T2.state = 'CA' AND T1.gender_bio = 'F';", "sql_id": 350}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN YEAR(T2.start) BETWEEN 2000 AND 2017 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.bioguide_id) FROM current AS T1 INNER JOIN `current_terms` AS T2 ON T1.bioguide_id = T2.bioguide;", "sql_id": 351}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current_terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Independent' AND YEAR(STR_TO_DATE(T2.start, '%Y-%m-%d')) >= 2011 AND T2.type = 'sen' AND T2.caucus = 'Democrat';", "sql_id": 352}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT CASE WHEN SUM(CAST(SUBSTRING_INDEX(T2.end, '-', -1) AS SIGNED) - CAST(SUBSTRING_INDEX(T2.start, '-', -1) AS SIGNED)) = 26 THEN T1.official_full_name END FROM current AS T1 INNER JOIN current_terms AS T2 ON T1.bioguide_id = T2.bioguide GROUP BY T1.official_full_name, T2.district HAVING COUNT(T1.official_full_name) = 13;", "sql_id": 353}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T3.result) FROM ( SELECT CASE WHEN SUM(CAST(SUBSTRING_INDEX(T2.`end`, '-', -1) AS SIGNED) - CAST(SUBSTRING_INDEX(T2.start, '-', -1) AS SIGNED)) > 10 THEN 1 ELSE 0 END AS result FROM current AS T1 INNER JOIN `current_terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F' AND T2.state = 'CA' AND T2.type = 'rep' ) AS T3;", "sql_id": 354}
{"model": "gpt-3.5-turbo", "message": "SELECT CASE WHEN SUM(CAST(SUBSTRING_INDEX(T2.end, '-', 1) AS SIGNED) - CAST(SUBSTRING_INDEX(T2.start, '-', 1) AS SIGNED)) = 14 THEN official_full_name END FROM current AS T1 INNER JOIN `current_terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.religion_bio = 'Lutheran' AND T2.state = 'OH' AND T2.type = 'rep';", "sql_id": 355}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM current WHERE YEAR(birthday_bio) > '1960' AND google_entity_id_id IS NULL;", "sql_id": 356}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Frank-Paul' AND T1.Last = 'Santangelo' AND DATE_FORMAT(T2.TransactionDate, '%Y-%m') = '2014-07';", "sql_id": 357}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Gender = 'M' AND DATE_FORMAT(T2.TransactionDate, '%Y-%m') = '2014-07';", "sql_id": 358}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.SubscribedToEmailList = 'TRUE' AND T2.CreditCardType = 'Visa' AND DATE_FORMAT(T2.TransactionDate, '%Y-%m') = '2014-07';", "sql_id": 359}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE DATE_FORMAT(T2.TransactionDate, '%Y-%m') = '2014-08' GROUP BY T1.CustomerID ORDER BY COUNT(T2.CustomerID) DESC LIMIT 1;", "sql_id": 360}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.BrandName \nFROM rootbeer AS T1 \nINNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID \nINNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID \nWHERE T2.StarRating = 5 AND YEAR(T2.ReviewDate) = 2012 \nGROUP BY T1.BrandID \nORDER BY COUNT(T2.BrandID) DESC \nLIMIT 1;", "sql_id": 361}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T2.FirstName = 'Morningstar' THEN 1 ELSE 0 END) + SUM(CASE WHEN T2.FirstName = 'Heather' THEN 1 ELSE 0 END) + SUM(CASE WHEN T2.FirstName = 'Dean' THEN 1 ELSE 0 END) AS num FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID;", "sql_id": 364}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(T1.ProductID = 498, 'YES', 'NO') FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Alex';", "sql_id": 365}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE SUBSTRING(T1.Name, 1, 1) = 'C';", "sql_id": 366}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(SUM(IF(T1.Name = 'HL Mountain Frame - Silver, 42', T2.SalesID, 0)) - SUM(IF(T1.Name = 'HL Mountain Frame - Black, 42', T2.SalesID, 0)) > 0, 'Silver', 'Black') FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID;", "sql_id": 367}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.Price = 0, T2.Quantity, 0)) AS DECIMAL) * 100 / SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID;", "sql_id": 369}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.Name = 'Blade', T2.Quantity, 0)) AS DECIMAL) * 100 / SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID;", "sql_id": 370}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.Price BETWEEN 200 AND 300, 1, 0)) AS DECIMAL) * 100 / COUNT(T2.Price) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.SalesID BETWEEN 1 AND 200;", "sql_id": 371}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE SUBSTRING(T1.created_at, 7, 1) = '4';", "sql_id": 372}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE SUBSTRING(T2.created_at, 1, 4) = '2011' AND SUBSTRING(T2.created_at, 7, 1) = '4' AND T1.highest_price IS NULL;", "sql_id": 373}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM Menu WHERE call_number IS NULL AND YEAR(date) < '1950';", "sql_id": 374}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.ship_id) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_name = 'S K L Enterprises Inc' AND YEAR(T2.ship_date) = 2017;", "sql_id": 375}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(COUNTCUSID) FROM ( SELECT COUNT(T1.cust_id) AS COUNTCUSID FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE YEAR(T2.ship_date) = 2017 AND T1.annual_revenue > 30000000 GROUP BY T1.cust_id HAVING COUNT(T2.ship_id) >= 1 ) T3;", "sql_id": 376}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE YEAR(T1.ship_date) = '2017' AND T2.first_name = 'Sue' AND T2.last_name = 'Newell';", "sql_id": 377}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE YEAR(T1.ship_date) = 2017 GROUP BY T2.first_name, T2.last_name ORDER BY COUNT(*) DESC LIMIT 1;", "sql_id": 378}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE YEAR(T1.ship_date) = '2017' AND T2.state = 'New Jersey';", "sql_id": 379}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN customer AS T3 ON T3.cust_id = T1.cust_id WHERE T2.city_name = 'Downey' AND YEAR(T1.ship_date) = 2016 AND T3.state = 'CA';", "sql_id": 380}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.weight) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.city_name = 'San Mateo' AND YEAR(T1.ship_date) = 2016;", "sql_id": 381}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.weight) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Peterbilt' AND YEAR(T2.ship_date) = 2016 ORDER BY T1.model_year DESC LIMIT 1;", "sql_id": 382}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN driver AS T3 ON T3.driver_id = T1.driver_id WHERE T3.first_name = 'Andrea' AND T3.last_name = 'Simons' AND T2.city_name = 'Huntsville' AND YEAR(T1.ship_date) = 2016;", "sql_id": 383}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.weight >= 10000 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.cust_name = 'Sunguard Window Tinting & Truck Accessories' AND YEAR(T1.ship_date) = '2017';", "sql_id": 384}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM city AS T1 INNER JOIN shipment AS T2 ON T1.city_id = T2.city_id WHERE T1.population > 50000 AND YEAR(T2.ship_date) = '2017';", "sql_id": 385}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) AS per FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE YEAR(T2.ship_date) = 2016 AND T1.state = 'CA';", "sql_id": 386}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM city AS T1 INNER JOIN shipment AS T2 ON T1.city_id = T2.city_id INNER JOIN driver AS T3 ON T3.driver_id = T2.driver_id WHERE T3.first_name = 'Zachery' AND T3.last_name = 'Hicks' AND T1.city_name = 'New York' AND YEAR(T2.ship_date) = 2016;", "sql_id": 387}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.first_name = 'Zachery' AND T2.last_name = 'Hicks' THEN T1.ship_id ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE YEAR(T1.ship_date) = '2017';", "sql_id": 388}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.first_name = 'Zachery' AND T2.last_name = 'Hicks' THEN T1.weight ELSE 0 END) AS DECIMAL) * 100 / SUM(T1.weight) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE YEAR(T1.ship_date) = '2016';", "sql_id": 389}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T2.first_name = 'Maria' AND T2.last_name = 'Craft' AND YEAR(T1.ship_date) = '2017';", "sql_id": 390}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN YEAR(T1.ship_date) = 2017 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.state = 'TX';", "sql_id": 391}
{"model": "gpt-3.5-turbo", "message": "SELECT title, words FROM pages WHERE title = ( SELECT title FROM pages ORDER BY LENGTH(title) DESC LIMIT 1 )", "sql_id": 392}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(occurrences) FROM words WHERE LENGTH(word) = 3;", "sql_id": 393}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM book WHERE YEAR(publication_date) = 1900 ORDER BY publication_date LIMIT 1;", "sql_id": 394}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM country AS T1 INNER JOIN address AS T2 ON T1.country_id = T2.country_id INNER JOIN cust_order AS T3 ON T3.dest_address_id = T2.address_id WHERE T1.country_name = 'Iran' AND YEAR(T3.order_date) = 2022;", "sql_id": 395}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Delivered' AND YEAR(T2.status_date) = 2021;", "sql_id": 396}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T3.cost) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Page' AND T1.last_name = 'Holsey' AND YEAR(T2.order_date) = 2022;", "sql_id": 397}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN YEAR(T1.publication_date) = 1992 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Abraham Lincoln';", "sql_id": 398}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title, T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE YEAR(T1.publication_date) = '2004' AND T1.num_pages * 100 > ( SELECT AVG(num_pages) FROM book ) * 70;", "sql_id": 399}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM book AS T1 \nINNER JOIN book_author AS T2 ON T1.book_id = T2.book_id \nINNER JOIN author AS T3 ON T3.author_id = T2.author_id \nWHERE T3.author_name = 'Orson Scott Card' \nAND YEAR(T1.publication_date) = 2001;", "sql_id": 400}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM cust_order AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Daisey' AND T2.last_name = 'Lamball' AND YEAR(T1.order_date) = 2021;", "sql_id": 401}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Delivered' AND YEAR(T2.status_date) = 2019;", "sql_id": 402}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.method_name = 'International' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) FROM cust_order AS T1 INNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id WHERE YEAR(T1.order_date) = 2020;", "sql_id": 403}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_FORMAT(order_date, '%Y') FROM cust_order GROUP BY DATE_FORMAT(order_date, '%Y') ORDER BY COUNT(DATE_FORMAT(order_date, '%Y')) DESC LIMIT 1;", "sql_id": 404}
{"model": "gpt-3.5-turbo", "message": "SELECT title FROM book WHERE DATE_FORMAT(publication_date, '%Y') = '1995';", "sql_id": 405}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING_INDEX(email, '@', -1) AS ym FROM customer GROUP BY SUBSTRING_INDEX(email, '@', -1) ORDER BY COUNT(*) DESC LIMIT 1", "sql_id": 406}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Returned' AND YEAR(T2.status_date) = 2020;", "sql_id": 407}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(T2.status_date, T1.order_date) FROM cust_order AS T1 INNER JOIN order_history AS T2 ON T1.order_id = T2.order_id WHERE T1.order_id = 2398;", "sql_id": 408}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Marcelia' AND T1.last_name = 'Goering' AND YEAR(T2.order_date) = 2021 AND T3.method_name = 'Priority';", "sql_id": 409}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Cancelled' AND YEAR(T2.status_date) = 2022;", "sql_id": 410}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book WHERE YEAR(publication_date) = '2017';", "sql_id": 411}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T1.status_value = 'Returned' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE YEAR(T2.status_date) = 2022;", "sql_id": 412}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM book AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id \nWHERE T2.publisher_name = 'Free Press' \nAND YEAR(T1.publication_date) BETWEEN 1990 AND 2000 \nORDER BY T1.num_pages DESC \nLIMIT 1;", "sql_id": 413}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'The Servant Leader' AND YEAR(T1.publication_date) = 2003;", "sql_id": 414}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Returned' AND YEAR(T2.status_date) = 2022;", "sql_id": 415}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Birlinn' AND YEAR(T1.publication_date) = 2008 AND T1.num_pages BETWEEN 600 AND 700;", "sql_id": 416}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Brava' AND YEAR(T1.publication_date) = '2006';", "sql_id": 417}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE DATE_FORMAT(T2.inspection_date, '%Y-%m') = '2010-05' AND T1.title = 'Sanitarian';", "sql_id": 418}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.inspection_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE YEAR(T2.inspection_date) = '2010' AND T1.first_name = 'Joshua' AND T1.last_name = 'Rosa';", "sql_id": 419}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE YEAR(T1.inspection_date) = '2010' AND T2.facility_type = 'Restaurant';", "sql_id": 420}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE YEAR(T1.inspection_date) = '2010' AND T2.ward = 42;", "sql_id": 421}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.dba_name FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T1.results = 'Fail' AND YEAR(T1.inspection_date) = '2010';", "sql_id": 422}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE YEAR(T1.inspection_date) = '2010' AND T2.risk_level = 3;", "sql_id": 423}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T2.address = '5000 N Wolcott Ave' AND T2.title = 'Sanitarian' AND DATE_FORMAT(T1.inspection_date, '%Y-%m') = '2011-05';", "sql_id": 424}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.first_name, T3.last_name \nFROM ( \n    SELECT T1.employee_id, COUNT(T1.inspection_id) \n    FROM inspection AS T1 \n    WHERE DATE_FORMAT(T1.inspection_date, '%Y-%m') = '2016-03' \n    GROUP BY T1.employee_id \n    ORDER BY COUNT(T1.inspection_id) DESC \n    LIMIT 1 \n) AS T2 \nINNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id;", "sql_id": 425}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.dba_name FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE DATE_FORMAT(T1.inspection_date, '%Y-%m') = '2012-05' AND T1.results = 'Pass w/ Conditions';", "sql_id": 426}
{"model": "gpt-3.5-turbo", "message": "```sql\nSELECT T.dba_name \nFROM ( \n    SELECT T1.dba_name, SUM(T3.fine) \n    FROM establishment AS T1 \n    INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \n    INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id \n    WHERE YEAR(T2.inspection_date) = 2014 \n    GROUP BY T1.dba_name \n    ORDER BY SUM(T3.fine) DESC \n    LIMIT 1 \n) AS T;\n```", "sql_id": 427}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T3.fine) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE DATE_FORMAT(T2.inspection_date, '%Y-%m') = '2014-02' AND T1.dba_name = 'RON OF JAPAN INC';", "sql_id": 428}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.address FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE DATE_FORMAT(T2.inspection_date, '%Y-%m') = '2010-03' AND T2.results = 'Pass' AND T1.facility_type = 'School';", "sql_id": 429}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(inspection_id) FROM inspection WHERE DATE_FORMAT(inspection_date, '%Y-%m') = '2011-01';", "sql_id": 430}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(inspection_id) FROM inspection WHERE YEAR(inspection_date) = 2014 AND results = 'Fail';", "sql_id": 431}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(CASE WHEN T1.first_name = 'Jessica' AND T1.last_name = 'Anthony' THEN T2.inspection_id ELSE 0 END) AS DECIMAL) / 8 FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE YEAR(T2.inspection_date) BETWEEN '2010' AND '2017';", "sql_id": 433}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE YEAR(T2.inspection_date) = '2010' AND T1.risk_level = 3;", "sql_id": 434}
{"model": "gpt-3.5-turbo", "message": "SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'JOHN SCHALLER' AND YEAR(T2.inspection_date) = '2010';", "sql_id": 435}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE YEAR(T2.inspection_date) = '2010' AND T2.results = 'Pass' AND T1.facility_type = 'Liquor';", "sql_id": 436}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE DATE_FORMAT(T2.inspection_date, '%Y-%m') = '2010-07' AND T2.results = 'Fail' AND T1.facility_type = 'Restaurant';", "sql_id": 437}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T3.dba_name, T2.results \nFROM employee AS T1 \nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id \nINNER JOIN establishment AS T3 ON T2.license_no = T3.license_no \nWHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson' AND YEAR(T2.inspection_date) = 2010;", "sql_id": 438}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE DATE_FORMAT(T2.inspection_date, '%Y-%m') = '2010-04' AND T1.facility_type = 'Restaurant' AND T2.results = 'Fail';", "sql_id": 439}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.dba_name \nFROM establishment AS T1 \nINNER JOIN inspection AS T2 ON T1.license_no = T2.license_no \nINNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id \nWHERE DATE_FORMAT(T2.inspection_date, '%Y-%m') = '2010-01' \nAND T2.results = 'Fail' \nAND T1.facility_type = 'TAVERN';", "sql_id": 440}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.employee_id \nFROM employee AS T1 \nINNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id \nWHERE T2.results = 'Fail' \nAND DATE_FORMAT(T2.inspection_date, '%Y-%m') = '2010-02' \nAND T1.salary > 0.7 * (SELECT AVG(salary) FROM employee);", "sql_id": 441}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name \nFROM coins AS T1 \nINNER JOIN historical AS T2 ON T1.id = T2.coin_id \nWHERE T2.date LIKE '2018%' \nAND T2.market_cap = ( \n    SELECT MAX(market_cap) \n    FROM historical \n    WHERE YEAR(date) = '2018' \n);", "sql_id": 442}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.time_high, T2.time_low, T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'WARP' AND DATE_FORMAT(T2.date, '%Y-%m') = '2016-08';", "sql_id": 443}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(T2.circulating_supply) AS DOUBLE) / 12 FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Frozen' AND YEAR(T2.date) = 2014;", "sql_id": 444}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' AND YEAR(T2.date) = 2016;", "sql_id": 445}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE YEAR(T2.date) = '2013' AND T1.name = 'Bitcoin';", "sql_id": 446}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(id) AS num FROM coins WHERE DATE_FORMAT(date_added, '%Y-%m') = '2013-05' UNION ALL SELECT name FROM coins WHERE DATE_FORMAT(date_added, '%Y-%m') = '2013-05';", "sql_id": 447}
{"model": "gpt-3.5-turbo", "message": "SELECT name FROM coins WHERE LENGTH(tag_names) - LENGTH(REPLACE(tag_names, ',', '')) = 2;", "sql_id": 448}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE DATE_FORMAT(T2.date, '%Y-%m') = '2013-05' AND T2.open IS NULL;", "sql_id": 449}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.coin_id) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bytecoin' AND DATE_FORMAT(T2.date, '%Y-%m') = '2013-06';", "sql_id": 450}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.CustomerID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE YEAR(T2.OrderDate) = 1996 AND T1.Country = 'UK';", "sql_id": 453}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.CustomerID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE YEAR(T2.OrderDate) = '1996' GROUP BY T1.Country;", "sql_id": 455}
{"model": "gpt-3.5-turbo", "message": "SELECT T4.ProductName \nFROM Customers AS T1 \nINNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID \nINNER JOIN OrderDetails AS T3 ON T2.OrderID = T3.OrderID \nINNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID \nWHERE T1.Country = 'Norway' \nAND YEAR(T2.OrderDate) = 1996;", "sql_id": 463}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.n_name = 'GERMANY', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey;", "sql_id": 471}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.r_name = 'EUROPE', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.n_name) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey;", "sql_id": 473}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.n_name = 'JAPAN', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.s_name) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0;", "sql_id": 474}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE YEAR(l_shipdate) = '1998';", "sql_id": 475}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_linenumber) FROM lineitem WHERE l_returnflag = 'R' AND l_shipmode = 'AIR' AND YEAR(l_shipdate) = 1994;", "sql_id": 476}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.o_orderkey) FROM lineitem AS T1 INNER JOIN orders AS T2 ON T2.o_orderkey = T1.l_orderkey WHERE DATEDIFF(T1.l_shipdate, T2.o_orderdate) = 1 AND T2.o_orderpriority = '1-URGENT';", "sql_id": 477}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(c_acctbal < 0, 1, 0)) AS DECIMAL) * 100 / COUNT(c_custkey) FROM customer;", "sql_id": 478}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(p_mfgr = 'Manufacturer#3', 1, 0)) AS DECIMAL) * 100 / COUNT(p_partkey) FROM part;", "sql_id": 479}
{"model": "gpt-3.5-turbo", "message": "```sql\nSELECT COUNT(T1.o_orderkey) \nFROM orders AS T1 \nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey \nWHERE T2.l_shipmode = 'AIR' \nAND T1.o_orderpriority = '1-URGENT' \nAND SUBSTRING(T2.l_shipdate, 1, 7) = '1998-11';\n```", "sql_id": 480}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.n_name = 'GERMANY', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0;", "sql_id": 481}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE YEAR(l_shipdate) = '1994';", "sql_id": 482}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(ps_supplycost > 500, 1, 0)) AS DECIMAL) * 100 / COUNT(ps_suppkey) FROM partsupp", "sql_id": 484}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.c_mktsegment = 'AUTOMOBILE', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.c_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'FRANCE';", "sql_id": 485}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.r_name = 'AFRICA', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN customer AS T3 ON T1.n_nationkey = T3.c_nationkey WHERE T3.c_mktsegment = 'HOUSEHOLD';", "sql_id": 486}
{"model": "gpt-3.5-turbo", "message": "SELECT (CAST(SUM(IF(T3.l_shipmode = 'SHIP', T1.p_retailprice, 0)) AS DECIMAL) / SUM(IF(T3.l_shipmode = 'SHIP', 1, 0))) - (CAST(SUM(IF(T3.l_shipmode = 'AIR', T1.p_retailprice, 0)) AS DECIMAL) / SUM(IF(T3.l_shipmode = 'AIR', 1, 0))) FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN lineitem AS T3 ON T2.ps_suppkey = T3.l_suppkey;", "sql_id": 487}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T3.s_acctbal < (SELECT AVG(supplier.s_acctbal) FROM supplier), 1, 0)) AS DECIMAL) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE';", "sql_id": 488}
{"model": "gpt-3.5-turbo", "message": "SELECT (SUM(IF(YEAR(T2.l_shipdate) = 1995, 1, 0)) / 12) - (SUM(IF(YEAR(T2.l_shipdate) = 1996, 1, 0)) / 12) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderpriority = '5-LOW' AND T2.l_shipmode = 'TRUCK';", "sql_id": 489}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.n_name = 'IRAN', 1, 0)) AS DECIMAL) * 100 / COUNT(T2.n_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD';", "sql_id": 490}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(SUM(IF(l_shipmode = 'RAIL', 1, 0)) - SUM(IF(l_shipmode = 'MAIL', 1, 0)), 'RAIL', 'MAIL') AS result FROM lineitem WHERE l_shipinstruct = 'DELIVER IN PERSON';", "sql_id": 491}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(o_orderkey) AS countorders FROM orders WHERE YEAR(o_orderdate) = 1998 AND o_totalprice < 950;", "sql_id": 492}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(l_returnflag = 'A', 1, 0)) - SUM(IF(l_returnflag = 'N', 1, 0)) AS diff FROM lineitem WHERE l_extendedprice < 16947.7;", "sql_id": 493}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(T2.l_receiptdate, T2.l_commitdate), T1.o_clerk FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderkey = 6;", "sql_id": 494}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.r_name = 'ASIA', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey INNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey;", "sql_id": 495}
{"model": "gpt-3.5-turbo", "message": "SELECT l_linenumber FROM lineitem WHERE YEAR(l_shipdate) < 1997 AND l_shipmode = 'truck';", "sql_id": 496}
{"model": "gpt-3.5-turbo", "message": "SELECT l_linenumber FROM lineitem WHERE YEAR(l_shipdate) < 1997 AND l_shipmode = 'TRUCK';", "sql_id": 497}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.c_name \nFROM orders AS T1 \nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey \nINNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey \nWHERE T2.l_discount = 0.1 \nAND YEAR(T1.o_orderdate) BETWEEN 1994 AND 1995;", "sql_id": 498}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.c_mktsegment = 'HOUSEHOLD', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.c_mktsegment) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'INDONESIA';", "sql_id": 500}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE YEAR(l_shipdate) = 1997 AND l_shipmode = 'MAIL';", "sql_id": 501}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(l_orderkey) FROM lineitem WHERE YEAR(l_shipdate) = 1994 AND l_returnflag = 'R' AND l_shipmode = 'TRUCK';", "sql_id": 502}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(o_orderkey) FROM orders WHERE YEAR(o_orderdate) = 1997 AND o_clerk = 'Clerk#000000001' AND o_orderpriority = '1-URGENT';", "sql_id": 503}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.c_name \nFROM orders AS T1 \nINNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey \nINNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey \nORDER BY (DATEDIFF(T2.l_receiptdate, T2.l_commitdate)) DESC \nLIMIT 1;", "sql_id": 504}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.ELITEID) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T1.height_in_cm > 182 AND YEAR(T2.birthdate) = '1982';", "sql_id": 505}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.ELITEID) FROM weight_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.weight_id = T2.weight WHERE T1.weight_in_lbs = 185 AND YEAR(T2.birthdate) = '1980';", "sql_id": 506}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT CAST(COUNT(CASE WHEN T1.nation = 'Sweden' THEN T1.ELITEID ELSE NULL END) OVER (PARTITION BY T2.SEASON) AS DECIMAL) * 100 / COUNT(T1.ELITEID) OVER (PARTITION BY T2.SEASON) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.SEASON IN ('1997-1998', '1998-1999', '1999-2000');", "sql_id": 507}
{"model": "gpt-3.5-turbo", "message": "SELECT DATEDIFF(EndDate, StartDate) FROM BillOfMaterials ORDER BY DATEDIFF(EndDate, StartDate) DESC LIMIT 1;", "sql_id": 508}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN MaritalStatus = 'M' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(BusinessEntityID) FROM Employee WHERE SUBSTRING(HireDate, 1, 4) = '2009' AND Gender = 'M';", "sql_id": 510}
{"model": "gpt-3.5-turbo", "message": "```sql\nSELECT T2.CreditRating \nFROM ProductVendor AS T1 \nINNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE T1.StandardPrice = 18.9900 \nAND T1.AverageLeadTime = 16 \nAND DATE_FORMAT(T1.LastReceiptDate, '%Y-%m-%d') = '2011-08-27';\n```", "sql_id": 511}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.ShipMethodID = 5, T3.OrderQty, 0)) AS DECIMAL) / COUNT(T3.ProductID) FROM ShipMethod AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.ShipMethodID = T2.ShipMethodID INNER JOIN PurchaseOrderDetail AS T3 ON T2.PurchaseOrderID = T3.PurchaseOrderID;", "sql_id": 512}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.city = 'Bothell', 1, 0)) - SUM(IF(T1.city = 'Kenmore', 1, 0)) , stateprovincecode FROM Address AS T1 INNER JOIN StateProvince AS T2 ON T1.stateprovinceid = T2.stateprovinceid GROUP BY stateprovincecode;", "sql_id": 513}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ListPrice - T1.StandardCost > 21.9037 AND DATE_FORMAT(T2.StartDate, '%Y-%m-%d') >= '2012-10-01';", "sql_id": 514}
{"model": "gpt-3.5-turbo", "message": "SELECT LENGTH(T2.PasswordHash) FROM Person AS T1 INNER JOIN Password AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Catherine' AND T1.LastName = 'Ward';", "sql_id": 515}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.TransactionType FROM TransactionHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'HL Road Frame - Black, 48' AND DATE_FORMAT(T1.TransactionDate, '%Y-%m-%d') = '2013-07-31';", "sql_id": 516}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.TransactionType \nFROM TransactionHistoryArchive AS T1 \nINNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID \nWHERE T2.Name = 'LL Road Handlebars' \nAND DATE_FORMAT(T1.TransactionDate, '%Y-%m-%d') = '2012-11-03';", "sql_id": 517}
{"model": "gpt-3.5-turbo", "message": "SELECT BusinessEntityID FROM SalesPerson WHERE BusinessEntityID IN ( SELECT BusinessEntityID FROM SalesPersonQuotaHistory WHERE YEAR(QuotaDate) = 2013 ) ORDER BY CAST(SalesLastYear AS DECIMAL) / SalesQuota DESC LIMIT 1;", "sql_id": 518}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'SP' AND SUBSTRING(T1.HireDate, 1, 4) < 2010;", "sql_id": 519}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.BusinessEntityID, SUM(T1.SalesQuota) FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE YEAR(T2.QuotaDate) = 2011 GROUP BY T1.BusinessEntityID ORDER BY SUM(T1.SalesYTD) DESC LIMIT 1;", "sql_id": 520}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.BusinessEntityID FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.TerritoryID = 1 AND YEAR(QuotaDate) = '2013';", "sql_id": 521}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.SalesQuota) FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.BusinessEntityID = 275 AND YEAR(QuotaDate) = 2013;", "sql_id": 522}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.BusinessEntityID FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE YEAR(T2.QuotaDate) = 2013 AND T1.SalesQuota < T1.SalesLastYear;", "sql_id": 523}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.Bonus) , CAST(SUM(T1.Bonus) AS DOUBLE) * 100 / SUM(T1.SalesQuota) FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE YEAR(T2.QuotaDate) = 2013;", "sql_id": 524}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.Rate FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE YEAR(T1.HireDate) - YEAR(T1.BirthDate) = 20;", "sql_id": 525}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(BusinessEntityID) FROM Employee WHERE MaritalStatus = 'M' AND YEAR(BirthDate) < 1960 AND Gender = 'M';", "sql_id": 526}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T3.Name) FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T1.FirstName = 'Sheela' AND T1.LastName = 'Word' AND YEAR(T3.ModifiedDate) BETWEEN 2011 AND 2012;", "sql_id": 528}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(2009 - YEAR(T2.BirthDate)) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'SP';", "sql_id": 529}
{"model": "gpt-3.5-turbo", "message": "SELECT 2015 - YEAR(T1.BirthDate), T2.Rate FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle = 'Marketing Specialist' ORDER BY 2015 - YEAR(T1.BirthDate) DESC LIMIT 1;", "sql_id": 530}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.BusinessEntityID, YEAR(T2.HireDate) - YEAR(T2.BirthDate) FROM PurchaseOrderHeader AS T1 INNER JOIN Employee AS T2 ON T1.EmployeeID = T2.BusinessEntityID ORDER BY T1.TotalDue DESC LIMIT 1;", "sql_id": 531}
{"model": "gpt-3.5-turbo", "message": "SELECT 2011 - YEAR(T2.HireDate) FROM Document AS T1 INNER JOIN Employee AS T2 ON T1.Owner = T2.BusinessEntityID WHERE T1.Status = 1;", "sql_id": 532}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.FirstName, T2.MiddleName, T2.LastName \nFROM Employee AS T1 \nINNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nORDER BY YEAR(T1.HireDate) - YEAR(T1.BirthDate) DESC \nLIMIT 1, 1;", "sql_id": 533}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.FirstName, T1.LastName FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE YEAR(T2.HireDate) >= 2007 AND T2.SalariedFlag = 1;", "sql_id": 534}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.FirstName, T1.LastName , YEAR(CURRENT_TIMESTAMP) - YEAR(T1.BirthDate) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.ShiftID = 3 ORDER BY YEAR(CURRENT_TIMESTAMP) - YEAR(T1.BirthDate) DESC LIMIT 1;", "sql_id": 535}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.FirstName, T1.LastName \nFROM Person AS T1 \nINNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID \nINNER JOIN Department AS T4 ON T3.DepartmentID = T4.DepartmentID \nWHERE YEAR(T2.HireDate) = 2009 AND T4.Name = 'Shipping and Receiving';", "sql_id": 536}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(YEAR(CURRENT_TIMESTAMP) - YEAR(T1.HireDate)) FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T3.Name = 'Research and Development';", "sql_id": 537}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(YEAR(CURRENT_TIMESTAMP) - YEAR(BirthDate)) FROM Employee;", "sql_id": 538}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Name, T3.Name FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE YEAR(T1.SellStartDate) = 2013;", "sql_id": 539}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.FirstName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE YEAR(T1.BirthDate) > 1970 ORDER BY T1.SickLeaveHours LIMIT 1;", "sql_id": 540}
{"model": "gpt-3.5-turbo", "message": "SELECT YEAR(CURRENT_TIMESTAMP()) - YEAR(T1.BirthDate) + 1 , T3.Name FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 USING (BusinessEntityID) INNER JOIN Department AS T3 USING (DepartmentID) ORDER BY T1.BirthDate DESC LIMIT 1;", "sql_id": 541}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.StartTime, T3.EndTime \nFROM Employee AS T1 \nINNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN Shift AS T3 ON T2.ShiftID = T3.ShiftID \nWHERE YEAR(T1.BirthDate) < 1969 \nORDER BY T1.BirthDate \nLIMIT 5, 1;", "sql_id": 543}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.EndDate \nFROM Employee AS T1 \nINNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nINNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID \nWHERE T1.JobTitle = 'Senior Tool Designer' \nAND YEAR(T1.HireDate) - YEAR(T1.BirthDate) = 33 \nAND T2.EndDate IS NOT NULL;", "sql_id": 544}
{"model": "gpt-3.5-turbo", "message": "SELECT YEAR(T1.HireDate) - YEAR(T1.BirthDate), T2.FirstName, T2.MiddleName, T2.LastName \nFROM Employee AS T1 \nINNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE T1.VacationHours <= 10 \nORDER BY YEAR(T1.HireDate) - YEAR(T1.BirthDate) DESC \nLIMIT 1;", "sql_id": 545}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.PersonType \nFROM Employee AS T1 \nINNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID \nWHERE T1.Gender = 'F' AND T1.MaritalStatus = 'S' AND DATE_FORMAT(T1.HireDate, '%Y-%m-%d') BETWEEN '2008-01-01' AND '2008-12-31' \nGROUP BY T2.PersonType \nORDER BY COUNT(T2.PersonType) DESC \nLIMIT 1;", "sql_id": 546}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T3.Name = 'Engineering' AND YEAR(T2.EndDate) > 2009 AND YEAR(T2.StartDate) < 2009;", "sql_id": 547}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN Person AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T3.PersonType = 'SC' AND T2.GroupName = 'Manufacturing' AND YEAR(T1.EndDate) >= 2007 AND YEAR(T1.StartDate) <= 2007;", "sql_id": 548}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID WHERE T2.GroupName = 'Quality Assurance' AND YEAR(T1.StartDate) = 2007;", "sql_id": 549}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(365 * (YEAR(T1.EndDate) - YEAR(T1.StartDate)) + 30 * (MONTH(T1.EndDate) - MONTH(T1.StartDate)) + DAY(T1.EndDate) - DAY(T1.StartDate)) AS DECIMAL) / COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID WHERE T2.Name = 'Engineering' AND T1.EndDate IS NOT NULL;", "sql_id": 550}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T3.Rate) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN EmployeePayHistory AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T2.Name = 'Engineering' AND YEAR(EndDate) > 2007 AND YEAR(T1.StartDate) < 2007;", "sql_id": 551}
{"model": "gpt-3.5-turbo", "message": "SELECT 365 * (YEAR(ActualEndDate) - YEAR(ActualStartDate)) + 30 * (MONTH(ActualEndDate) - MONTH(ActualStartDate)) + DAY(ActualEndDate) - DAY(ActualStartDate) FROM WorkOrderRouting WHERE WorkOrderID = 425;", "sql_id": 552}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T1.IMG_ID = 1, 1, 0)), SUM(IF(T1.X = 341 AND T1.Y = 27 AND T1.W = 42 AND T1.H = 51, 1, 0)) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID;", "sql_id": 553}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.nameGiven, T1.height, T1.weight, YEAR(CURRENT_TIMESTAMP()) - birthYear\nFROM Master AS T1\nINNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID\nWHERE T2.tmID = 'COL' AND T2.year >= 2000 AND T2.year <= 2010\nGROUP BY T1.playerID;", "sql_id": 554}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(IF(birthYear < 1990, height, NULL)) - AVG(IF(birthYear >= 1990, height, NULL)) FROM Master;", "sql_id": 555}
{"model": "gpt-3.5-turbo", "message": "SELECT IF(T1.note = 'posthumous', 'YES', 'NO') FROM AwardsMisc AS T1 RIGHT JOIN Master AS T2 ON T1.ID = T2.playerID WHERE T2.legendsID = 'P194502';", "sql_id": 556}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.firstName, T2.lastName, IF(T1.tmID = 'BOS', 'YES', 'NO') FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.year = 1972 AND T1.tmID = 'BOS' AND T2.coachID IS NOT NULL AND T2.hofID IS NULL;", "sql_id": 557}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.G), YEAR(CURRENT_TIMESTAMP()) - T1.birthYear FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T1.playerID = 'aaltoan01' GROUP BY T1.birthYear;", "sql_id": 558}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.Language = 'English', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode;", "sql_id": 559}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.Language = 'English', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GNP > 1500;", "sql_id": 560}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.Language = 'Chinese', T1.SurfaceArea, 0)) AS DECIMAL) * 100 / SUM(T1.SurfaceArea) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode;", "sql_id": 561}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.title FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'music' ORDER BY LENGTH(T2.title) DESC LIMIT 1;", "sql_id": 563}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(units) FROM sales_in_weather WHERE SUBSTRING(`date`, 6, 2) = '01' AND SUBSTRING(`date`, 1, 4) = '2012' AND item_nbr = 9 AND store_nbr = 1;", "sql_id": 564}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN T3.depart < 0 THEN units ELSE 0 END) AS sum FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTRING(T1.date, 1, 4) = '2012' AND T1.item_nbr = 5;", "sql_id": 565}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN units > 100 THEN 1 ELSE 0 END) AS count FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTRING(T1.`date`, 1, 4) = '2012' AND T1.item_nbr = 5 AND tmax > 90;", "sql_id": 568}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T1.item_nbr) \nFROM sales_in_weather AS T1 \nINNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr \nINNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr \nWHERE T1.store_nbr = 3 \nAND SUBSTR(T1.date, 1, 4) = '2012' \nAND T1.units = 0 \nGROUP BY T3.tmax \nORDER BY T3.tmax DESC \nLIMIT 1;", "sql_id": 569}
{"model": "gpt-3.5-turbo", "message": "SELECT `date` FROM weather WHERE station_nbr = 1 AND CAST(SUBSTRING(`date`, 1, 4) AS SIGNED) BETWEEN 2012 AND 2014 ORDER BY tmax DESC LIMIT 1;", "sql_id": 570}
{"model": "gpt-3.5-turbo", "message": "SELECT station_nbr FROM weather WHERE SUBSTRING(`date`, 1, 4) = '2014' AND SUBSTRING(`date`, 6, 2) = '03' AND depart < 0 GROUP BY station_nbr HAVING COUNT(DISTINCT `date`) = ( SELECT COUNT(DISTINCT `date`) FROM weather WHERE SUBSTRING(`date`, 1, 4) = '2014' AND SUBSTRING(`date`, 6, 2) = '03' AND depart < 0 GROUP BY station_nbr ORDER BY COUNT(`date`) DESC LIMIT 1 );", "sql_id": 571}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(T2.tmax) AS DECIMAL) / 29 FROM ( SELECT station_nbr FROM relation GROUP BY station_nbr ORDER BY COUNT(store_nbr) DESC LIMIT 1 ) AS T1 INNER JOIN weather AS T2 ON T1.station_nbr = T2.station_nbr WHERE SUBSTRING(T2.`date`, 1, 7) = '2012-02';", "sql_id": 572}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT `date`) AS days FROM weather WHERE sunrise < '05:00:00';", "sql_id": 573}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.station_nbr) AS number FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr WHERE SUBSTRING(`date`, 1, 7) = '2014-01' AND item_nbr = 5;", "sql_id": 574}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN Government = 'republic' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(Country) FROM politics WHERE YEAR(Independence) > 1970;", "sql_id": 575}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Country, COUNT(T1.Country) FROM economy AS T1 INNER JOIN organization AS T2 ON T1.Country = T2.Country WHERE T1.GDP < 500000 AND YEAR(T2.Established) < 1999 GROUP BY T1.Country;", "sql_id": 576}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Country \nFROM politics AS T1 \nINNER JOIN population AS T2 ON T1.Country = T2.Country \nWHERE YEAR(T1.Independence) = 1960 \nORDER BY T2.Infant_Mortality DESC \nLIMIT 1;", "sql_id": 577}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Population / T1.Area FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE YEAR(T2.Established) = 1947;", "sql_id": 579}
{"model": "gpt-3.5-turbo", "message": "SELECT country FROM politics WHERE government = 'republic' AND YEAR(independence) >= 1991 AND country IN (SELECT Name FROM country) ORDER BY independence LIMIT 3;", "sql_id": 581}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.Name \nFROM country AS T1 \nINNER JOIN organization AS T2 ON T1.Code = T2.Country \nINNER JOIN politics AS T3 ON T3.Country = T2.Country \nWHERE YEAR(T2.Established) > 1907 \nAND T3.Government = 'constitutional monarchy' \nGROUP BY T1.Name \nORDER BY COUNT(DISTINCT T2.Name) DESC \nLIMIT 1;", "sql_id": 582}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN government = 'parliamentary democracy' THEN 1 ELSE 0 END) , CAST(SUM(CASE WHEN government = 'parliamentary democracy' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(*) FROM politics AS t1 WHERE YEAR(independence) >= 1993;", "sql_id": 583}
{"model": "gpt-3.5-turbo", "message": "SELECT Name FROM organization WHERE YEAR(Established) BETWEEN 1970 AND 1980;", "sql_id": 584}
{"model": "gpt-3.5-turbo", "message": "SELECT DATE_FORMAT(T4.Established, '%Y') FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T2.Country = T3.Code INNER JOIN organization AS T4 ON T4.Country = T3.Code WHERE T1.Name = 'Europe' GROUP BY DATE_FORMAT(T4.Established, '%Y') ORDER BY COUNT(T4.Name) DESC LIMIT 1;", "sql_id": 585}
{"model": "gpt-3.5-turbo", "message": "SELECT * FROM politics WHERE YEAR(Independence) BETWEEN '1950' AND '1999' AND Government = 'parliamentary democracy';", "sql_id": 586}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN YEAR(Independence) = 1960 THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(Country) FROM politics;", "sql_id": 587}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(COUNT(T1.fbi_code_no) AS DECIMAL) / 4 FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE SUBSTRING(T2.date, 1, 1) = '1' AND SUBSTRING(T2.date, 5, 4) = '2018';", "sql_id": 588}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.ward_no, T1.alderman_first_name, T1.alderman_last_name, T1.alderman_name_suffix FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE SUBSTRING(T2.date, 1, 1) = '1' AND SUBSTRING(T2.date, 6, 4) = '2018' GROUP BY T1.ward_no ORDER BY COUNT(T1.ward_no) DESC LIMIT 1;", "sql_id": 589}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN SUBSTR(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.crime_against = 'Property' AND SUBSTR(T2.date, 1, 1) = '1';", "sql_id": 591}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN SUBSTR(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander = 'Robert A. Rubio' AND SUBSTR(T2.date, 1, 1) = '1';", "sql_id": 592}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.commander FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander IN ('Robert A. Rubio', 'Glenn White') AND SUBSTRING(T2.date, 1, 1) = '1' AND SUBSTRING(T2.date, 5, 4) = '2018' GROUP BY T1.commander;", "sql_id": 593}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(`date`) FROM inspections WHERE YEAR(`date`) = 2016 AND type = 'Routine - Unscheduled';", "sql_id": 594}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.business_id) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE YEAR(T1.`date`) = 2016 AND T2.city IN ('San Francisco', 'SAN FRANCISCO', 'SF', 'S.F.');", "sql_id": 595}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE YEAR(T1.`date`) = 2014 AND T1.risk_category = 'Low Risk';", "sql_id": 596}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(business_id) FROM businesses WHERE YEAR(application_date) = '2012';", "sql_id": 597}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(business_id) FROM inspections WHERE YEAR(`date`) = 2014 AND type = 'Foodborne Illness Investigation';", "sql_id": 598}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE YEAR(T1.`date`) = 2013 AND T1.score = 100;", "sql_id": 599}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.city FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE YEAR(T1.`date`) = 2016 AND T1.risk_category = 'High Risk' GROUP BY T2.city ORDER BY COUNT(T2.city) DESC LIMIT 1;", "sql_id": 600}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.name \nFROM violations AS T1 \nINNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \nWHERE YEAR(T1.date) = '2013' AND T1.description = 'Contaminated or adulterated food';", "sql_id": 601}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT T2.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id INNER JOIN inspections AS T3 ON T2.business_id = T3.business_id WHERE STR_TO_DATE(T1.`date`, '%Y-%m-%d') >= '2015-01-01' AND STR_TO_DATE(T1.`date`, '%Y-%m-%d') < '2016-01-01' AND T2.postal_code = '94102' AND T3.score > 90;", "sql_id": 602}
{"model": "gpt-3.5-turbo", "message": "```sql\nSELECT DISTINCT T4.name \nFROM (\n    SELECT T3.name, T3.years, row_number() OVER (PARTITION BY T3.name ORDER BY T3.years) AS rowNumber \n    FROM (\n        SELECT DISTINCT name, YEAR(`date`) AS years \n        FROM inspections AS T1 \n        INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id \n        WHERE T1.score = 100\n    ) AS T3\n) AS T4 \nGROUP BY T4.name, DATE_FORMAT(CONCAT(T4.years, '-01-01'), INTERVAL (T4.rowNumber - 1) YEAR) \nHAVING COUNT(T4.years) = 4;\n```", "sql_id": 603}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T1.score) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE YEAR(T1.date) BETWEEN 2014 AND 2016 AND T2.owner_name = 'Yiu Tim Chan' AND T2.address = '808 Pacific Ave' AND T2.city = 'San Francisco';", "sql_id": 604}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT business_id) FROM inspections WHERE YEAR(`date`) = 2013 AND score = ( SELECT MAX(score) FROM inspections WHERE YEAR(`date`) = 2013 );", "sql_id": 606}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(risk_category) FROM violations WHERE YEAR(`date`) = 2014 AND risk_category = 'Low Risk';", "sql_id": 607}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T2.business_id) FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id WHERE DATE_FORMAT(T1.`date`, '%Y') = '2016' AND T2.type = 'Routine - Unscheduled';", "sql_id": 608}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.style = 'American Adjunct Lager', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.brewery_id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T2.name = 'Stevens Point Brewery';", "sql_id": 609}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.state = 'WI', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T1.style = 'American Blonde Ale';", "sql_id": 610}
{"model": "gpt-3.5-turbo", "message": "SELECT ssn FROM employee WHERE gender = 'M' AND CAST(REPLACE(SUBSTRING(salary, 4), ',', '') AS DECIMAL) > 70000;", "sql_id": 611}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL) - CAST(REPLACE(SUBSTRING(T2.minsalary, 4), ',', '') AS DECIMAL) AS diff FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID WHERE T1.lastname = 'Johnson' AND T1.firstname = 'James';", "sql_id": 612}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID WHERE CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS DECIMAL) > 20000 AND T2.positiontitle = 'Trainee';", "sql_id": 613}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL(10,2))) AS avg FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee';", "sql_id": 614}
{"model": "gpt-3.5-turbo", "message": "SELECT 100 * (AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS DECIMAL)) - CAST(REPLACE(SUBSTR(T2.minsalary, 4), ',', '') AS DECIMAL)) / CAST(REPLACE(SUBSTR(T2.minsalary, 4), ',', '') AS DECIMAL) AS per FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee';", "sql_id": 615}
{"model": "gpt-3.5-turbo", "message": "SELECT 100 * (CAST(REPLACE(SUBSTRING(T2.maxsalary, 4), ',', '') AS DECIMAL) - CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL)) / CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL) AS per FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID WHERE T1.firstname = 'Jose' AND T1.lastname = 'Rodriguez';", "sql_id": 616}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM employee WHERE performance = 'Poor' AND CAST(REPLACE(SUBSTRING(salary, 4), ',', '') AS DECIMAL) > 50000;", "sql_id": 617}
{"model": "gpt-3.5-turbo", "message": "SELECT firstname, lastname FROM employee WHERE CAST(REPLACE(SUBSTRING(salary, 4), ',', '') AS DECIMAL) = ( SELECT MAX(CAST(REPLACE(SUBSTRING(salary, 4), ',', '') AS DECIMAL)) FROM employee );", "sql_id": 618}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(*) FROM position WHERE CAST(REPLACE(SUBSTRING(maxsalary, 4), ',', '') AS DECIMAL) < 100000;", "sql_id": 619}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL)) FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID WHERE T2.educationrequired = '2 year degree';", "sql_id": 620}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL(10,2))) \nFROM employee AS T1 \nINNER JOIN position AS T2 ON T1.positionID = T2.positionID \nWHERE T1.performance = 'Poor' AND T2.positiontitle = 'Manager';", "sql_id": 621}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL(10,2))) / 12 AS avg, T1.firstname, T1.lastname, T2.positiontitle, T3.locationcity FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID INNER JOIN location AS T3 ON T1.locationID = T3.locationID WHERE CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL(10,2)) = (SELECT MAX(CAST(REPLACE(SUBSTRING(T1.salary, 4), ',', '') AS DECIMAL(10,2)) FROM employee AS T1 INNER JOIN position AS T2 ON T1.positionID = T2.positionID INNER JOIN location AS T3 ON T1.locationID = T3.locationID);", "sql_id": 622}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.city FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name WHERE CAST(SUBSTRING_INDEX(T2.start_date, '/', -1) AS SIGNED) - CAST(SUBSTRING_INDEX(T2.start_date, ' ', -1) AS SIGNED) <> CAST(SUBSTRING_INDEX(T2.end_date, '/', -1) AS SIGNED) - CAST(SUBSTRING_INDEX(T2.end_date, ' ', -1) AS SIGNED);", "sql_id": 623}
{"model": "gpt-3.5-turbo", "message": "SELECT MAX(T2.max_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTRING(CAST(T1.start_date AS CHAR), 1, LOCATE(' ', T1.start_date) - 1) WHERE T1.id = 4080;", "sql_id": 624}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.id, T1.duration FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTRING(CAST(T1.start_date AS CHAR), 1, LOCATE(' ', T1.start_date) - 1) WHERE T2.events LIKE '%Rain%' OR T2.events LIKE '%rain%';", "sql_id": 625}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T1.duration), AVG(T2.wind_dir_degrees) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTRING(CAST(T2.date AS CHAR), 1, LOCATE('/', T2.date) - 1) IN ('7', '8', '9') AND SUBSTRING(CAST(T2.date AS CHAR), -4) = '2013';", "sql_id": 626}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN city = 'San Jose' AND SUBSTRING(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station UNION SELECT name FROM station WHERE city = 'San Jose' AND SUBSTRING(installation_date, -4) = '2014';", "sql_id": 627}
{"model": "gpt-3.5-turbo", "message": "SELECT SUBSTRING(CAST(date AS CHAR), -4) FROM weather GROUP BY SUBSTRING(CAST(date AS CHAR), -4) ORDER BY SUM(CASE WHEN events LIKE '%Rain%' OR events LIKE '%rain%' THEN 1 ELSE 0 END) DESC LIMIT 1;", "sql_id": 628}
{"model": "gpt-3.5-turbo", "message": "SELECT name, installation_date, city FROM station WHERE (SUBSTRING(CAST(installation_date AS CHAR), 1, LOCATE('/', installation_date) - 1) = '5' AND SUBSTRING(CAST(installation_date AS CHAR), LOCATE('/', installation_date) + 1, LENGTH(installation_date) - 6) >= '8' AND SUBSTRING(CAST(installation_date AS CHAR), -4) = '2013') OR (SUBSTRING(CAST(installation_date AS CHAR), 1, LOCATE('/', installation_date) - 1) IN ('6', '7', '8', '9', '10', '11', '12') AND SUBSTRING(CAST(installation_date AS CHAR), -4) = '2013');", "sql_id": 629}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.max_gust_speed_mph, T2.cloud_cover \nFROM trip AS T1 \nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTRING(CAST(T1.start_date AS CHAR), 1, LOCATE(' ', T1.start_date) - 1) \nWHERE T1.bike_id = 10 AND T2.mean_temperature_f > 62 AND T1.subscription_type = 'Customer' AND T1.start_station_name = 'MLK Library' AND T1.end_station_name = 'San Salvador at 1st' AND T1.duration = 386;", "sql_id": 630}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(subscription_type = 'Subscriber', 1, 0)) - SUM(IF(subscription_type = 'Customer', 1, 0)) FROM trip WHERE start_date LIKE '6/%/2013%';", "sql_id": 631}
{"model": "gpt-3.5-turbo", "message": "SELECT T2.date, T1.bike_id \nFROM trip AS T1 \nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code \nWHERE RIGHT(CAST(T2.date AS CHAR), 4) = '2013' AND T2.events = 'Fog-Rain';", "sql_id": 632}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.start_date \nFROM trip AS T1 \nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code \nAND T2.date = SUBSTRING(CAST(T1.start_date AS CHAR), 1, LOCATE(' ', T1.start_date) - 1) \nWHERE T2.date LIKE '8/%/2013' \nAND T1.start_station_name = 'Market at 10th' \nAND T1.end_station_name = 'South Van Ness at Market' \nAND T2.min_temperature_f = ( \n    SELECT MIN(T2.min_temperature_f) \n    FROM trip AS T1 \n    INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code \n    AND T2.date = SUBSTRING(CAST(T1.start_date AS CHAR), 1, LOCATE(' ', T1.start_date) - 1) \n    WHERE T2.date LIKE '8/%/2013' \n    AND T1.start_station_name = 'Market at 10th' \n    AND T1.end_station_name = 'South Van Ness at Market' \n);", "sql_id": 633}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN city = 'San Francisco' AND SUBSTRING(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station;", "sql_id": 634}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(start_station_id = end_station_id, 1, 0)) FROM trip;", "sql_id": 636}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(T2.mean_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE RIGHT(CAST(T2.date AS CHAR), 4) = '2013' AND T1.start_station_name = 'Market at 4th';", "sql_id": 637}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(CASE WHEN T2.events = 'Rain' THEN 1 ELSE 0 END) AS DECIMAL) * 100 / COUNT(T1.id) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTRING(CAST(T2.date AS CHAR), -4) = '2015' AND T1.subscription_type = 'Customer';", "sql_id": 638}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(installation_date) FROM station WHERE city = 'San Jose' AND (SUBSTRING(CAST(installation_date AS CHAR), 1, LOCATE('/', installation_date) - 1) IN ('8', '9', '10', '11', '12') AND SUBSTRING(CAST(installation_date AS CHAR), -4) = '2013') OR SUBSTRING(CAST(installation_date AS CHAR), -4) > '2013';", "sql_id": 639}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(zip_code = '94107' AND `date` = '8/29/2013', mean_temperature_f, 0)) FROM weather;", "sql_id": 640}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(zip_code = '94107' AND `date` = '8/29/2013', max_temperature_f - min_temperature_f, 0)) FROM weather;", "sql_id": 641}
{"model": "gpt-3.5-turbo", "message": "SELECT DISTINCT T1.start_station_name \nFROM trip AS T1 \nINNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code \nWHERE RIGHT(CAST(T2.date AS CHAR), 4) = '2013' \nAND T2.zip_code = 94107 \nAND T2.max_temperature_f > 80;", "sql_id": 642}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(CASE WHEN city = 'Redwood City' AND SUBSTRING(installation_date, -4) < '2014' THEN dock_count ELSE 0 END) AS NUM FROM station;", "sql_id": 644}
{"model": "gpt-3.5-turbo", "message": "SELECT (max_temperature_f - 32) / 1.8000 , (mean_temperature_f - 32) / 1.8000 , (min_temperature_f - 32) / 1.8000 FROM weather WHERE SUBSTR(CAST(date AS CHAR), 1, LOCATE('/', date) - 1) = '8' AND SUBSTR(CAST(date AS CHAR), -4) = '2013' AND zip_code = 94107;", "sql_id": 645}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(subscription_type = 'Subscriber', 1, 0)) AS DECIMAL) / SUM(IF(subscription_type = 'Customer', 1, 0)) FROM trip WHERE start_station_name = '2nd at South Park' AND end_station_name = '2nd at South Park';", "sql_id": 646}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ' AND MONTH(T2.return_date) = 8 AND YEAR(T2.return_date) = 2005;", "sql_id": 647}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T3.name = 'Music', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id INNER JOIN inventory AS T4 ON T1.film_id = T4.film_id INNER JOIN customer AS T5 ON T4.store_id = T5.store_id INNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id WHERE T5.first_name = 'RUTH' AND T5.last_name = 'MARTINEZ';", "sql_id": 648}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST((SUM(IF(T2.store_id = 2, T1.amount, 0)) - SUM(IF(T2.store_id = 1, T1.amount, 0)) AS DECIMAL(10,2)) * 100 / SUM(IF(T2.store_id = 1, T1.amount, 0)) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN store AS T3 ON T2.store_id = T3.store_id;", "sql_id": 649}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.country = 'India', 1, 0)) AS DECIMAL) / SUM(IF(T1.country = 'Italy', 1, 0)) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id;", "sql_id": 650}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.first_name = 'GINA' AND T2.last_name = 'DEGENERES', 1, 0)) AS DECIMAL) * 100 / SUM(IF(T2.first_name = 'PENELOPE' AND T2.last_name = 'GUINESS', 1, 0)) FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id;", "sql_id": 651}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(customer_id) FROM payment WHERE LEFT(payment_date, 7) LIKE '2005-08';", "sql_id": 652}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(DISTINCT rental_id) FROM rental WHERE DATE(rental_date) BETWEEN '2005-05-26' AND '2005-05-30';", "sql_id": 654}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(active = 0, 1, 0)) AS DECIMAL) * 100 / COUNT(customer_id) FROM customer;", "sql_id": 655}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(amount) FROM payment WHERE LEFT(payment_date, 7) = '2005-08';", "sql_id": 656}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.title \nFROM film AS T1 \nINNER JOIN inventory AS T2 ON T1.film_id = T2.film_id \nINNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id \nWHERE DATE_FORMAT(T3.rental_date, '%Y-%m-%d') = '2005-05-24';", "sql_id": 657}
{"model": "gpt-3.5-turbo", "message": "SELECT T4.title \nFROM customer AS T1 \nINNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id \nINNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id \nINNER JOIN film AS T4 ON T3.film_id = T4.film_id \nWHERE T1.first_name = 'BRIAN' \nAND T1.last_name = 'WYMAN' \nAND YEAR(T2.rental_date) = '2005' \nAND MONTH(T2.rental_date) = '7';", "sql_id": 658}
{"model": "gpt-3.5-turbo", "message": "SELECT T3.title, T2.name \nFROM film_category AS T1 \nINNER JOIN category AS T2 ON T1.category_id = T2.category_id \nINNER JOIN film AS T3 ON T1.film_id = T3.film_id \nINNER JOIN inventory AS T4 ON T3.film_id = T4.film_id \nINNER JOIN customer AS T5 ON T4.store_id = T5.store_id \nINNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id \nWHERE T5.first_name = 'Natalie' \nAND T5.last_name = 'Meyer' \nAND YEAR(T3.rental_rate) = 2006 \nAND MONTH(T3.rental_rate) = 2;", "sql_id": 659}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T1.country = 'India', 1, 0)) AS DECIMAL) * 100 / COUNT(T4.customer_id) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id INNER JOIN address AS T3 ON T2.city_id = T3.city_id INNER JOIN customer AS T4 ON T3.address_id = T4.address_id;", "sql_id": 660}
{"model": "gpt-3.5-turbo", "message": "SELECT (SUM(CASE WHEN T1.first_name = 'ANGELA' AND T1.last_name = 'WITHERSPOON' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.first_name = 'MARY' AND T1.last_name = 'KEITEL' THEN 1 ELSE 0 END)) * 100 / SUM(CASE WHEN T1.first_name = 'MARY' AND T1.last_name = 'KEITEL' THEN 1 ELSE 0 END) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id;", "sql_id": 661}
{"model": "gpt-3.5-turbo", "message": "SELECT first_name, last_name, email FROM customer WHERE YEAR(create_date) = 2006 AND active = 0;", "sql_id": 663}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(rating = 'PG-13', 1, 0)) AS DECIMAL) * 100 / COUNT(film_id) FROM film;", "sql_id": 664}
{"model": "gpt-3.5-turbo", "message": "SELECT AVG(IF(T4.country = 'Australia', 1, 0)) - AVG(IF(T4.country = 'Canada', 1, 0)) AS diff FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id INNER JOIN city AS T3 ON T2.city_id = T3.city_id INNER JOIN country AS T4 ON T3.country_id = T4.country_id;", "sql_id": 666}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T4.name = 'Action', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.actor_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film_category AS T3 ON T2.film_id = T3.film_id INNER JOIN category AS T4 ON T3.category_id = T4.category_id WHERE T1.first_name = 'Reese' AND T1.last_name = 'Kilmer';", "sql_id": 667}
{"model": "gpt-3.5-turbo", "message": "SELECT T.language_id FROM ( SELECT T1.language_id, COUNT(T1.language_id) AS num FROM film AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE YEAR(T1.release_year) = '2006' GROUP BY T1.language_id ) AS T ORDER BY T.num DESC LIMIT 1;", "sql_id": 669}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.rental_id) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'ELLA' AND T2.last_name = 'ELLA' AND DATE(T1.rental_date) BETWEEN '2005-06-01' AND '2005-06-30';", "sql_id": 670}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T2.amount) FROM rental AS T1 INNER JOIN payment AS T2 ON T1.rental_id = T2.rental_id WHERE DATE(T1.rental_date) = '2005-07-29%'", "sql_id": 671}
{"model": "gpt-3.5-turbo", "message": "SELECT T1.first_name FROM customer T1 INNER JOIN address T2 ON T1.address_id = T2.address_id WHERE SUBSTRING(T2.postal_code, 1, 2) = '76';", "sql_id": 672}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.length < 100 AND T3.name = 'Drama', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id;", "sql_id": 673}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T2.name = 'Children', 1, 0)) - SUM(IF(T2.name = 'Action', 1, 0)) AS diff FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id;", "sql_id": 674}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.name = 'Documentary', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id;", "sql_id": 675}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.name = 'Horror', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id;", "sql_id": 676}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T2.first_name = 'MARGARET' AND T2.last_name = 'MOORE', T1.amount, 0)) AS DECIMAL) * 100 / SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id;", "sql_id": 677}
{"model": "gpt-3.5-turbo", "message": "SELECT CAST(SUM(IF(T3.name = 'Horror', 1, 0)) AS DECIMAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id INNER JOIN language AS T4 ON T2.language_id = T4.language_id WHERE T4.name = 'English';", "sql_id": 679}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'STEPHANIE' AND T2.last_name = 'MITCHELL' AND SUBSTRING(T1.payment_date, 1, 7) = '2005-06';", "sql_id": 680}
{"model": "gpt-3.5-turbo", "message": "SELECT SUM(IF(T4.film_id = 1, 1, 0)) - SUM(IF(T4.film_id = 2, 1, 0)) AS diff FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id INNER JOIN inventory AS T4 ON T3.film_id = T4.film_id WHERE T2.first_name = 'Reese' AND T2.last_name = 'West';", "sql_id": 682}
{"model": "gpt-3.5-turbo", "message": "SELECT COUNT(T1.customer_id) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH' AND YEAR(T1.payment_date) = '2005' AND MONTH(T1.payment_date) = '6';", "sql_id": 683}
